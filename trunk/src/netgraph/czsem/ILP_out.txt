%%%%%%%%%%%%%%%%%%%%%%%
% Declarations
%:- set(nodes,500000)?
%:- set(h,1000000)?
%:- set(r,10000)?
:- set(c,2),set(i,2),  set(inflate,800)?
:- set(verbose,2)?
:- modeh(1,tree_root(+node))?
:- modeh(1,injured(+const))?
:- modeb(*,edge(-node,+node))?
:- modeb(*,edge(+node,-node))?
:- modeb(*,edge(+node,+node))?

:- modeb(1,m_tag0(+node,#const))?
:- modeb(1,m_tag1(+node,#const))?
:- modeb(1,m_tag2(+node,#const))?
:- modeb(1,m_tag3(+node,#const))?
:- modeb(1,m_tag4(+node,#const))?
:- modeb(1,m_tag5(+node,#const))?
:- modeb(1,m_tag6(+node,#const))?
:- modeb(1,m_tag7(+node,#const))?
:- modeb(1,m_tag8(+node,#const))?
:- modeb(1,m_tag9(+node,#const))?
:- modeb(1,m_tag10(+node,#const))?
:- modeb(1,m_tag11(+node,#const))?
:- modeb(1,m_tag12(+node,#const))?
:- modeb(1,m_tag13(+node,#const))?
:- modeb(1,m_tag14(+node,#const))?

% begin of definitions of linguistic attributes
:- modeb(1,functor(+node,#const))?
:- modeb(1,gram_sempos(+node,#const))?
:- modeb(1,id(+node,#const))?
:- modeb(1,t_lemma(+node,#const))?
:- modeb(1,a_afun(+node,#const))?
:- modeb(1,m_form(+node,#const))?
:- modeb(1,m_lemma(+node,#const))?
:- modeb(1,m_tag(+node,#const))?
% end of definitions of linguistic attributes

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% pri nehode byly zraneny dve osoby. 
tree_root(node0_0).
%%%%%%%% node0_0 %%%%%%%%%%%%%%%%%%%
node(node0_0).
id(node0_0, t_plzensky70827_txt_001_p1s3).         const(t_plzensky70827_txt_001_p1s3).
%%%%%%%% node0_1 %%%%%%%%%%%%%%%%%%%
node(node0_1).
functor(node0_1, pred).         const(pred).
gram_sempos(node0_1, v).         const(v).
id(node0_1, t_plzensky70827_txt_001_p1s3a1).         const(t_plzensky70827_txt_001_p1s3a1).
t_lemma(node0_1, zranit).         const(zranit).
%%%%%%%% node0_2 %%%%%%%%%%%%%%%%%%%
node(node0_2).
functor(node0_2, act).         const(act).
id(node0_2, t_plzensky70827_txt_001_p1s3a7).         const(t_plzensky70827_txt_001_p1s3a7).
t_lemma(node0_2, x_gen).         const(x_gen).
%%%%%%%% node0_3 %%%%%%%%%%%%%%%%%%%
node(node0_3).
functor(node0_3, twhen).         const(twhen).
gram_sempos(node0_3, n_denot).         const(n_denot).
id(node0_3, t_plzensky70827_txt_001_p1s3a3).         const(t_plzensky70827_txt_001_p1s3a3).
t_lemma(node0_3, nehoda).         const(nehoda).
%%%%%%%% node0_4 %%%%%%%%%%%%%%%%%%%
node(node0_4).
a_afun(node0_4, auxp).         const(auxp).
m_form(node0_4, pri).         const(pri).
m_lemma(node0_4, pri_1).         const(pri_1).
m_tag(node0_4, rr__6__________).         const(rr__6__________).
m_tag0(node0_4,'r'). const('r'). m_tag1(node0_4,'r'). const('r'). m_tag4(node0_4,'6'). const('6'). 
%%%%%%%% node0_5 %%%%%%%%%%%%%%%%%%%
node(node0_5).
a_afun(node0_5, adv).         const(adv).
m_form(node0_5, nehode).         const(nehode).
m_lemma(node0_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node0_5, nnfs6_____a____).         const(nnfs6_____a____).
m_tag0(node0_5,'n'). const('n'). m_tag1(node0_5,'n'). const('n'). m_tag2(node0_5,'f'). const('f'). m_tag3(node0_5,'s'). const('s'). m_tag4(node0_5,'6'). const('6'). m_tag10(node0_5,'a'). const('a'). 
%%%%%%%% node0_6 %%%%%%%%%%%%%%%%%%%
node(node0_6).
a_afun(node0_6, auxv).         const(auxv).
m_form(node0_6, byly).         const(byly).
m_lemma(node0_6, byt).         const(byt).
m_tag(node0_6, vptp___xr_aa___).         const(vptp___xr_aa___).
m_tag0(node0_6,'v'). const('v'). m_tag1(node0_6,'p'). const('p'). m_tag2(node0_6,'t'). const('t'). m_tag3(node0_6,'p'). const('p'). m_tag7(node0_6,'x'). const('x'). m_tag8(node0_6,'r'). const('r'). m_tag10(node0_6,'a'). const('a'). m_tag11(node0_6,'a'). const('a'). 
%%%%%%%% node0_7 %%%%%%%%%%%%%%%%%%%
node(node0_7).
a_afun(node0_7, pred).         const(pred).
m_form(node0_7, zraneny).         const(zraneny).
m_lemma(node0_7, zranit__w).         const(zranit__w).
m_tag(node0_7, vstp___xx_ap___).         const(vstp___xx_ap___).
m_tag0(node0_7,'v'). const('v'). m_tag1(node0_7,'s'). const('s'). m_tag2(node0_7,'t'). const('t'). m_tag3(node0_7,'p'). const('p'). m_tag7(node0_7,'x'). const('x'). m_tag8(node0_7,'x'). const('x'). m_tag10(node0_7,'a'). const('a'). m_tag11(node0_7,'p'). const('p'). 
%%%%%%%% node0_8 %%%%%%%%%%%%%%%%%%%
node(node0_8).
functor(node0_8, pat).         const(pat).
gram_sempos(node0_8, n_denot).         const(n_denot).
id(node0_8, t_plzensky70827_txt_001_p1s3a5).         const(t_plzensky70827_txt_001_p1s3a5).
t_lemma(node0_8, osoba).         const(osoba).
%%%%%%%% node0_9 %%%%%%%%%%%%%%%%%%%
node(node0_9).
functor(node0_9, rstr).         const(rstr).
gram_sempos(node0_9, adj_quant_def).         const(adj_quant_def).
id(node0_9, t_plzensky70827_txt_001_p1s3a6).         const(t_plzensky70827_txt_001_p1s3a6).
t_lemma(node0_9, dva).         const(dva).
%%%%%%%% node0_10 %%%%%%%%%%%%%%%%%%%
node(node0_10).
a_afun(node0_10, atr).         const(atr).
m_form(node0_10, dve).         const(dve).
m_lemma(node0_10, dva_2).         const(dva_2).
m_tag(node0_10, clhp1__________).         const(clhp1__________).
m_tag0(node0_10,'c'). const('c'). m_tag1(node0_10,'l'). const('l'). m_tag2(node0_10,'h'). const('h'). m_tag3(node0_10,'p'). const('p'). m_tag4(node0_10,'1'). const('1'). 
%%%%%%%% node0_11 %%%%%%%%%%%%%%%%%%%
node(node0_11).
a_afun(node0_11, sb).         const(sb).
m_form(node0_11, osoby).         const(osoby).
m_lemma(node0_11, osoba).         const(osoba).
m_tag(node0_11, nnfp1_____a____).         const(nnfp1_____a____).
m_tag0(node0_11,'n'). const('n'). m_tag1(node0_11,'n'). const('n'). m_tag2(node0_11,'f'). const('f'). m_tag3(node0_11,'p'). const('p'). m_tag4(node0_11,'1'). const('1'). m_tag10(node0_11,'a'). const('a'). 
edge(node0_0, node0_1).
edge(node0_1, node0_2).
edge(node0_1, node0_3).
edge(node0_3, node0_4).
edge(node0_3, node0_5).
edge(node0_1, node0_6).
edge(node0_1, node0_7).
edge(node0_1, node0_8).
edge(node0_8, node0_9).
edge(node0_9, node0_10).
edge(node0_8, node0_11).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% pri nehode byl zranen muz. 
tree_root(node1_0).
%%%%%%%% node1_0 %%%%%%%%%%%%%%%%%%%
node(node1_0).
id(node1_0, t_plzensky72450_txt_001_p3s2).         const(t_plzensky72450_txt_001_p3s2).
%%%%%%%% node1_1 %%%%%%%%%%%%%%%%%%%
node(node1_1).
functor(node1_1, pred).         const(pred).
gram_sempos(node1_1, v).         const(v).
id(node1_1, t_plzensky72450_txt_001_p3s2a1).         const(t_plzensky72450_txt_001_p3s2a1).
t_lemma(node1_1, zranit).         const(zranit).
%%%%%%%% node1_2 %%%%%%%%%%%%%%%%%%%
node(node1_2).
functor(node1_2, act).         const(act).
id(node1_2, t_plzensky72450_txt_001_p3s2a6).         const(t_plzensky72450_txt_001_p3s2a6).
t_lemma(node1_2, x_gen).         const(x_gen).
%%%%%%%% node1_3 %%%%%%%%%%%%%%%%%%%
node(node1_3).
functor(node1_3, twhen).         const(twhen).
gram_sempos(node1_3, n_denot).         const(n_denot).
id(node1_3, t_plzensky72450_txt_001_p3s2a3).         const(t_plzensky72450_txt_001_p3s2a3).
t_lemma(node1_3, nehoda).         const(nehoda).
%%%%%%%% node1_4 %%%%%%%%%%%%%%%%%%%
node(node1_4).
a_afun(node1_4, auxp).         const(auxp).
m_form(node1_4, pri).         const(pri).
m_lemma(node1_4, pri_1).         const(pri_1).
m_tag(node1_4, rr__6__________).         const(rr__6__________).
m_tag0(node1_4,'r'). const('r'). m_tag1(node1_4,'r'). const('r'). m_tag4(node1_4,'6'). const('6'). 
%%%%%%%% node1_5 %%%%%%%%%%%%%%%%%%%
node(node1_5).
a_afun(node1_5, adv).         const(adv).
m_form(node1_5, nehode).         const(nehode).
m_lemma(node1_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node1_5, nnfs6_____a____).         const(nnfs6_____a____).
m_tag0(node1_5,'n'). const('n'). m_tag1(node1_5,'n'). const('n'). m_tag2(node1_5,'f'). const('f'). m_tag3(node1_5,'s'). const('s'). m_tag4(node1_5,'6'). const('6'). m_tag10(node1_5,'a'). const('a'). 
%%%%%%%% node1_6 %%%%%%%%%%%%%%%%%%%
node(node1_6).
a_afun(node1_6, auxv).         const(auxv).
m_form(node1_6, byl).         const(byl).
m_lemma(node1_6, byt).         const(byt).
m_tag(node1_6, vpys___xr_aa___).         const(vpys___xr_aa___).
m_tag0(node1_6,'v'). const('v'). m_tag1(node1_6,'p'). const('p'). m_tag2(node1_6,'y'). const('y'). m_tag3(node1_6,'s'). const('s'). m_tag7(node1_6,'x'). const('x'). m_tag8(node1_6,'r'). const('r'). m_tag10(node1_6,'a'). const('a'). m_tag11(node1_6,'a'). const('a'). 
%%%%%%%% node1_7 %%%%%%%%%%%%%%%%%%%
node(node1_7).
a_afun(node1_7, pred).         const(pred).
m_form(node1_7, zranen).         const(zranen).
m_lemma(node1_7, zranit__w).         const(zranit__w).
m_tag(node1_7, vsys___xx_ap___).         const(vsys___xx_ap___).
m_tag0(node1_7,'v'). const('v'). m_tag1(node1_7,'s'). const('s'). m_tag2(node1_7,'y'). const('y'). m_tag3(node1_7,'s'). const('s'). m_tag7(node1_7,'x'). const('x'). m_tag8(node1_7,'x'). const('x'). m_tag10(node1_7,'a'). const('a'). m_tag11(node1_7,'p'). const('p'). 
%%%%%%%% node1_8 %%%%%%%%%%%%%%%%%%%
node(node1_8).
functor(node1_8, pat).         const(pat).
gram_sempos(node1_8, n_denot).         const(n_denot).
id(node1_8, t_plzensky72450_txt_001_p3s2a5).         const(t_plzensky72450_txt_001_p3s2a5).
t_lemma(node1_8, muz).         const(muz).
%%%%%%%% node1_9 %%%%%%%%%%%%%%%%%%%
node(node1_9).
a_afun(node1_9, sb).         const(sb).
m_form(node1_9, muz).         const(muz).
m_lemma(node1_9, muz).         const(muz).
m_tag(node1_9, nnms1_____a____).         const(nnms1_____a____).
m_tag0(node1_9,'n'). const('n'). m_tag1(node1_9,'n'). const('n'). m_tag2(node1_9,'m'). const('m'). m_tag3(node1_9,'s'). const('s'). m_tag4(node1_9,'1'). const('1'). m_tag10(node1_9,'a'). const('a'). 
edge(node1_0, node1_1).
edge(node1_1, node1_2).
edge(node1_1, node1_3).
edge(node1_3, node1_4).
edge(node1_3, node1_5).
edge(node1_1, node1_6).
edge(node1_1, node1_7).
edge(node1_1, node1_8).
edge(node1_8, node1_9).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% pri nehode byla lehce zranena jedna osoba. 
tree_root(node2_0).
%%%%%%%% node2_0 %%%%%%%%%%%%%%%%%%%
node(node2_0).
id(node2_0, t_plzensky72450_txt_001_p19s2).         const(t_plzensky72450_txt_001_p19s2).
%%%%%%%% node2_1 %%%%%%%%%%%%%%%%%%%
node(node2_1).
functor(node2_1, pred).         const(pred).
gram_sempos(node2_1, v).         const(v).
id(node2_1, t_plzensky72450_txt_001_p19s2a1).         const(t_plzensky72450_txt_001_p19s2a1).
t_lemma(node2_1, zranit).         const(zranit).
%%%%%%%% node2_2 %%%%%%%%%%%%%%%%%%%
node(node2_2).
functor(node2_2, act).         const(act).
id(node2_2, t_plzensky72450_txt_001_p19s2a8).         const(t_plzensky72450_txt_001_p19s2a8).
t_lemma(node2_2, x_gen).         const(x_gen).
%%%%%%%% node2_3 %%%%%%%%%%%%%%%%%%%
node(node2_3).
functor(node2_3, twhen).         const(twhen).
gram_sempos(node2_3, n_denot).         const(n_denot).
id(node2_3, t_plzensky72450_txt_001_p19s2a3).         const(t_plzensky72450_txt_001_p19s2a3).
t_lemma(node2_3, nehoda).         const(nehoda).
%%%%%%%% node2_4 %%%%%%%%%%%%%%%%%%%
node(node2_4).
a_afun(node2_4, auxp).         const(auxp).
m_form(node2_4, pri).         const(pri).
m_lemma(node2_4, pri_1).         const(pri_1).
m_tag(node2_4, rr__6__________).         const(rr__6__________).
m_tag0(node2_4,'r'). const('r'). m_tag1(node2_4,'r'). const('r'). m_tag4(node2_4,'6'). const('6'). 
%%%%%%%% node2_5 %%%%%%%%%%%%%%%%%%%
node(node2_5).
a_afun(node2_5, adv).         const(adv).
m_form(node2_5, nehode).         const(nehode).
m_lemma(node2_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node2_5, nnfs6_____a____).         const(nnfs6_____a____).
m_tag0(node2_5,'n'). const('n'). m_tag1(node2_5,'n'). const('n'). m_tag2(node2_5,'f'). const('f'). m_tag3(node2_5,'s'). const('s'). m_tag4(node2_5,'6'). const('6'). m_tag10(node2_5,'a'). const('a'). 
%%%%%%%% node2_6 %%%%%%%%%%%%%%%%%%%
node(node2_6).
functor(node2_6, mann).         const(mann).
gram_sempos(node2_6, adj_denot).         const(adj_denot).
id(node2_6, t_plzensky72450_txt_001_p19s2a5).         const(t_plzensky72450_txt_001_p19s2a5).
t_lemma(node2_6, lehky).         const(lehky).
%%%%%%%% node2_7 %%%%%%%%%%%%%%%%%%%
node(node2_7).
a_afun(node2_7, adv).         const(adv).
m_form(node2_7, lehce).         const(lehce).
m_lemma(node2_7, lehce).         const(lehce).
m_tag(node2_7, dg_______1a____).         const(dg_______1a____).
m_tag0(node2_7,'d'). const('d'). m_tag1(node2_7,'g'). const('g'). m_tag9(node2_7,'1'). const('1'). m_tag10(node2_7,'a'). const('a'). 
%%%%%%%% node2_8 %%%%%%%%%%%%%%%%%%%
node(node2_8).
a_afun(node2_8, auxv).         const(auxv).
m_form(node2_8, byla).         const(byla).
m_lemma(node2_8, byt).         const(byt).
m_tag(node2_8, vpqw___xr_aa___).         const(vpqw___xr_aa___).
m_tag0(node2_8,'v'). const('v'). m_tag1(node2_8,'p'). const('p'). m_tag2(node2_8,'q'). const('q'). m_tag3(node2_8,'w'). const('w'). m_tag7(node2_8,'x'). const('x'). m_tag8(node2_8,'r'). const('r'). m_tag10(node2_8,'a'). const('a'). m_tag11(node2_8,'a'). const('a'). 
%%%%%%%% node2_9 %%%%%%%%%%%%%%%%%%%
node(node2_9).
a_afun(node2_9, pred).         const(pred).
m_form(node2_9, zranena).         const(zranena).
m_lemma(node2_9, zranit__w).         const(zranit__w).
m_tag(node2_9, vsqw___xx_ap___).         const(vsqw___xx_ap___).
m_tag0(node2_9,'v'). const('v'). m_tag1(node2_9,'s'). const('s'). m_tag2(node2_9,'q'). const('q'). m_tag3(node2_9,'w'). const('w'). m_tag7(node2_9,'x'). const('x'). m_tag8(node2_9,'x'). const('x'). m_tag10(node2_9,'a'). const('a'). m_tag11(node2_9,'p'). const('p'). 
%%%%%%%% node2_10 %%%%%%%%%%%%%%%%%%%
node(node2_10).
functor(node2_10, pat).         const(pat).
gram_sempos(node2_10, n_denot).         const(n_denot).
id(node2_10, t_plzensky72450_txt_001_p19s2a6).         const(t_plzensky72450_txt_001_p19s2a6).
t_lemma(node2_10, osoba).         const(osoba).
%%%%%%%% node2_11 %%%%%%%%%%%%%%%%%%%
node(node2_11).
functor(node2_11, rstr).         const(rstr).
gram_sempos(node2_11, adj_quant_def).         const(adj_quant_def).
id(node2_11, t_plzensky72450_txt_001_p19s2a7).         const(t_plzensky72450_txt_001_p19s2a7).
t_lemma(node2_11, jeden).         const(jeden).
%%%%%%%% node2_12 %%%%%%%%%%%%%%%%%%%
node(node2_12).
a_afun(node2_12, atr).         const(atr).
m_form(node2_12, jedna).         const(jedna).
m_lemma(node2_12, jeden_1).         const(jeden_1).
m_tag(node2_12, clfs1__________).         const(clfs1__________).
m_tag0(node2_12,'c'). const('c'). m_tag1(node2_12,'l'). const('l'). m_tag2(node2_12,'f'). const('f'). m_tag3(node2_12,'s'). const('s'). m_tag4(node2_12,'1'). const('1'). 
%%%%%%%% node2_13 %%%%%%%%%%%%%%%%%%%
node(node2_13).
a_afun(node2_13, sb).         const(sb).
m_form(node2_13, osoba).         const(osoba).
m_lemma(node2_13, osoba).         const(osoba).
m_tag(node2_13, nnfs1_____a____).         const(nnfs1_____a____).
m_tag0(node2_13,'n'). const('n'). m_tag1(node2_13,'n'). const('n'). m_tag2(node2_13,'f'). const('f'). m_tag3(node2_13,'s'). const('s'). m_tag4(node2_13,'1'). const('1'). m_tag10(node2_13,'a'). const('a'). 
edge(node2_0, node2_1).
edge(node2_1, node2_2).
edge(node2_1, node2_3).
edge(node2_3, node2_4).
edge(node2_3, node2_5).
edge(node2_1, node2_6).
edge(node2_6, node2_7).
edge(node2_1, node2_8).
edge(node2_1, node2_9).
edge(node2_1, node2_10).
edge(node2_10, node2_11).
edge(node2_11, node2_12).
edge(node2_10, node2_13).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% pri nehode byly zraneny dve osoby. 
tree_root(node3_0).
%%%%%%%% node3_0 %%%%%%%%%%%%%%%%%%%
node(node3_0).
id(node3_0, t_plzensky49076_txt_001_p1s3).         const(t_plzensky49076_txt_001_p1s3).
%%%%%%%% node3_1 %%%%%%%%%%%%%%%%%%%
node(node3_1).
functor(node3_1, pred).         const(pred).
gram_sempos(node3_1, v).         const(v).
id(node3_1, t_plzensky49076_txt_001_p1s3a1).         const(t_plzensky49076_txt_001_p1s3a1).
t_lemma(node3_1, zranit).         const(zranit).
%%%%%%%% node3_2 %%%%%%%%%%%%%%%%%%%
node(node3_2).
functor(node3_2, act).         const(act).
id(node3_2, t_plzensky49076_txt_001_p1s3a7).         const(t_plzensky49076_txt_001_p1s3a7).
t_lemma(node3_2, x_gen).         const(x_gen).
%%%%%%%% node3_3 %%%%%%%%%%%%%%%%%%%
node(node3_3).
functor(node3_3, twhen).         const(twhen).
gram_sempos(node3_3, n_denot).         const(n_denot).
id(node3_3, t_plzensky49076_txt_001_p1s3a3).         const(t_plzensky49076_txt_001_p1s3a3).
t_lemma(node3_3, nehoda).         const(nehoda).
%%%%%%%% node3_4 %%%%%%%%%%%%%%%%%%%
node(node3_4).
a_afun(node3_4, auxp).         const(auxp).
m_form(node3_4, pri).         const(pri).
m_lemma(node3_4, pri_1).         const(pri_1).
m_tag(node3_4, rr__6__________).         const(rr__6__________).
m_tag0(node3_4,'r'). const('r'). m_tag1(node3_4,'r'). const('r'). m_tag4(node3_4,'6'). const('6'). 
%%%%%%%% node3_5 %%%%%%%%%%%%%%%%%%%
node(node3_5).
a_afun(node3_5, adv).         const(adv).
m_form(node3_5, nehode).         const(nehode).
m_lemma(node3_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node3_5, nnfs6_____a____).         const(nnfs6_____a____).
m_tag0(node3_5,'n'). const('n'). m_tag1(node3_5,'n'). const('n'). m_tag2(node3_5,'f'). const('f'). m_tag3(node3_5,'s'). const('s'). m_tag4(node3_5,'6'). const('6'). m_tag10(node3_5,'a'). const('a'). 
%%%%%%%% node3_6 %%%%%%%%%%%%%%%%%%%
node(node3_6).
a_afun(node3_6, auxv).         const(auxv).
m_form(node3_6, byly).         const(byly).
m_lemma(node3_6, byt).         const(byt).
m_tag(node3_6, vptp___xr_aa___).         const(vptp___xr_aa___).
m_tag0(node3_6,'v'). const('v'). m_tag1(node3_6,'p'). const('p'). m_tag2(node3_6,'t'). const('t'). m_tag3(node3_6,'p'). const('p'). m_tag7(node3_6,'x'). const('x'). m_tag8(node3_6,'r'). const('r'). m_tag10(node3_6,'a'). const('a'). m_tag11(node3_6,'a'). const('a'). 
%%%%%%%% node3_7 %%%%%%%%%%%%%%%%%%%
node(node3_7).
a_afun(node3_7, pred).         const(pred).
m_form(node3_7, zraneny).         const(zraneny).
m_lemma(node3_7, zranit__w).         const(zranit__w).
m_tag(node3_7, vstp___xx_ap___).         const(vstp___xx_ap___).
m_tag0(node3_7,'v'). const('v'). m_tag1(node3_7,'s'). const('s'). m_tag2(node3_7,'t'). const('t'). m_tag3(node3_7,'p'). const('p'). m_tag7(node3_7,'x'). const('x'). m_tag8(node3_7,'x'). const('x'). m_tag10(node3_7,'a'). const('a'). m_tag11(node3_7,'p'). const('p'). 
%%%%%%%% node3_8 %%%%%%%%%%%%%%%%%%%
node(node3_8).
functor(node3_8, pat).         const(pat).
gram_sempos(node3_8, n_denot).         const(n_denot).
id(node3_8, t_plzensky49076_txt_001_p1s3a5).         const(t_plzensky49076_txt_001_p1s3a5).
t_lemma(node3_8, osoba).         const(osoba).
%%%%%%%% node3_9 %%%%%%%%%%%%%%%%%%%
node(node3_9).
functor(node3_9, rstr).         const(rstr).
gram_sempos(node3_9, adj_quant_def).         const(adj_quant_def).
id(node3_9, t_plzensky49076_txt_001_p1s3a6).         const(t_plzensky49076_txt_001_p1s3a6).
t_lemma(node3_9, dva).         const(dva).
%%%%%%%% node3_10 %%%%%%%%%%%%%%%%%%%
node(node3_10).
a_afun(node3_10, atr).         const(atr).
m_form(node3_10, dve).         const(dve).
m_lemma(node3_10, dva_2).         const(dva_2).
m_tag(node3_10, clhp1__________).         const(clhp1__________).
m_tag0(node3_10,'c'). const('c'). m_tag1(node3_10,'l'). const('l'). m_tag2(node3_10,'h'). const('h'). m_tag3(node3_10,'p'). const('p'). m_tag4(node3_10,'1'). const('1'). 
%%%%%%%% node3_11 %%%%%%%%%%%%%%%%%%%
node(node3_11).
a_afun(node3_11, sb).         const(sb).
m_form(node3_11, osoby).         const(osoby).
m_lemma(node3_11, osoba).         const(osoba).
m_tag(node3_11, nnfp1_____a____).         const(nnfp1_____a____).
m_tag0(node3_11,'n'). const('n'). m_tag1(node3_11,'n'). const('n'). m_tag2(node3_11,'f'). const('f'). m_tag3(node3_11,'p'). const('p'). m_tag4(node3_11,'1'). const('1'). m_tag10(node3_11,'a'). const('a'). 
edge(node3_0, node3_1).
edge(node3_1, node3_2).
edge(node3_1, node3_3).
edge(node3_3, node3_4).
edge(node3_3, node3_5).
edge(node3_1, node3_6).
edge(node3_1, node3_7).
edge(node3_1, node3_8).
edge(node3_8, node3_9).
edge(node3_9, node3_10).
edge(node3_8, node3_11).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% ve vozidle cestovaly dve osoby, ridic byl lehce zranen a do sve pece ho prevzala zzs. 
tree_root(node4_0).
%%%%%%%% node4_0 %%%%%%%%%%%%%%%%%%%
node(node4_0).
id(node4_0, t_plzensky63162_txt_001_p1s3).         const(t_plzensky63162_txt_001_p1s3).
%%%%%%%% node4_1 %%%%%%%%%%%%%%%%%%%
node(node4_1).
functor(node4_1, pred).         const(pred).
gram_sempos(node4_1, v).         const(v).
id(node4_1, t_plzensky63162_txt_001_p1s3a1).         const(t_plzensky63162_txt_001_p1s3a1).
t_lemma(node4_1, cestovat).         const(cestovat).
%%%%%%%% node4_2 %%%%%%%%%%%%%%%%%%%
node(node4_2).
functor(node4_2, loc).         const(loc).
gram_sempos(node4_2, n_denot).         const(n_denot).
id(node4_2, t_plzensky63162_txt_001_p1s3a3).         const(t_plzensky63162_txt_001_p1s3a3).
t_lemma(node4_2, vozidlo).         const(vozidlo).
%%%%%%%% node4_3 %%%%%%%%%%%%%%%%%%%
node(node4_3).
a_afun(node4_3, auxp).         const(auxp).
m_form(node4_3, ve).         const(ve).
m_lemma(node4_3, v_1).         const(v_1).
m_tag(node4_3, rv__6__________).         const(rv__6__________).
m_tag0(node4_3,'r'). const('r'). m_tag1(node4_3,'v'). const('v'). m_tag4(node4_3,'6'). const('6'). 
%%%%%%%% node4_4 %%%%%%%%%%%%%%%%%%%
node(node4_4).
a_afun(node4_4, adv).         const(adv).
m_form(node4_4, vozidle).         const(vozidle).
m_lemma(node4_4, vozidlo).         const(vozidlo).
m_tag(node4_4, nnns6_____a____).         const(nnns6_____a____).
m_tag0(node4_4,'n'). const('n'). m_tag1(node4_4,'n'). const('n'). m_tag2(node4_4,'n'). const('n'). m_tag3(node4_4,'s'). const('s'). m_tag4(node4_4,'6'). const('6'). m_tag10(node4_4,'a'). const('a'). 
%%%%%%%% node4_5 %%%%%%%%%%%%%%%%%%%
node(node4_5).
a_afun(node4_5, pred).         const(pred).
m_form(node4_5, cestovaly).         const(cestovaly).
m_lemma(node4_5, cestovat__t).         const(cestovat__t).
m_tag(node4_5, vptp___xr_aa___).         const(vptp___xr_aa___).
m_tag0(node4_5,'v'). const('v'). m_tag1(node4_5,'p'). const('p'). m_tag2(node4_5,'t'). const('t'). m_tag3(node4_5,'p'). const('p'). m_tag7(node4_5,'x'). const('x'). m_tag8(node4_5,'r'). const('r'). m_tag10(node4_5,'a'). const('a'). m_tag11(node4_5,'a'). const('a'). 
%%%%%%%% node4_6 %%%%%%%%%%%%%%%%%%%
node(node4_6).
functor(node4_6, act).         const(act).
gram_sempos(node4_6, n_denot).         const(n_denot).
id(node4_6, t_plzensky63162_txt_001_p1s3a4).         const(t_plzensky63162_txt_001_p1s3a4).
t_lemma(node4_6, osoba).         const(osoba).
%%%%%%%% node4_7 %%%%%%%%%%%%%%%%%%%
node(node4_7).
functor(node4_7, rstr).         const(rstr).
gram_sempos(node4_7, adj_quant_def).         const(adj_quant_def).
id(node4_7, t_plzensky63162_txt_001_p1s3a5).         const(t_plzensky63162_txt_001_p1s3a5).
t_lemma(node4_7, dva).         const(dva).
%%%%%%%% node4_8 %%%%%%%%%%%%%%%%%%%
node(node4_8).
a_afun(node4_8, atr).         const(atr).
m_form(node4_8, dve).         const(dve).
m_lemma(node4_8, dva_2).         const(dva_2).
m_tag(node4_8, clhp1__________).         const(clhp1__________).
m_tag0(node4_8,'c'). const('c'). m_tag1(node4_8,'l'). const('l'). m_tag2(node4_8,'h'). const('h'). m_tag3(node4_8,'p'). const('p'). m_tag4(node4_8,'1'). const('1'). 
%%%%%%%% node4_9 %%%%%%%%%%%%%%%%%%%
node(node4_9).
a_afun(node4_9, sb).         const(sb).
m_form(node4_9, osoby).         const(osoby).
m_lemma(node4_9, osoba).         const(osoba).
m_tag(node4_9, nnfp1_____a____).         const(nnfp1_____a____).
m_tag0(node4_9,'n'). const('n'). m_tag1(node4_9,'n'). const('n'). m_tag2(node4_9,'f'). const('f'). m_tag3(node4_9,'p'). const('p'). m_tag4(node4_9,'1'). const('1'). m_tag10(node4_9,'a'). const('a'). 
%%%%%%%% node4_10 %%%%%%%%%%%%%%%%%%%
node(node4_10).
functor(node4_10, conj).         const(conj).
id(node4_10, t_plzensky63162_txt_001_p1s3a6).         const(t_plzensky63162_txt_001_p1s3a6).
t_lemma(node4_10, a).         const(a).
%%%%%%%% node4_11 %%%%%%%%%%%%%%%%%%%
node(node4_11).
functor(node4_11, rstr).         const(rstr).
gram_sempos(node4_11, v).         const(v).
id(node4_11, t_plzensky63162_txt_001_p1s3a9).         const(t_plzensky63162_txt_001_p1s3a9).
t_lemma(node4_11, zranit).         const(zranit).
%%%%%%%% node4_12 %%%%%%%%%%%%%%%%%%%
node(node4_12).
functor(node4_12, act).         const(act).
id(node4_12, t_plzensky63162_txt_001_p1s3a18).         const(t_plzensky63162_txt_001_p1s3a18).
t_lemma(node4_12, x_gen).         const(x_gen).
%%%%%%%% node4_13 %%%%%%%%%%%%%%%%%%%
node(node4_13).
functor(node4_13, pat).         const(pat).
gram_sempos(node4_13, n_denot).         const(n_denot).
id(node4_13, t_plzensky63162_txt_001_p1s3a8).         const(t_plzensky63162_txt_001_p1s3a8).
t_lemma(node4_13, ridic).         const(ridic).
%%%%%%%% node4_14 %%%%%%%%%%%%%%%%%%%
node(node4_14).
a_afun(node4_14, atr).         const(atr).
m_form(node4_14, ridic).         const(ridic).
m_lemma(node4_14, ridic).         const(ridic).
m_tag(node4_14, nnms1_____a____).         const(nnms1_____a____).
m_tag0(node4_14,'n'). const('n'). m_tag1(node4_14,'n'). const('n'). m_tag2(node4_14,'m'). const('m'). m_tag3(node4_14,'s'). const('s'). m_tag4(node4_14,'1'). const('1'). m_tag10(node4_14,'a'). const('a'). 
%%%%%%%% node4_15 %%%%%%%%%%%%%%%%%%%
node(node4_15).
functor(node4_15, mann).         const(mann).
gram_sempos(node4_15, adj_denot).         const(adj_denot).
id(node4_15, t_plzensky63162_txt_001_p1s3a11).         const(t_plzensky63162_txt_001_p1s3a11).
t_lemma(node4_15, lehky).         const(lehky).
%%%%%%%% node4_16 %%%%%%%%%%%%%%%%%%%
node(node4_16).
a_afun(node4_16, adv).         const(adv).
m_form(node4_16, lehce).         const(lehce).
m_lemma(node4_16, lehce).         const(lehce).
m_tag(node4_16, dg_______1a____).         const(dg_______1a____).
m_tag0(node4_16,'d'). const('d'). m_tag1(node4_16,'g'). const('g'). m_tag9(node4_16,'1'). const('1'). m_tag10(node4_16,'a'). const('a'). 
%%%%%%%% node4_17 %%%%%%%%%%%%%%%%%%%
node(node4_17).
a_afun(node4_17, auxv).         const(auxv).
m_form(node4_17, byl).         const(byl).
m_lemma(node4_17, byt).         const(byt).
m_tag(node4_17, vpys___xr_aa___).         const(vpys___xr_aa___).
m_tag0(node4_17,'v'). const('v'). m_tag1(node4_17,'p'). const('p'). m_tag2(node4_17,'y'). const('y'). m_tag3(node4_17,'s'). const('s'). m_tag7(node4_17,'x'). const('x'). m_tag8(node4_17,'r'). const('r'). m_tag10(node4_17,'a'). const('a'). m_tag11(node4_17,'a'). const('a'). 
%%%%%%%% node4_18 %%%%%%%%%%%%%%%%%%%
node(node4_18).
a_afun(node4_18, atr).         const(atr).
m_form(node4_18, zranen).         const(zranen).
m_lemma(node4_18, zranit__w).         const(zranit__w).
m_tag(node4_18, vsys___xx_ap___).         const(vsys___xx_ap___).
m_tag0(node4_18,'v'). const('v'). m_tag1(node4_18,'s'). const('s'). m_tag2(node4_18,'y'). const('y'). m_tag3(node4_18,'s'). const('s'). m_tag7(node4_18,'x'). const('x'). m_tag8(node4_18,'x'). const('x'). m_tag10(node4_18,'a'). const('a'). m_tag11(node4_18,'p'). const('p'). 
%%%%%%%% node4_19 %%%%%%%%%%%%%%%%%%%
node(node4_19).
a_afun(node4_19, coord).         const(coord).
m_form(node4_19, a).         const(a).
m_lemma(node4_19, a_1).         const(a_1).
m_tag(node4_19, j______________).         const(j______________).
m_tag0(node4_19,'j'). const('j'). m_tag1(node4_19,'^'). const('^'). 
%%%%%%%% node4_20 %%%%%%%%%%%%%%%%%%%
node(node4_20).
functor(node4_20, rstr).         const(rstr).
gram_sempos(node4_20, v).         const(v).
id(node4_20, t_plzensky63162_txt_001_p1s3a12).         const(t_plzensky63162_txt_001_p1s3a12).
t_lemma(node4_20, prevzit).         const(prevzit).
%%%%%%%% node4_21 %%%%%%%%%%%%%%%%%%%
node(node4_21).
functor(node4_21, dir3).         const(dir3).
gram_sempos(node4_21, n_denot).         const(n_denot).
id(node4_21, t_plzensky63162_txt_001_p1s3a14).         const(t_plzensky63162_txt_001_p1s3a14).
t_lemma(node4_21, pece).         const(pece).
%%%%%%%% node4_22 %%%%%%%%%%%%%%%%%%%
node(node4_22).
functor(node4_22, app).         const(app).
gram_sempos(node4_22, n_pron_def_pers).         const(n_pron_def_pers).
id(node4_22, t_plzensky63162_txt_001_p1s3a15).         const(t_plzensky63162_txt_001_p1s3a15).
t_lemma(node4_22, x_perspron).         const(x_perspron).
%%%%%%%% node4_23 %%%%%%%%%%%%%%%%%%%
node(node4_23).
a_afun(node4_23, atr).         const(atr).
m_form(node4_23, sve).         const(sve).
m_lemma(node4_23, svuj_1___privlast__).         const(svuj_1___privlast__).
m_tag(node4_23, p8fs2_________1).         const(p8fs2_________1).
m_tag0(node4_23,'p'). const('p'). m_tag1(node4_23,'8'). const('8'). m_tag2(node4_23,'f'). const('f'). m_tag3(node4_23,'s'). const('s'). m_tag4(node4_23,'2'). const('2'). m_tag14(node4_23,'1'). const('1'). 
%%%%%%%% node4_24 %%%%%%%%%%%%%%%%%%%
node(node4_24).
a_afun(node4_24, auxp).         const(auxp).
m_form(node4_24, do).         const(do).
m_lemma(node4_24, do_1).         const(do_1).
m_tag(node4_24, rr__2__________).         const(rr__2__________).
m_tag0(node4_24,'r'). const('r'). m_tag1(node4_24,'r'). const('r'). m_tag4(node4_24,'2'). const('2'). 
%%%%%%%% node4_25 %%%%%%%%%%%%%%%%%%%
node(node4_25).
a_afun(node4_25, adv).         const(adv).
m_form(node4_25, pece).         const(pece).
m_lemma(node4_25, pece).         const(pece).
m_tag(node4_25, nnfs2_____a____).         const(nnfs2_____a____).
m_tag0(node4_25,'n'). const('n'). m_tag1(node4_25,'n'). const('n'). m_tag2(node4_25,'f'). const('f'). m_tag3(node4_25,'s'). const('s'). m_tag4(node4_25,'2'). const('2'). m_tag10(node4_25,'a'). const('a'). 
%%%%%%%% node4_26 %%%%%%%%%%%%%%%%%%%
node(node4_26).
functor(node4_26, pat).         const(pat).
gram_sempos(node4_26, n_pron_def_pers).         const(n_pron_def_pers).
id(node4_26, t_plzensky63162_txt_001_p1s3a16).         const(t_plzensky63162_txt_001_p1s3a16).
t_lemma(node4_26, x_perspron).         const(x_perspron).
%%%%%%%% node4_27 %%%%%%%%%%%%%%%%%%%
node(node4_27).
a_afun(node4_27, obj).         const(obj).
m_form(node4_27, ho).         const(ho).
m_lemma(node4_27, on_1).         const(on_1).
m_tag(node4_27, phzs4__3_______).         const(phzs4__3_______).
m_tag0(node4_27,'p'). const('p'). m_tag1(node4_27,'h'). const('h'). m_tag2(node4_27,'z'). const('z'). m_tag3(node4_27,'s'). const('s'). m_tag4(node4_27,'4'). const('4'). m_tag7(node4_27,'3'). const('3'). 
%%%%%%%% node4_28 %%%%%%%%%%%%%%%%%%%
node(node4_28).
a_afun(node4_28, atr).         const(atr).
m_form(node4_28, prevzala).         const(prevzala).
m_lemma(node4_28, prevzit___pr__od_nekoho_vec__zodpovednost____).         const(prevzit___pr__od_nekoho_vec__zodpovednost____).
m_tag(node4_28, vpqw___xr_aa___).         const(vpqw___xr_aa___).
m_tag0(node4_28,'v'). const('v'). m_tag1(node4_28,'p'). const('p'). m_tag2(node4_28,'q'). const('q'). m_tag3(node4_28,'w'). const('w'). m_tag7(node4_28,'x'). const('x'). m_tag8(node4_28,'r'). const('r'). m_tag10(node4_28,'a'). const('a'). m_tag11(node4_28,'a'). const('a'). 
%%%%%%%% node4_29 %%%%%%%%%%%%%%%%%%%
node(node4_29).
functor(node4_29, act).         const(act).
gram_sempos(node4_29, n_denot).         const(n_denot).
id(node4_29, t_plzensky63162_txt_001_p1s3a17).         const(t_plzensky63162_txt_001_p1s3a17).
t_lemma(node4_29, zzs).         const(zzs).
%%%%%%%% node4_30 %%%%%%%%%%%%%%%%%%%
node(node4_30).
a_afun(node4_30, sb).         const(sb).
m_form(node4_30, zzs).         const(zzs).
m_lemma(node4_30, zzs).         const(zzs).
m_tag(node4_30, nnfxx_____a____).         const(nnfxx_____a____).
m_tag0(node4_30,'n'). const('n'). m_tag1(node4_30,'n'). const('n'). m_tag2(node4_30,'f'). const('f'). m_tag3(node4_30,'x'). const('x'). m_tag4(node4_30,'x'). const('x'). m_tag10(node4_30,'a'). const('a'). 
edge(node4_0, node4_1).
edge(node4_1, node4_2).
edge(node4_2, node4_3).
edge(node4_2, node4_4).
edge(node4_1, node4_5).
edge(node4_1, node4_6).
edge(node4_6, node4_7).
edge(node4_7, node4_8).
edge(node4_6, node4_9).
edge(node4_6, node4_10).
edge(node4_10, node4_11).
edge(node4_11, node4_12).
edge(node4_11, node4_13).
edge(node4_13, node4_14).
edge(node4_11, node4_15).
edge(node4_15, node4_16).
edge(node4_11, node4_17).
edge(node4_11, node4_18).
edge(node4_10, node4_19).
edge(node4_10, node4_20).
edge(node4_20, node4_21).
edge(node4_21, node4_22).
edge(node4_22, node4_23).
edge(node4_21, node4_24).
edge(node4_21, node4_25).
edge(node4_20, node4_26).
edge(node4_26, node4_27).
edge(node4_20, node4_28).
edge(node4_20, node4_29).
edge(node4_29, node4_30).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% pri nehode byla zranena jedna osoba. 
tree_root(node5_0).
%%%%%%%% node5_0 %%%%%%%%%%%%%%%%%%%
node(node5_0).
id(node5_0, t_plzensky72795_txt_001_p2s3).         const(t_plzensky72795_txt_001_p2s3).
%%%%%%%% node5_1 %%%%%%%%%%%%%%%%%%%
node(node5_1).
functor(node5_1, pred).         const(pred).
gram_sempos(node5_1, v).         const(v).
id(node5_1, t_plzensky72795_txt_001_p2s3a1).         const(t_plzensky72795_txt_001_p2s3a1).
t_lemma(node5_1, zranit).         const(zranit).
%%%%%%%% node5_2 %%%%%%%%%%%%%%%%%%%
node(node5_2).
functor(node5_2, act).         const(act).
id(node5_2, t_plzensky72795_txt_001_p2s3a7).         const(t_plzensky72795_txt_001_p2s3a7).
t_lemma(node5_2, x_gen).         const(x_gen).
%%%%%%%% node5_3 %%%%%%%%%%%%%%%%%%%
node(node5_3).
functor(node5_3, twhen).         const(twhen).
gram_sempos(node5_3, n_denot).         const(n_denot).
id(node5_3, t_plzensky72795_txt_001_p2s3a3).         const(t_plzensky72795_txt_001_p2s3a3).
t_lemma(node5_3, nehoda).         const(nehoda).
%%%%%%%% node5_4 %%%%%%%%%%%%%%%%%%%
node(node5_4).
a_afun(node5_4, auxp).         const(auxp).
m_form(node5_4, pri).         const(pri).
m_lemma(node5_4, pri_1).         const(pri_1).
m_tag(node5_4, rr__6__________).         const(rr__6__________).
m_tag0(node5_4,'r'). const('r'). m_tag1(node5_4,'r'). const('r'). m_tag4(node5_4,'6'). const('6'). 
%%%%%%%% node5_5 %%%%%%%%%%%%%%%%%%%
node(node5_5).
a_afun(node5_5, adv).         const(adv).
m_form(node5_5, nehode).         const(nehode).
m_lemma(node5_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node5_5, nnfs6_____a____).         const(nnfs6_____a____).
m_tag0(node5_5,'n'). const('n'). m_tag1(node5_5,'n'). const('n'). m_tag2(node5_5,'f'). const('f'). m_tag3(node5_5,'s'). const('s'). m_tag4(node5_5,'6'). const('6'). m_tag10(node5_5,'a'). const('a'). 
%%%%%%%% node5_6 %%%%%%%%%%%%%%%%%%%
node(node5_6).
a_afun(node5_6, auxv).         const(auxv).
m_form(node5_6, byla).         const(byla).
m_lemma(node5_6, byt).         const(byt).
m_tag(node5_6, vpqw___xr_aa___).         const(vpqw___xr_aa___).
m_tag0(node5_6,'v'). const('v'). m_tag1(node5_6,'p'). const('p'). m_tag2(node5_6,'q'). const('q'). m_tag3(node5_6,'w'). const('w'). m_tag7(node5_6,'x'). const('x'). m_tag8(node5_6,'r'). const('r'). m_tag10(node5_6,'a'). const('a'). m_tag11(node5_6,'a'). const('a'). 
%%%%%%%% node5_7 %%%%%%%%%%%%%%%%%%%
node(node5_7).
a_afun(node5_7, pred).         const(pred).
m_form(node5_7, zranena).         const(zranena).
m_lemma(node5_7, zranit__w).         const(zranit__w).
m_tag(node5_7, vsqw___xx_ap___).         const(vsqw___xx_ap___).
m_tag0(node5_7,'v'). const('v'). m_tag1(node5_7,'s'). const('s'). m_tag2(node5_7,'q'). const('q'). m_tag3(node5_7,'w'). const('w'). m_tag7(node5_7,'x'). const('x'). m_tag8(node5_7,'x'). const('x'). m_tag10(node5_7,'a'). const('a'). m_tag11(node5_7,'p'). const('p'). 
%%%%%%%% node5_8 %%%%%%%%%%%%%%%%%%%
node(node5_8).
functor(node5_8, pat).         const(pat).
gram_sempos(node5_8, n_denot).         const(n_denot).
id(node5_8, t_plzensky72795_txt_001_p2s3a5).         const(t_plzensky72795_txt_001_p2s3a5).
t_lemma(node5_8, osoba).         const(osoba).
%%%%%%%% node5_9 %%%%%%%%%%%%%%%%%%%
node(node5_9).
functor(node5_9, rstr).         const(rstr).
gram_sempos(node5_9, adj_quant_def).         const(adj_quant_def).
id(node5_9, t_plzensky72795_txt_001_p2s3a6).         const(t_plzensky72795_txt_001_p2s3a6).
t_lemma(node5_9, jeden).         const(jeden).
%%%%%%%% node5_10 %%%%%%%%%%%%%%%%%%%
node(node5_10).
a_afun(node5_10, atr).         const(atr).
m_form(node5_10, jedna).         const(jedna).
m_lemma(node5_10, jeden_1).         const(jeden_1).
m_tag(node5_10, clfs1__________).         const(clfs1__________).
m_tag0(node5_10,'c'). const('c'). m_tag1(node5_10,'l'). const('l'). m_tag2(node5_10,'f'). const('f'). m_tag3(node5_10,'s'). const('s'). m_tag4(node5_10,'1'). const('1'). 
%%%%%%%% node5_11 %%%%%%%%%%%%%%%%%%%
node(node5_11).
a_afun(node5_11, sb).         const(sb).
m_form(node5_11, osoba).         const(osoba).
m_lemma(node5_11, osoba).         const(osoba).
m_tag(node5_11, nnfs1_____a____).         const(nnfs1_____a____).
m_tag0(node5_11,'n'). const('n'). m_tag1(node5_11,'n'). const('n'). m_tag2(node5_11,'f'). const('f'). m_tag3(node5_11,'s'). const('s'). m_tag4(node5_11,'1'). const('1'). m_tag10(node5_11,'a'). const('a'). 
edge(node5_0, node5_1).
edge(node5_1, node5_2).
edge(node5_1, node5_3).
edge(node5_3, node5_4).
edge(node5_3, node5_5).
edge(node5_1, node5_6).
edge(node5_1, node5_7).
edge(node5_1, node5_8).
edge(node5_8, node5_9).
edge(node5_9, node5_10).
edge(node5_8, node5_11).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% pri nehode nebyl nikdo zranen. 
tree_root(node6_0).
%%%%%%%% node6_0 %%%%%%%%%%%%%%%%%%%
node(node6_0).
id(node6_0, t_plzensky57010_txt_001_p3s3).         const(t_plzensky57010_txt_001_p3s3).
%%%%%%%% node6_1 %%%%%%%%%%%%%%%%%%%
node(node6_1).
functor(node6_1, pred).         const(pred).
gram_sempos(node6_1, v).         const(v).
id(node6_1, t_plzensky57010_txt_001_p3s3a1).         const(t_plzensky57010_txt_001_p3s3a1).
t_lemma(node6_1, zranit).         const(zranit).
%%%%%%%% node6_2 %%%%%%%%%%%%%%%%%%%
node(node6_2).
functor(node6_2, act).         const(act).
id(node6_2, t_plzensky57010_txt_001_p3s3a6).         const(t_plzensky57010_txt_001_p3s3a6).
t_lemma(node6_2, x_gen).         const(x_gen).
%%%%%%%% node6_3 %%%%%%%%%%%%%%%%%%%
node(node6_3).
functor(node6_3, twhen).         const(twhen).
gram_sempos(node6_3, n_denot).         const(n_denot).
id(node6_3, t_plzensky57010_txt_001_p3s3a3).         const(t_plzensky57010_txt_001_p3s3a3).
t_lemma(node6_3, nehoda).         const(nehoda).
%%%%%%%% node6_4 %%%%%%%%%%%%%%%%%%%
node(node6_4).
a_afun(node6_4, auxp).         const(auxp).
m_form(node6_4, pri).         const(pri).
m_lemma(node6_4, pri_1).         const(pri_1).
m_tag(node6_4, rr__6__________).         const(rr__6__________).
m_tag0(node6_4,'r'). const('r'). m_tag1(node6_4,'r'). const('r'). m_tag4(node6_4,'6'). const('6'). 
%%%%%%%% node6_5 %%%%%%%%%%%%%%%%%%%
node(node6_5).
a_afun(node6_5, adv).         const(adv).
m_form(node6_5, nehode).         const(nehode).
m_lemma(node6_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node6_5, nnfs6_____a____).         const(nnfs6_____a____).
m_tag0(node6_5,'n'). const('n'). m_tag1(node6_5,'n'). const('n'). m_tag2(node6_5,'f'). const('f'). m_tag3(node6_5,'s'). const('s'). m_tag4(node6_5,'6'). const('6'). m_tag10(node6_5,'a'). const('a'). 
%%%%%%%% node6_6 %%%%%%%%%%%%%%%%%%%
node(node6_6).
functor(node6_6, pat).         const(pat).
gram_sempos(node6_6, n_pron_indef).         const(n_pron_indef).
id(node6_6, t_plzensky57010_txt_001_p3s3a5).         const(t_plzensky57010_txt_001_p3s3a5).
t_lemma(node6_6, kdo).         const(kdo).
%%%%%%%% node6_7 %%%%%%%%%%%%%%%%%%%
node(node6_7).
a_afun(node6_7, sb).         const(sb).
m_form(node6_7, nikdo).         const(nikdo).
m_lemma(node6_7, nikdo).         const(nikdo).
m_tag(node6_7, pwm_1__________).         const(pwm_1__________).
m_tag0(node6_7,'p'). const('p'). m_tag1(node6_7,'w'). const('w'). m_tag2(node6_7,'m'). const('m'). m_tag4(node6_7,'1'). const('1'). 
%%%%%%%% node6_8 %%%%%%%%%%%%%%%%%%%
node(node6_8).
a_afun(node6_8, auxv).         const(auxv).
m_form(node6_8, nebyl).         const(nebyl).
m_lemma(node6_8, byt).         const(byt).
m_tag(node6_8, vpys___xr_na___).         const(vpys___xr_na___).
m_tag0(node6_8,'v'). const('v'). m_tag1(node6_8,'p'). const('p'). m_tag2(node6_8,'y'). const('y'). m_tag3(node6_8,'s'). const('s'). m_tag7(node6_8,'x'). const('x'). m_tag8(node6_8,'r'). const('r'). m_tag10(node6_8,'n'). const('n'). m_tag11(node6_8,'a'). const('a'). 
%%%%%%%% node6_9 %%%%%%%%%%%%%%%%%%%
node(node6_9).
a_afun(node6_9, pred).         const(pred).
m_form(node6_9, zranen).         const(zranen).
m_lemma(node6_9, zranit__w).         const(zranit__w).
m_tag(node6_9, vsys___xx_ap___).         const(vsys___xx_ap___).
m_tag0(node6_9,'v'). const('v'). m_tag1(node6_9,'s'). const('s'). m_tag2(node6_9,'y'). const('y'). m_tag3(node6_9,'s'). const('s'). m_tag7(node6_9,'x'). const('x'). m_tag8(node6_9,'x'). const('x'). m_tag10(node6_9,'a'). const('a'). m_tag11(node6_9,'p'). const('p'). 
edge(node6_0, node6_1).
edge(node6_1, node6_2).
edge(node6_1, node6_3).
edge(node6_3, node6_4).
edge(node6_3, node6_5).
edge(node6_1, node6_6).
edge(node6_6, node6_7).
edge(node6_1, node6_8).
edge(node6_1, node6_9).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% vazne zranen byl i ridic druheho automobilu. 
tree_root(node7_0).
%%%%%%%% node7_0 %%%%%%%%%%%%%%%%%%%
node(node7_0).
id(node7_0, t_plzensky60375_txt_001_p1s6).         const(t_plzensky60375_txt_001_p1s6).
%%%%%%%% node7_1 %%%%%%%%%%%%%%%%%%%
node(node7_1).
functor(node7_1, pred).         const(pred).
gram_sempos(node7_1, v).         const(v).
id(node7_1, t_plzensky60375_txt_001_p1s6a1).         const(t_plzensky60375_txt_001_p1s6a1).
t_lemma(node7_1, zranit).         const(zranit).
%%%%%%%% node7_2 %%%%%%%%%%%%%%%%%%%
node(node7_2).
functor(node7_2, act).         const(act).
id(node7_2, t_plzensky60375_txt_001_p1s6a8).         const(t_plzensky60375_txt_001_p1s6a8).
t_lemma(node7_2, x_gen).         const(x_gen).
%%%%%%%% node7_3 %%%%%%%%%%%%%%%%%%%
node(node7_3).
functor(node7_3, mann).         const(mann).
gram_sempos(node7_3, adj_denot).         const(adj_denot).
id(node7_3, t_plzensky60375_txt_001_p1s6a2).         const(t_plzensky60375_txt_001_p1s6a2).
t_lemma(node7_3, vazny).         const(vazny).
%%%%%%%% node7_4 %%%%%%%%%%%%%%%%%%%
node(node7_4).
a_afun(node7_4, adv).         const(adv).
m_form(node7_4, vazne).         const(vazne).
m_lemma(node7_4, vazne____1y_).         const(vazne____1y_).
m_tag(node7_4, dg_______1a____).         const(dg_______1a____).
m_tag0(node7_4,'d'). const('d'). m_tag1(node7_4,'g'). const('g'). m_tag9(node7_4,'1'). const('1'). m_tag10(node7_4,'a'). const('a'). 
%%%%%%%% node7_5 %%%%%%%%%%%%%%%%%%%
node(node7_5).
a_afun(node7_5, pred).         const(pred).
m_form(node7_5, zranen).         const(zranen).
m_lemma(node7_5, zranit__w).         const(zranit__w).
m_tag(node7_5, vsys___xx_ap___).         const(vsys___xx_ap___).
m_tag0(node7_5,'v'). const('v'). m_tag1(node7_5,'s'). const('s'). m_tag2(node7_5,'y'). const('y'). m_tag3(node7_5,'s'). const('s'). m_tag7(node7_5,'x'). const('x'). m_tag8(node7_5,'x'). const('x'). m_tag10(node7_5,'a'). const('a'). m_tag11(node7_5,'p'). const('p'). 
%%%%%%%% node7_6 %%%%%%%%%%%%%%%%%%%
node(node7_6).
a_afun(node7_6, auxv).         const(auxv).
m_form(node7_6, byl).         const(byl).
m_lemma(node7_6, byt).         const(byt).
m_tag(node7_6, vpys___xr_aa___).         const(vpys___xr_aa___).
m_tag0(node7_6,'v'). const('v'). m_tag1(node7_6,'p'). const('p'). m_tag2(node7_6,'y'). const('y'). m_tag3(node7_6,'s'). const('s'). m_tag7(node7_6,'x'). const('x'). m_tag8(node7_6,'r'). const('r'). m_tag10(node7_6,'a'). const('a'). m_tag11(node7_6,'a'). const('a'). 
%%%%%%%% node7_7 %%%%%%%%%%%%%%%%%%%
node(node7_7).
functor(node7_7, pat).         const(pat).
gram_sempos(node7_7, n_denot).         const(n_denot).
id(node7_7, t_plzensky60375_txt_001_p1s6a4).         const(t_plzensky60375_txt_001_p1s6a4).
t_lemma(node7_7, ridic).         const(ridic).
%%%%%%%% node7_8 %%%%%%%%%%%%%%%%%%%
node(node7_8).
functor(node7_8, conj).         const(conj).
id(node7_8, t_plzensky60375_txt_001_p1s6a5).         const(t_plzensky60375_txt_001_p1s6a5).
t_lemma(node7_8, i).         const(i).
%%%%%%%% node7_9 %%%%%%%%%%%%%%%%%%%
node(node7_9).
a_afun(node7_9, coord).         const(coord).
m_form(node7_9, i).         const(i).
m_lemma(node7_9, i_1).         const(i_1).
m_tag(node7_9, j______________).         const(j______________).
m_tag0(node7_9,'j'). const('j'). m_tag1(node7_9,'^'). const('^'). 
%%%%%%%% node7_10 %%%%%%%%%%%%%%%%%%%
node(node7_10).
a_afun(node7_10, sb).         const(sb).
m_form(node7_10, ridic).         const(ridic).
m_lemma(node7_10, ridic).         const(ridic).
m_tag(node7_10, nnms1_____a____).         const(nnms1_____a____).
m_tag0(node7_10,'n'). const('n'). m_tag1(node7_10,'n'). const('n'). m_tag2(node7_10,'m'). const('m'). m_tag3(node7_10,'s'). const('s'). m_tag4(node7_10,'1'). const('1'). m_tag10(node7_10,'a'). const('a'). 
%%%%%%%% node7_11 %%%%%%%%%%%%%%%%%%%
node(node7_11).
functor(node7_11, app).         const(app).
gram_sempos(node7_11, n_denot).         const(n_denot).
id(node7_11, t_plzensky60375_txt_001_p1s6a6).         const(t_plzensky60375_txt_001_p1s6a6).
t_lemma(node7_11, automobil).         const(automobil).
%%%%%%%% node7_12 %%%%%%%%%%%%%%%%%%%
node(node7_12).
functor(node7_12, rstr).         const(rstr).
gram_sempos(node7_12, adj_quant_def).         const(adj_quant_def).
id(node7_12, t_plzensky60375_txt_001_p1s6a7).         const(t_plzensky60375_txt_001_p1s6a7).
t_lemma(node7_12, dva).         const(dva).
%%%%%%%% node7_13 %%%%%%%%%%%%%%%%%%%
node(node7_13).
a_afun(node7_13, atr).         const(atr).
m_form(node7_13, druheho).         const(druheho).
m_lemma(node7_13, druhy_1___jiny_).         const(druhy_1___jiny_).
m_tag(node7_13, aais2____1a____).         const(aais2____1a____).
m_tag0(node7_13,'a'). const('a'). m_tag1(node7_13,'a'). const('a'). m_tag2(node7_13,'i'). const('i'). m_tag3(node7_13,'s'). const('s'). m_tag4(node7_13,'2'). const('2'). m_tag9(node7_13,'1'). const('1'). m_tag10(node7_13,'a'). const('a'). 
%%%%%%%% node7_14 %%%%%%%%%%%%%%%%%%%
node(node7_14).
a_afun(node7_14, atr).         const(atr).
m_form(node7_14, automobilu).         const(automobilu).
m_lemma(node7_14, automobil).         const(automobil).
m_tag(node7_14, nnis2_____a____).         const(nnis2_____a____).
m_tag0(node7_14,'n'). const('n'). m_tag1(node7_14,'n'). const('n'). m_tag2(node7_14,'i'). const('i'). m_tag3(node7_14,'s'). const('s'). m_tag4(node7_14,'2'). const('2'). m_tag10(node7_14,'a'). const('a'). 
edge(node7_0, node7_1).
edge(node7_1, node7_2).
edge(node7_1, node7_3).
edge(node7_3, node7_4).
edge(node7_1, node7_5).
edge(node7_1, node7_6).
edge(node7_1, node7_7).
edge(node7_7, node7_8).
edge(node7_8, node7_9).
edge(node7_7, node7_10).
edge(node7_7, node7_11).
edge(node7_11, node7_12).
edge(node7_12, node7_13).
edge(node7_11, node7_14).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% nehodu neprezil spolujezdec z bmw. 
tree_root(node8_0).
%%%%%%%% node8_0 %%%%%%%%%%%%%%%%%%%
node(node8_0).
id(node8_0, t_plzensky60375_txt_001_p1s8).         const(t_plzensky60375_txt_001_p1s8).
%%%%%%%% node8_1 %%%%%%%%%%%%%%%%%%%
node(node8_1).
functor(node8_1, pred).         const(pred).
gram_sempos(node8_1, v).         const(v).
id(node8_1, t_plzensky60375_txt_001_p1s8a1).         const(t_plzensky60375_txt_001_p1s8a1).
t_lemma(node8_1, prezit).         const(prezit).
%%%%%%%% node8_2 %%%%%%%%%%%%%%%%%%%
node(node8_2).
functor(node8_2, rhem).         const(rhem).
id(node8_2, t_plzensky60375_txt_001_p1s8a6).         const(t_plzensky60375_txt_001_p1s8a6).
t_lemma(node8_2, x_neg).         const(x_neg).
%%%%%%%% node8_3 %%%%%%%%%%%%%%%%%%%
node(node8_3).
functor(node8_3, pat).         const(pat).
gram_sempos(node8_3, n_denot).         const(n_denot).
id(node8_3, t_plzensky60375_txt_001_p1s8a2).         const(t_plzensky60375_txt_001_p1s8a2).
t_lemma(node8_3, nehoda).         const(nehoda).
%%%%%%%% node8_4 %%%%%%%%%%%%%%%%%%%
node(node8_4).
a_afun(node8_4, obj).         const(obj).
m_form(node8_4, nehodu).         const(nehodu).
m_lemma(node8_4, nehoda__s).         const(nehoda__s).
m_tag(node8_4, nnms4_____a____).         const(nnms4_____a____).
m_tag0(node8_4,'n'). const('n'). m_tag1(node8_4,'n'). const('n'). m_tag2(node8_4,'m'). const('m'). m_tag3(node8_4,'s'). const('s'). m_tag4(node8_4,'4'). const('4'). m_tag10(node8_4,'a'). const('a'). 
%%%%%%%% node8_5 %%%%%%%%%%%%%%%%%%%
node(node8_5).
a_afun(node8_5, pred).         const(pred).
m_form(node8_5, neprezil).         const(neprezil).
m_lemma(node8_5, prezit).         const(prezit).
m_tag(node8_5, vpys___xr_na___).         const(vpys___xr_na___).
m_tag0(node8_5,'v'). const('v'). m_tag1(node8_5,'p'). const('p'). m_tag2(node8_5,'y'). const('y'). m_tag3(node8_5,'s'). const('s'). m_tag7(node8_5,'x'). const('x'). m_tag8(node8_5,'r'). const('r'). m_tag10(node8_5,'n'). const('n'). m_tag11(node8_5,'a'). const('a'). 
%%%%%%%% node8_6 %%%%%%%%%%%%%%%%%%%
node(node8_6).
functor(node8_6, act).         const(act).
gram_sempos(node8_6, n_denot).         const(n_denot).
id(node8_6, t_plzensky60375_txt_001_p1s8a3).         const(t_plzensky60375_txt_001_p1s8a3).
t_lemma(node8_6, spolujezdec).         const(spolujezdec).
%%%%%%%% node8_7 %%%%%%%%%%%%%%%%%%%
node(node8_7).
a_afun(node8_7, sb).         const(sb).
m_form(node8_7, spolujezdec).         const(spolujezdec).
m_lemma(node8_7, spolujezdec).         const(spolujezdec).
m_tag(node8_7, nnms1_____a____).         const(nnms1_____a____).
m_tag0(node8_7,'n'). const('n'). m_tag1(node8_7,'n'). const('n'). m_tag2(node8_7,'m'). const('m'). m_tag3(node8_7,'s'). const('s'). m_tag4(node8_7,'1'). const('1'). m_tag10(node8_7,'a'). const('a'). 
%%%%%%%% node8_8 %%%%%%%%%%%%%%%%%%%
node(node8_8).
functor(node8_8, dir1).         const(dir1).
gram_sempos(node8_8, n_denot).         const(n_denot).
id(node8_8, t_plzensky60375_txt_001_p1s8a5).         const(t_plzensky60375_txt_001_p1s8a5).
t_lemma(node8_8, bmw).         const(bmw).
%%%%%%%% node8_9 %%%%%%%%%%%%%%%%%%%
node(node8_9).
a_afun(node8_9, auxp).         const(auxp).
m_form(node8_9, z).         const(z).
m_lemma(node8_9, z_1).         const(z_1).
m_tag(node8_9, rr__2__________).         const(rr__2__________).
m_tag0(node8_9,'r'). const('r'). m_tag1(node8_9,'r'). const('r'). m_tag4(node8_9,'2'). const('2'). 
%%%%%%%% node8_10 %%%%%%%%%%%%%%%%%%%
node(node8_10).
a_afun(node8_10, atr).         const(atr).
m_form(node8_10, bmw).         const(bmw).
m_lemma(node8_10, bmw_1__b__k).         const(bmw_1__b__k).
m_tag(node8_10, nnnxx_____a____).         const(nnnxx_____a____).
m_tag0(node8_10,'n'). const('n'). m_tag1(node8_10,'n'). const('n'). m_tag2(node8_10,'n'). const('n'). m_tag3(node8_10,'x'). const('x'). m_tag4(node8_10,'x'). const('x'). m_tag10(node8_10,'a'). const('a'). 
edge(node8_0, node8_1).
edge(node8_1, node8_2).
edge(node8_1, node8_3).
edge(node8_3, node8_4).
edge(node8_1, node8_5).
edge(node8_1, node8_6).
edge(node8_6, node8_7).
edge(node8_6, node8_8).
edge(node8_8, node8_9).
edge(node8_8, node8_10).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% pri nehode byl usmrcen sedmactyricetilety ridic osobniho vozidla. 
tree_root(node9_0).
%%%%%%%% node9_0 %%%%%%%%%%%%%%%%%%%
node(node9_0).
id(node9_0, t_plzensky72977_txt_001_p1s2).         const(t_plzensky72977_txt_001_p1s2).
%%%%%%%% node9_1 %%%%%%%%%%%%%%%%%%%
node(node9_1).
functor(node9_1, pred).         const(pred).
gram_sempos(node9_1, v).         const(v).
id(node9_1, t_plzensky72977_txt_001_p1s2a1).         const(t_plzensky72977_txt_001_p1s2a1).
t_lemma(node9_1, usmrtit).         const(usmrtit).
%%%%%%%% node9_2 %%%%%%%%%%%%%%%%%%%
node(node9_2).
functor(node9_2, act).         const(act).
id(node9_2, t_plzensky72977_txt_001_p1s2a9).         const(t_plzensky72977_txt_001_p1s2a9).
t_lemma(node9_2, x_gen).         const(x_gen).
%%%%%%%% node9_3 %%%%%%%%%%%%%%%%%%%
node(node9_3).
functor(node9_3, twhen).         const(twhen).
gram_sempos(node9_3, n_denot).         const(n_denot).
id(node9_3, t_plzensky72977_txt_001_p1s2a3).         const(t_plzensky72977_txt_001_p1s2a3).
t_lemma(node9_3, nehoda).         const(nehoda).
%%%%%%%% node9_4 %%%%%%%%%%%%%%%%%%%
node(node9_4).
a_afun(node9_4, auxp).         const(auxp).
m_form(node9_4, pri).         const(pri).
m_lemma(node9_4, pri_1).         const(pri_1).
m_tag(node9_4, rr__6__________).         const(rr__6__________).
m_tag0(node9_4,'r'). const('r'). m_tag1(node9_4,'r'). const('r'). m_tag4(node9_4,'6'). const('6'). 
%%%%%%%% node9_5 %%%%%%%%%%%%%%%%%%%
node(node9_5).
a_afun(node9_5, adv).         const(adv).
m_form(node9_5, nehode).         const(nehode).
m_lemma(node9_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node9_5, nnfs6_____a____).         const(nnfs6_____a____).
m_tag0(node9_5,'n'). const('n'). m_tag1(node9_5,'n'). const('n'). m_tag2(node9_5,'f'). const('f'). m_tag3(node9_5,'s'). const('s'). m_tag4(node9_5,'6'). const('6'). m_tag10(node9_5,'a'). const('a'). 
%%%%%%%% node9_6 %%%%%%%%%%%%%%%%%%%
node(node9_6).
a_afun(node9_6, auxv).         const(auxv).
m_form(node9_6, byl).         const(byl).
m_lemma(node9_6, byt).         const(byt).
m_tag(node9_6, vpys___xr_aa___).         const(vpys___xr_aa___).
m_tag0(node9_6,'v'). const('v'). m_tag1(node9_6,'p'). const('p'). m_tag2(node9_6,'y'). const('y'). m_tag3(node9_6,'s'). const('s'). m_tag7(node9_6,'x'). const('x'). m_tag8(node9_6,'r'). const('r'). m_tag10(node9_6,'a'). const('a'). m_tag11(node9_6,'a'). const('a'). 
%%%%%%%% node9_7 %%%%%%%%%%%%%%%%%%%
node(node9_7).
a_afun(node9_7, pred).         const(pred).
m_form(node9_7, usmrcen).         const(usmrcen).
m_lemma(node9_7, usmrtit__w).         const(usmrtit__w).
m_tag(node9_7, vsys___xx_ap___).         const(vsys___xx_ap___).
m_tag0(node9_7,'v'). const('v'). m_tag1(node9_7,'s'). const('s'). m_tag2(node9_7,'y'). const('y'). m_tag3(node9_7,'s'). const('s'). m_tag7(node9_7,'x'). const('x'). m_tag8(node9_7,'x'). const('x'). m_tag10(node9_7,'a'). const('a'). m_tag11(node9_7,'p'). const('p'). 
%%%%%%%% node9_8 %%%%%%%%%%%%%%%%%%%
node(node9_8).
functor(node9_8, pat).         const(pat).
gram_sempos(node9_8, n_denot).         const(n_denot).
id(node9_8, t_plzensky72977_txt_001_p1s2a5).         const(t_plzensky72977_txt_001_p1s2a5).
t_lemma(node9_8, ridic).         const(ridic).
%%%%%%%% node9_9 %%%%%%%%%%%%%%%%%%%
node(node9_9).
functor(node9_9, rstr).         const(rstr).
gram_sempos(node9_9, adj_denot).         const(adj_denot).
id(node9_9, t_plzensky72977_txt_001_p1s2a6).         const(t_plzensky72977_txt_001_p1s2a6).
t_lemma(node9_9, sedmactyricetilety).         const(sedmactyricetilety).
%%%%%%%% node9_10 %%%%%%%%%%%%%%%%%%%
node(node9_10).
a_afun(node9_10, atr).         const(atr).
m_form(node9_10, sedmactyricetilety).         const(sedmactyricetilety).
m_lemma(node9_10, sedmactyricetilety).         const(sedmactyricetilety).
m_tag(node9_10, aams1____1a____).         const(aams1____1a____).
m_tag0(node9_10,'a'). const('a'). m_tag1(node9_10,'a'). const('a'). m_tag2(node9_10,'m'). const('m'). m_tag3(node9_10,'s'). const('s'). m_tag4(node9_10,'1'). const('1'). m_tag9(node9_10,'1'). const('1'). m_tag10(node9_10,'a'). const('a'). 
%%%%%%%% node9_11 %%%%%%%%%%%%%%%%%%%
node(node9_11).
a_afun(node9_11, sb).         const(sb).
m_form(node9_11, ridic).         const(ridic).
m_lemma(node9_11, ridic).         const(ridic).
m_tag(node9_11, nnms1_____a____).         const(nnms1_____a____).
m_tag0(node9_11,'n'). const('n'). m_tag1(node9_11,'n'). const('n'). m_tag2(node9_11,'m'). const('m'). m_tag3(node9_11,'s'). const('s'). m_tag4(node9_11,'1'). const('1'). m_tag10(node9_11,'a'). const('a'). 
%%%%%%%% node9_12 %%%%%%%%%%%%%%%%%%%
node(node9_12).
functor(node9_12, app).         const(app).
gram_sempos(node9_12, n_denot).         const(n_denot).
id(node9_12, t_plzensky72977_txt_001_p1s2a7).         const(t_plzensky72977_txt_001_p1s2a7).
t_lemma(node9_12, vozidlo).         const(vozidlo).
%%%%%%%% node9_13 %%%%%%%%%%%%%%%%%%%
node(node9_13).
functor(node9_13, rstr).         const(rstr).
gram_sempos(node9_13, adj_denot).         const(adj_denot).
id(node9_13, t_plzensky72977_txt_001_p1s2a8).         const(t_plzensky72977_txt_001_p1s2a8).
t_lemma(node9_13, osobni).         const(osobni).
%%%%%%%% node9_14 %%%%%%%%%%%%%%%%%%%
node(node9_14).
a_afun(node9_14, atr).         const(atr).
m_form(node9_14, osobniho).         const(osobniho).
m_lemma(node9_14, osobni).         const(osobni).
m_tag(node9_14, aans2____1a____).         const(aans2____1a____).
m_tag0(node9_14,'a'). const('a'). m_tag1(node9_14,'a'). const('a'). m_tag2(node9_14,'n'). const('n'). m_tag3(node9_14,'s'). const('s'). m_tag4(node9_14,'2'). const('2'). m_tag9(node9_14,'1'). const('1'). m_tag10(node9_14,'a'). const('a'). 
%%%%%%%% node9_15 %%%%%%%%%%%%%%%%%%%
node(node9_15).
a_afun(node9_15, atr).         const(atr).
m_form(node9_15, vozidla).         const(vozidla).
m_lemma(node9_15, vozidlo).         const(vozidlo).
m_tag(node9_15, nnns2_____a____).         const(nnns2_____a____).
m_tag0(node9_15,'n'). const('n'). m_tag1(node9_15,'n'). const('n'). m_tag2(node9_15,'n'). const('n'). m_tag3(node9_15,'s'). const('s'). m_tag4(node9_15,'2'). const('2'). m_tag10(node9_15,'a'). const('a'). 
edge(node9_0, node9_1).
edge(node9_1, node9_2).
edge(node9_1, node9_3).
edge(node9_3, node9_4).
edge(node9_3, node9_5).
edge(node9_1, node9_6).
edge(node9_1, node9_7).
edge(node9_1, node9_8).
edge(node9_8, node9_9).
edge(node9_9, node9_10).
edge(node9_8, node9_11).
edge(node9_8, node9_12).
edge(node9_12, node9_13).
edge(node9_13, node9_14).
edge(node9_12, node9_15).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% ridic vozidla nebyl zranen. 
tree_root(node10_0).
%%%%%%%% node10_0 %%%%%%%%%%%%%%%%%%%
node(node10_0).
id(node10_0, t_plzensky57806_txt_001_p2s3).         const(t_plzensky57806_txt_001_p2s3).
%%%%%%%% node10_1 %%%%%%%%%%%%%%%%%%%
node(node10_1).
functor(node10_1, pred).         const(pred).
gram_sempos(node10_1, v).         const(v).
id(node10_1, t_plzensky57806_txt_001_p2s3a1).         const(t_plzensky57806_txt_001_p2s3a1).
t_lemma(node10_1, zranit).         const(zranit).
%%%%%%%% node10_2 %%%%%%%%%%%%%%%%%%%
node(node10_2).
functor(node10_2, act).         const(act).
id(node10_2, t_plzensky57806_txt_001_p2s3a4).         const(t_plzensky57806_txt_001_p2s3a4).
t_lemma(node10_2, x_gen).         const(x_gen).
%%%%%%%% node10_3 %%%%%%%%%%%%%%%%%%%
node(node10_3).
functor(node10_3, pat).         const(pat).
gram_sempos(node10_3, n_denot).         const(n_denot).
id(node10_3, t_plzensky57806_txt_001_p2s3a2).         const(t_plzensky57806_txt_001_p2s3a2).
t_lemma(node10_3, ridic).         const(ridic).
%%%%%%%% node10_4 %%%%%%%%%%%%%%%%%%%
node(node10_4).
a_afun(node10_4, sb).         const(sb).
m_form(node10_4, ridic).         const(ridic).
m_lemma(node10_4, ridic).         const(ridic).
m_tag(node10_4, nnms1_____a____).         const(nnms1_____a____).
m_tag0(node10_4,'n'). const('n'). m_tag1(node10_4,'n'). const('n'). m_tag2(node10_4,'m'). const('m'). m_tag3(node10_4,'s'). const('s'). m_tag4(node10_4,'1'). const('1'). m_tag10(node10_4,'a'). const('a'). 
%%%%%%%% node10_5 %%%%%%%%%%%%%%%%%%%
node(node10_5).
functor(node10_5, app).         const(app).
gram_sempos(node10_5, n_denot).         const(n_denot).
id(node10_5, t_plzensky57806_txt_001_p2s3a3).         const(t_plzensky57806_txt_001_p2s3a3).
t_lemma(node10_5, vozidlo).         const(vozidlo).
%%%%%%%% node10_6 %%%%%%%%%%%%%%%%%%%
node(node10_6).
a_afun(node10_6, atr).         const(atr).
m_form(node10_6, vozidla).         const(vozidla).
m_lemma(node10_6, vozidlo).         const(vozidlo).
m_tag(node10_6, nnns2_____a____).         const(nnns2_____a____).
m_tag0(node10_6,'n'). const('n'). m_tag1(node10_6,'n'). const('n'). m_tag2(node10_6,'n'). const('n'). m_tag3(node10_6,'s'). const('s'). m_tag4(node10_6,'2'). const('2'). m_tag10(node10_6,'a'). const('a'). 
%%%%%%%% node10_7 %%%%%%%%%%%%%%%%%%%
node(node10_7).
a_afun(node10_7, auxv).         const(auxv).
m_form(node10_7, nebyl).         const(nebyl).
m_lemma(node10_7, byt).         const(byt).
m_tag(node10_7, vpys___xr_na___).         const(vpys___xr_na___).
m_tag0(node10_7,'v'). const('v'). m_tag1(node10_7,'p'). const('p'). m_tag2(node10_7,'y'). const('y'). m_tag3(node10_7,'s'). const('s'). m_tag7(node10_7,'x'). const('x'). m_tag8(node10_7,'r'). const('r'). m_tag10(node10_7,'n'). const('n'). m_tag11(node10_7,'a'). const('a'). 
%%%%%%%% node10_8 %%%%%%%%%%%%%%%%%%%
node(node10_8).
a_afun(node10_8, pred).         const(pred).
m_form(node10_8, zranen).         const(zranen).
m_lemma(node10_8, zranit__w).         const(zranit__w).
m_tag(node10_8, vsys___xx_ap___).         const(vsys___xx_ap___).
m_tag0(node10_8,'v'). const('v'). m_tag1(node10_8,'s'). const('s'). m_tag2(node10_8,'y'). const('y'). m_tag3(node10_8,'s'). const('s'). m_tag7(node10_8,'x'). const('x'). m_tag8(node10_8,'x'). const('x'). m_tag10(node10_8,'a'). const('a'). m_tag11(node10_8,'p'). const('p'). 
edge(node10_0, node10_1).
edge(node10_1, node10_2).
edge(node10_1, node10_3).
edge(node10_3, node10_4).
edge(node10_3, node10_5).
edge(node10_5, node10_6).
edge(node10_1, node10_7).
edge(node10_1, node10_8).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% ridicka nebyla zranena. 
tree_root(node11_0).
%%%%%%%% node11_0 %%%%%%%%%%%%%%%%%%%
node(node11_0).
id(node11_0, t_plzensky57806_txt_001_p2s40).         const(t_plzensky57806_txt_001_p2s40).
%%%%%%%% node11_1 %%%%%%%%%%%%%%%%%%%
node(node11_1).
functor(node11_1, pred).         const(pred).
gram_sempos(node11_1, v).         const(v).
id(node11_1, t_plzensky57806_txt_001_p2s40a1).         const(t_plzensky57806_txt_001_p2s40a1).
t_lemma(node11_1, zranit).         const(zranit).
%%%%%%%% node11_2 %%%%%%%%%%%%%%%%%%%
node(node11_2).
functor(node11_2, act).         const(act).
id(node11_2, t_plzensky57806_txt_001_p2s40a3).         const(t_plzensky57806_txt_001_p2s40a3).
t_lemma(node11_2, x_gen).         const(x_gen).
%%%%%%%% node11_3 %%%%%%%%%%%%%%%%%%%
node(node11_3).
functor(node11_3, pat).         const(pat).
gram_sempos(node11_3, n_denot).         const(n_denot).
id(node11_3, t_plzensky57806_txt_001_p2s40a2).         const(t_plzensky57806_txt_001_p2s40a2).
t_lemma(node11_3, ridicka).         const(ridicka).
%%%%%%%% node11_4 %%%%%%%%%%%%%%%%%%%
node(node11_4).
a_afun(node11_4, sb).         const(sb).
m_form(node11_4, ridicka).         const(ridicka).
m_lemma(node11_4, ridicka____2_).         const(ridicka____2_).
m_tag(node11_4, nnfs1_____a____).         const(nnfs1_____a____).
m_tag0(node11_4,'n'). const('n'). m_tag1(node11_4,'n'). const('n'). m_tag2(node11_4,'f'). const('f'). m_tag3(node11_4,'s'). const('s'). m_tag4(node11_4,'1'). const('1'). m_tag10(node11_4,'a'). const('a'). 
%%%%%%%% node11_5 %%%%%%%%%%%%%%%%%%%
node(node11_5).
a_afun(node11_5, auxv).         const(auxv).
m_form(node11_5, nebyla).         const(nebyla).
m_lemma(node11_5, byt).         const(byt).
m_tag(node11_5, vpqw___xr_na___).         const(vpqw___xr_na___).
m_tag0(node11_5,'v'). const('v'). m_tag1(node11_5,'p'). const('p'). m_tag2(node11_5,'q'). const('q'). m_tag3(node11_5,'w'). const('w'). m_tag7(node11_5,'x'). const('x'). m_tag8(node11_5,'r'). const('r'). m_tag10(node11_5,'n'). const('n'). m_tag11(node11_5,'a'). const('a'). 
%%%%%%%% node11_6 %%%%%%%%%%%%%%%%%%%
node(node11_6).
a_afun(node11_6, pred).         const(pred).
m_form(node11_6, zranena).         const(zranena).
m_lemma(node11_6, zranit__w).         const(zranit__w).
m_tag(node11_6, vsqw___xx_ap___).         const(vsqw___xx_ap___).
m_tag0(node11_6,'v'). const('v'). m_tag1(node11_6,'s'). const('s'). m_tag2(node11_6,'q'). const('q'). m_tag3(node11_6,'w'). const('w'). m_tag7(node11_6,'x'). const('x'). m_tag8(node11_6,'x'). const('x'). m_tag10(node11_6,'a'). const('a'). m_tag11(node11_6,'p'). const('p'). 
edge(node11_0, node11_1).
edge(node11_1, node11_2).
edge(node11_1, node11_3).
edge(node11_3, node11_4).
edge(node11_1, node11_5).
edge(node11_1, node11_6).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% v dobe prijezdu hasicu byla jedna zranena osoba v peci rzr, druha nebyla zranena. 
tree_root(node12_0).
%%%%%%%% node12_0 %%%%%%%%%%%%%%%%%%%
node(node12_0).
id(node12_0, t_plzensky51802_txt_001_p6s2).         const(t_plzensky51802_txt_001_p6s2).
%%%%%%%% node12_1 %%%%%%%%%%%%%%%%%%%
node(node12_1).
functor(node12_1, pred).         const(pred).
gram_sempos(node12_1, v).         const(v).
id(node12_1, t_plzensky51802_txt_001_p6s2a14).         const(t_plzensky51802_txt_001_p6s2a14).
t_lemma(node12_1, zranit).         const(zranit).
%%%%%%%% node12_2 %%%%%%%%%%%%%%%%%%%
node(node12_2).
functor(node12_2, act).         const(act).
id(node12_2, t_plzensky51802_txt_001_p6s2a15).         const(t_plzensky51802_txt_001_p6s2a15).
t_lemma(node12_2, x_gen).         const(x_gen).
%%%%%%%% node12_3 %%%%%%%%%%%%%%%%%%%
node(node12_3).
functor(node12_3, twhen).         const(twhen).
gram_sempos(node12_3, n_denot).         const(n_denot).
id(node12_3, t_plzensky51802_txt_001_p6s2a4).         const(t_plzensky51802_txt_001_p6s2a4).
t_lemma(node12_3, prijezd).         const(prijezd).
%%%%%%%% node12_4 %%%%%%%%%%%%%%%%%%%
node(node12_4).
a_afun(node12_4, auxp).         const(auxp).
m_form(node12_4, v).         const(v).
m_lemma(node12_4, v_1).         const(v_1).
m_tag(node12_4, rr__6__________).         const(rr__6__________).
m_tag0(node12_4,'r'). const('r'). m_tag1(node12_4,'r'). const('r'). m_tag4(node12_4,'6'). const('6'). 
%%%%%%%% node12_5 %%%%%%%%%%%%%%%%%%%
node(node12_5).
a_afun(node12_5, adv).         const(adv).
m_form(node12_5, dobe).         const(dobe).
m_lemma(node12_5, doba).         const(doba).
m_tag(node12_5, nnfs6_____a____).         const(nnfs6_____a____).
m_tag0(node12_5,'n'). const('n'). m_tag1(node12_5,'n'). const('n'). m_tag2(node12_5,'f'). const('f'). m_tag3(node12_5,'s'). const('s'). m_tag4(node12_5,'6'). const('6'). m_tag10(node12_5,'a'). const('a'). 
%%%%%%%% node12_6 %%%%%%%%%%%%%%%%%%%
node(node12_6).
a_afun(node12_6, atr).         const(atr).
m_form(node12_6, prijezdu).         const(prijezdu).
m_lemma(node12_6, prijezd).         const(prijezd).
m_tag(node12_6, nnis2_____a____).         const(nnis2_____a____).
m_tag0(node12_6,'n'). const('n'). m_tag1(node12_6,'n'). const('n'). m_tag2(node12_6,'i'). const('i'). m_tag3(node12_6,'s'). const('s'). m_tag4(node12_6,'2'). const('2'). m_tag10(node12_6,'a'). const('a'). 
%%%%%%%% node12_7 %%%%%%%%%%%%%%%%%%%
node(node12_7).
functor(node12_7, act).         const(act).
gram_sempos(node12_7, n_denot).         const(n_denot).
id(node12_7, t_plzensky51802_txt_001_p6s2a5).         const(t_plzensky51802_txt_001_p6s2a5).
t_lemma(node12_7, hasic).         const(hasic).
%%%%%%%% node12_8 %%%%%%%%%%%%%%%%%%%
node(node12_8).
a_afun(node12_8, atr).         const(atr).
m_form(node12_8, hasicu).         const(hasicu).
m_lemma(node12_8, hasic).         const(hasic).
m_tag(node12_8, nnmp2_____a____).         const(nnmp2_____a____).
m_tag0(node12_8,'n'). const('n'). m_tag1(node12_8,'n'). const('n'). m_tag2(node12_8,'m'). const('m'). m_tag3(node12_8,'p'). const('p'). m_tag4(node12_8,'2'). const('2'). m_tag10(node12_8,'a'). const('a'). 
%%%%%%%% node12_9 %%%%%%%%%%%%%%%%%%%
node(node12_9).
functor(node12_9, pat).         const(pat).
gram_sempos(node12_9, n_denot).         const(n_denot).
id(node12_9, t_plzensky51802_txt_001_p6s2a6).         const(t_plzensky51802_txt_001_p6s2a6).
t_lemma(node12_9, osoba).         const(osoba).
%%%%%%%% node12_10 %%%%%%%%%%%%%%%%%%%
node(node12_10).
functor(node12_10, rstr).         const(rstr).
gram_sempos(node12_10, adj_quant_def).         const(adj_quant_def).
id(node12_10, t_plzensky51802_txt_001_p6s2a7).         const(t_plzensky51802_txt_001_p6s2a7).
t_lemma(node12_10, jeden).         const(jeden).
%%%%%%%% node12_11 %%%%%%%%%%%%%%%%%%%
node(node12_11).
a_afun(node12_11, atr).         const(atr).
m_form(node12_11, jedna).         const(jedna).
m_lemma(node12_11, jeden_1).         const(jeden_1).
m_tag(node12_11, clfs1__________).         const(clfs1__________).
m_tag0(node12_11,'c'). const('c'). m_tag1(node12_11,'l'). const('l'). m_tag2(node12_11,'f'). const('f'). m_tag3(node12_11,'s'). const('s'). m_tag4(node12_11,'1'). const('1'). 
%%%%%%%% node12_12 %%%%%%%%%%%%%%%%%%%
node(node12_12).
functor(node12_12, rstr).         const(rstr).
gram_sempos(node12_12, adj_denot).         const(adj_denot).
id(node12_12, t_plzensky51802_txt_001_p6s2a8).         const(t_plzensky51802_txt_001_p6s2a8).
t_lemma(node12_12, zraneny).         const(zraneny).
%%%%%%%% node12_13 %%%%%%%%%%%%%%%%%%%
node(node12_13).
a_afun(node12_13, atr).         const(atr).
m_form(node12_13, zranena).         const(zranena).
m_lemma(node12_13, zraneny____3it_).         const(zraneny____3it_).
m_tag(node12_13, aafs1____1a____).         const(aafs1____1a____).
m_tag0(node12_13,'a'). const('a'). m_tag1(node12_13,'a'). const('a'). m_tag2(node12_13,'f'). const('f'). m_tag3(node12_13,'s'). const('s'). m_tag4(node12_13,'1'). const('1'). m_tag9(node12_13,'1'). const('1'). m_tag10(node12_13,'a'). const('a'). 
%%%%%%%% node12_14 %%%%%%%%%%%%%%%%%%%
node(node12_14).
a_afun(node12_14, sb).         const(sb).
m_form(node12_14, osoba).         const(osoba).
m_lemma(node12_14, osoba).         const(osoba).
m_tag(node12_14, nnfs1_____a____).         const(nnfs1_____a____).
m_tag0(node12_14,'n'). const('n'). m_tag1(node12_14,'n'). const('n'). m_tag2(node12_14,'f'). const('f'). m_tag3(node12_14,'s'). const('s'). m_tag4(node12_14,'1'). const('1'). m_tag10(node12_14,'a'). const('a'). 
%%%%%%%% node12_15 %%%%%%%%%%%%%%%%%%%
node(node12_15).
functor(node12_15, rstr).         const(rstr).
id(node12_15, t_plzensky51802_txt_001_p6s2a9).         const(t_plzensky51802_txt_001_p6s2a9).
t_lemma(node12_15, x_comma).         const(x_comma).
%%%%%%%% node12_16 %%%%%%%%%%%%%%%%%%%
node(node12_16).
functor(node12_16, loc).         const(loc).
gram_sempos(node12_16, n_denot).         const(n_denot).
id(node12_16, t_plzensky51802_txt_001_p6s2a11).         const(t_plzensky51802_txt_001_p6s2a11).
t_lemma(node12_16, pece).         const(pece).
%%%%%%%% node12_17 %%%%%%%%%%%%%%%%%%%
node(node12_17).
a_afun(node12_17, auxp).         const(auxp).
m_form(node12_17, v).         const(v).
m_lemma(node12_17, v_1).         const(v_1).
m_tag(node12_17, rr__6__________).         const(rr__6__________).
m_tag0(node12_17,'r'). const('r'). m_tag1(node12_17,'r'). const('r'). m_tag4(node12_17,'6'). const('6'). 
%%%%%%%% node12_18 %%%%%%%%%%%%%%%%%%%
node(node12_18).
a_afun(node12_18, adv).         const(adv).
m_form(node12_18, peci).         const(peci).
m_lemma(node12_18, pece).         const(pece).
m_tag(node12_18, nnfs6_____a____).         const(nnfs6_____a____).
m_tag0(node12_18,'n'). const('n'). m_tag1(node12_18,'n'). const('n'). m_tag2(node12_18,'f'). const('f'). m_tag3(node12_18,'s'). const('s'). m_tag4(node12_18,'6'). const('6'). m_tag10(node12_18,'a'). const('a'). 
%%%%%%%% node12_19 %%%%%%%%%%%%%%%%%%%
node(node12_19).
functor(node12_19, act).         const(act).
gram_sempos(node12_19, n_denot).         const(n_denot).
id(node12_19, t_plzensky51802_txt_001_p6s2a12).         const(t_plzensky51802_txt_001_p6s2a12).
t_lemma(node12_19, rzr).         const(rzr).
%%%%%%%% node12_20 %%%%%%%%%%%%%%%%%%%
node(node12_20).
a_afun(node12_20, atr).         const(atr).
m_form(node12_20, rzr).         const(rzr).
m_lemma(node12_20, rzr).         const(rzr).
m_tag(node12_20, nnfxx_____a____).         const(nnfxx_____a____).
m_tag0(node12_20,'n'). const('n'). m_tag1(node12_20,'n'). const('n'). m_tag2(node12_20,'f'). const('f'). m_tag3(node12_20,'x'). const('x'). m_tag4(node12_20,'x'). const('x'). m_tag10(node12_20,'a'). const('a'). 
%%%%%%%% node12_21 %%%%%%%%%%%%%%%%%%%
node(node12_21).
a_afun(node12_21, auxx).         const(auxx).
m_form(node12_21, x_).         const(x_).
m_lemma(node12_21, x_).         const(x_).
m_tag(node12_21, z______________).         const(z______________).
m_tag0(node12_21,'z'). const('z'). m_tag1(node12_21,':'). const(':'). 
%%%%%%%% node12_22 %%%%%%%%%%%%%%%%%%%
node(node12_22).
functor(node12_22, rstr).         const(rstr).
gram_sempos(node12_22, adj_quant_def).         const(adj_quant_def).
id(node12_22, t_plzensky51802_txt_001_p6s2a13).         const(t_plzensky51802_txt_001_p6s2a13).
t_lemma(node12_22, dva).         const(dva).
%%%%%%%% node12_23 %%%%%%%%%%%%%%%%%%%
node(node12_23).
a_afun(node12_23, pnom).         const(pnom).
m_form(node12_23, druha).         const(druha).
m_lemma(node12_23, druhy_1___jiny_).         const(druhy_1___jiny_).
m_tag(node12_23, aafs1____1a____).         const(aafs1____1a____).
m_tag0(node12_23,'a'). const('a'). m_tag1(node12_23,'a'). const('a'). m_tag2(node12_23,'f'). const('f'). m_tag3(node12_23,'s'). const('s'). m_tag4(node12_23,'1'). const('1'). m_tag9(node12_23,'1'). const('1'). m_tag10(node12_23,'a'). const('a'). 
%%%%%%%% node12_24 %%%%%%%%%%%%%%%%%%%
node(node12_24).
a_afun(node12_24, pred).         const(pred).
m_form(node12_24, byla).         const(byla).
m_lemma(node12_24, byt).         const(byt).
m_tag(node12_24, vpqw___xr_aa___).         const(vpqw___xr_aa___).
m_tag0(node12_24,'v'). const('v'). m_tag1(node12_24,'p'). const('p'). m_tag2(node12_24,'q'). const('q'). m_tag3(node12_24,'w'). const('w'). m_tag7(node12_24,'x'). const('x'). m_tag8(node12_24,'r'). const('r'). m_tag10(node12_24,'a'). const('a'). m_tag11(node12_24,'a'). const('a'). 
%%%%%%%% node12_25 %%%%%%%%%%%%%%%%%%%
node(node12_25).
a_afun(node12_25, auxv).         const(auxv).
m_form(node12_25, nebyla).         const(nebyla).
m_lemma(node12_25, byt).         const(byt).
m_tag(node12_25, vpqw___xr_na___).         const(vpqw___xr_na___).
m_tag0(node12_25,'v'). const('v'). m_tag1(node12_25,'p'). const('p'). m_tag2(node12_25,'q'). const('q'). m_tag3(node12_25,'w'). const('w'). m_tag7(node12_25,'x'). const('x'). m_tag8(node12_25,'r'). const('r'). m_tag10(node12_25,'n'). const('n'). m_tag11(node12_25,'a'). const('a'). 
%%%%%%%% node12_26 %%%%%%%%%%%%%%%%%%%
node(node12_26).
a_afun(node12_26, pnom).         const(pnom).
m_form(node12_26, zranena).         const(zranena).
m_lemma(node12_26, zranit__w).         const(zranit__w).
m_tag(node12_26, vsqw___xx_ap___).         const(vsqw___xx_ap___).
m_tag0(node12_26,'v'). const('v'). m_tag1(node12_26,'s'). const('s'). m_tag2(node12_26,'q'). const('q'). m_tag3(node12_26,'w'). const('w'). m_tag7(node12_26,'x'). const('x'). m_tag8(node12_26,'x'). const('x'). m_tag10(node12_26,'a'). const('a'). m_tag11(node12_26,'p'). const('p'). 
edge(node12_0, node12_1).
edge(node12_1, node12_2).
edge(node12_1, node12_3).
edge(node12_3, node12_4).
edge(node12_3, node12_5).
edge(node12_3, node12_6).
edge(node12_3, node12_7).
edge(node12_7, node12_8).
edge(node12_1, node12_9).
edge(node12_9, node12_10).
edge(node12_10, node12_11).
edge(node12_9, node12_12).
edge(node12_12, node12_13).
edge(node12_9, node12_14).
edge(node12_1, node12_15).
edge(node12_15, node12_16).
edge(node12_16, node12_17).
edge(node12_16, node12_18).
edge(node12_16, node12_19).
edge(node12_19, node12_20).
edge(node12_15, node12_21).
edge(node12_15, node12_22).
edge(node12_22, node12_23).
edge(node12_1, node12_24).
edge(node12_1, node12_25).
edge(node12_1, node12_26).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% pri nehode byla zranena spolujezdkyne a hasici ji poskytli predlekarskou pomoc. 
tree_root(node13_0).
%%%%%%%% node13_0 %%%%%%%%%%%%%%%%%%%
node(node13_0).
id(node13_0, t_plzensky69694_txt_001_p3s4).         const(t_plzensky69694_txt_001_p3s4).
%%%%%%%% node13_1 %%%%%%%%%%%%%%%%%%%
node(node13_1).
functor(node13_1, conj).         const(conj).
id(node13_1, t_plzensky69694_txt_001_p3s4a1).         const(t_plzensky69694_txt_001_p3s4a1).
t_lemma(node13_1, a).         const(a).
%%%%%%%% node13_2 %%%%%%%%%%%%%%%%%%%
node(node13_2).
functor(node13_2, pred).         const(pred).
gram_sempos(node13_2, v).         const(v).
id(node13_2, t_plzensky69694_txt_001_p3s4a2).         const(t_plzensky69694_txt_001_p3s4a2).
t_lemma(node13_2, zranit).         const(zranit).
%%%%%%%% node13_3 %%%%%%%%%%%%%%%%%%%
node(node13_3).
functor(node13_3, act).         const(act).
id(node13_3, t_plzensky69694_txt_001_p3s4a12).         const(t_plzensky69694_txt_001_p3s4a12).
t_lemma(node13_3, x_gen).         const(x_gen).
%%%%%%%% node13_4 %%%%%%%%%%%%%%%%%%%
node(node13_4).
functor(node13_4, twhen).         const(twhen).
gram_sempos(node13_4, n_denot).         const(n_denot).
id(node13_4, t_plzensky69694_txt_001_p3s4a4).         const(t_plzensky69694_txt_001_p3s4a4).
t_lemma(node13_4, nehoda).         const(nehoda).
%%%%%%%% node13_5 %%%%%%%%%%%%%%%%%%%
node(node13_5).
a_afun(node13_5, auxp).         const(auxp).
m_form(node13_5, pri).         const(pri).
m_lemma(node13_5, pri_1).         const(pri_1).
m_tag(node13_5, rr__6__________).         const(rr__6__________).
m_tag0(node13_5,'r'). const('r'). m_tag1(node13_5,'r'). const('r'). m_tag4(node13_5,'6'). const('6'). 
%%%%%%%% node13_6 %%%%%%%%%%%%%%%%%%%
node(node13_6).
a_afun(node13_6, adv).         const(adv).
m_form(node13_6, nehode).         const(nehode).
m_lemma(node13_6, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node13_6, nnfs6_____a____).         const(nnfs6_____a____).
m_tag0(node13_6,'n'). const('n'). m_tag1(node13_6,'n'). const('n'). m_tag2(node13_6,'f'). const('f'). m_tag3(node13_6,'s'). const('s'). m_tag4(node13_6,'6'). const('6'). m_tag10(node13_6,'a'). const('a'). 
%%%%%%%% node13_7 %%%%%%%%%%%%%%%%%%%
node(node13_7).
a_afun(node13_7, auxv).         const(auxv).
m_form(node13_7, byla).         const(byla).
m_lemma(node13_7, byt).         const(byt).
m_tag(node13_7, vpqw___xr_aa___).         const(vpqw___xr_aa___).
m_tag0(node13_7,'v'). const('v'). m_tag1(node13_7,'p'). const('p'). m_tag2(node13_7,'q'). const('q'). m_tag3(node13_7,'w'). const('w'). m_tag7(node13_7,'x'). const('x'). m_tag8(node13_7,'r'). const('r'). m_tag10(node13_7,'a'). const('a'). m_tag11(node13_7,'a'). const('a'). 
%%%%%%%% node13_8 %%%%%%%%%%%%%%%%%%%
node(node13_8).
a_afun(node13_8, pred).         const(pred).
m_form(node13_8, zranena).         const(zranena).
m_lemma(node13_8, zranit__w).         const(zranit__w).
m_tag(node13_8, vsqw___xx_ap___).         const(vsqw___xx_ap___).
m_tag0(node13_8,'v'). const('v'). m_tag1(node13_8,'s'). const('s'). m_tag2(node13_8,'q'). const('q'). m_tag3(node13_8,'w'). const('w'). m_tag7(node13_8,'x'). const('x'). m_tag8(node13_8,'x'). const('x'). m_tag10(node13_8,'a'). const('a'). m_tag11(node13_8,'p'). const('p'). 
%%%%%%%% node13_9 %%%%%%%%%%%%%%%%%%%
node(node13_9).
functor(node13_9, pat).         const(pat).
gram_sempos(node13_9, n_denot).         const(n_denot).
id(node13_9, t_plzensky69694_txt_001_p3s4a6).         const(t_plzensky69694_txt_001_p3s4a6).
t_lemma(node13_9, spolujezdkyne).         const(spolujezdkyne).
%%%%%%%% node13_10 %%%%%%%%%%%%%%%%%%%
node(node13_10).
a_afun(node13_10, sb).         const(sb).
m_form(node13_10, spolujezdkyne).         const(spolujezdkyne).
m_lemma(node13_10, spolujezdkyne____4ec_).         const(spolujezdkyne____4ec_).
m_tag(node13_10, nnfs1_____a____).         const(nnfs1_____a____).
m_tag0(node13_10,'n'). const('n'). m_tag1(node13_10,'n'). const('n'). m_tag2(node13_10,'f'). const('f'). m_tag3(node13_10,'s'). const('s'). m_tag4(node13_10,'1'). const('1'). m_tag10(node13_10,'a'). const('a'). 
%%%%%%%% node13_11 %%%%%%%%%%%%%%%%%%%
node(node13_11).
a_afun(node13_11, coord).         const(coord).
m_form(node13_11, a).         const(a).
m_lemma(node13_11, a_1).         const(a_1).
m_tag(node13_11, j______________).         const(j______________).
m_tag0(node13_11,'j'). const('j'). m_tag1(node13_11,'^'). const('^'). 
%%%%%%%% node13_12 %%%%%%%%%%%%%%%%%%%
node(node13_12).
functor(node13_12, caus).         const(caus).
gram_sempos(node13_12, v).         const(v).
id(node13_12, t_plzensky69694_txt_001_p3s4a7).         const(t_plzensky69694_txt_001_p3s4a7).
t_lemma(node13_12, poskytnout).         const(poskytnout).
%%%%%%%% node13_13 %%%%%%%%%%%%%%%%%%%
node(node13_13).
functor(node13_13, act).         const(act).
gram_sempos(node13_13, n_denot).         const(n_denot).
id(node13_13, t_plzensky69694_txt_001_p3s4a8).         const(t_plzensky69694_txt_001_p3s4a8).
t_lemma(node13_13, hasic).         const(hasic).
%%%%%%%% node13_14 %%%%%%%%%%%%%%%%%%%
node(node13_14).
a_afun(node13_14, sb).         const(sb).
m_form(node13_14, hasici).         const(hasici).
m_lemma(node13_14, hasic).         const(hasic).
m_tag(node13_14, nnmp1_____a____).         const(nnmp1_____a____).
m_tag0(node13_14,'n'). const('n'). m_tag1(node13_14,'n'). const('n'). m_tag2(node13_14,'m'). const('m'). m_tag3(node13_14,'p'). const('p'). m_tag4(node13_14,'1'). const('1'). m_tag10(node13_14,'a'). const('a'). 
%%%%%%%% node13_15 %%%%%%%%%%%%%%%%%%%
node(node13_15).
functor(node13_15, addr).         const(addr).
gram_sempos(node13_15, n_pron_def_pers).         const(n_pron_def_pers).
id(node13_15, t_plzensky69694_txt_001_p3s4a9).         const(t_plzensky69694_txt_001_p3s4a9).
t_lemma(node13_15, x_perspron).         const(x_perspron).
%%%%%%%% node13_16 %%%%%%%%%%%%%%%%%%%
node(node13_16).
a_afun(node13_16, obj).         const(obj).
m_form(node13_16, ji).         const(ji).
m_lemma(node13_16, on_1___ona_).         const(on_1___ona_).
m_tag(node13_16, ppfs3__3_______).         const(ppfs3__3_______).
m_tag0(node13_16,'p'). const('p'). m_tag1(node13_16,'p'). const('p'). m_tag2(node13_16,'f'). const('f'). m_tag3(node13_16,'s'). const('s'). m_tag4(node13_16,'3'). const('3'). m_tag7(node13_16,'3'). const('3'). 
%%%%%%%% node13_17 %%%%%%%%%%%%%%%%%%%
node(node13_17).
a_afun(node13_17, pred).         const(pred).
m_form(node13_17, poskytli).         const(poskytli).
m_lemma(node13_17, poskytnout__w).         const(poskytnout__w).
m_tag(node13_17, vpmp___xr_aa__1).         const(vpmp___xr_aa__1).
m_tag0(node13_17,'v'). const('v'). m_tag1(node13_17,'p'). const('p'). m_tag2(node13_17,'m'). const('m'). m_tag3(node13_17,'p'). const('p'). m_tag7(node13_17,'x'). const('x'). m_tag8(node13_17,'r'). const('r'). m_tag10(node13_17,'a'). const('a'). m_tag11(node13_17,'a'). const('a'). m_tag14(node13_17,'1'). const('1'). 
%%%%%%%% node13_18 %%%%%%%%%%%%%%%%%%%
node(node13_18).
functor(node13_18, cphr).         const(cphr).
gram_sempos(node13_18, n_denot).         const(n_denot).
id(node13_18, t_plzensky69694_txt_001_p3s4a10).         const(t_plzensky69694_txt_001_p3s4a10).
t_lemma(node13_18, pomoc).         const(pomoc).
%%%%%%%% node13_19 %%%%%%%%%%%%%%%%%%%
node(node13_19).
functor(node13_19, rstr).         const(rstr).
gram_sempos(node13_19, adj_denot).         const(adj_denot).
id(node13_19, t_plzensky69694_txt_001_p3s4a11).         const(t_plzensky69694_txt_001_p3s4a11).
t_lemma(node13_19, predlekarsky).         const(predlekarsky).
%%%%%%%% node13_20 %%%%%%%%%%%%%%%%%%%
node(node13_20).
a_afun(node13_20, atr).         const(atr).
m_form(node13_20, predlekarskou).         const(predlekarskou).
m_lemma(node13_20, predlekarsky).         const(predlekarsky).
m_tag(node13_20, aafs4____1a____).         const(aafs4____1a____).
m_tag0(node13_20,'a'). const('a'). m_tag1(node13_20,'a'). const('a'). m_tag2(node13_20,'f'). const('f'). m_tag3(node13_20,'s'). const('s'). m_tag4(node13_20,'4'). const('4'). m_tag9(node13_20,'1'). const('1'). m_tag10(node13_20,'a'). const('a'). 
%%%%%%%% node13_21 %%%%%%%%%%%%%%%%%%%
node(node13_21).
a_afun(node13_21, obj).         const(obj).
m_form(node13_21, pomoc).         const(pomoc).
m_lemma(node13_21, pomoc).         const(pomoc).
m_tag(node13_21, nnfs4_____a____).         const(nnfs4_____a____).
m_tag0(node13_21,'n'). const('n'). m_tag1(node13_21,'n'). const('n'). m_tag2(node13_21,'f'). const('f'). m_tag3(node13_21,'s'). const('s'). m_tag4(node13_21,'4'). const('4'). m_tag10(node13_21,'a'). const('a'). 
edge(node13_0, node13_1).
edge(node13_1, node13_2).
edge(node13_2, node13_3).
edge(node13_2, node13_4).
edge(node13_4, node13_5).
edge(node13_4, node13_6).
edge(node13_2, node13_7).
edge(node13_2, node13_8).
edge(node13_2, node13_9).
edge(node13_9, node13_10).
edge(node13_1, node13_11).
edge(node13_1, node13_12).
edge(node13_12, node13_13).
edge(node13_13, node13_14).
edge(node13_12, node13_15).
edge(node13_15, node13_16).
edge(node13_12, node13_17).
edge(node13_12, node13_18).
edge(node13_18, node13_19).
edge(node13_19, node13_20).
edge(node13_18, node13_21).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% pri nehode byly zraneny dve osoby. 
tree_root(node14_0).
%%%%%%%% node14_0 %%%%%%%%%%%%%%%%%%%
node(node14_0).
id(node14_0, t_plzensky69694_txt_001_p4s2).         const(t_plzensky69694_txt_001_p4s2).
%%%%%%%% node14_1 %%%%%%%%%%%%%%%%%%%
node(node14_1).
functor(node14_1, pred).         const(pred).
gram_sempos(node14_1, v).         const(v).
id(node14_1, t_plzensky69694_txt_001_p4s2a1).         const(t_plzensky69694_txt_001_p4s2a1).
t_lemma(node14_1, zranit).         const(zranit).
%%%%%%%% node14_2 %%%%%%%%%%%%%%%%%%%
node(node14_2).
functor(node14_2, act).         const(act).
id(node14_2, t_plzensky69694_txt_001_p4s2a7).         const(t_plzensky69694_txt_001_p4s2a7).
t_lemma(node14_2, x_gen).         const(x_gen).
%%%%%%%% node14_3 %%%%%%%%%%%%%%%%%%%
node(node14_3).
functor(node14_3, twhen).         const(twhen).
gram_sempos(node14_3, n_denot).         const(n_denot).
id(node14_3, t_plzensky69694_txt_001_p4s2a3).         const(t_plzensky69694_txt_001_p4s2a3).
t_lemma(node14_3, nehoda).         const(nehoda).
%%%%%%%% node14_4 %%%%%%%%%%%%%%%%%%%
node(node14_4).
a_afun(node14_4, auxp).         const(auxp).
m_form(node14_4, pri).         const(pri).
m_lemma(node14_4, pri_1).         const(pri_1).
m_tag(node14_4, rr__6__________).         const(rr__6__________).
m_tag0(node14_4,'r'). const('r'). m_tag1(node14_4,'r'). const('r'). m_tag4(node14_4,'6'). const('6'). 
%%%%%%%% node14_5 %%%%%%%%%%%%%%%%%%%
node(node14_5).
a_afun(node14_5, adv).         const(adv).
m_form(node14_5, nehode).         const(nehode).
m_lemma(node14_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node14_5, nnfs6_____a____).         const(nnfs6_____a____).
m_tag0(node14_5,'n'). const('n'). m_tag1(node14_5,'n'). const('n'). m_tag2(node14_5,'f'). const('f'). m_tag3(node14_5,'s'). const('s'). m_tag4(node14_5,'6'). const('6'). m_tag10(node14_5,'a'). const('a'). 
%%%%%%%% node14_6 %%%%%%%%%%%%%%%%%%%
node(node14_6).
a_afun(node14_6, auxv).         const(auxv).
m_form(node14_6, byly).         const(byly).
m_lemma(node14_6, byt).         const(byt).
m_tag(node14_6, vptp___xr_aa___).         const(vptp___xr_aa___).
m_tag0(node14_6,'v'). const('v'). m_tag1(node14_6,'p'). const('p'). m_tag2(node14_6,'t'). const('t'). m_tag3(node14_6,'p'). const('p'). m_tag7(node14_6,'x'). const('x'). m_tag8(node14_6,'r'). const('r'). m_tag10(node14_6,'a'). const('a'). m_tag11(node14_6,'a'). const('a'). 
%%%%%%%% node14_7 %%%%%%%%%%%%%%%%%%%
node(node14_7).
a_afun(node14_7, pred).         const(pred).
m_form(node14_7, zraneny).         const(zraneny).
m_lemma(node14_7, zranit__w).         const(zranit__w).
m_tag(node14_7, vstp___xx_ap___).         const(vstp___xx_ap___).
m_tag0(node14_7,'v'). const('v'). m_tag1(node14_7,'s'). const('s'). m_tag2(node14_7,'t'). const('t'). m_tag3(node14_7,'p'). const('p'). m_tag7(node14_7,'x'). const('x'). m_tag8(node14_7,'x'). const('x'). m_tag10(node14_7,'a'). const('a'). m_tag11(node14_7,'p'). const('p'). 
%%%%%%%% node14_8 %%%%%%%%%%%%%%%%%%%
node(node14_8).
functor(node14_8, pat).         const(pat).
gram_sempos(node14_8, n_denot).         const(n_denot).
id(node14_8, t_plzensky69694_txt_001_p4s2a5).         const(t_plzensky69694_txt_001_p4s2a5).
t_lemma(node14_8, osoba).         const(osoba).
%%%%%%%% node14_9 %%%%%%%%%%%%%%%%%%%
node(node14_9).
functor(node14_9, rstr).         const(rstr).
gram_sempos(node14_9, adj_quant_def).         const(adj_quant_def).
id(node14_9, t_plzensky69694_txt_001_p4s2a6).         const(t_plzensky69694_txt_001_p4s2a6).
t_lemma(node14_9, dva).         const(dva).
%%%%%%%% node14_10 %%%%%%%%%%%%%%%%%%%
node(node14_10).
a_afun(node14_10, atr).         const(atr).
m_form(node14_10, dve).         const(dve).
m_lemma(node14_10, dva_2).         const(dva_2).
m_tag(node14_10, clhp1__________).         const(clhp1__________).
m_tag0(node14_10,'c'). const('c'). m_tag1(node14_10,'l'). const('l'). m_tag2(node14_10,'h'). const('h'). m_tag3(node14_10,'p'). const('p'). m_tag4(node14_10,'1'). const('1'). 
%%%%%%%% node14_11 %%%%%%%%%%%%%%%%%%%
node(node14_11).
a_afun(node14_11, sb).         const(sb).
m_form(node14_11, osoby).         const(osoby).
m_lemma(node14_11, osoba).         const(osoba).
m_tag(node14_11, nnfp1_____a____).         const(nnfp1_____a____).
m_tag0(node14_11,'n'). const('n'). m_tag1(node14_11,'n'). const('n'). m_tag2(node14_11,'f'). const('f'). m_tag3(node14_11,'p'). const('p'). m_tag4(node14_11,'1'). const('1'). m_tag10(node14_11,'a'). const('a'). 
edge(node14_0, node14_1).
edge(node14_1, node14_2).
edge(node14_1, node14_3).
edge(node14_3, node14_4).
edge(node14_3, node14_5).
edge(node14_1, node14_6).
edge(node14_1, node14_7).
edge(node14_1, node14_8).
edge(node14_8, node14_9).
edge(node14_9, node14_10).
edge(node14_8, node14_11).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% ridic druheho vozidla nebyl zranen. 
tree_root(node15_0).
%%%%%%%% node15_0 %%%%%%%%%%%%%%%%%%%
node(node15_0).
id(node15_0, t_plzensky71843_txt_001_p1s7).         const(t_plzensky71843_txt_001_p1s7).
%%%%%%%% node15_1 %%%%%%%%%%%%%%%%%%%
node(node15_1).
functor(node15_1, pred).         const(pred).
gram_sempos(node15_1, v).         const(v).
id(node15_1, t_plzensky71843_txt_001_p1s7a1).         const(t_plzensky71843_txt_001_p1s7a1).
t_lemma(node15_1, zranit).         const(zranit).
%%%%%%%% node15_2 %%%%%%%%%%%%%%%%%%%
node(node15_2).
functor(node15_2, act).         const(act).
id(node15_2, t_plzensky71843_txt_001_p1s7a5).         const(t_plzensky71843_txt_001_p1s7a5).
t_lemma(node15_2, x_gen).         const(x_gen).
%%%%%%%% node15_3 %%%%%%%%%%%%%%%%%%%
node(node15_3).
functor(node15_3, pat).         const(pat).
gram_sempos(node15_3, n_denot).         const(n_denot).
id(node15_3, t_plzensky71843_txt_001_p1s7a2).         const(t_plzensky71843_txt_001_p1s7a2).
t_lemma(node15_3, ridic).         const(ridic).
%%%%%%%% node15_4 %%%%%%%%%%%%%%%%%%%
node(node15_4).
a_afun(node15_4, sb).         const(sb).
m_form(node15_4, ridic).         const(ridic).
m_lemma(node15_4, ridic).         const(ridic).
m_tag(node15_4, nnms1_____a____).         const(nnms1_____a____).
m_tag0(node15_4,'n'). const('n'). m_tag1(node15_4,'n'). const('n'). m_tag2(node15_4,'m'). const('m'). m_tag3(node15_4,'s'). const('s'). m_tag4(node15_4,'1'). const('1'). m_tag10(node15_4,'a'). const('a'). 
%%%%%%%% node15_5 %%%%%%%%%%%%%%%%%%%
node(node15_5).
functor(node15_5, app).         const(app).
gram_sempos(node15_5, n_denot).         const(n_denot).
id(node15_5, t_plzensky71843_txt_001_p1s7a3).         const(t_plzensky71843_txt_001_p1s7a3).
t_lemma(node15_5, vozidlo).         const(vozidlo).
%%%%%%%% node15_6 %%%%%%%%%%%%%%%%%%%
node(node15_6).
functor(node15_6, rstr).         const(rstr).
gram_sempos(node15_6, adj_quant_def).         const(adj_quant_def).
id(node15_6, t_plzensky71843_txt_001_p1s7a4).         const(t_plzensky71843_txt_001_p1s7a4).
t_lemma(node15_6, dva).         const(dva).
%%%%%%%% node15_7 %%%%%%%%%%%%%%%%%%%
node(node15_7).
a_afun(node15_7, atr).         const(atr).
m_form(node15_7, druheho).         const(druheho).
m_lemma(node15_7, druhy_1___jiny_).         const(druhy_1___jiny_).
m_tag(node15_7, aans2____1a____).         const(aans2____1a____).
m_tag0(node15_7,'a'). const('a'). m_tag1(node15_7,'a'). const('a'). m_tag2(node15_7,'n'). const('n'). m_tag3(node15_7,'s'). const('s'). m_tag4(node15_7,'2'). const('2'). m_tag9(node15_7,'1'). const('1'). m_tag10(node15_7,'a'). const('a'). 
%%%%%%%% node15_8 %%%%%%%%%%%%%%%%%%%
node(node15_8).
a_afun(node15_8, atr).         const(atr).
m_form(node15_8, vozidla).         const(vozidla).
m_lemma(node15_8, vozidlo).         const(vozidlo).
m_tag(node15_8, nnns2_____a____).         const(nnns2_____a____).
m_tag0(node15_8,'n'). const('n'). m_tag1(node15_8,'n'). const('n'). m_tag2(node15_8,'n'). const('n'). m_tag3(node15_8,'s'). const('s'). m_tag4(node15_8,'2'). const('2'). m_tag10(node15_8,'a'). const('a'). 
%%%%%%%% node15_9 %%%%%%%%%%%%%%%%%%%
node(node15_9).
a_afun(node15_9, auxv).         const(auxv).
m_form(node15_9, nebyl).         const(nebyl).
m_lemma(node15_9, byt).         const(byt).
m_tag(node15_9, vpys___xr_na___).         const(vpys___xr_na___).
m_tag0(node15_9,'v'). const('v'). m_tag1(node15_9,'p'). const('p'). m_tag2(node15_9,'y'). const('y'). m_tag3(node15_9,'s'). const('s'). m_tag7(node15_9,'x'). const('x'). m_tag8(node15_9,'r'). const('r'). m_tag10(node15_9,'n'). const('n'). m_tag11(node15_9,'a'). const('a'). 
%%%%%%%% node15_10 %%%%%%%%%%%%%%%%%%%
node(node15_10).
a_afun(node15_10, pred).         const(pred).
m_form(node15_10, zranen).         const(zranen).
m_lemma(node15_10, zranit__w).         const(zranit__w).
m_tag(node15_10, vsys___xx_ap___).         const(vsys___xx_ap___).
m_tag0(node15_10,'v'). const('v'). m_tag1(node15_10,'s'). const('s'). m_tag2(node15_10,'y'). const('y'). m_tag3(node15_10,'s'). const('s'). m_tag7(node15_10,'x'). const('x'). m_tag8(node15_10,'x'). const('x'). m_tag10(node15_10,'a'). const('a'). m_tag11(node15_10,'p'). const('p'). 
edge(node15_0, node15_1).
edge(node15_1, node15_2).
edge(node15_1, node15_3).
edge(node15_3, node15_4).
edge(node15_3, node15_5).
edge(node15_5, node15_6).
edge(node15_6, node15_7).
edge(node15_5, node15_8).
edge(node15_1, node15_9).
edge(node15_1, node15_10).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% pri nehode byl zranen jeden ridic a do pece ho prevzala zzs. 
tree_root(node16_0).
%%%%%%%% node16_0 %%%%%%%%%%%%%%%%%%%
node(node16_0).
id(node16_0, t_plzensky58562_txt_001_p3s3).         const(t_plzensky58562_txt_001_p3s3).
%%%%%%%% node16_1 %%%%%%%%%%%%%%%%%%%
node(node16_1).
functor(node16_1, conj).         const(conj).
id(node16_1, t_plzensky58562_txt_001_p3s3a1).         const(t_plzensky58562_txt_001_p3s3a1).
t_lemma(node16_1, a).         const(a).
%%%%%%%% node16_2 %%%%%%%%%%%%%%%%%%%
node(node16_2).
functor(node16_2, pred).         const(pred).
gram_sempos(node16_2, v).         const(v).
id(node16_2, t_plzensky58562_txt_001_p3s3a2).         const(t_plzensky58562_txt_001_p3s3a2).
t_lemma(node16_2, zranit).         const(zranit).
%%%%%%%% node16_3 %%%%%%%%%%%%%%%%%%%
node(node16_3).
functor(node16_3, act).         const(act).
id(node16_3, t_plzensky58562_txt_001_p3s3a13).         const(t_plzensky58562_txt_001_p3s3a13).
t_lemma(node16_3, x_gen).         const(x_gen).
%%%%%%%% node16_4 %%%%%%%%%%%%%%%%%%%
node(node16_4).
functor(node16_4, twhen).         const(twhen).
gram_sempos(node16_4, n_denot).         const(n_denot).
id(node16_4, t_plzensky58562_txt_001_p3s3a4).         const(t_plzensky58562_txt_001_p3s3a4).
t_lemma(node16_4, nehoda).         const(nehoda).
%%%%%%%% node16_5 %%%%%%%%%%%%%%%%%%%
node(node16_5).
a_afun(node16_5, auxp).         const(auxp).
m_form(node16_5, pri).         const(pri).
m_lemma(node16_5, pri_1).         const(pri_1).
m_tag(node16_5, rr__6__________).         const(rr__6__________).
m_tag0(node16_5,'r'). const('r'). m_tag1(node16_5,'r'). const('r'). m_tag4(node16_5,'6'). const('6'). 
%%%%%%%% node16_6 %%%%%%%%%%%%%%%%%%%
node(node16_6).
a_afun(node16_6, adv).         const(adv).
m_form(node16_6, nehode).         const(nehode).
m_lemma(node16_6, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node16_6, nnfs6_____a____).         const(nnfs6_____a____).
m_tag0(node16_6,'n'). const('n'). m_tag1(node16_6,'n'). const('n'). m_tag2(node16_6,'f'). const('f'). m_tag3(node16_6,'s'). const('s'). m_tag4(node16_6,'6'). const('6'). m_tag10(node16_6,'a'). const('a'). 
%%%%%%%% node16_7 %%%%%%%%%%%%%%%%%%%
node(node16_7).
a_afun(node16_7, auxv).         const(auxv).
m_form(node16_7, byl).         const(byl).
m_lemma(node16_7, byt).         const(byt).
m_tag(node16_7, vpys___xr_aa___).         const(vpys___xr_aa___).
m_tag0(node16_7,'v'). const('v'). m_tag1(node16_7,'p'). const('p'). m_tag2(node16_7,'y'). const('y'). m_tag3(node16_7,'s'). const('s'). m_tag7(node16_7,'x'). const('x'). m_tag8(node16_7,'r'). const('r'). m_tag10(node16_7,'a'). const('a'). m_tag11(node16_7,'a'). const('a'). 
%%%%%%%% node16_8 %%%%%%%%%%%%%%%%%%%
node(node16_8).
a_afun(node16_8, pred).         const(pred).
m_form(node16_8, zranen).         const(zranen).
m_lemma(node16_8, zranit__w).         const(zranit__w).
m_tag(node16_8, vsys___xx_ap___).         const(vsys___xx_ap___).
m_tag0(node16_8,'v'). const('v'). m_tag1(node16_8,'s'). const('s'). m_tag2(node16_8,'y'). const('y'). m_tag3(node16_8,'s'). const('s'). m_tag7(node16_8,'x'). const('x'). m_tag8(node16_8,'x'). const('x'). m_tag10(node16_8,'a'). const('a'). m_tag11(node16_8,'p'). const('p'). 
%%%%%%%% node16_9 %%%%%%%%%%%%%%%%%%%
node(node16_9).
functor(node16_9, pat).         const(pat).
gram_sempos(node16_9, n_denot).         const(n_denot).
id(node16_9, t_plzensky58562_txt_001_p3s3a6).         const(t_plzensky58562_txt_001_p3s3a6).
t_lemma(node16_9, ridic).         const(ridic).
%%%%%%%% node16_10 %%%%%%%%%%%%%%%%%%%
node(node16_10).
functor(node16_10, rstr).         const(rstr).
gram_sempos(node16_10, adj_quant_def).         const(adj_quant_def).
id(node16_10, t_plzensky58562_txt_001_p3s3a7).         const(t_plzensky58562_txt_001_p3s3a7).
t_lemma(node16_10, jeden).         const(jeden).
%%%%%%%% node16_11 %%%%%%%%%%%%%%%%%%%
node(node16_11).
a_afun(node16_11, atr).         const(atr).
m_form(node16_11, jeden).         const(jeden).
m_lemma(node16_11, jeden_1).         const(jeden_1).
m_tag(node16_11, clys1__________).         const(clys1__________).
m_tag0(node16_11,'c'). const('c'). m_tag1(node16_11,'l'). const('l'). m_tag2(node16_11,'y'). const('y'). m_tag3(node16_11,'s'). const('s'). m_tag4(node16_11,'1'). const('1'). 
%%%%%%%% node16_12 %%%%%%%%%%%%%%%%%%%
node(node16_12).
a_afun(node16_12, sb).         const(sb).
m_form(node16_12, ridic).         const(ridic).
m_lemma(node16_12, ridic).         const(ridic).
m_tag(node16_12, nnms1_____a____).         const(nnms1_____a____).
m_tag0(node16_12,'n'). const('n'). m_tag1(node16_12,'n'). const('n'). m_tag2(node16_12,'m'). const('m'). m_tag3(node16_12,'s'). const('s'). m_tag4(node16_12,'1'). const('1'). m_tag10(node16_12,'a'). const('a'). 
%%%%%%%% node16_13 %%%%%%%%%%%%%%%%%%%
node(node16_13).
a_afun(node16_13, coord).         const(coord).
m_form(node16_13, a).         const(a).
m_lemma(node16_13, a_1).         const(a_1).
m_tag(node16_13, j______________).         const(j______________).
m_tag0(node16_13,'j'). const('j'). m_tag1(node16_13,'^'). const('^'). 
%%%%%%%% node16_14 %%%%%%%%%%%%%%%%%%%
node(node16_14).
functor(node16_14, pred).         const(pred).
gram_sempos(node16_14, v).         const(v).
id(node16_14, t_plzensky58562_txt_001_p3s3a8).         const(t_plzensky58562_txt_001_p3s3a8).
t_lemma(node16_14, prevzit).         const(prevzit).
%%%%%%%% node16_15 %%%%%%%%%%%%%%%%%%%
node(node16_15).
functor(node16_15, dir3).         const(dir3).
gram_sempos(node16_15, n_denot).         const(n_denot).
id(node16_15, t_plzensky58562_txt_001_p3s3a10).         const(t_plzensky58562_txt_001_p3s3a10).
t_lemma(node16_15, pece).         const(pece).
%%%%%%%% node16_16 %%%%%%%%%%%%%%%%%%%
node(node16_16).
a_afun(node16_16, auxp).         const(auxp).
m_form(node16_16, do).         const(do).
m_lemma(node16_16, do_1).         const(do_1).
m_tag(node16_16, rr__2__________).         const(rr__2__________).
m_tag0(node16_16,'r'). const('r'). m_tag1(node16_16,'r'). const('r'). m_tag4(node16_16,'2'). const('2'). 
%%%%%%%% node16_17 %%%%%%%%%%%%%%%%%%%
node(node16_17).
a_afun(node16_17, adv).         const(adv).
m_form(node16_17, pece).         const(pece).
m_lemma(node16_17, pece).         const(pece).
m_tag(node16_17, nnfs2_____a____).         const(nnfs2_____a____).
m_tag0(node16_17,'n'). const('n'). m_tag1(node16_17,'n'). const('n'). m_tag2(node16_17,'f'). const('f'). m_tag3(node16_17,'s'). const('s'). m_tag4(node16_17,'2'). const('2'). m_tag10(node16_17,'a'). const('a'). 
%%%%%%%% node16_18 %%%%%%%%%%%%%%%%%%%
node(node16_18).
functor(node16_18, pat).         const(pat).
gram_sempos(node16_18, n_pron_def_pers).         const(n_pron_def_pers).
id(node16_18, t_plzensky58562_txt_001_p3s3a11).         const(t_plzensky58562_txt_001_p3s3a11).
t_lemma(node16_18, x_perspron).         const(x_perspron).
%%%%%%%% node16_19 %%%%%%%%%%%%%%%%%%%
node(node16_19).
a_afun(node16_19, obj).         const(obj).
m_form(node16_19, ho).         const(ho).
m_lemma(node16_19, on_1).         const(on_1).
m_tag(node16_19, phzs4__3_______).         const(phzs4__3_______).
m_tag0(node16_19,'p'). const('p'). m_tag1(node16_19,'h'). const('h'). m_tag2(node16_19,'z'). const('z'). m_tag3(node16_19,'s'). const('s'). m_tag4(node16_19,'4'). const('4'). m_tag7(node16_19,'3'). const('3'). 
%%%%%%%% node16_20 %%%%%%%%%%%%%%%%%%%
node(node16_20).
a_afun(node16_20, pred).         const(pred).
m_form(node16_20, prevzala).         const(prevzala).
m_lemma(node16_20, prevzit___pr__od_nekoho_vec__zodpovednost____).         const(prevzit___pr__od_nekoho_vec__zodpovednost____).
m_tag(node16_20, vpqw___xr_aa___).         const(vpqw___xr_aa___).
m_tag0(node16_20,'v'). const('v'). m_tag1(node16_20,'p'). const('p'). m_tag2(node16_20,'q'). const('q'). m_tag3(node16_20,'w'). const('w'). m_tag7(node16_20,'x'). const('x'). m_tag8(node16_20,'r'). const('r'). m_tag10(node16_20,'a'). const('a'). m_tag11(node16_20,'a'). const('a'). 
%%%%%%%% node16_21 %%%%%%%%%%%%%%%%%%%
node(node16_21).
functor(node16_21, act).         const(act).
gram_sempos(node16_21, n_denot).         const(n_denot).
id(node16_21, t_plzensky58562_txt_001_p3s3a12).         const(t_plzensky58562_txt_001_p3s3a12).
t_lemma(node16_21, zzs).         const(zzs).
%%%%%%%% node16_22 %%%%%%%%%%%%%%%%%%%
node(node16_22).
a_afun(node16_22, sb).         const(sb).
m_form(node16_22, zzs).         const(zzs).
m_lemma(node16_22, zzs).         const(zzs).
m_tag(node16_22, nnfxx_____a____).         const(nnfxx_____a____).
m_tag0(node16_22,'n'). const('n'). m_tag1(node16_22,'n'). const('n'). m_tag2(node16_22,'f'). const('f'). m_tag3(node16_22,'x'). const('x'). m_tag4(node16_22,'x'). const('x'). m_tag10(node16_22,'a'). const('a'). 
edge(node16_0, node16_1).
edge(node16_1, node16_2).
edge(node16_2, node16_3).
edge(node16_2, node16_4).
edge(node16_4, node16_5).
edge(node16_4, node16_6).
edge(node16_2, node16_7).
edge(node16_2, node16_8).
edge(node16_2, node16_9).
edge(node16_9, node16_10).
edge(node16_10, node16_11).
edge(node16_9, node16_12).
edge(node16_1, node16_13).
edge(node16_1, node16_14).
edge(node16_14, node16_15).
edge(node16_15, node16_16).
edge(node16_15, node16_17).
edge(node16_14, node16_18).
edge(node16_18, node16_19).
edge(node16_14, node16_20).
edge(node16_14, node16_21).
edge(node16_21, node16_22).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% pri nehode byla zranena jedna osoba. 
tree_root(node17_0).
%%%%%%%% node17_0 %%%%%%%%%%%%%%%%%%%
node(node17_0).
id(node17_0, t_plzensky72261_txt_001_p14s2).         const(t_plzensky72261_txt_001_p14s2).
%%%%%%%% node17_1 %%%%%%%%%%%%%%%%%%%
node(node17_1).
functor(node17_1, pred).         const(pred).
gram_sempos(node17_1, v).         const(v).
id(node17_1, t_plzensky72261_txt_001_p14s2a1).         const(t_plzensky72261_txt_001_p14s2a1).
t_lemma(node17_1, zranit).         const(zranit).
%%%%%%%% node17_2 %%%%%%%%%%%%%%%%%%%
node(node17_2).
functor(node17_2, act).         const(act).
id(node17_2, t_plzensky72261_txt_001_p14s2a7).         const(t_plzensky72261_txt_001_p14s2a7).
t_lemma(node17_2, x_gen).         const(x_gen).
%%%%%%%% node17_3 %%%%%%%%%%%%%%%%%%%
node(node17_3).
functor(node17_3, twhen).         const(twhen).
gram_sempos(node17_3, n_denot).         const(n_denot).
id(node17_3, t_plzensky72261_txt_001_p14s2a3).         const(t_plzensky72261_txt_001_p14s2a3).
t_lemma(node17_3, nehoda).         const(nehoda).
%%%%%%%% node17_4 %%%%%%%%%%%%%%%%%%%
node(node17_4).
a_afun(node17_4, auxp).         const(auxp).
m_form(node17_4, pri).         const(pri).
m_lemma(node17_4, pri_1).         const(pri_1).
m_tag(node17_4, rr__6__________).         const(rr__6__________).
m_tag0(node17_4,'r'). const('r'). m_tag1(node17_4,'r'). const('r'). m_tag4(node17_4,'6'). const('6'). 
%%%%%%%% node17_5 %%%%%%%%%%%%%%%%%%%
node(node17_5).
a_afun(node17_5, adv).         const(adv).
m_form(node17_5, nehode).         const(nehode).
m_lemma(node17_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node17_5, nnfs6_____a____).         const(nnfs6_____a____).
m_tag0(node17_5,'n'). const('n'). m_tag1(node17_5,'n'). const('n'). m_tag2(node17_5,'f'). const('f'). m_tag3(node17_5,'s'). const('s'). m_tag4(node17_5,'6'). const('6'). m_tag10(node17_5,'a'). const('a'). 
%%%%%%%% node17_6 %%%%%%%%%%%%%%%%%%%
node(node17_6).
a_afun(node17_6, auxv).         const(auxv).
m_form(node17_6, byla).         const(byla).
m_lemma(node17_6, byt).         const(byt).
m_tag(node17_6, vpqw___xr_aa___).         const(vpqw___xr_aa___).
m_tag0(node17_6,'v'). const('v'). m_tag1(node17_6,'p'). const('p'). m_tag2(node17_6,'q'). const('q'). m_tag3(node17_6,'w'). const('w'). m_tag7(node17_6,'x'). const('x'). m_tag8(node17_6,'r'). const('r'). m_tag10(node17_6,'a'). const('a'). m_tag11(node17_6,'a'). const('a'). 
%%%%%%%% node17_7 %%%%%%%%%%%%%%%%%%%
node(node17_7).
a_afun(node17_7, pred).         const(pred).
m_form(node17_7, zranena).         const(zranena).
m_lemma(node17_7, zranit__w).         const(zranit__w).
m_tag(node17_7, vsqw___xx_ap___).         const(vsqw___xx_ap___).
m_tag0(node17_7,'v'). const('v'). m_tag1(node17_7,'s'). const('s'). m_tag2(node17_7,'q'). const('q'). m_tag3(node17_7,'w'). const('w'). m_tag7(node17_7,'x'). const('x'). m_tag8(node17_7,'x'). const('x'). m_tag10(node17_7,'a'). const('a'). m_tag11(node17_7,'p'). const('p'). 
%%%%%%%% node17_8 %%%%%%%%%%%%%%%%%%%
node(node17_8).
functor(node17_8, pat).         const(pat).
gram_sempos(node17_8, n_denot).         const(n_denot).
id(node17_8, t_plzensky72261_txt_001_p14s2a5).         const(t_plzensky72261_txt_001_p14s2a5).
t_lemma(node17_8, osoba).         const(osoba).
%%%%%%%% node17_9 %%%%%%%%%%%%%%%%%%%
node(node17_9).
functor(node17_9, rstr).         const(rstr).
gram_sempos(node17_9, adj_quant_def).         const(adj_quant_def).
id(node17_9, t_plzensky72261_txt_001_p14s2a6).         const(t_plzensky72261_txt_001_p14s2a6).
t_lemma(node17_9, jeden).         const(jeden).
%%%%%%%% node17_10 %%%%%%%%%%%%%%%%%%%
node(node17_10).
a_afun(node17_10, atr).         const(atr).
m_form(node17_10, jedna).         const(jedna).
m_lemma(node17_10, jeden_1).         const(jeden_1).
m_tag(node17_10, clfs1__________).         const(clfs1__________).
m_tag0(node17_10,'c'). const('c'). m_tag1(node17_10,'l'). const('l'). m_tag2(node17_10,'f'). const('f'). m_tag3(node17_10,'s'). const('s'). m_tag4(node17_10,'1'). const('1'). 
%%%%%%%% node17_11 %%%%%%%%%%%%%%%%%%%
node(node17_11).
a_afun(node17_11, sb).         const(sb).
m_form(node17_11, osoba).         const(osoba).
m_lemma(node17_11, osoba).         const(osoba).
m_tag(node17_11, nnfs1_____a____).         const(nnfs1_____a____).
m_tag0(node17_11,'n'). const('n'). m_tag1(node17_11,'n'). const('n'). m_tag2(node17_11,'f'). const('f'). m_tag3(node17_11,'s'). const('s'). m_tag4(node17_11,'1'). const('1'). m_tag10(node17_11,'a'). const('a'). 
edge(node17_0, node17_1).
edge(node17_1, node17_2).
edge(node17_1, node17_3).
edge(node17_3, node17_4).
edge(node17_3, node17_5).
edge(node17_1, node17_6).
edge(node17_1, node17_7).
edge(node17_1, node17_8).
edge(node17_8, node17_9).
edge(node17_9, node17_10).
edge(node17_8, node17_11).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% nikdo nebyl zranen. 
tree_root(node18_0).
%%%%%%%% node18_0 %%%%%%%%%%%%%%%%%%%
node(node18_0).
id(node18_0, t_plzensky72261_txt_001_p15s5).         const(t_plzensky72261_txt_001_p15s5).
%%%%%%%% node18_1 %%%%%%%%%%%%%%%%%%%
node(node18_1).
functor(node18_1, pred).         const(pred).
gram_sempos(node18_1, v).         const(v).
id(node18_1, t_plzensky72261_txt_001_p15s5a1).         const(t_plzensky72261_txt_001_p15s5a1).
t_lemma(node18_1, zranit).         const(zranit).
%%%%%%%% node18_2 %%%%%%%%%%%%%%%%%%%
node(node18_2).
functor(node18_2, act).         const(act).
id(node18_2, t_plzensky72261_txt_001_p15s5a3).         const(t_plzensky72261_txt_001_p15s5a3).
t_lemma(node18_2, x_gen).         const(x_gen).
%%%%%%%% node18_3 %%%%%%%%%%%%%%%%%%%
node(node18_3).
functor(node18_3, pat).         const(pat).
gram_sempos(node18_3, n_pron_indef).         const(n_pron_indef).
id(node18_3, t_plzensky72261_txt_001_p15s5a2).         const(t_plzensky72261_txt_001_p15s5a2).
t_lemma(node18_3, kdo).         const(kdo).
%%%%%%%% node18_4 %%%%%%%%%%%%%%%%%%%
node(node18_4).
a_afun(node18_4, sb).         const(sb).
m_form(node18_4, nikdo).         const(nikdo).
m_lemma(node18_4, nikdo).         const(nikdo).
m_tag(node18_4, pwm_1__________).         const(pwm_1__________).
m_tag0(node18_4,'p'). const('p'). m_tag1(node18_4,'w'). const('w'). m_tag2(node18_4,'m'). const('m'). m_tag4(node18_4,'1'). const('1'). 
%%%%%%%% node18_5 %%%%%%%%%%%%%%%%%%%
node(node18_5).
a_afun(node18_5, auxv).         const(auxv).
m_form(node18_5, nebyl).         const(nebyl).
m_lemma(node18_5, byt).         const(byt).
m_tag(node18_5, vpys___xr_na___).         const(vpys___xr_na___).
m_tag0(node18_5,'v'). const('v'). m_tag1(node18_5,'p'). const('p'). m_tag2(node18_5,'y'). const('y'). m_tag3(node18_5,'s'). const('s'). m_tag7(node18_5,'x'). const('x'). m_tag8(node18_5,'r'). const('r'). m_tag10(node18_5,'n'). const('n'). m_tag11(node18_5,'a'). const('a'). 
%%%%%%%% node18_6 %%%%%%%%%%%%%%%%%%%
node(node18_6).
a_afun(node18_6, pred).         const(pred).
m_form(node18_6, zranen).         const(zranen).
m_lemma(node18_6, zranit__w).         const(zranit__w).
m_tag(node18_6, vsys___xx_ap___).         const(vsys___xx_ap___).
m_tag0(node18_6,'v'). const('v'). m_tag1(node18_6,'s'). const('s'). m_tag2(node18_6,'y'). const('y'). m_tag3(node18_6,'s'). const('s'). m_tag7(node18_6,'x'). const('x'). m_tag8(node18_6,'x'). const('x'). m_tag10(node18_6,'a'). const('a'). m_tag11(node18_6,'p'). const('p'). 
edge(node18_0, node18_1).
edge(node18_1, node18_2).
edge(node18_1, node18_3).
edge(node18_3, node18_4).
edge(node18_1, node18_5).
edge(node18_1, node18_6).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% z peti zranenych osob byly dve osoby zraneny tezce a tri lehce. 
tree_root(node19_0).
%%%%%%%% node19_0 %%%%%%%%%%%%%%%%%%%
node(node19_0).
id(node19_0, t_plzensky71760_txt_001_p2s7).         const(t_plzensky71760_txt_001_p2s7).
%%%%%%%% node19_1 %%%%%%%%%%%%%%%%%%%
node(node19_1).
functor(node19_1, conj).         const(conj).
id(node19_1, t_plzensky71760_txt_001_p2s7a1).         const(t_plzensky71760_txt_001_p2s7a1).
t_lemma(node19_1, a).         const(a).
%%%%%%%% node19_2 %%%%%%%%%%%%%%%%%%%
node(node19_2).
functor(node19_2, pred).         const(pred).
gram_sempos(node19_2, v).         const(v).
id(node19_2, t_plzensky71760_txt_001_p2s7a2).         const(t_plzensky71760_txt_001_p2s7a2).
t_lemma(node19_2, zranit).         const(zranit).
%%%%%%%% node19_3 %%%%%%%%%%%%%%%%%%%
node(node19_3).
functor(node19_3, act).         const(act).
id(node19_3, t_plzensky71760_txt_001_p2s7a13).         const(t_plzensky71760_txt_001_p2s7a13).
t_lemma(node19_3, x_gen).         const(x_gen).
%%%%%%%% node19_4 %%%%%%%%%%%%%%%%%%%
node(node19_4).
functor(node19_4, dir1).         const(dir1).
gram_sempos(node19_4, n_denot).         const(n_denot).
id(node19_4, t_plzensky71760_txt_001_p2s7a4).         const(t_plzensky71760_txt_001_p2s7a4).
t_lemma(node19_4, osoba).         const(osoba).
%%%%%%%% node19_5 %%%%%%%%%%%%%%%%%%%
node(node19_5).
functor(node19_5, rstr).         const(rstr).
gram_sempos(node19_5, adj_quant_def).         const(adj_quant_def).
id(node19_5, t_plzensky71760_txt_001_p2s7a5).         const(t_plzensky71760_txt_001_p2s7a5).
t_lemma(node19_5, pet).         const(pet).
%%%%%%%% node19_6 %%%%%%%%%%%%%%%%%%%
node(node19_6).
a_afun(node19_6, atr).         const(atr).
m_form(node19_6, peti).         const(peti).
m_lemma(node19_6, pet_1_5).         const(pet_1_5).
m_tag(node19_6, cn_p2__________).         const(cn_p2__________).
m_tag0(node19_6,'c'). const('c'). m_tag1(node19_6,'n'). const('n'). m_tag3(node19_6,'p'). const('p'). m_tag4(node19_6,'2'). const('2'). 
%%%%%%%% node19_7 %%%%%%%%%%%%%%%%%%%
node(node19_7).
functor(node19_7, rstr).         const(rstr).
gram_sempos(node19_7, adj_denot).         const(adj_denot).
id(node19_7, t_plzensky71760_txt_001_p2s7a6).         const(t_plzensky71760_txt_001_p2s7a6).
t_lemma(node19_7, zraneny).         const(zraneny).
%%%%%%%% node19_8 %%%%%%%%%%%%%%%%%%%
node(node19_8).
a_afun(node19_8, atr).         const(atr).
m_form(node19_8, zranenych).         const(zranenych).
m_lemma(node19_8, zraneny____3it_).         const(zraneny____3it_).
m_tag(node19_8, aafp2____1a____).         const(aafp2____1a____).
m_tag0(node19_8,'a'). const('a'). m_tag1(node19_8,'a'). const('a'). m_tag2(node19_8,'f'). const('f'). m_tag3(node19_8,'p'). const('p'). m_tag4(node19_8,'2'). const('2'). m_tag9(node19_8,'1'). const('1'). m_tag10(node19_8,'a'). const('a'). 
%%%%%%%% node19_9 %%%%%%%%%%%%%%%%%%%
node(node19_9).
a_afun(node19_9, auxp).         const(auxp).
m_form(node19_9, z).         const(z).
m_lemma(node19_9, z_1).         const(z_1).
m_tag(node19_9, rr__2__________).         const(rr__2__________).
m_tag0(node19_9,'r'). const('r'). m_tag1(node19_9,'r'). const('r'). m_tag4(node19_9,'2'). const('2'). 
%%%%%%%% node19_10 %%%%%%%%%%%%%%%%%%%
node(node19_10).
a_afun(node19_10, adv).         const(adv).
m_form(node19_10, osob).         const(osob).
m_lemma(node19_10, osoba).         const(osoba).
m_tag(node19_10, nnfp2_____a____).         const(nnfp2_____a____).
m_tag0(node19_10,'n'). const('n'). m_tag1(node19_10,'n'). const('n'). m_tag2(node19_10,'f'). const('f'). m_tag3(node19_10,'p'). const('p'). m_tag4(node19_10,'2'). const('2'). m_tag10(node19_10,'a'). const('a'). 
%%%%%%%% node19_11 %%%%%%%%%%%%%%%%%%%
node(node19_11).
functor(node19_11, pat).         const(pat).
gram_sempos(node19_11, n_denot).         const(n_denot).
id(node19_11, t_plzensky71760_txt_001_p2s7a8).         const(t_plzensky71760_txt_001_p2s7a8).
t_lemma(node19_11, osoba).         const(osoba).
%%%%%%%% node19_12 %%%%%%%%%%%%%%%%%%%
node(node19_12).
functor(node19_12, rstr).         const(rstr).
gram_sempos(node19_12, adj_quant_def).         const(adj_quant_def).
id(node19_12, t_plzensky71760_txt_001_p2s7a9).         const(t_plzensky71760_txt_001_p2s7a9).
t_lemma(node19_12, dva).         const(dva).
%%%%%%%% node19_13 %%%%%%%%%%%%%%%%%%%
node(node19_13).
a_afun(node19_13, atr).         const(atr).
m_form(node19_13, dve).         const(dve).
m_lemma(node19_13, dva_2).         const(dva_2).
m_tag(node19_13, clhp1__________).         const(clhp1__________).
m_tag0(node19_13,'c'). const('c'). m_tag1(node19_13,'l'). const('l'). m_tag2(node19_13,'h'). const('h'). m_tag3(node19_13,'p'). const('p'). m_tag4(node19_13,'1'). const('1'). 
%%%%%%%% node19_14 %%%%%%%%%%%%%%%%%%%
node(node19_14).
a_afun(node19_14, sb).         const(sb).
m_form(node19_14, osoby).         const(osoby).
m_lemma(node19_14, osoba).         const(osoba).
m_tag(node19_14, nnfp1_____a____).         const(nnfp1_____a____).
m_tag0(node19_14,'n'). const('n'). m_tag1(node19_14,'n'). const('n'). m_tag2(node19_14,'f'). const('f'). m_tag3(node19_14,'p'). const('p'). m_tag4(node19_14,'1'). const('1'). m_tag10(node19_14,'a'). const('a'). 
%%%%%%%% node19_15 %%%%%%%%%%%%%%%%%%%
node(node19_15).
a_afun(node19_15, auxv).         const(auxv).
m_form(node19_15, byly).         const(byly).
m_lemma(node19_15, byt).         const(byt).
m_tag(node19_15, vptp___xr_aa___).         const(vptp___xr_aa___).
m_tag0(node19_15,'v'). const('v'). m_tag1(node19_15,'p'). const('p'). m_tag2(node19_15,'t'). const('t'). m_tag3(node19_15,'p'). const('p'). m_tag7(node19_15,'x'). const('x'). m_tag8(node19_15,'r'). const('r'). m_tag10(node19_15,'a'). const('a'). m_tag11(node19_15,'a'). const('a'). 
%%%%%%%% node19_16 %%%%%%%%%%%%%%%%%%%
node(node19_16).
a_afun(node19_16, pred).         const(pred).
m_form(node19_16, zraneny).         const(zraneny).
m_lemma(node19_16, zranit__w).         const(zranit__w).
m_tag(node19_16, vstp___xx_ap___).         const(vstp___xx_ap___).
m_tag0(node19_16,'v'). const('v'). m_tag1(node19_16,'s'). const('s'). m_tag2(node19_16,'t'). const('t'). m_tag3(node19_16,'p'). const('p'). m_tag7(node19_16,'x'). const('x'). m_tag8(node19_16,'x'). const('x'). m_tag10(node19_16,'a'). const('a'). m_tag11(node19_16,'p'). const('p'). 
%%%%%%%% node19_17 %%%%%%%%%%%%%%%%%%%
node(node19_17).
functor(node19_17, mann).         const(mann).
gram_sempos(node19_17, adj_denot).         const(adj_denot).
id(node19_17, t_plzensky71760_txt_001_p2s7a10).         const(t_plzensky71760_txt_001_p2s7a10).
t_lemma(node19_17, tezky).         const(tezky).
%%%%%%%% node19_18 %%%%%%%%%%%%%%%%%%%
node(node19_18).
a_afun(node19_18, adv).         const(adv).
m_form(node19_18, tezce).         const(tezce).
m_lemma(node19_18, tezce).         const(tezce).
m_tag(node19_18, dg_______1a____).         const(dg_______1a____).
m_tag0(node19_18,'d'). const('d'). m_tag1(node19_18,'g'). const('g'). m_tag9(node19_18,'1'). const('1'). m_tag10(node19_18,'a'). const('a'). 
%%%%%%%% node19_19 %%%%%%%%%%%%%%%%%%%
node(node19_19).
a_afun(node19_19, coord).         const(coord).
m_form(node19_19, a).         const(a).
m_lemma(node19_19, a_1).         const(a_1).
m_tag(node19_19, j______________).         const(j______________).
m_tag0(node19_19,'j'). const('j'). m_tag1(node19_19,'^'). const('^'). 
%%%%%%%% node19_20 %%%%%%%%%%%%%%%%%%%
node(node19_20).
functor(node19_20, rstr).         const(rstr).
gram_sempos(node19_20, adj_quant_def).         const(adj_quant_def).
id(node19_20, t_plzensky71760_txt_001_p2s7a11).         const(t_plzensky71760_txt_001_p2s7a11).
t_lemma(node19_20, tri).         const(tri).
%%%%%%%% node19_21 %%%%%%%%%%%%%%%%%%%
node(node19_21).
a_afun(node19_21, exd).         const(exd).
m_form(node19_21, tri).         const(tri).
m_lemma(node19_21, tri_3).         const(tri_3).
m_tag(node19_21, clxp1__________).         const(clxp1__________).
m_tag0(node19_21,'c'). const('c'). m_tag1(node19_21,'l'). const('l'). m_tag2(node19_21,'x'). const('x'). m_tag3(node19_21,'p'). const('p'). m_tag4(node19_21,'1'). const('1'). 
%%%%%%%% node19_22 %%%%%%%%%%%%%%%%%%%
node(node19_22).
functor(node19_22, twhen).         const(twhen).
gram_sempos(node19_22, adj_denot).         const(adj_denot).
id(node19_22, t_plzensky71760_txt_001_p2s7a12).         const(t_plzensky71760_txt_001_p2s7a12).
t_lemma(node19_22, lehky).         const(lehky).
%%%%%%%% node19_23 %%%%%%%%%%%%%%%%%%%
node(node19_23).
a_afun(node19_23, exd).         const(exd).
m_form(node19_23, lehce).         const(lehce).
m_lemma(node19_23, lehce).         const(lehce).
m_tag(node19_23, dg_______1a____).         const(dg_______1a____).
m_tag0(node19_23,'d'). const('d'). m_tag1(node19_23,'g'). const('g'). m_tag9(node19_23,'1'). const('1'). m_tag10(node19_23,'a'). const('a'). 
edge(node19_0, node19_1).
edge(node19_1, node19_2).
edge(node19_2, node19_3).
edge(node19_2, node19_4).
edge(node19_4, node19_5).
edge(node19_5, node19_6).
edge(node19_4, node19_7).
edge(node19_7, node19_8).
edge(node19_4, node19_9).
edge(node19_4, node19_10).
edge(node19_2, node19_11).
edge(node19_11, node19_12).
edge(node19_12, node19_13).
edge(node19_11, node19_14).
edge(node19_2, node19_15).
edge(node19_2, node19_16).
edge(node19_2, node19_17).
edge(node19_17, node19_18).
edge(node19_1, node19_19).
edge(node19_1, node19_20).
edge(node19_20, node19_21).
edge(node19_1, node19_22).
edge(node19_22, node19_23).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% pri pozarech od pocatku roku byly dve osoby usmrceny a sestnact osob zraneno. 
tree_root(node20_0).
%%%%%%%% node20_0 %%%%%%%%%%%%%%%%%%%
node(node20_0).
id(node20_0, t_plzensky48663_txt_001_p2s2).         const(t_plzensky48663_txt_001_p2s2).
%%%%%%%% node20_1 %%%%%%%%%%%%%%%%%%%
node(node20_1).
functor(node20_1, conj).         const(conj).
id(node20_1, t_plzensky48663_txt_001_p2s2a1).         const(t_plzensky48663_txt_001_p2s2a1).
t_lemma(node20_1, a).         const(a).
%%%%%%%% node20_2 %%%%%%%%%%%%%%%%%%%
node(node20_2).
functor(node20_2, twhen).         const(twhen).
gram_sempos(node20_2, n_denot).         const(n_denot).
id(node20_2, t_plzensky48663_txt_001_p2s2a3).         const(t_plzensky48663_txt_001_p2s2a3).
t_lemma(node20_2, pozar).         const(pozar).
%%%%%%%% node20_3 %%%%%%%%%%%%%%%%%%%
node(node20_3).
a_afun(node20_3, auxp).         const(auxp).
m_form(node20_3, pri).         const(pri).
m_lemma(node20_3, pri_1).         const(pri_1).
m_tag(node20_3, rr__6__________).         const(rr__6__________).
m_tag0(node20_3,'r'). const('r'). m_tag1(node20_3,'r'). const('r'). m_tag4(node20_3,'6'). const('6'). 
%%%%%%%% node20_4 %%%%%%%%%%%%%%%%%%%
node(node20_4).
a_afun(node20_4, exd).         const(exd).
m_form(node20_4, pozarech).         const(pozarech).
m_lemma(node20_4, pozar).         const(pozar).
m_tag(node20_4, nnip6_____a____).         const(nnip6_____a____).
m_tag0(node20_4,'n'). const('n'). m_tag1(node20_4,'n'). const('n'). m_tag2(node20_4,'i'). const('i'). m_tag3(node20_4,'p'). const('p'). m_tag4(node20_4,'6'). const('6'). m_tag10(node20_4,'a'). const('a'). 
%%%%%%%% node20_5 %%%%%%%%%%%%%%%%%%%
node(node20_5).
functor(node20_5, tsin).         const(tsin).
gram_sempos(node20_5, n_denot).         const(n_denot).
id(node20_5, t_plzensky48663_txt_001_p2s2a5).         const(t_plzensky48663_txt_001_p2s2a5).
t_lemma(node20_5, pocatek).         const(pocatek).
%%%%%%%% node20_6 %%%%%%%%%%%%%%%%%%%
node(node20_6).
a_afun(node20_6, auxp).         const(auxp).
m_form(node20_6, od).         const(od).
m_lemma(node20_6, od_1).         const(od_1).
m_tag(node20_6, rr__2__________).         const(rr__2__________).
m_tag0(node20_6,'r'). const('r'). m_tag1(node20_6,'r'). const('r'). m_tag4(node20_6,'2'). const('2'). 
%%%%%%%% node20_7 %%%%%%%%%%%%%%%%%%%
node(node20_7).
a_afun(node20_7, exd).         const(exd).
m_form(node20_7, pocatku).         const(pocatku).
m_lemma(node20_7, pocatek).         const(pocatek).
m_tag(node20_7, nnis2_____a____).         const(nnis2_____a____).
m_tag0(node20_7,'n'). const('n'). m_tag1(node20_7,'n'). const('n'). m_tag2(node20_7,'i'). const('i'). m_tag3(node20_7,'s'). const('s'). m_tag4(node20_7,'2'). const('2'). m_tag10(node20_7,'a'). const('a'). 
%%%%%%%% node20_8 %%%%%%%%%%%%%%%%%%%
node(node20_8).
functor(node20_8, app).         const(app).
gram_sempos(node20_8, n_denot).         const(n_denot).
id(node20_8, t_plzensky48663_txt_001_p2s2a6).         const(t_plzensky48663_txt_001_p2s2a6).
t_lemma(node20_8, rok).         const(rok).
%%%%%%%% node20_9 %%%%%%%%%%%%%%%%%%%
node(node20_9).
a_afun(node20_9, atr).         const(atr).
m_form(node20_9, roku).         const(roku).
m_lemma(node20_9, rok).         const(rok).
m_tag(node20_9, nnis2_____a___1).         const(nnis2_____a___1).
m_tag0(node20_9,'n'). const('n'). m_tag1(node20_9,'n'). const('n'). m_tag2(node20_9,'i'). const('i'). m_tag3(node20_9,'s'). const('s'). m_tag4(node20_9,'2'). const('2'). m_tag10(node20_9,'a'). const('a'). m_tag14(node20_9,'1'). const('1'). 
%%%%%%%% node20_10 %%%%%%%%%%%%%%%%%%%
node(node20_10).
functor(node20_10, pred).         const(pred).
gram_sempos(node20_10, v).         const(v).
id(node20_10, t_plzensky48663_txt_001_p2s2a7).         const(t_plzensky48663_txt_001_p2s2a7).
t_lemma(node20_10, byt).         const(byt).
%%%%%%%% node20_11 %%%%%%%%%%%%%%%%%%%
node(node20_11).
a_afun(node20_11, pred).         const(pred).
m_form(node20_11, byly).         const(byly).
m_lemma(node20_11, byt).         const(byt).
m_tag(node20_11, vptp___xr_aa___).         const(vptp___xr_aa___).
m_tag0(node20_11,'v'). const('v'). m_tag1(node20_11,'p'). const('p'). m_tag2(node20_11,'t'). const('t'). m_tag3(node20_11,'p'). const('p'). m_tag7(node20_11,'x'). const('x'). m_tag8(node20_11,'r'). const('r'). m_tag10(node20_11,'a'). const('a'). m_tag11(node20_11,'a'). const('a'). 
%%%%%%%% node20_12 %%%%%%%%%%%%%%%%%%%
node(node20_12).
functor(node20_12, act).         const(act).
gram_sempos(node20_12, n_denot).         const(n_denot).
id(node20_12, t_plzensky48663_txt_001_p2s2a8).         const(t_plzensky48663_txt_001_p2s2a8).
t_lemma(node20_12, osoba).         const(osoba).
%%%%%%%% node20_13 %%%%%%%%%%%%%%%%%%%
node(node20_13).
functor(node20_13, rstr).         const(rstr).
gram_sempos(node20_13, adj_quant_def).         const(adj_quant_def).
id(node20_13, t_plzensky48663_txt_001_p2s2a9).         const(t_plzensky48663_txt_001_p2s2a9).
t_lemma(node20_13, dva).         const(dva).
%%%%%%%% node20_14 %%%%%%%%%%%%%%%%%%%
node(node20_14).
a_afun(node20_14, atr).         const(atr).
m_form(node20_14, dve).         const(dve).
m_lemma(node20_14, dva_2).         const(dva_2).
m_tag(node20_14, clhp1__________).         const(clhp1__________).
m_tag0(node20_14,'c'). const('c'). m_tag1(node20_14,'l'). const('l'). m_tag2(node20_14,'h'). const('h'). m_tag3(node20_14,'p'). const('p'). m_tag4(node20_14,'1'). const('1'). 
%%%%%%%% node20_15 %%%%%%%%%%%%%%%%%%%
node(node20_15).
a_afun(node20_15, sb).         const(sb).
m_form(node20_15, osoby).         const(osoby).
m_lemma(node20_15, osoba).         const(osoba).
m_tag(node20_15, nnfp1_____a____).         const(nnfp1_____a____).
m_tag0(node20_15,'n'). const('n'). m_tag1(node20_15,'n'). const('n'). m_tag2(node20_15,'f'). const('f'). m_tag3(node20_15,'p'). const('p'). m_tag4(node20_15,'1'). const('1'). m_tag10(node20_15,'a'). const('a'). 
%%%%%%%% node20_16 %%%%%%%%%%%%%%%%%%%
node(node20_16).
functor(node20_16, pred).         const(pred).
gram_sempos(node20_16, v).         const(v).
id(node20_16, t_plzensky48663_txt_001_p2s2a10).         const(t_plzensky48663_txt_001_p2s2a10).
t_lemma(node20_16, usmrtit).         const(usmrtit).
%%%%%%%% node20_17 %%%%%%%%%%%%%%%%%%%
node(node20_17).
functor(node20_17, pat).         const(pat).
gram_sempos(node20_17, n_pron_def_pers).         const(n_pron_def_pers).
id(node20_17, t_plzensky48663_txt_001_p2s2a14).         const(t_plzensky48663_txt_001_p2s2a14).
t_lemma(node20_17, x_cor).         const(x_cor).
%%%%%%%% node20_18 %%%%%%%%%%%%%%%%%%%
node(node20_18).
a_afun(node20_18, pred).         const(pred).
m_form(node20_18, usmrceny).         const(usmrceny).
m_lemma(node20_18, usmrtit__w).         const(usmrtit__w).
m_tag(node20_18, vstp___xx_ap___).         const(vstp___xx_ap___).
m_tag0(node20_18,'v'). const('v'). m_tag1(node20_18,'s'). const('s'). m_tag2(node20_18,'t'). const('t'). m_tag3(node20_18,'p'). const('p'). m_tag7(node20_18,'x'). const('x'). m_tag8(node20_18,'x'). const('x'). m_tag10(node20_18,'a'). const('a'). m_tag11(node20_18,'p'). const('p'). 
%%%%%%%% node20_19 %%%%%%%%%%%%%%%%%%%
node(node20_19).
a_afun(node20_19, coord).         const(coord).
m_form(node20_19, a).         const(a).
m_lemma(node20_19, a_1).         const(a_1).
m_tag(node20_19, j______________).         const(j______________).
m_tag0(node20_19,'j'). const('j'). m_tag1(node20_19,'^'). const('^'). 
%%%%%%%% node20_20 %%%%%%%%%%%%%%%%%%%
node(node20_20).
functor(node20_20, pred).         const(pred).
gram_sempos(node20_20, v).         const(v).
id(node20_20, t_plzensky48663_txt_001_p2s2a11).         const(t_plzensky48663_txt_001_p2s2a11).
t_lemma(node20_20, zranit).         const(zranit).
%%%%%%%% node20_21 %%%%%%%%%%%%%%%%%%%
node(node20_21).
functor(node20_21, pat).         const(pat).
gram_sempos(node20_21, adj_quant_def).         const(adj_quant_def).
id(node20_21, t_plzensky48663_txt_001_p2s2a12).         const(t_plzensky48663_txt_001_p2s2a12).
t_lemma(node20_21, sestnact).         const(sestnact).
%%%%%%%% node20_22 %%%%%%%%%%%%%%%%%%%
node(node20_22).
a_afun(node20_22, sb).         const(sb).
m_form(node20_22, sestnact).         const(sestnact).
m_lemma(node20_22, sestnact_16).         const(sestnact_16).
m_tag(node20_22, cn_s1__________).         const(cn_s1__________).
m_tag0(node20_22,'c'). const('c'). m_tag1(node20_22,'n'). const('n'). m_tag3(node20_22,'s'). const('s'). m_tag4(node20_22,'1'). const('1'). 
%%%%%%%% node20_23 %%%%%%%%%%%%%%%%%%%
node(node20_23).
functor(node20_23, act).         const(act).
gram_sempos(node20_23, n_denot).         const(n_denot).
id(node20_23, t_plzensky48663_txt_001_p2s2a13).         const(t_plzensky48663_txt_001_p2s2a13).
t_lemma(node20_23, osoba).         const(osoba).
%%%%%%%% node20_24 %%%%%%%%%%%%%%%%%%%
node(node20_24).
a_afun(node20_24, atr).         const(atr).
m_form(node20_24, osob).         const(osob).
m_lemma(node20_24, osoba).         const(osoba).
m_tag(node20_24, nnfp2_____a____).         const(nnfp2_____a____).
m_tag0(node20_24,'n'). const('n'). m_tag1(node20_24,'n'). const('n'). m_tag2(node20_24,'f'). const('f'). m_tag3(node20_24,'p'). const('p'). m_tag4(node20_24,'2'). const('2'). m_tag10(node20_24,'a'). const('a'). 
%%%%%%%% node20_25 %%%%%%%%%%%%%%%%%%%
node(node20_25).
a_afun(node20_25, pred).         const(pred).
m_form(node20_25, zraneno).         const(zraneno).
m_lemma(node20_25, zranit__w).         const(zranit__w).
m_tag(node20_25, vsns___xx_ap___).         const(vsns___xx_ap___).
m_tag0(node20_25,'v'). const('v'). m_tag1(node20_25,'s'). const('s'). m_tag2(node20_25,'n'). const('n'). m_tag3(node20_25,'s'). const('s'). m_tag7(node20_25,'x'). const('x'). m_tag8(node20_25,'x'). const('x'). m_tag10(node20_25,'a'). const('a'). m_tag11(node20_25,'p'). const('p'). 
edge(node20_0, node20_1).
edge(node20_1, node20_2).
edge(node20_2, node20_3).
edge(node20_2, node20_4).
edge(node20_1, node20_5).
edge(node20_5, node20_6).
edge(node20_5, node20_7).
edge(node20_5, node20_8).
edge(node20_8, node20_9).
edge(node20_1, node20_10).
edge(node20_10, node20_11).
edge(node20_1, node20_12).
edge(node20_12, node20_13).
edge(node20_13, node20_14).
edge(node20_12, node20_15).
edge(node20_1, node20_16).
edge(node20_16, node20_17).
edge(node20_16, node20_18).
edge(node20_1, node20_19).
edge(node20_1, node20_20).
edge(node20_20, node20_21).
edge(node20_21, node20_22).
edge(node20_21, node20_23).
edge(node20_23, node20_24).
edge(node20_20, node20_25).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% pri dopravnich nehodach, u kterych hasici zasahovali, bylo usmrceno 333 osob a 4988 osob bylo zraneno. 
tree_root(node21_0).
%%%%%%%% node21_0 %%%%%%%%%%%%%%%%%%%
node(node21_0).
id(node21_0, t_plzensky61718_txt_001_p3s3).         const(t_plzensky61718_txt_001_p3s3).
%%%%%%%% node21_1 %%%%%%%%%%%%%%%%%%%
node(node21_1).
functor(node21_1, conj).         const(conj).
id(node21_1, t_plzensky61718_txt_001_p3s3a1).         const(t_plzensky61718_txt_001_p3s3a1).
t_lemma(node21_1, a).         const(a).
%%%%%%%% node21_2 %%%%%%%%%%%%%%%%%%%
node(node21_2).
functor(node21_2, pat).         const(pat).
gram_sempos(node21_2, n_pron_def_pers).         const(n_pron_def_pers).
id(node21_2, t_plzensky61718_txt_001_p3s3a20).         const(t_plzensky61718_txt_001_p3s3a20).
t_lemma(node21_2, x_perspron).         const(x_perspron).
%%%%%%%% node21_3 %%%%%%%%%%%%%%%%%%%
node(node21_3).
functor(node21_3, pred).         const(pred).
gram_sempos(node21_3, v).         const(v).
id(node21_3, t_plzensky61718_txt_001_p3s3a2).         const(t_plzensky61718_txt_001_p3s3a2).
t_lemma(node21_3, usmrtit).         const(usmrtit).
%%%%%%%% node21_4 %%%%%%%%%%%%%%%%%%%
node(node21_4).
functor(node21_4, twhen).         const(twhen).
gram_sempos(node21_4, n_denot).         const(n_denot).
id(node21_4, t_plzensky61718_txt_001_p3s3a4).         const(t_plzensky61718_txt_001_p3s3a4).
t_lemma(node21_4, nehoda).         const(nehoda).
%%%%%%%% node21_5 %%%%%%%%%%%%%%%%%%%
node(node21_5).
functor(node21_5, rstr).         const(rstr).
gram_sempos(node21_5, adj_denot).         const(adj_denot).
id(node21_5, t_plzensky61718_txt_001_p3s3a5).         const(t_plzensky61718_txt_001_p3s3a5).
t_lemma(node21_5, dopravni).         const(dopravni).
%%%%%%%% node21_6 %%%%%%%%%%%%%%%%%%%
node(node21_6).
a_afun(node21_6, atr).         const(atr).
m_form(node21_6, dopravnich).         const(dopravnich).
m_lemma(node21_6, dopravni).         const(dopravni).
m_tag(node21_6, aafp6____1a____).         const(aafp6____1a____).
m_tag0(node21_6,'a'). const('a'). m_tag1(node21_6,'a'). const('a'). m_tag2(node21_6,'f'). const('f'). m_tag3(node21_6,'p'). const('p'). m_tag4(node21_6,'6'). const('6'). m_tag9(node21_6,'1'). const('1'). m_tag10(node21_6,'a'). const('a'). 
%%%%%%%% node21_7 %%%%%%%%%%%%%%%%%%%
node(node21_7).
a_afun(node21_7, auxp).         const(auxp).
m_form(node21_7, pri).         const(pri).
m_lemma(node21_7, pri_1).         const(pri_1).
m_tag(node21_7, rr__6__________).         const(rr__6__________).
m_tag0(node21_7,'r'). const('r'). m_tag1(node21_7,'r'). const('r'). m_tag4(node21_7,'6'). const('6'). 
%%%%%%%% node21_8 %%%%%%%%%%%%%%%%%%%
node(node21_8).
a_afun(node21_8, adv).         const(adv).
m_form(node21_8, nehodach).         const(nehodach).
m_lemma(node21_8, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node21_8, nnfp6_____a____).         const(nnfp6_____a____).
m_tag0(node21_8,'n'). const('n'). m_tag1(node21_8,'n'). const('n'). m_tag2(node21_8,'f'). const('f'). m_tag3(node21_8,'p'). const('p'). m_tag4(node21_8,'6'). const('6'). m_tag10(node21_8,'a'). const('a'). 
%%%%%%%% node21_9 %%%%%%%%%%%%%%%%%%%
node(node21_9).
functor(node21_9, rstr).         const(rstr).
gram_sempos(node21_9, v).         const(v).
id(node21_9, t_plzensky61718_txt_001_p3s3a6).         const(t_plzensky61718_txt_001_p3s3a6).
t_lemma(node21_9, zasahovat).         const(zasahovat).
%%%%%%%% node21_10 %%%%%%%%%%%%%%%%%%%
node(node21_10).
functor(node21_10, pat).         const(pat).
id(node21_10, t_plzensky61718_txt_001_p3s3a19).         const(t_plzensky61718_txt_001_p3s3a19).
t_lemma(node21_10, x_gen).         const(x_gen).
%%%%%%%% node21_11 %%%%%%%%%%%%%%%%%%%
node(node21_11).
functor(node21_11, loc).         const(loc).
gram_sempos(node21_11, n_pron_indef).         const(n_pron_indef).
id(node21_11, t_plzensky61718_txt_001_p3s3a9).         const(t_plzensky61718_txt_001_p3s3a9).
t_lemma(node21_11, ktery).         const(ktery).
%%%%%%%% node21_12 %%%%%%%%%%%%%%%%%%%
node(node21_12).
a_afun(node21_12, auxp).         const(auxp).
m_form(node21_12, u).         const(u).
m_lemma(node21_12, u_1).         const(u_1).
m_tag(node21_12, rr__2__________).         const(rr__2__________).
m_tag0(node21_12,'r'). const('r'). m_tag1(node21_12,'r'). const('r'). m_tag4(node21_12,'2'). const('2'). 
%%%%%%%% node21_13 %%%%%%%%%%%%%%%%%%%
node(node21_13).
a_afun(node21_13, adv).         const(adv).
m_form(node21_13, kterych).         const(kterych).
m_lemma(node21_13, ktery).         const(ktery).
m_tag(node21_13, p4xp2__________).         const(p4xp2__________).
m_tag0(node21_13,'p'). const('p'). m_tag1(node21_13,'4'). const('4'). m_tag2(node21_13,'x'). const('x'). m_tag3(node21_13,'p'). const('p'). m_tag4(node21_13,'2'). const('2'). 
%%%%%%%% node21_14 %%%%%%%%%%%%%%%%%%%
node(node21_14).
functor(node21_14, act).         const(act).
gram_sempos(node21_14, n_denot).         const(n_denot).
id(node21_14, t_plzensky61718_txt_001_p3s3a10).         const(t_plzensky61718_txt_001_p3s3a10).
t_lemma(node21_14, hasic).         const(hasic).
%%%%%%%% node21_15 %%%%%%%%%%%%%%%%%%%
node(node21_15).
a_afun(node21_15, sb).         const(sb).
m_form(node21_15, hasici).         const(hasici).
m_lemma(node21_15, hasic).         const(hasic).
m_tag(node21_15, nnmp1_____a____).         const(nnmp1_____a____).
m_tag0(node21_15,'n'). const('n'). m_tag1(node21_15,'n'). const('n'). m_tag2(node21_15,'m'). const('m'). m_tag3(node21_15,'p'). const('p'). m_tag4(node21_15,'1'). const('1'). m_tag10(node21_15,'a'). const('a'). 
%%%%%%%% node21_16 %%%%%%%%%%%%%%%%%%%
node(node21_16).
a_afun(node21_16, atr).         const(atr).
m_form(node21_16, zasahovali).         const(zasahovali).
m_lemma(node21_16, zasahovat__t).         const(zasahovat__t).
m_tag(node21_16, vpmp___xr_aa___).         const(vpmp___xr_aa___).
m_tag0(node21_16,'v'). const('v'). m_tag1(node21_16,'p'). const('p'). m_tag2(node21_16,'m'). const('m'). m_tag3(node21_16,'p'). const('p'). m_tag7(node21_16,'x'). const('x'). m_tag8(node21_16,'r'). const('r'). m_tag10(node21_16,'a'). const('a'). m_tag11(node21_16,'a'). const('a'). 
%%%%%%%% node21_17 %%%%%%%%%%%%%%%%%%%
node(node21_17).
a_afun(node21_17, auxv).         const(auxv).
m_form(node21_17, bylo).         const(bylo).
m_lemma(node21_17, byt).         const(byt).
m_tag(node21_17, vpns___xr_aa___).         const(vpns___xr_aa___).
m_tag0(node21_17,'v'). const('v'). m_tag1(node21_17,'p'). const('p'). m_tag2(node21_17,'n'). const('n'). m_tag3(node21_17,'s'). const('s'). m_tag7(node21_17,'x'). const('x'). m_tag8(node21_17,'r'). const('r'). m_tag10(node21_17,'a'). const('a'). m_tag11(node21_17,'a'). const('a'). 
%%%%%%%% node21_18 %%%%%%%%%%%%%%%%%%%
node(node21_18).
a_afun(node21_18, pred).         const(pred).
m_form(node21_18, usmrceno).         const(usmrceno).
m_lemma(node21_18, usmrtit__w).         const(usmrtit__w).
m_tag(node21_18, vsns___xx_ap___).         const(vsns___xx_ap___).
m_tag0(node21_18,'v'). const('v'). m_tag1(node21_18,'s'). const('s'). m_tag2(node21_18,'n'). const('n'). m_tag3(node21_18,'s'). const('s'). m_tag7(node21_18,'x'). const('x'). m_tag8(node21_18,'x'). const('x'). m_tag10(node21_18,'a'). const('a'). m_tag11(node21_18,'p'). const('p'). 
%%%%%%%% node21_19 %%%%%%%%%%%%%%%%%%%
node(node21_19).
functor(node21_19, act).         const(act).
gram_sempos(node21_19, n_denot).         const(n_denot).
id(node21_19, t_plzensky61718_txt_001_p3s3a14).         const(t_plzensky61718_txt_001_p3s3a14).
t_lemma(node21_19, osoba).         const(osoba).
%%%%%%%% node21_20 %%%%%%%%%%%%%%%%%%%
node(node21_20).
functor(node21_20, rstr).         const(rstr).
gram_sempos(node21_20, adj_quant_def).         const(adj_quant_def).
id(node21_20, t_plzensky61718_txt_001_p3s3a13).         const(t_plzensky61718_txt_001_p3s3a13).
t_lemma(node21_20, 333).         const(333).
%%%%%%%% node21_21 %%%%%%%%%%%%%%%%%%%
node(node21_21).
a_afun(node21_21, sb).         const(sb).
m_form(node21_21, 333).         const(333).
m_lemma(node21_21, 333).         const(333).
m_tag(node21_21, c=_____________).         const(c=_____________).
m_tag0(node21_21,'c'). const('c'). m_tag1(node21_21,'='). const('='). 
%%%%%%%% node21_22 %%%%%%%%%%%%%%%%%%%
node(node21_22).
a_afun(node21_22, atr).         const(atr).
m_form(node21_22, osob).         const(osob).
m_lemma(node21_22, osoba).         const(osoba).
m_tag(node21_22, nnfp2_____a____).         const(nnfp2_____a____).
m_tag0(node21_22,'n'). const('n'). m_tag1(node21_22,'n'). const('n'). m_tag2(node21_22,'f'). const('f'). m_tag3(node21_22,'p'). const('p'). m_tag4(node21_22,'2'). const('2'). m_tag10(node21_22,'a'). const('a'). 
%%%%%%%% node21_23 %%%%%%%%%%%%%%%%%%%
node(node21_23).
a_afun(node21_23, coord).         const(coord).
m_form(node21_23, a).         const(a).
m_lemma(node21_23, a_1).         const(a_1).
m_tag(node21_23, j______________).         const(j______________).
m_tag0(node21_23,'j'). const('j'). m_tag1(node21_23,'^'). const('^'). 
%%%%%%%% node21_24 %%%%%%%%%%%%%%%%%%%
node(node21_24).
functor(node21_24, pred).         const(pred).
gram_sempos(node21_24, v).         const(v).
id(node21_24, t_plzensky61718_txt_001_p3s3a15).         const(t_plzensky61718_txt_001_p3s3a15).
t_lemma(node21_24, zranit).         const(zranit).
%%%%%%%% node21_25 %%%%%%%%%%%%%%%%%%%
node(node21_25).
functor(node21_25, act).         const(act).
gram_sempos(node21_25, n_denot).         const(n_denot).
id(node21_25, t_plzensky61718_txt_001_p3s3a17).         const(t_plzensky61718_txt_001_p3s3a17).
t_lemma(node21_25, osoba).         const(osoba).
%%%%%%%% node21_26 %%%%%%%%%%%%%%%%%%%
node(node21_26).
functor(node21_26, rstr).         const(rstr).
gram_sempos(node21_26, adj_quant_def).         const(adj_quant_def).
id(node21_26, t_plzensky61718_txt_001_p3s3a16).         const(t_plzensky61718_txt_001_p3s3a16).
t_lemma(node21_26, 4988).         const(4988).
%%%%%%%% node21_27 %%%%%%%%%%%%%%%%%%%
node(node21_27).
a_afun(node21_27, sb).         const(sb).
m_form(node21_27, 4988).         const(4988).
m_lemma(node21_27, 4988).         const(4988).
m_tag(node21_27, c=_____________).         const(c=_____________).
m_tag0(node21_27,'c'). const('c'). m_tag1(node21_27,'='). const('='). 
%%%%%%%% node21_28 %%%%%%%%%%%%%%%%%%%
node(node21_28).
a_afun(node21_28, atr).         const(atr).
m_form(node21_28, osob).         const(osob).
m_lemma(node21_28, osoba).         const(osoba).
m_tag(node21_28, nnfp2_____a____).         const(nnfp2_____a____).
m_tag0(node21_28,'n'). const('n'). m_tag1(node21_28,'n'). const('n'). m_tag2(node21_28,'f'). const('f'). m_tag3(node21_28,'p'). const('p'). m_tag4(node21_28,'2'). const('2'). m_tag10(node21_28,'a'). const('a'). 
%%%%%%%% node21_29 %%%%%%%%%%%%%%%%%%%
node(node21_29).
a_afun(node21_29, auxv).         const(auxv).
m_form(node21_29, bylo).         const(bylo).
m_lemma(node21_29, byt).         const(byt).
m_tag(node21_29, vpns___xr_aa___).         const(vpns___xr_aa___).
m_tag0(node21_29,'v'). const('v'). m_tag1(node21_29,'p'). const('p'). m_tag2(node21_29,'n'). const('n'). m_tag3(node21_29,'s'). const('s'). m_tag7(node21_29,'x'). const('x'). m_tag8(node21_29,'r'). const('r'). m_tag10(node21_29,'a'). const('a'). m_tag11(node21_29,'a'). const('a'). 
%%%%%%%% node21_30 %%%%%%%%%%%%%%%%%%%
node(node21_30).
a_afun(node21_30, pred).         const(pred).
m_form(node21_30, zraneno).         const(zraneno).
m_lemma(node21_30, zranit__w).         const(zranit__w).
m_tag(node21_30, vsns___xx_ap___).         const(vsns___xx_ap___).
m_tag0(node21_30,'v'). const('v'). m_tag1(node21_30,'s'). const('s'). m_tag2(node21_30,'n'). const('n'). m_tag3(node21_30,'s'). const('s'). m_tag7(node21_30,'x'). const('x'). m_tag8(node21_30,'x'). const('x'). m_tag10(node21_30,'a'). const('a'). m_tag11(node21_30,'p'). const('p'). 
edge(node21_0, node21_1).
edge(node21_1, node21_2).
edge(node21_1, node21_3).
edge(node21_3, node21_4).
edge(node21_4, node21_5).
edge(node21_5, node21_6).
edge(node21_4, node21_7).
edge(node21_4, node21_8).
edge(node21_4, node21_9).
edge(node21_9, node21_10).
edge(node21_9, node21_11).
edge(node21_11, node21_12).
edge(node21_11, node21_13).
edge(node21_9, node21_14).
edge(node21_14, node21_15).
edge(node21_9, node21_16).
edge(node21_3, node21_17).
edge(node21_3, node21_18).
edge(node21_3, node21_19).
edge(node21_19, node21_20).
edge(node21_20, node21_21).
edge(node21_19, node21_22).
edge(node21_1, node21_23).
edge(node21_1, node21_24).
edge(node21_24, node21_25).
edge(node21_25, node21_26).
edge(node21_26, node21_27).
edge(node21_25, node21_28).
edge(node21_24, node21_29).
edge(node21_24, node21_30).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% pri nehode byly zraneny dve dospele osoby a dve deti z automobilu. 
tree_root(node22_0).
%%%%%%%% node22_0 %%%%%%%%%%%%%%%%%%%
node(node22_0).
id(node22_0, t_plzensky56858_txt_001_p3s3).         const(t_plzensky56858_txt_001_p3s3).
%%%%%%%% node22_1 %%%%%%%%%%%%%%%%%%%
node(node22_1).
functor(node22_1, pred).         const(pred).
gram_sempos(node22_1, v).         const(v).
id(node22_1, t_plzensky56858_txt_001_p3s3a1).         const(t_plzensky56858_txt_001_p3s3a1).
t_lemma(node22_1, zranit).         const(zranit).
%%%%%%%% node22_2 %%%%%%%%%%%%%%%%%%%
node(node22_2).
functor(node22_2, act).         const(act).
id(node22_2, t_plzensky56858_txt_001_p3s3a13).         const(t_plzensky56858_txt_001_p3s3a13).
t_lemma(node22_2, x_gen).         const(x_gen).
%%%%%%%% node22_3 %%%%%%%%%%%%%%%%%%%
node(node22_3).
functor(node22_3, twhen).         const(twhen).
gram_sempos(node22_3, n_denot).         const(n_denot).
id(node22_3, t_plzensky56858_txt_001_p3s3a3).         const(t_plzensky56858_txt_001_p3s3a3).
t_lemma(node22_3, nehoda).         const(nehoda).
%%%%%%%% node22_4 %%%%%%%%%%%%%%%%%%%
node(node22_4).
a_afun(node22_4, auxp).         const(auxp).
m_form(node22_4, pri).         const(pri).
m_lemma(node22_4, pri_1).         const(pri_1).
m_tag(node22_4, rr__6__________).         const(rr__6__________).
m_tag0(node22_4,'r'). const('r'). m_tag1(node22_4,'r'). const('r'). m_tag4(node22_4,'6'). const('6'). 
%%%%%%%% node22_5 %%%%%%%%%%%%%%%%%%%
node(node22_5).
a_afun(node22_5, adv).         const(adv).
m_form(node22_5, nehode).         const(nehode).
m_lemma(node22_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node22_5, nnfs6_____a____).         const(nnfs6_____a____).
m_tag0(node22_5,'n'). const('n'). m_tag1(node22_5,'n'). const('n'). m_tag2(node22_5,'f'). const('f'). m_tag3(node22_5,'s'). const('s'). m_tag4(node22_5,'6'). const('6'). m_tag10(node22_5,'a'). const('a'). 
%%%%%%%% node22_6 %%%%%%%%%%%%%%%%%%%
node(node22_6).
a_afun(node22_6, auxv).         const(auxv).
m_form(node22_6, byly).         const(byly).
m_lemma(node22_6, byt).         const(byt).
m_tag(node22_6, vptp___xr_aa___).         const(vptp___xr_aa___).
m_tag0(node22_6,'v'). const('v'). m_tag1(node22_6,'p'). const('p'). m_tag2(node22_6,'t'). const('t'). m_tag3(node22_6,'p'). const('p'). m_tag7(node22_6,'x'). const('x'). m_tag8(node22_6,'r'). const('r'). m_tag10(node22_6,'a'). const('a'). m_tag11(node22_6,'a'). const('a'). 
%%%%%%%% node22_7 %%%%%%%%%%%%%%%%%%%
node(node22_7).
a_afun(node22_7, pred).         const(pred).
m_form(node22_7, zraneny).         const(zraneny).
m_lemma(node22_7, zranit__w).         const(zranit__w).
m_tag(node22_7, vstp___xx_ap___).         const(vstp___xx_ap___).
m_tag0(node22_7,'v'). const('v'). m_tag1(node22_7,'s'). const('s'). m_tag2(node22_7,'t'). const('t'). m_tag3(node22_7,'p'). const('p'). m_tag7(node22_7,'x'). const('x'). m_tag8(node22_7,'x'). const('x'). m_tag10(node22_7,'a'). const('a'). m_tag11(node22_7,'p'). const('p'). 
%%%%%%%% node22_8 %%%%%%%%%%%%%%%%%%%
node(node22_8).
functor(node22_8, conj).         const(conj).
id(node22_8, t_plzensky56858_txt_001_p3s3a5).         const(t_plzensky56858_txt_001_p3s3a5).
t_lemma(node22_8, a).         const(a).
%%%%%%%% node22_9 %%%%%%%%%%%%%%%%%%%
node(node22_9).
functor(node22_9, pat).         const(pat).
gram_sempos(node22_9, n_denot).         const(n_denot).
id(node22_9, t_plzensky56858_txt_001_p3s3a6).         const(t_plzensky56858_txt_001_p3s3a6).
t_lemma(node22_9, osoba).         const(osoba).
%%%%%%%% node22_10 %%%%%%%%%%%%%%%%%%%
node(node22_10).
functor(node22_10, rstr).         const(rstr).
gram_sempos(node22_10, adj_quant_def).         const(adj_quant_def).
id(node22_10, t_plzensky56858_txt_001_p3s3a7).         const(t_plzensky56858_txt_001_p3s3a7).
t_lemma(node22_10, dva).         const(dva).
%%%%%%%% node22_11 %%%%%%%%%%%%%%%%%%%
node(node22_11).
a_afun(node22_11, atr).         const(atr).
m_form(node22_11, dve).         const(dve).
m_lemma(node22_11, dva_2).         const(dva_2).
m_tag(node22_11, clhp1__________).         const(clhp1__________).
m_tag0(node22_11,'c'). const('c'). m_tag1(node22_11,'l'). const('l'). m_tag2(node22_11,'h'). const('h'). m_tag3(node22_11,'p'). const('p'). m_tag4(node22_11,'1'). const('1'). 
%%%%%%%% node22_12 %%%%%%%%%%%%%%%%%%%
node(node22_12).
functor(node22_12, rstr).         const(rstr).
gram_sempos(node22_12, adj_denot).         const(adj_denot).
id(node22_12, t_plzensky56858_txt_001_p3s3a8).         const(t_plzensky56858_txt_001_p3s3a8).
t_lemma(node22_12, dospely).         const(dospely).
%%%%%%%% node22_13 %%%%%%%%%%%%%%%%%%%
node(node22_13).
a_afun(node22_13, atr).         const(atr).
m_form(node22_13, dospele).         const(dospele).
m_lemma(node22_13, dospely_1).         const(dospely_1).
m_tag(node22_13, aafp1____1a____).         const(aafp1____1a____).
m_tag0(node22_13,'a'). const('a'). m_tag1(node22_13,'a'). const('a'). m_tag2(node22_13,'f'). const('f'). m_tag3(node22_13,'p'). const('p'). m_tag4(node22_13,'1'). const('1'). m_tag9(node22_13,'1'). const('1'). m_tag10(node22_13,'a'). const('a'). 
%%%%%%%% node22_14 %%%%%%%%%%%%%%%%%%%
node(node22_14).
a_afun(node22_14, sb).         const(sb).
m_form(node22_14, osoby).         const(osoby).
m_lemma(node22_14, osoba).         const(osoba).
m_tag(node22_14, nnfp1_____a____).         const(nnfp1_____a____).
m_tag0(node22_14,'n'). const('n'). m_tag1(node22_14,'n'). const('n'). m_tag2(node22_14,'f'). const('f'). m_tag3(node22_14,'p'). const('p'). m_tag4(node22_14,'1'). const('1'). m_tag10(node22_14,'a'). const('a'). 
%%%%%%%% node22_15 %%%%%%%%%%%%%%%%%%%
node(node22_15).
a_afun(node22_15, coord).         const(coord).
m_form(node22_15, a).         const(a).
m_lemma(node22_15, a_1).         const(a_1).
m_tag(node22_15, j______________).         const(j______________).
m_tag0(node22_15,'j'). const('j'). m_tag1(node22_15,'^'). const('^'). 
%%%%%%%% node22_16 %%%%%%%%%%%%%%%%%%%
node(node22_16).
functor(node22_16, pat).         const(pat).
gram_sempos(node22_16, n_denot).         const(n_denot).
id(node22_16, t_plzensky56858_txt_001_p3s3a9).         const(t_plzensky56858_txt_001_p3s3a9).
t_lemma(node22_16, dite).         const(dite).
%%%%%%%% node22_17 %%%%%%%%%%%%%%%%%%%
node(node22_17).
functor(node22_17, rstr).         const(rstr).
gram_sempos(node22_17, adj_quant_def).         const(adj_quant_def).
id(node22_17, t_plzensky56858_txt_001_p3s3a10).         const(t_plzensky56858_txt_001_p3s3a10).
t_lemma(node22_17, dva).         const(dva).
%%%%%%%% node22_18 %%%%%%%%%%%%%%%%%%%
node(node22_18).
a_afun(node22_18, atr).         const(atr).
m_form(node22_18, dve).         const(dve).
m_lemma(node22_18, dva_2).         const(dva_2).
m_tag(node22_18, clhp1__________).         const(clhp1__________).
m_tag0(node22_18,'c'). const('c'). m_tag1(node22_18,'l'). const('l'). m_tag2(node22_18,'h'). const('h'). m_tag3(node22_18,'p'). const('p'). m_tag4(node22_18,'1'). const('1'). 
%%%%%%%% node22_19 %%%%%%%%%%%%%%%%%%%
node(node22_19).
a_afun(node22_19, sb).         const(sb).
m_form(node22_19, deti).         const(deti).
m_lemma(node22_19, dite).         const(dite).
m_tag(node22_19, nnfp1_____a____).         const(nnfp1_____a____).
m_tag0(node22_19,'n'). const('n'). m_tag1(node22_19,'n'). const('n'). m_tag2(node22_19,'f'). const('f'). m_tag3(node22_19,'p'). const('p'). m_tag4(node22_19,'1'). const('1'). m_tag10(node22_19,'a'). const('a'). 
%%%%%%%% node22_20 %%%%%%%%%%%%%%%%%%%
node(node22_20).
functor(node22_20, dir1).         const(dir1).
gram_sempos(node22_20, n_denot).         const(n_denot).
id(node22_20, t_plzensky56858_txt_001_p3s3a12).         const(t_plzensky56858_txt_001_p3s3a12).
t_lemma(node22_20, automobil).         const(automobil).
%%%%%%%% node22_21 %%%%%%%%%%%%%%%%%%%
node(node22_21).
a_afun(node22_21, auxp).         const(auxp).
m_form(node22_21, z).         const(z).
m_lemma(node22_21, z_1).         const(z_1).
m_tag(node22_21, rr__2__________).         const(rr__2__________).
m_tag0(node22_21,'r'). const('r'). m_tag1(node22_21,'r'). const('r'). m_tag4(node22_21,'2'). const('2'). 
%%%%%%%% node22_22 %%%%%%%%%%%%%%%%%%%
node(node22_22).
a_afun(node22_22, atr).         const(atr).
m_form(node22_22, automobilu).         const(automobilu).
m_lemma(node22_22, automobil).         const(automobil).
m_tag(node22_22, nnis2_____a____).         const(nnis2_____a____).
m_tag0(node22_22,'n'). const('n'). m_tag1(node22_22,'n'). const('n'). m_tag2(node22_22,'i'). const('i'). m_tag3(node22_22,'s'). const('s'). m_tag4(node22_22,'2'). const('2'). m_tag10(node22_22,'a'). const('a'). 
edge(node22_0, node22_1).
edge(node22_1, node22_2).
edge(node22_1, node22_3).
edge(node22_3, node22_4).
edge(node22_3, node22_5).
edge(node22_1, node22_6).
edge(node22_1, node22_7).
edge(node22_1, node22_8).
edge(node22_8, node22_9).
edge(node22_9, node22_10).
edge(node22_10, node22_11).
edge(node22_9, node22_12).
edge(node22_12, node22_13).
edge(node22_9, node22_14).
edge(node22_8, node22_15).
edge(node22_8, node22_16).
edge(node22_16, node22_17).
edge(node22_17, node22_18).
edge(node22_16, node22_19).
edge(node22_16, node22_20).
edge(node22_20, node22_21).
edge(node22_20, node22_22).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% pri nehode byly zraneny dve osoby, z toho jedna tezce. 
tree_root(node23_0).
%%%%%%%% node23_0 %%%%%%%%%%%%%%%%%%%
node(node23_0).
id(node23_0, t_plzensky58020_txt_001_p1s2).         const(t_plzensky58020_txt_001_p1s2).
%%%%%%%% node23_1 %%%%%%%%%%%%%%%%%%%
node(node23_1).
functor(node23_1, conj).         const(conj).
id(node23_1, t_plzensky58020_txt_001_p1s2a1).         const(t_plzensky58020_txt_001_p1s2a1).
t_lemma(node23_1, x_comma).         const(x_comma).
%%%%%%%% node23_2 %%%%%%%%%%%%%%%%%%%
node(node23_2).
functor(node23_2, pred).         const(pred).
gram_sempos(node23_2, v).         const(v).
id(node23_2, t_plzensky58020_txt_001_p1s2a2).         const(t_plzensky58020_txt_001_p1s2a2).
t_lemma(node23_2, zranit).         const(zranit).
%%%%%%%% node23_3 %%%%%%%%%%%%%%%%%%%
node(node23_3).
functor(node23_3, act).         const(act).
id(node23_3, t_plzensky58020_txt_001_p1s2a12).         const(t_plzensky58020_txt_001_p1s2a12).
t_lemma(node23_3, x_gen).         const(x_gen).
%%%%%%%% node23_4 %%%%%%%%%%%%%%%%%%%
node(node23_4).
functor(node23_4, twhen).         const(twhen).
gram_sempos(node23_4, n_denot).         const(n_denot).
id(node23_4, t_plzensky58020_txt_001_p1s2a4).         const(t_plzensky58020_txt_001_p1s2a4).
t_lemma(node23_4, nehoda).         const(nehoda).
%%%%%%%% node23_5 %%%%%%%%%%%%%%%%%%%
node(node23_5).
a_afun(node23_5, auxp).         const(auxp).
m_form(node23_5, pri).         const(pri).
m_lemma(node23_5, pri_1).         const(pri_1).
m_tag(node23_5, rr__6__________).         const(rr__6__________).
m_tag0(node23_5,'r'). const('r'). m_tag1(node23_5,'r'). const('r'). m_tag4(node23_5,'6'). const('6'). 
%%%%%%%% node23_6 %%%%%%%%%%%%%%%%%%%
node(node23_6).
a_afun(node23_6, adv).         const(adv).
m_form(node23_6, nehode).         const(nehode).
m_lemma(node23_6, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node23_6, nnfs6_____a____).         const(nnfs6_____a____).
m_tag0(node23_6,'n'). const('n'). m_tag1(node23_6,'n'). const('n'). m_tag2(node23_6,'f'). const('f'). m_tag3(node23_6,'s'). const('s'). m_tag4(node23_6,'6'). const('6'). m_tag10(node23_6,'a'). const('a'). 
%%%%%%%% node23_7 %%%%%%%%%%%%%%%%%%%
node(node23_7).
a_afun(node23_7, auxv).         const(auxv).
m_form(node23_7, byly).         const(byly).
m_lemma(node23_7, byt).         const(byt).
m_tag(node23_7, vptp___xr_aa___).         const(vptp___xr_aa___).
m_tag0(node23_7,'v'). const('v'). m_tag1(node23_7,'p'). const('p'). m_tag2(node23_7,'t'). const('t'). m_tag3(node23_7,'p'). const('p'). m_tag7(node23_7,'x'). const('x'). m_tag8(node23_7,'r'). const('r'). m_tag10(node23_7,'a'). const('a'). m_tag11(node23_7,'a'). const('a'). 
%%%%%%%% node23_8 %%%%%%%%%%%%%%%%%%%
node(node23_8).
a_afun(node23_8, pred).         const(pred).
m_form(node23_8, zraneny).         const(zraneny).
m_lemma(node23_8, zranit__w).         const(zranit__w).
m_tag(node23_8, vstp___xx_ap___).         const(vstp___xx_ap___).
m_tag0(node23_8,'v'). const('v'). m_tag1(node23_8,'s'). const('s'). m_tag2(node23_8,'t'). const('t'). m_tag3(node23_8,'p'). const('p'). m_tag7(node23_8,'x'). const('x'). m_tag8(node23_8,'x'). const('x'). m_tag10(node23_8,'a'). const('a'). m_tag11(node23_8,'p'). const('p'). 
%%%%%%%% node23_9 %%%%%%%%%%%%%%%%%%%
node(node23_9).
functor(node23_9, pat).         const(pat).
gram_sempos(node23_9, n_denot).         const(n_denot).
id(node23_9, t_plzensky58020_txt_001_p1s2a6).         const(t_plzensky58020_txt_001_p1s2a6).
t_lemma(node23_9, osoba).         const(osoba).
%%%%%%%% node23_10 %%%%%%%%%%%%%%%%%%%
node(node23_10).
functor(node23_10, rstr).         const(rstr).
gram_sempos(node23_10, adj_quant_def).         const(adj_quant_def).
id(node23_10, t_plzensky58020_txt_001_p1s2a7).         const(t_plzensky58020_txt_001_p1s2a7).
t_lemma(node23_10, dva).         const(dva).
%%%%%%%% node23_11 %%%%%%%%%%%%%%%%%%%
node(node23_11).
a_afun(node23_11, atr).         const(atr).
m_form(node23_11, dve).         const(dve).
m_lemma(node23_11, dva_2).         const(dva_2).
m_tag(node23_11, clhp1__________).         const(clhp1__________).
m_tag0(node23_11,'c'). const('c'). m_tag1(node23_11,'l'). const('l'). m_tag2(node23_11,'h'). const('h'). m_tag3(node23_11,'p'). const('p'). m_tag4(node23_11,'1'). const('1'). 
%%%%%%%% node23_12 %%%%%%%%%%%%%%%%%%%
node(node23_12).
a_afun(node23_12, sb).         const(sb).
m_form(node23_12, osoby).         const(osoby).
m_lemma(node23_12, osoba).         const(osoba).
m_tag(node23_12, nnfp1_____a____).         const(nnfp1_____a____).
m_tag0(node23_12,'n'). const('n'). m_tag1(node23_12,'n'). const('n'). m_tag2(node23_12,'f'). const('f'). m_tag3(node23_12,'p'). const('p'). m_tag4(node23_12,'1'). const('1'). m_tag10(node23_12,'a'). const('a'). 
%%%%%%%% node23_13 %%%%%%%%%%%%%%%%%%%
node(node23_13).
a_afun(node23_13, coord).         const(coord).
m_form(node23_13, x_).         const(x_).
m_lemma(node23_13, x_).         const(x_).
m_tag(node23_13, z______________).         const(z______________).
m_tag0(node23_13,'z'). const('z'). m_tag1(node23_13,':'). const(':'). 
%%%%%%%% node23_14 %%%%%%%%%%%%%%%%%%%
node(node23_14).
functor(node23_14, dir1).         const(dir1).
gram_sempos(node23_14, n_pron_def_demon).         const(n_pron_def_demon).
id(node23_14, t_plzensky58020_txt_001_p1s2a9).         const(t_plzensky58020_txt_001_p1s2a9).
t_lemma(node23_14, ten).         const(ten).
%%%%%%%% node23_15 %%%%%%%%%%%%%%%%%%%
node(node23_15).
a_afun(node23_15, auxp).         const(auxp).
m_form(node23_15, z).         const(z).
m_lemma(node23_15, z_1).         const(z_1).
m_tag(node23_15, rr__2__________).         const(rr__2__________).
m_tag0(node23_15,'r'). const('r'). m_tag1(node23_15,'r'). const('r'). m_tag4(node23_15,'2'). const('2'). 
%%%%%%%% node23_16 %%%%%%%%%%%%%%%%%%%
node(node23_16).
a_afun(node23_16, exd).         const(exd).
m_form(node23_16, toho).         const(toho).
m_lemma(node23_16, ten).         const(ten).
m_tag(node23_16, pdzs2__________).         const(pdzs2__________).
m_tag0(node23_16,'p'). const('p'). m_tag1(node23_16,'d'). const('d'). m_tag2(node23_16,'z'). const('z'). m_tag3(node23_16,'s'). const('s'). m_tag4(node23_16,'2'). const('2'). 
%%%%%%%% node23_17 %%%%%%%%%%%%%%%%%%%
node(node23_17).
functor(node23_17, rstr).         const(rstr).
gram_sempos(node23_17, n_quant_def).         const(n_quant_def).
id(node23_17, t_plzensky58020_txt_001_p1s2a10).         const(t_plzensky58020_txt_001_p1s2a10).
t_lemma(node23_17, jeden).         const(jeden).
%%%%%%%% node23_18 %%%%%%%%%%%%%%%%%%%
node(node23_18).
a_afun(node23_18, exd).         const(exd).
m_form(node23_18, jedna).         const(jedna).
m_lemma(node23_18, jeden_1).         const(jeden_1).
m_tag(node23_18, clfs1__________).         const(clfs1__________).
m_tag0(node23_18,'c'). const('c'). m_tag1(node23_18,'l'). const('l'). m_tag2(node23_18,'f'). const('f'). m_tag3(node23_18,'s'). const('s'). m_tag4(node23_18,'1'). const('1'). 
%%%%%%%% node23_19 %%%%%%%%%%%%%%%%%%%
node(node23_19).
functor(node23_19, twhen).         const(twhen).
gram_sempos(node23_19, adj_denot).         const(adj_denot).
id(node23_19, t_plzensky58020_txt_001_p1s2a11).         const(t_plzensky58020_txt_001_p1s2a11).
t_lemma(node23_19, tezky).         const(tezky).
%%%%%%%% node23_20 %%%%%%%%%%%%%%%%%%%
node(node23_20).
a_afun(node23_20, exd).         const(exd).
m_form(node23_20, tezce).         const(tezce).
m_lemma(node23_20, tezce).         const(tezce).
m_tag(node23_20, dg_______1a____).         const(dg_______1a____).
m_tag0(node23_20,'d'). const('d'). m_tag1(node23_20,'g'). const('g'). m_tag9(node23_20,'1'). const('1'). m_tag10(node23_20,'a'). const('a'). 
edge(node23_0, node23_1).
edge(node23_1, node23_2).
edge(node23_2, node23_3).
edge(node23_2, node23_4).
edge(node23_4, node23_5).
edge(node23_4, node23_6).
edge(node23_2, node23_7).
edge(node23_2, node23_8).
edge(node23_2, node23_9).
edge(node23_9, node23_10).
edge(node23_10, node23_11).
edge(node23_9, node23_12).
edge(node23_1, node23_13).
edge(node23_1, node23_14).
edge(node23_14, node23_15).
edge(node23_14, node23_16).
edge(node23_1, node23_17).
edge(node23_17, node23_18).
edge(node23_1, node23_19).
edge(node23_19, node23_20).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% pri nehode byly zraneny dve osoby, z toho jedna tezce. 
tree_root(node24_0).
%%%%%%%% node24_0 %%%%%%%%%%%%%%%%%%%
node(node24_0).
id(node24_0, t_plzensky58020_txt_001_p1s4).         const(t_plzensky58020_txt_001_p1s4).
%%%%%%%% node24_1 %%%%%%%%%%%%%%%%%%%
node(node24_1).
functor(node24_1, conj).         const(conj).
id(node24_1, t_plzensky58020_txt_001_p1s4a1).         const(t_plzensky58020_txt_001_p1s4a1).
t_lemma(node24_1, x_comma).         const(x_comma).
%%%%%%%% node24_2 %%%%%%%%%%%%%%%%%%%
node(node24_2).
functor(node24_2, pred).         const(pred).
gram_sempos(node24_2, v).         const(v).
id(node24_2, t_plzensky58020_txt_001_p1s4a2).         const(t_plzensky58020_txt_001_p1s4a2).
t_lemma(node24_2, zranit).         const(zranit).
%%%%%%%% node24_3 %%%%%%%%%%%%%%%%%%%
node(node24_3).
functor(node24_3, act).         const(act).
id(node24_3, t_plzensky58020_txt_001_p1s4a12).         const(t_plzensky58020_txt_001_p1s4a12).
t_lemma(node24_3, x_gen).         const(x_gen).
%%%%%%%% node24_4 %%%%%%%%%%%%%%%%%%%
node(node24_4).
functor(node24_4, twhen).         const(twhen).
gram_sempos(node24_4, n_denot).         const(n_denot).
id(node24_4, t_plzensky58020_txt_001_p1s4a4).         const(t_plzensky58020_txt_001_p1s4a4).
t_lemma(node24_4, nehoda).         const(nehoda).
%%%%%%%% node24_5 %%%%%%%%%%%%%%%%%%%
node(node24_5).
a_afun(node24_5, auxp).         const(auxp).
m_form(node24_5, pri).         const(pri).
m_lemma(node24_5, pri_1).         const(pri_1).
m_tag(node24_5, rr__6__________).         const(rr__6__________).
m_tag0(node24_5,'r'). const('r'). m_tag1(node24_5,'r'). const('r'). m_tag4(node24_5,'6'). const('6'). 
%%%%%%%% node24_6 %%%%%%%%%%%%%%%%%%%
node(node24_6).
a_afun(node24_6, adv).         const(adv).
m_form(node24_6, nehode).         const(nehode).
m_lemma(node24_6, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node24_6, nnfs6_____a____).         const(nnfs6_____a____).
m_tag0(node24_6,'n'). const('n'). m_tag1(node24_6,'n'). const('n'). m_tag2(node24_6,'f'). const('f'). m_tag3(node24_6,'s'). const('s'). m_tag4(node24_6,'6'). const('6'). m_tag10(node24_6,'a'). const('a'). 
%%%%%%%% node24_7 %%%%%%%%%%%%%%%%%%%
node(node24_7).
a_afun(node24_7, auxv).         const(auxv).
m_form(node24_7, byly).         const(byly).
m_lemma(node24_7, byt).         const(byt).
m_tag(node24_7, vptp___xr_aa___).         const(vptp___xr_aa___).
m_tag0(node24_7,'v'). const('v'). m_tag1(node24_7,'p'). const('p'). m_tag2(node24_7,'t'). const('t'). m_tag3(node24_7,'p'). const('p'). m_tag7(node24_7,'x'). const('x'). m_tag8(node24_7,'r'). const('r'). m_tag10(node24_7,'a'). const('a'). m_tag11(node24_7,'a'). const('a'). 
%%%%%%%% node24_8 %%%%%%%%%%%%%%%%%%%
node(node24_8).
a_afun(node24_8, pred).         const(pred).
m_form(node24_8, zraneny).         const(zraneny).
m_lemma(node24_8, zranit__w).         const(zranit__w).
m_tag(node24_8, vstp___xx_ap___).         const(vstp___xx_ap___).
m_tag0(node24_8,'v'). const('v'). m_tag1(node24_8,'s'). const('s'). m_tag2(node24_8,'t'). const('t'). m_tag3(node24_8,'p'). const('p'). m_tag7(node24_8,'x'). const('x'). m_tag8(node24_8,'x'). const('x'). m_tag10(node24_8,'a'). const('a'). m_tag11(node24_8,'p'). const('p'). 
%%%%%%%% node24_9 %%%%%%%%%%%%%%%%%%%
node(node24_9).
functor(node24_9, pat).         const(pat).
gram_sempos(node24_9, n_denot).         const(n_denot).
id(node24_9, t_plzensky58020_txt_001_p1s4a6).         const(t_plzensky58020_txt_001_p1s4a6).
t_lemma(node24_9, osoba).         const(osoba).
%%%%%%%% node24_10 %%%%%%%%%%%%%%%%%%%
node(node24_10).
functor(node24_10, rstr).         const(rstr).
gram_sempos(node24_10, adj_quant_def).         const(adj_quant_def).
id(node24_10, t_plzensky58020_txt_001_p1s4a7).         const(t_plzensky58020_txt_001_p1s4a7).
t_lemma(node24_10, dva).         const(dva).
%%%%%%%% node24_11 %%%%%%%%%%%%%%%%%%%
node(node24_11).
a_afun(node24_11, atr).         const(atr).
m_form(node24_11, dve).         const(dve).
m_lemma(node24_11, dva_2).         const(dva_2).
m_tag(node24_11, clhp1__________).         const(clhp1__________).
m_tag0(node24_11,'c'). const('c'). m_tag1(node24_11,'l'). const('l'). m_tag2(node24_11,'h'). const('h'). m_tag3(node24_11,'p'). const('p'). m_tag4(node24_11,'1'). const('1'). 
%%%%%%%% node24_12 %%%%%%%%%%%%%%%%%%%
node(node24_12).
a_afun(node24_12, sb).         const(sb).
m_form(node24_12, osoby).         const(osoby).
m_lemma(node24_12, osoba).         const(osoba).
m_tag(node24_12, nnfp1_____a____).         const(nnfp1_____a____).
m_tag0(node24_12,'n'). const('n'). m_tag1(node24_12,'n'). const('n'). m_tag2(node24_12,'f'). const('f'). m_tag3(node24_12,'p'). const('p'). m_tag4(node24_12,'1'). const('1'). m_tag10(node24_12,'a'). const('a'). 
%%%%%%%% node24_13 %%%%%%%%%%%%%%%%%%%
node(node24_13).
a_afun(node24_13, coord).         const(coord).
m_form(node24_13, x_).         const(x_).
m_lemma(node24_13, x_).         const(x_).
m_tag(node24_13, z______________).         const(z______________).
m_tag0(node24_13,'z'). const('z'). m_tag1(node24_13,':'). const(':'). 
%%%%%%%% node24_14 %%%%%%%%%%%%%%%%%%%
node(node24_14).
functor(node24_14, dir1).         const(dir1).
gram_sempos(node24_14, n_pron_def_demon).         const(n_pron_def_demon).
id(node24_14, t_plzensky58020_txt_001_p1s4a9).         const(t_plzensky58020_txt_001_p1s4a9).
t_lemma(node24_14, ten).         const(ten).
%%%%%%%% node24_15 %%%%%%%%%%%%%%%%%%%
node(node24_15).
a_afun(node24_15, auxp).         const(auxp).
m_form(node24_15, z).         const(z).
m_lemma(node24_15, z_1).         const(z_1).
m_tag(node24_15, rr__2__________).         const(rr__2__________).
m_tag0(node24_15,'r'). const('r'). m_tag1(node24_15,'r'). const('r'). m_tag4(node24_15,'2'). const('2'). 
%%%%%%%% node24_16 %%%%%%%%%%%%%%%%%%%
node(node24_16).
a_afun(node24_16, exd).         const(exd).
m_form(node24_16, toho).         const(toho).
m_lemma(node24_16, ten).         const(ten).
m_tag(node24_16, pdzs2__________).         const(pdzs2__________).
m_tag0(node24_16,'p'). const('p'). m_tag1(node24_16,'d'). const('d'). m_tag2(node24_16,'z'). const('z'). m_tag3(node24_16,'s'). const('s'). m_tag4(node24_16,'2'). const('2'). 
%%%%%%%% node24_17 %%%%%%%%%%%%%%%%%%%
node(node24_17).
functor(node24_17, rstr).         const(rstr).
gram_sempos(node24_17, n_quant_def).         const(n_quant_def).
id(node24_17, t_plzensky58020_txt_001_p1s4a10).         const(t_plzensky58020_txt_001_p1s4a10).
t_lemma(node24_17, jeden).         const(jeden).
%%%%%%%% node24_18 %%%%%%%%%%%%%%%%%%%
node(node24_18).
a_afun(node24_18, exd).         const(exd).
m_form(node24_18, jedna).         const(jedna).
m_lemma(node24_18, jeden_1).         const(jeden_1).
m_tag(node24_18, clfs1__________).         const(clfs1__________).
m_tag0(node24_18,'c'). const('c'). m_tag1(node24_18,'l'). const('l'). m_tag2(node24_18,'f'). const('f'). m_tag3(node24_18,'s'). const('s'). m_tag4(node24_18,'1'). const('1'). 
%%%%%%%% node24_19 %%%%%%%%%%%%%%%%%%%
node(node24_19).
functor(node24_19, twhen).         const(twhen).
gram_sempos(node24_19, adj_denot).         const(adj_denot).
id(node24_19, t_plzensky58020_txt_001_p1s4a11).         const(t_plzensky58020_txt_001_p1s4a11).
t_lemma(node24_19, tezky).         const(tezky).
%%%%%%%% node24_20 %%%%%%%%%%%%%%%%%%%
node(node24_20).
a_afun(node24_20, exd).         const(exd).
m_form(node24_20, tezce).         const(tezce).
m_lemma(node24_20, tezce).         const(tezce).
m_tag(node24_20, dg_______1a____).         const(dg_______1a____).
m_tag0(node24_20,'d'). const('d'). m_tag1(node24_20,'g'). const('g'). m_tag9(node24_20,'1'). const('1'). m_tag10(node24_20,'a'). const('a'). 
edge(node24_0, node24_1).
edge(node24_1, node24_2).
edge(node24_2, node24_3).
edge(node24_2, node24_4).
edge(node24_4, node24_5).
edge(node24_4, node24_6).
edge(node24_2, node24_7).
edge(node24_2, node24_8).
edge(node24_2, node24_9).
edge(node24_9, node24_10).
edge(node24_10, node24_11).
edge(node24_9, node24_12).
edge(node24_1, node24_13).
edge(node24_1, node24_14).
edge(node24_14, node24_15).
edge(node24_14, node24_16).
edge(node24_1, node24_17).
edge(node24_17, node24_18).
edge(node24_1, node24_19).
edge(node24_19, node24_20).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% ridic vozidla audi nebyl zranen. 
tree_root(node25_0).
%%%%%%%% node25_0 %%%%%%%%%%%%%%%%%%%
node(node25_0).
id(node25_0, t_plzensky72928_txt_001_p1s6).         const(t_plzensky72928_txt_001_p1s6).
%%%%%%%% node25_1 %%%%%%%%%%%%%%%%%%%
node(node25_1).
functor(node25_1, pred).         const(pred).
gram_sempos(node25_1, v).         const(v).
id(node25_1, t_plzensky72928_txt_001_p1s6a1).         const(t_plzensky72928_txt_001_p1s6a1).
t_lemma(node25_1, zranit).         const(zranit).
%%%%%%%% node25_2 %%%%%%%%%%%%%%%%%%%
node(node25_2).
functor(node25_2, act).         const(act).
id(node25_2, t_plzensky72928_txt_001_p1s6a5).         const(t_plzensky72928_txt_001_p1s6a5).
t_lemma(node25_2, x_gen).         const(x_gen).
%%%%%%%% node25_3 %%%%%%%%%%%%%%%%%%%
node(node25_3).
functor(node25_3, pat).         const(pat).
gram_sempos(node25_3, n_denot).         const(n_denot).
id(node25_3, t_plzensky72928_txt_001_p1s6a2).         const(t_plzensky72928_txt_001_p1s6a2).
t_lemma(node25_3, ridic).         const(ridic).
%%%%%%%% node25_4 %%%%%%%%%%%%%%%%%%%
node(node25_4).
a_afun(node25_4, sb).         const(sb).
m_form(node25_4, ridic).         const(ridic).
m_lemma(node25_4, ridic).         const(ridic).
m_tag(node25_4, nnms1_____a____).         const(nnms1_____a____).
m_tag0(node25_4,'n'). const('n'). m_tag1(node25_4,'n'). const('n'). m_tag2(node25_4,'m'). const('m'). m_tag3(node25_4,'s'). const('s'). m_tag4(node25_4,'1'). const('1'). m_tag10(node25_4,'a'). const('a'). 
%%%%%%%% node25_5 %%%%%%%%%%%%%%%%%%%
node(node25_5).
functor(node25_5, app).         const(app).
gram_sempos(node25_5, n_denot).         const(n_denot).
id(node25_5, t_plzensky72928_txt_001_p1s6a3).         const(t_plzensky72928_txt_001_p1s6a3).
t_lemma(node25_5, vozidlo).         const(vozidlo).
%%%%%%%% node25_6 %%%%%%%%%%%%%%%%%%%
node(node25_6).
a_afun(node25_6, atr).         const(atr).
m_form(node25_6, vozidla).         const(vozidla).
m_lemma(node25_6, vozidlo).         const(vozidlo).
m_tag(node25_6, nnns2_____a____).         const(nnns2_____a____).
m_tag0(node25_6,'n'). const('n'). m_tag1(node25_6,'n'). const('n'). m_tag2(node25_6,'n'). const('n'). m_tag3(node25_6,'s'). const('s'). m_tag4(node25_6,'2'). const('2'). m_tag10(node25_6,'a'). const('a'). 
%%%%%%%% node25_7 %%%%%%%%%%%%%%%%%%%
node(node25_7).
functor(node25_7, id).         const(id).
gram_sempos(node25_7, n_denot).         const(n_denot).
id(node25_7, t_plzensky72928_txt_001_p1s6a4).         const(t_plzensky72928_txt_001_p1s6a4).
t_lemma(node25_7, audi).         const(audi).
%%%%%%%% node25_8 %%%%%%%%%%%%%%%%%%%
node(node25_8).
a_afun(node25_8, atr).         const(atr).
m_form(node25_8, audi).         const(audi).
m_lemma(node25_8, audi_1__k).         const(audi_1__k).
m_tag(node25_8, nnfxx_____a____).         const(nnfxx_____a____).
m_tag0(node25_8,'n'). const('n'). m_tag1(node25_8,'n'). const('n'). m_tag2(node25_8,'f'). const('f'). m_tag3(node25_8,'x'). const('x'). m_tag4(node25_8,'x'). const('x'). m_tag10(node25_8,'a'). const('a'). 
%%%%%%%% node25_9 %%%%%%%%%%%%%%%%%%%
node(node25_9).
a_afun(node25_9, auxv).         const(auxv).
m_form(node25_9, nebyl).         const(nebyl).
m_lemma(node25_9, byt).         const(byt).
m_tag(node25_9, vpys___xr_na___).         const(vpys___xr_na___).
m_tag0(node25_9,'v'). const('v'). m_tag1(node25_9,'p'). const('p'). m_tag2(node25_9,'y'). const('y'). m_tag3(node25_9,'s'). const('s'). m_tag7(node25_9,'x'). const('x'). m_tag8(node25_9,'r'). const('r'). m_tag10(node25_9,'n'). const('n'). m_tag11(node25_9,'a'). const('a'). 
%%%%%%%% node25_10 %%%%%%%%%%%%%%%%%%%
node(node25_10).
a_afun(node25_10, pred).         const(pred).
m_form(node25_10, zranen).         const(zranen).
m_lemma(node25_10, zranit__w).         const(zranit__w).
m_tag(node25_10, vsys___xx_ap___).         const(vsys___xx_ap___).
m_tag0(node25_10,'v'). const('v'). m_tag1(node25_10,'s'). const('s'). m_tag2(node25_10,'y'). const('y'). m_tag3(node25_10,'s'). const('s'). m_tag7(node25_10,'x'). const('x'). m_tag8(node25_10,'x'). const('x'). m_tag10(node25_10,'a'). const('a'). m_tag11(node25_10,'p'). const('p'). 
edge(node25_0, node25_1).
edge(node25_1, node25_2).
edge(node25_1, node25_3).
edge(node25_3, node25_4).
edge(node25_3, node25_5).
edge(node25_5, node25_6).
edge(node25_5, node25_7).
edge(node25_7, node25_8).
edge(node25_1, node25_9).
edge(node25_1, node25_10).
.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% vzhledem k tomu, ze o nejdulezitejsich patecnich, sobotnich a casti nedelnich udalosti byla verejnost jiz informovana v clancich ,,hasice zamestnaly dva velke pozary", ,,cyklistka srazena osobnim automobilem zranenim podlehla" a ,,pri nehode mezi obcemi cernovice a nemnenice zahynul ridic", budu se venovat pouze nekterym nedelnim udalostem. 
tree_root(node26_0).
%%%%%%%% node26_0 %%%%%%%%%%%%%%%%%%%
node(node26_0).
id(node26_0, t_plzensky57870_txt_001_p1s1).         const(t_plzensky57870_txt_001_p1s1).
%%%%%%%% node26_1 %%%%%%%%%%%%%%%%%%%
node(node26_1).
functor(node26_1, pred).         const(pred).
gram_sempos(node26_1, v).         const(v).
id(node26_1, t_plzensky57870_txt_001_p1s1a1).         const(t_plzensky57870_txt_001_p1s1a1).
t_lemma(node26_1, podlehnout).         const(podlehnout).
%%%%%%%% node26_2 %%%%%%%%%%%%%%%%%%%
node(node26_2).
functor(node26_2, pat).         const(pat).
id(node26_2, t_plzensky57870_txt_001_p1s1a61).         const(t_plzensky57870_txt_001_p1s1a61).
t_lemma(node26_2, x_gen).         const(x_gen).
%%%%%%%% node26_3 %%%%%%%%%%%%%%%%%%%
node(node26_3).
functor(node26_3, rstr).         const(rstr).
id(node26_3, t_plzensky57870_txt_001_p1s1a7).         const(t_plzensky57870_txt_001_p1s1a7).
t_lemma(node26_3, x_comma).         const(x_comma).
%%%%%%%% node26_4 %%%%%%%%%%%%%%%%%%%
node(node26_4).
functor(node26_4, rstr).         const(rstr).
gram_sempos(node26_4, v).         const(v).
id(node26_4, t_plzensky57870_txt_001_p1s1a8).         const(t_plzensky57870_txt_001_p1s1a8).
t_lemma(node26_4, informovat).         const(informovat).
%%%%%%%% node26_5 %%%%%%%%%%%%%%%%%%%
node(node26_5).
functor(node26_5, pat).         const(pat).
gram_sempos(node26_5, n_pron_def_pers).         const(n_pron_def_pers).
id(node26_5, t_plzensky57870_txt_001_p1s1a63).         const(t_plzensky57870_txt_001_p1s1a63).
t_lemma(node26_5, x_perspron).         const(x_perspron).
%%%%%%%% node26_6 %%%%%%%%%%%%%%%%%%%
node(node26_6).
functor(node26_6, act).         const(act).
id(node26_6, t_plzensky57870_txt_001_p1s1a62).         const(t_plzensky57870_txt_001_p1s1a62).
t_lemma(node26_6, x_gen).         const(x_gen).
%%%%%%%% node26_7 %%%%%%%%%%%%%%%%%%%
node(node26_7).
functor(node26_7, apps).         const(apps).
id(node26_7, t_plzensky57870_txt_001_p1s1a10).         const(t_plzensky57870_txt_001_p1s1a10).
t_lemma(node26_7, x_comma).         const(x_comma).
%%%%%%%% node26_8 %%%%%%%%%%%%%%%%%%%
node(node26_8).
functor(node26_8, rstr).         const(rstr).
gram_sempos(node26_8, adj_denot).         const(adj_denot).
id(node26_8, t_plzensky57870_txt_001_p1s1a11).         const(t_plzensky57870_txt_001_p1s1a11).
t_lemma(node26_8, dulezity).         const(dulezity).
%%%%%%%% node26_9 %%%%%%%%%%%%%%%%%%%
node(node26_9).
a_afun(node26_9, auxp).         const(auxp).
m_form(node26_9, o).         const(o).
m_lemma(node26_9, o_1).         const(o_1).
m_tag(node26_9, rr__6__________).         const(rr__6__________).
m_tag0(node26_9,'r'). const('r'). m_tag1(node26_9,'r'). const('r'). m_tag4(node26_9,'6'). const('6'). 
%%%%%%%% node26_10 %%%%%%%%%%%%%%%%%%%
node(node26_10).
a_afun(node26_10, sb).         const(sb).
m_form(node26_10, nejdulezitejsich).         const(nejdulezitejsich).
m_lemma(node26_10, dulezity).         const(dulezity).
m_tag(node26_10, aafp6____3a____).         const(aafp6____3a____).
m_tag0(node26_10,'a'). const('a'). m_tag1(node26_10,'a'). const('a'). m_tag2(node26_10,'f'). const('f'). m_tag3(node26_10,'p'). const('p'). m_tag4(node26_10,'6'). const('6'). m_tag9(node26_10,'3'). const('3'). m_tag10(node26_10,'a'). const('a'). 
%%%%%%%% node26_11 %%%%%%%%%%%%%%%%%%%
node(node26_11).
functor(node26_11, rstr).         const(rstr).
gram_sempos(node26_11, adj_denot).         const(adj_denot).
id(node26_11, t_plzensky57870_txt_001_p1s1a12).         const(t_plzensky57870_txt_001_p1s1a12).
t_lemma(node26_11, patecni).         const(patecni).
%%%%%%%% node26_12 %%%%%%%%%%%%%%%%%%%
node(node26_12).
a_afun(node26_12, auxp).         const(auxp).
m_form(node26_12, o).         const(o).
m_lemma(node26_12, o_1).         const(o_1).
m_tag(node26_12, rr__6__________).         const(rr__6__________).
m_tag0(node26_12,'r'). const('r'). m_tag1(node26_12,'r'). const('r'). m_tag4(node26_12,'6'). const('6'). 
%%%%%%%% node26_13 %%%%%%%%%%%%%%%%%%%
node(node26_13).
a_afun(node26_13, sb).         const(sb).
m_form(node26_13, patecnich).         const(patecnich).
m_lemma(node26_13, patecni).         const(patecni).
m_tag(node26_13, aafp6____1a____).         const(aafp6____1a____).
m_tag0(node26_13,'a'). const('a'). m_tag1(node26_13,'a'). const('a'). m_tag2(node26_13,'f'). const('f'). m_tag3(node26_13,'p'). const('p'). m_tag4(node26_13,'6'). const('6'). m_tag9(node26_13,'1'). const('1'). m_tag10(node26_13,'a'). const('a'). 
%%%%%%%% node26_14 %%%%%%%%%%%%%%%%%%%
node(node26_14).
a_afun(node26_14, auxx).         const(auxx).
m_form(node26_14, x_).         const(x_).
m_lemma(node26_14, x_).         const(x_).
m_tag(node26_14, z______________).         const(z______________).
m_tag0(node26_14,'z'). const('z'). m_tag1(node26_14,':'). const(':'). 
%%%%%%%% node26_15 %%%%%%%%%%%%%%%%%%%
node(node26_15).
functor(node26_15, mat).         const(mat).
gram_sempos(node26_15, n_denot_neg).         const(n_denot_neg).
id(node26_15, t_plzensky57870_txt_001_p1s1a16).         const(t_plzensky57870_txt_001_p1s1a16).
t_lemma(node26_15, udalost).         const(udalost).
%%%%%%%% node26_16 %%%%%%%%%%%%%%%%%%%
node(node26_16).
functor(node26_16, rstr).         const(rstr).
gram_sempos(node26_16, adj_denot).         const(adj_denot).
id(node26_16, t_plzensky57870_txt_001_p1s1a13).         const(t_plzensky57870_txt_001_p1s1a13).
t_lemma(node26_16, sobotni).         const(sobotni).
%%%%%%%% node26_17 %%%%%%%%%%%%%%%%%%%
node(node26_17).
a_afun(node26_17, auxp).         const(auxp).
m_form(node26_17, o).         const(o).
m_lemma(node26_17, o_1).         const(o_1).
m_tag(node26_17, rr__6__________).         const(rr__6__________).
m_tag0(node26_17,'r'). const('r'). m_tag1(node26_17,'r'). const('r'). m_tag4(node26_17,'6'). const('6'). 
%%%%%%%% node26_18 %%%%%%%%%%%%%%%%%%%
node(node26_18).
a_afun(node26_18, sb).         const(sb).
m_form(node26_18, sobotnich).         const(sobotnich).
m_lemma(node26_18, sobotni).         const(sobotni).
m_tag(node26_18, aafp6____1a____).         const(aafp6____1a____).
m_tag0(node26_18,'a'). const('a'). m_tag1(node26_18,'a'). const('a'). m_tag2(node26_18,'f'). const('f'). m_tag3(node26_18,'p'). const('p'). m_tag4(node26_18,'6'). const('6'). m_tag9(node26_18,'1'). const('1'). m_tag10(node26_18,'a'). const('a'). 
%%%%%%%% node26_19 %%%%%%%%%%%%%%%%%%%
node(node26_19).
functor(node26_19, conj).         const(conj).
id(node26_19, t_plzensky57870_txt_001_p1s1a15).         const(t_plzensky57870_txt_001_p1s1a15).
t_lemma(node26_19, a).         const(a).
%%%%%%%% node26_20 %%%%%%%%%%%%%%%%%%%
node(node26_20).
a_afun(node26_20, coord).         const(coord).
m_form(node26_20, a).         const(a).
m_lemma(node26_20, a_1).         const(a_1).
m_tag(node26_20, j______________).         const(j______________).
m_tag0(node26_20,'j'). const('j'). m_tag1(node26_20,'^'). const('^'). 
%%%%%%%% node26_21 %%%%%%%%%%%%%%%%%%%
node(node26_21).
functor(node26_21, rstr).         const(rstr).
gram_sempos(node26_21, adj_denot).         const(adj_denot).
id(node26_21, t_plzensky57870_txt_001_p1s1a17).         const(t_plzensky57870_txt_001_p1s1a17).
t_lemma(node26_21, nedelni).         const(nedelni).
%%%%%%%% node26_22 %%%%%%%%%%%%%%%%%%%
node(node26_22).
a_afun(node26_22, atr).         const(atr).
m_form(node26_22, nedelnich).         const(nedelnich).
m_lemma(node26_22, nedelni).         const(nedelni).
m_tag(node26_22, aafp2____1a____).         const(aafp2____1a____).
m_tag0(node26_22,'a'). const('a'). m_tag1(node26_22,'a'). const('a'). m_tag2(node26_22,'f'). const('f'). m_tag3(node26_22,'p'). const('p'). m_tag4(node26_22,'2'). const('2'). m_tag9(node26_22,'1'). const('1'). m_tag10(node26_22,'a'). const('a'). 
%%%%%%%% node26_23 %%%%%%%%%%%%%%%%%%%
node(node26_23).
a_afun(node26_23, auxp).         const(auxp).
m_form(node26_23, casti).         const(casti).
m_lemma(node26_23, cast).         const(cast).
m_tag(node26_23, nnfs6_____a____).         const(nnfs6_____a____).
m_tag0(node26_23,'n'). const('n'). m_tag1(node26_23,'n'). const('n'). m_tag2(node26_23,'f'). const('f'). m_tag3(node26_23,'s'). const('s'). m_tag4(node26_23,'6'). const('6'). m_tag10(node26_23,'a'). const('a'). 
%%%%%%%% node26_24 %%%%%%%%%%%%%%%%%%%
node(node26_24).
a_afun(node26_24, atr).         const(atr).
m_form(node26_24, udalosti).         const(udalosti).
m_lemma(node26_24, udalost__a____3y_).         const(udalost__a____3y_).
m_tag(node26_24, nnfp2_____a____).         const(nnfp2_____a____).
m_tag0(node26_24,'n'). const('n'). m_tag1(node26_24,'n'). const('n'). m_tag2(node26_24,'f'). const('f'). m_tag3(node26_24,'p'). const('p'). m_tag4(node26_24,'2'). const('2'). m_tag10(node26_24,'a'). const('a'). 
%%%%%%%% node26_25 %%%%%%%%%%%%%%%%%%%
node(node26_25).
functor(node26_25, addr).         const(addr).
gram_sempos(node26_25, n_denot_neg).         const(n_denot_neg).
id(node26_25, t_plzensky57870_txt_001_p1s1a19).         const(t_plzensky57870_txt_001_p1s1a19).
t_lemma(node26_25, verejnost).         const(verejnost).
%%%%%%%% node26_26 %%%%%%%%%%%%%%%%%%%
node(node26_26).
a_afun(node26_26, sb).         const(sb).
m_form(node26_26, verejnost).         const(verejnost).
m_lemma(node26_26, verejnost____3y_).         const(verejnost____3y_).
m_tag(node26_26, nnfs1_____a____).         const(nnfs1_____a____).
m_tag0(node26_26,'n'). const('n'). m_tag1(node26_26,'n'). const('n'). m_tag2(node26_26,'f'). const('f'). m_tag3(node26_26,'s'). const('s'). m_tag4(node26_26,'1'). const('1'). m_tag10(node26_26,'a'). const('a'). 
%%%%%%%% node26_27 %%%%%%%%%%%%%%%%%%%
node(node26_27).
functor(node26_27, twhen).         const(twhen).
gram_sempos(node26_27, adv_denot_ngrad_nneg).         const(adv_denot_ngrad_nneg).
id(node26_27, t_plzensky57870_txt_001_p1s1a20).         const(t_plzensky57870_txt_001_p1s1a20).
t_lemma(node26_27, jiz).         const(jiz).
%%%%%%%% node26_28 %%%%%%%%%%%%%%%%%%%
node(node26_28).
a_afun(node26_28, adv).         const(adv).
m_form(node26_28, jiz).         const(jiz).
m_lemma(node26_28, jiz).         const(jiz).
m_tag(node26_28, db_____________).         const(db_____________).
m_tag0(node26_28,'d'). const('d'). m_tag1(node26_28,'b'). const('b'). 
%%%%%%%% node26_29 %%%%%%%%%%%%%%%%%%%
node(node26_29).
a_afun(node26_29, auxv).         const(auxv).
m_form(node26_29, byla).         const(byla).
m_lemma(node26_29, byt).         const(byt).
m_tag(node26_29, vpqw___xr_aa___).         const(vpqw___xr_aa___).
m_tag0(node26_29,'v'). const('v'). m_tag1(node26_29,'p'). const('p'). m_tag2(node26_29,'q'). const('q'). m_tag3(node26_29,'w'). const('w'). m_tag7(node26_29,'x'). const('x'). m_tag8(node26_29,'r'). const('r'). m_tag10(node26_29,'a'). const('a'). m_tag11(node26_29,'a'). const('a'). 
%%%%%%%% node26_30 %%%%%%%%%%%%%%%%%%%
node(node26_30).
a_afun(node26_30, atr).         const(atr).
m_form(node26_30, informovana).         const(informovana).
m_lemma(node26_30, informovat__t__w).         const(informovat__t__w).
m_tag(node26_30, vsqw___xx_ap___).         const(vsqw___xx_ap___).
m_tag0(node26_30,'v'). const('v'). m_tag1(node26_30,'s'). const('s'). m_tag2(node26_30,'q'). const('q'). m_tag3(node26_30,'w'). const('w'). m_tag7(node26_30,'x'). const('x'). m_tag8(node26_30,'x'). const('x'). m_tag10(node26_30,'a'). const('a'). m_tag11(node26_30,'p'). const('p'). 
%%%%%%%% node26_31 %%%%%%%%%%%%%%%%%%%
node(node26_31).
functor(node26_31, loc).         const(loc).
gram_sempos(node26_31, n_denot).         const(n_denot).
id(node26_31, t_plzensky57870_txt_001_p1s1a22).         const(t_plzensky57870_txt_001_p1s1a22).
t_lemma(node26_31, clanek).         const(clanek).
%%%%%%%% node26_32 %%%%%%%%%%%%%%%%%%%
node(node26_32).
a_afun(node26_32, auxp).         const(auxp).
m_form(node26_32, v).         const(v).
m_lemma(node26_32, v_1).         const(v_1).
m_tag(node26_32, rr__6__________).         const(rr__6__________).
m_tag0(node26_32,'r'). const('r'). m_tag1(node26_32,'r'). const('r'). m_tag4(node26_32,'6'). const('6'). 
%%%%%%%% node26_33 %%%%%%%%%%%%%%%%%%%
node(node26_33).
a_afun(node26_33, adv).         const(adv).
m_form(node26_33, clancich).         const(clancich).
m_lemma(node26_33, clanek).         const(clanek).
m_tag(node26_33, nnip6_____a____).         const(nnip6_____a____).
m_tag0(node26_33,'n'). const('n'). m_tag1(node26_33,'n'). const('n'). m_tag2(node26_33,'i'). const('i'). m_tag3(node26_33,'p'). const('p'). m_tag4(node26_33,'6'). const('6'). m_tag10(node26_33,'a'). const('a'). 
%%%%%%%% node26_34 %%%%%%%%%%%%%%%%%%%
node(node26_34).
a_afun(node26_34, auxp).         const(auxp).
m_form(node26_34, vzhledem).         const(vzhledem).
m_lemma(node26_34, vzhledem).         const(vzhledem).
m_tag(node26_34, rf_____________).         const(rf_____________).
m_tag0(node26_34,'r'). const('r'). m_tag1(node26_34,'f'). const('f'). 
%%%%%%%% node26_35 %%%%%%%%%%%%%%%%%%%
node(node26_35).
a_afun(node26_35, auxp).         const(auxp).
m_form(node26_35, k).         const(k).
m_lemma(node26_35, k_1).         const(k_1).
m_tag(node26_35, rr__3__________).         const(rr__3__________).
m_tag0(node26_35,'r'). const('r'). m_tag1(node26_35,'r'). const('r'). m_tag4(node26_35,'3'). const('3'). 
%%%%%%%% node26_36 %%%%%%%%%%%%%%%%%%%
node(node26_36).
a_afun(node26_36, adv).         const(adv).
m_form(node26_36, tomu).         const(tomu).
m_lemma(node26_36, ten).         const(ten).
m_tag(node26_36, pdzs3__________).         const(pdzs3__________).
m_tag0(node26_36,'p'). const('p'). m_tag1(node26_36,'d'). const('d'). m_tag2(node26_36,'z'). const('z'). m_tag3(node26_36,'s'). const('s'). m_tag4(node26_36,'3'). const('3'). 
%%%%%%%% node26_37 %%%%%%%%%%%%%%%%%%%
node(node26_37).
a_afun(node26_37, auxc).         const(auxc).
m_form(node26_37, ze).         const(ze).
m_lemma(node26_37, ze).         const(ze).
m_tag(node26_37, j______________).         const(j______________).
m_tag0(node26_37,'j'). const('j'). m_tag1(node26_37,','). const(','). 
%%%%%%%% node26_38 %%%%%%%%%%%%%%%%%%%
node(node26_38).
a_afun(node26_38, auxx).         const(auxx).
m_form(node26_38, x_).         const(x_).
m_lemma(node26_38, x_).         const(x_).
m_tag(node26_38, z______________).         const(z______________).
m_tag0(node26_38,'z'). const('z'). m_tag1(node26_38,':'). const(':'). 
%%%%%%%% node26_39 %%%%%%%%%%%%%%%%%%%
node(node26_39).
functor(node26_39, rstr).         const(rstr).
gram_sempos(node26_39, v).         const(v).
id(node26_39, t_plzensky57870_txt_001_p1s1a24).         const(t_plzensky57870_txt_001_p1s1a24).
t_lemma(node26_39, zamestnat).         const(zamestnat).
%%%%%%%% node26_40 %%%%%%%%%%%%%%%%%%%
node(node26_40).
functor(node26_40, pat).         const(pat).
gram_sempos(node26_40, n_denot).         const(n_denot).
id(node26_40, t_plzensky57870_txt_001_p1s1a25).         const(t_plzensky57870_txt_001_p1s1a25).
t_lemma(node26_40, hasic).         const(hasic).
%%%%%%%% node26_41 %%%%%%%%%%%%%%%%%%%
node(node26_41).
a_afun(node26_41, obj).         const(obj).
m_form(node26_41, hasice).         const(hasice).
m_lemma(node26_41, hasic).         const(hasic).
m_tag(node26_41, nnmp4_____a____).         const(nnmp4_____a____).
m_tag0(node26_41,'n'). const('n'). m_tag1(node26_41,'n'). const('n'). m_tag2(node26_41,'m'). const('m'). m_tag3(node26_41,'p'). const('p'). m_tag4(node26_41,'4'). const('4'). m_tag10(node26_41,'a'). const('a'). 
%%%%%%%% node26_42 %%%%%%%%%%%%%%%%%%%
node(node26_42).
a_afun(node26_42, atr).         const(atr).
m_form(node26_42, zamestnaly).         const(zamestnaly).
m_lemma(node26_42, zamestnat_1__w___vseob__vyznam__cinnost__zamestnani_).         const(zamestnat_1__w___vseob__vyznam__cinnost__zamestnani_).
m_tag(node26_42, vptp___xr_aa___).         const(vptp___xr_aa___).
m_tag0(node26_42,'v'). const('v'). m_tag1(node26_42,'p'). const('p'). m_tag2(node26_42,'t'). const('t'). m_tag3(node26_42,'p'). const('p'). m_tag7(node26_42,'x'). const('x'). m_tag8(node26_42,'r'). const('r'). m_tag10(node26_42,'a'). const('a'). m_tag11(node26_42,'a'). const('a'). 
%%%%%%%% node26_43 %%%%%%%%%%%%%%%%%%%
node(node26_43).
functor(node26_43, act).         const(act).
gram_sempos(node26_43, n_denot).         const(n_denot).
id(node26_43, t_plzensky57870_txt_001_p1s1a26).         const(t_plzensky57870_txt_001_p1s1a26).
t_lemma(node26_43, pozar).         const(pozar).
%%%%%%%% node26_44 %%%%%%%%%%%%%%%%%%%
node(node26_44).
functor(node26_44, rstr).         const(rstr).
gram_sempos(node26_44, adj_quant_def).         const(adj_quant_def).
id(node26_44, t_plzensky57870_txt_001_p1s1a27).         const(t_plzensky57870_txt_001_p1s1a27).
t_lemma(node26_44, dva).         const(dva).
%%%%%%%% node26_45 %%%%%%%%%%%%%%%%%%%
node(node26_45).
a_afun(node26_45, atr).         const(atr).
m_form(node26_45, dva).         const(dva).
m_lemma(node26_45, dva_2).         const(dva_2).
m_tag(node26_45, clyp1__________).         const(clyp1__________).
m_tag0(node26_45,'c'). const('c'). m_tag1(node26_45,'l'). const('l'). m_tag2(node26_45,'y'). const('y'). m_tag3(node26_45,'p'). const('p'). m_tag4(node26_45,'1'). const('1'). 
%%%%%%%% node26_46 %%%%%%%%%%%%%%%%%%%
node(node26_46).
functor(node26_46, rstr).         const(rstr).
gram_sempos(node26_46, adj_denot).         const(adj_denot).
id(node26_46, t_plzensky57870_txt_001_p1s1a28).         const(t_plzensky57870_txt_001_p1s1a28).
t_lemma(node26_46, velky).         const(velky).
%%%%%%%% node26_47 %%%%%%%%%%%%%%%%%%%
node(node26_47).
a_afun(node26_47, atr).         const(atr).
m_form(node26_47, velke).         const(velke).
m_lemma(node26_47, velky).         const(velky).
m_tag(node26_47, aaip1____1a____).         const(aaip1____1a____).
m_tag0(node26_47,'a'). const('a'). m_tag1(node26_47,'a'). const('a'). m_tag2(node26_47,'i'). const('i'). m_tag3(node26_47,'p'). const('p'). m_tag4(node26_47,'1'). const('1'). m_tag9(node26_47,'1'). const('1'). m_tag10(node26_47,'a'). const('a'). 
%%%%%%%% node26_48 %%%%%%%%%%%%%%%%%%%
node(node26_48).
a_afun(node26_48, sb).         const(sb).
m_form(node26_48, pozary).         const(pozary).
m_lemma(node26_48, pozar).         const(pozar).
m_tag(node26_48, nnip1_____a____).         const(nnip1_____a____).
m_tag0(node26_48,'n'). const('n'). m_tag1(node26_48,'n'). const('n'). m_tag2(node26_48,'i'). const('i'). m_tag3(node26_48,'p'). const('p'). m_tag4(node26_48,'1'). const('1'). m_tag10(node26_48,'a'). const('a'). 
%%%%%%%% node26_49 %%%%%%%%%%%%%%%%%%%
node(node26_49).
functor(node26_49, rstr).         const(rstr).
id(node26_49, t_plzensky57870_txt_001_p1s1a29).         const(t_plzensky57870_txt_001_p1s1a29).
t_lemma(node26_49, x_).         const(x_).
%%%%%%%% node26_50 %%%%%%%%%%%%%%%%%%%
node(node26_50).
a_afun(node26_50, auxg).         const(auxg).
m_form(node26_50, x_).         const(x_).
m_lemma(node26_50, x_).         const(x_).
m_tag(node26_50, z______________).         const(z______________).
m_tag0(node26_50,'z'). const('z'). m_tag1(node26_50,':'). const(':'). 
%%%%%%%% node26_51 %%%%%%%%%%%%%%%%%%%
node(node26_51).
functor(node26_51, act).         const(act).
gram_sempos(node26_51, n_denot).         const(n_denot).
id(node26_51, t_plzensky57870_txt_001_p1s1a33).         const(t_plzensky57870_txt_001_p1s1a33).
t_lemma(node26_51, cyklistka).         const(cyklistka).
%%%%%%%% node26_52 %%%%%%%%%%%%%%%%%%%
node(node26_52).
a_afun(node26_52, sb).         const(sb).
m_form(node26_52, cyklistka).         const(cyklistka).
m_lemma(node26_52, cyklistka____2a_).         const(cyklistka____2a_).
m_tag(node26_52, nnfs1_____a____).         const(nnfs1_____a____).
m_tag0(node26_52,'n'). const('n'). m_tag1(node26_52,'n'). const('n'). m_tag2(node26_52,'f'). const('f'). m_tag3(node26_52,'s'). const('s'). m_tag4(node26_52,'1'). const('1'). m_tag10(node26_52,'a'). const('a'). 
%%%%%%%% node26_53 %%%%%%%%%%%%%%%%%%%
node(node26_53).
functor(node26_53, rstr).         const(rstr).
gram_sempos(node26_53, adj_denot).         const(adj_denot).
id(node26_53, t_plzensky57870_txt_001_p1s1a34).         const(t_plzensky57870_txt_001_p1s1a34).
t_lemma(node26_53, srazeny).         const(srazeny).
%%%%%%%% node26_54 %%%%%%%%%%%%%%%%%%%
node(node26_54).
a_afun(node26_54, atr).         const(atr).
m_form(node26_54, srazena).         const(srazena).
m_lemma(node26_54, srazeny____4zit_).         const(srazeny____4zit_).
m_tag(node26_54, aafs1____1a____).         const(aafs1____1a____).
m_tag0(node26_54,'a'). const('a'). m_tag1(node26_54,'a'). const('a'). m_tag2(node26_54,'f'). const('f'). m_tag3(node26_54,'s'). const('s'). m_tag4(node26_54,'1'). const('1'). m_tag9(node26_54,'1'). const('1'). m_tag10(node26_54,'a'). const('a'). 
%%%%%%%% node26_55 %%%%%%%%%%%%%%%%%%%
node(node26_55).
functor(node26_55, act).         const(act).
gram_sempos(node26_55, n_denot).         const(n_denot).
id(node26_55, t_plzensky57870_txt_001_p1s1a35).         const(t_plzensky57870_txt_001_p1s1a35).
t_lemma(node26_55, automobil).         const(automobil).
%%%%%%%% node26_56 %%%%%%%%%%%%%%%%%%%
node(node26_56).
functor(node26_56, rstr).         const(rstr).
gram_sempos(node26_56, adj_denot).         const(adj_denot).
id(node26_56, t_plzensky57870_txt_001_p1s1a36).         const(t_plzensky57870_txt_001_p1s1a36).
t_lemma(node26_56, osobni).         const(osobni).
%%%%%%%% node26_57 %%%%%%%%%%%%%%%%%%%
node(node26_57).
a_afun(node26_57, atr).         const(atr).
m_form(node26_57, osobnim).         const(osobnim).
m_lemma(node26_57, osobni).         const(osobni).
m_tag(node26_57, aais7____1a____).         const(aais7____1a____).
m_tag0(node26_57,'a'). const('a'). m_tag1(node26_57,'a'). const('a'). m_tag2(node26_57,'i'). const('i'). m_tag3(node26_57,'s'). const('s'). m_tag4(node26_57,'7'). const('7'). m_tag9(node26_57,'1'). const('1'). m_tag10(node26_57,'a'). const('a'). 
%%%%%%%% node26_58 %%%%%%%%%%%%%%%%%%%
node(node26_58).
a_afun(node26_58, obj).         const(obj).
m_form(node26_58, automobilem).         const(automobilem).
m_lemma(node26_58, automobil).         const(automobil).
m_tag(node26_58, nnis7_____a____).         const(nnis7_____a____).
m_tag0(node26_58,'n'). const('n'). m_tag1(node26_58,'n'). const('n'). m_tag2(node26_58,'i'). const('i'). m_tag3(node26_58,'s'). const('s'). m_tag4(node26_58,'7'). const('7'). m_tag10(node26_58,'a'). const('a'). 
%%%%%%%% node26_59 %%%%%%%%%%%%%%%%%%%
node(node26_59).
functor(node26_59, means).         const(means).
gram_sempos(node26_59, n_denot_neg).         const(n_denot_neg).
id(node26_59, t_plzensky57870_txt_001_p1s1a37).         const(t_plzensky57870_txt_001_p1s1a37).
t_lemma(node26_59, zraneni).         const(zraneni).
%%%%%%%% node26_60 %%%%%%%%%%%%%%%%%%%
node(node26_60).
functor(node26_60, act).         const(act).
id(node26_60, t_plzensky57870_txt_001_p1s1a64).         const(t_plzensky57870_txt_001_p1s1a64).
t_lemma(node26_60, x_gen).         const(x_gen).
%%%%%%%% node26_61 %%%%%%%%%%%%%%%%%%%
node(node26_61).
a_afun(node26_61, adv).         const(adv).
m_form(node26_61, zranenim).         const(zranenim).
m_lemma(node26_61, zraneni____3it_).         const(zraneni____3it_).
m_tag(node26_61, nnns7_____a____).         const(nnns7_____a____).
m_tag0(node26_61,'n'). const('n'). m_tag1(node26_61,'n'). const('n'). m_tag2(node26_61,'n'). const('n'). m_tag3(node26_61,'s'). const('s'). m_tag4(node26_61,'7'). const('7'). m_tag10(node26_61,'a'). const('a'). 
%%%%%%%% node26_62 %%%%%%%%%%%%%%%%%%%
node(node26_62).
a_afun(node26_62, pred).         const(pred).
m_form(node26_62, podlehla).         const(podlehla).
m_lemma(node26_62, podlehnout__w).         const(podlehnout__w).
m_tag(node26_62, vpqw___xr_aa__1).         const(vpqw___xr_aa__1).
m_tag0(node26_62,'v'). const('v'). m_tag1(node26_62,'p'). const('p'). m_tag2(node26_62,'q'). const('q'). m_tag3(node26_62,'w'). const('w'). m_tag7(node26_62,'x'). const('x'). m_tag8(node26_62,'r'). const('r'). m_tag10(node26_62,'a'). const('a'). m_tag11(node26_62,'a'). const('a'). m_tag14(node26_62,'1'). const('1'). 
%%%%%%%% node26_63 %%%%%%%%%%%%%%%%%%%
node(node26_63).
functor(node26_63, rstr).         const(rstr).
id(node26_63, t_plzensky57870_txt_001_p1s1a38).         const(t_plzensky57870_txt_001_p1s1a38).
t_lemma(node26_63, x_comma).         const(x_comma).
%%%%%%%% node26_64 %%%%%%%%%%%%%%%%%%%
node(node26_64).
functor(node26_64, rstr).         const(rstr).
id(node26_64, t_plzensky57870_txt_001_p1s1a39).         const(t_plzensky57870_txt_001_p1s1a39).
t_lemma(node26_64, x_).         const(x_).
%%%%%%%% node26_65 %%%%%%%%%%%%%%%%%%%
node(node26_65).
a_afun(node26_65, auxg).         const(auxg).
m_form(node26_65, x_).         const(x_).
m_lemma(node26_65, x_).         const(x_).
m_tag(node26_65, z______________).         const(z______________).
m_tag0(node26_65,'z'). const('z'). m_tag1(node26_65,':'). const(':'). 
%%%%%%%% node26_66 %%%%%%%%%%%%%%%%%%%
node(node26_66).
functor(node26_66, rstr).         const(rstr).
id(node26_66, t_plzensky57870_txt_001_p1s1a40).         const(t_plzensky57870_txt_001_p1s1a40).
t_lemma(node26_66, a).         const(a).
%%%%%%%% node26_67 %%%%%%%%%%%%%%%%%%%
node(node26_67).
a_afun(node26_67, coord).         const(coord).
m_form(node26_67, a).         const(a).
m_lemma(node26_67, a_1).         const(a_1).
m_tag(node26_67, j______________).         const(j______________).
m_tag0(node26_67,'j'). const('j'). m_tag1(node26_67,'^'). const('^'). 
%%%%%%%% node26_68 %%%%%%%%%%%%%%%%%%%
node(node26_68).
functor(node26_68, eff).         const(eff).
gram_sempos(node26_68, v).         const(v).
id(node26_68, t_plzensky57870_txt_001_p1s1a43).         const(t_plzensky57870_txt_001_p1s1a43).
t_lemma(node26_68, zahynout).         const(zahynout).
%%%%%%%% node26_69 %%%%%%%%%%%%%%%%%%%
node(node26_69).
functor(node26_69, twhen).         const(twhen).
gram_sempos(node26_69, n_denot).         const(n_denot).
id(node26_69, t_plzensky57870_txt_001_p1s1a45).         const(t_plzensky57870_txt_001_p1s1a45).
t_lemma(node26_69, nehoda).         const(nehoda).
%%%%%%%% node26_70 %%%%%%%%%%%%%%%%%%%
node(node26_70).
functor(node26_70, act).         const(act).
id(node26_70, t_plzensky57870_txt_001_p1s1a65).         const(t_plzensky57870_txt_001_p1s1a65).
t_lemma(node26_70, x_gen).         const(x_gen).
%%%%%%%% node26_71 %%%%%%%%%%%%%%%%%%%
node(node26_71).
a_afun(node26_71, auxp).         const(auxp).
m_form(node26_71, pri).         const(pri).
m_lemma(node26_71, pri_1).         const(pri_1).
m_tag(node26_71, rr__6__________).         const(rr__6__________).
m_tag0(node26_71,'r'). const('r'). m_tag1(node26_71,'r'). const('r'). m_tag4(node26_71,'6'). const('6'). 
%%%%%%%% node26_72 %%%%%%%%%%%%%%%%%%%
node(node26_72).
a_afun(node26_72, adv).         const(adv).
m_form(node26_72, nehode).         const(nehode).
m_lemma(node26_72, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node26_72, nnfs6_____a____).         const(nnfs6_____a____).
m_tag0(node26_72,'n'). const('n'). m_tag1(node26_72,'n'). const('n'). m_tag2(node26_72,'f'). const('f'). m_tag3(node26_72,'s'). const('s'). m_tag4(node26_72,'6'). const('6'). m_tag10(node26_72,'a'). const('a'). 
%%%%%%%% node26_73 %%%%%%%%%%%%%%%%%%%
node(node26_73).
functor(node26_73, conj).         const(conj).
id(node26_73, t_plzensky57870_txt_001_p1s1a48).         const(t_plzensky57870_txt_001_p1s1a48).
t_lemma(node26_73, a).         const(a).
%%%%%%%% node26_74 %%%%%%%%%%%%%%%%%%%
node(node26_74).
functor(node26_74, loc).         const(loc).
gram_sempos(node26_74, n_denot).         const(n_denot).
id(node26_74, t_plzensky57870_txt_001_p1s1a47).         const(t_plzensky57870_txt_001_p1s1a47).
t_lemma(node26_74, obec).         const(obec).
%%%%%%%% node26_75 %%%%%%%%%%%%%%%%%%%
node(node26_75).
a_afun(node26_75, auxp).         const(auxp).
m_form(node26_75, mezi).         const(mezi).
m_lemma(node26_75, mezi_1).         const(mezi_1).
m_tag(node26_75, rr__7__________).         const(rr__7__________).
m_tag0(node26_75,'r'). const('r'). m_tag1(node26_75,'r'). const('r'). m_tag4(node26_75,'7'). const('7'). 
%%%%%%%% node26_76 %%%%%%%%%%%%%%%%%%%
node(node26_76).
a_afun(node26_76, atr).         const(atr).
m_form(node26_76, obcemi).         const(obcemi).
m_lemma(node26_76, obec).         const(obec).
m_tag(node26_76, nnfp7_____a____).         const(nnfp7_____a____).
m_tag0(node26_76,'n'). const('n'). m_tag1(node26_76,'n'). const('n'). m_tag2(node26_76,'f'). const('f'). m_tag3(node26_76,'p'). const('p'). m_tag4(node26_76,'7'). const('7'). m_tag10(node26_76,'a'). const('a'). 
%%%%%%%% node26_77 %%%%%%%%%%%%%%%%%%%
node(node26_77).
functor(node26_77, rstr).         const(rstr).
gram_sempos(node26_77, n_denot).         const(n_denot).
id(node26_77, t_plzensky57870_txt_001_p1s1a50).         const(t_plzensky57870_txt_001_p1s1a50).
t_lemma(node26_77, nemnenice).         const(nemnenice).
%%%%%%%% node26_78 %%%%%%%%%%%%%%%%%%%
node(node26_78).
a_afun(node26_78, atr).         const(atr).
m_form(node26_78, nemnenice).         const(nemnenice).
m_lemma(node26_78, nemnenice__g).         const(nemnenice__g).
m_tag(node26_78, nnfp1_____a____).         const(nnfp1_____a____).
m_tag0(node26_78,'n'). const('n'). m_tag1(node26_78,'n'). const('n'). m_tag2(node26_78,'f'). const('f'). m_tag3(node26_78,'p'). const('p'). m_tag4(node26_78,'1'). const('1'). m_tag10(node26_78,'a'). const('a'). 
%%%%%%%% node26_79 %%%%%%%%%%%%%%%%%%%
node(node26_79).
a_afun(node26_79, coord).         const(coord).
m_form(node26_79, a).         const(a).
m_lemma(node26_79, a_1).         const(a_1).
m_tag(node26_79, j______________).         const(j______________).
m_tag0(node26_79,'j'). const('j'). m_tag1(node26_79,'^'). const('^'). 
%%%%%%%% node26_80 %%%%%%%%%%%%%%%%%%%
node(node26_80).
functor(node26_80, act).         const(act).
gram_sempos(node26_80, n_denot).         const(n_denot).
id(node26_80, t_plzensky57870_txt_001_p1s1a60).         const(t_plzensky57870_txt_001_p1s1a60).
t_lemma(node26_80, obec).         const(obec).
%%%%%%%% node26_81 %%%%%%%%%%%%%%%%%%%
node(node26_81).
functor(node26_81, rstr).         const(rstr).
gram_sempos(node26_81, n_denot).         const(n_denot).
id(node26_81, t_plzensky57870_txt_001_p1s1a49).         const(t_plzensky57870_txt_001_p1s1a49).
t_lemma(node26_81, cernovice).         const(cernovice).
%%%%%%%% node26_82 %%%%%%%%%%%%%%%%%%%
node(node26_82).
a_afun(node26_82, atr).         const(atr).
m_form(node26_82, cernovice).         const(cernovice).
m_lemma(node26_82, cernovice__g).         const(cernovice__g).
m_tag(node26_82, nnfp1_____a____).         const(nnfp1_____a____).
m_tag0(node26_82,'n'). const('n'). m_tag1(node26_82,'n'). const('n'). m_tag2(node26_82,'f'). const('f'). m_tag3(node26_82,'p'). const('p'). m_tag4(node26_82,'1'). const('1'). m_tag10(node26_82,'a'). const('a'). 
%%%%%%%% node26_83 %%%%%%%%%%%%%%%%%%%
node(node26_83).
a_afun(node26_83, auxp).         const(auxp).
m_form(node26_83, mezi).         const(mezi).
m_lemma(node26_83, mezi_1).         const(mezi_1).
m_tag(node26_83, rr__7__________).         const(rr__7__________).
m_tag0(node26_83,'r'). const('r'). m_tag1(node26_83,'r'). const('r'). m_tag4(node26_83,'7'). const('7'). 
%%%%%%%% node26_84 %%%%%%%%%%%%%%%%%%%
node(node26_84).
a_afun(node26_84, atr).         const(atr).
m_form(node26_84, obcemi).         const(obcemi).
m_lemma(node26_84, obec).         const(obec).
m_tag(node26_84, nnfp7_____a____).         const(nnfp7_____a____).
m_tag0(node26_84,'n'). const('n'). m_tag1(node26_84,'n'). const('n'). m_tag2(node26_84,'f'). const('f'). m_tag3(node26_84,'p'). const('p'). m_tag4(node26_84,'7'). const('7'). m_tag10(node26_84,'a'). const('a'). 
%%%%%%%% node26_85 %%%%%%%%%%%%%%%%%%%
node(node26_85).
a_afun(node26_85, obj).         const(obj).
m_form(node26_85, zahynul).         const(zahynul).
m_lemma(node26_85, zahynout).         const(zahynout).
m_tag(node26_85, vpys___xr_aa___).         const(vpys___xr_aa___).
m_tag0(node26_85,'v'). const('v'). m_tag1(node26_85,'p'). const('p'). m_tag2(node26_85,'y'). const('y'). m_tag3(node26_85,'s'). const('s'). m_tag7(node26_85,'x'). const('x'). m_tag8(node26_85,'r'). const('r'). m_tag10(node26_85,'a'). const('a'). m_tag11(node26_85,'a'). const('a'). 
%%%%%%%% node26_86 %%%%%%%%%%%%%%%%%%%
node(node26_86).
functor(node26_86, act).         const(act).
gram_sempos(node26_86, n_denot).         const(n_denot).
id(node26_86, t_plzensky57870_txt_001_p1s1a51).         const(t_plzensky57870_txt_001_p1s1a51).
t_lemma(node26_86, ridic).         const(ridic).
%%%%%%%% node26_87 %%%%%%%%%%%%%%%%%%%
node(node26_87).
a_afun(node26_87, sb).         const(sb).
m_form(node26_87, ridic).         const(ridic).
m_lemma(node26_87, ridic).         const(ridic).
m_tag(node26_87, nnms1_____a____).         const(nnms1_____a____).
m_tag0(node26_87,'n'). const('n'). m_tag1(node26_87,'n'). const('n'). m_tag2(node26_87,'m'). const('m'). m_tag3(node26_87,'s'). const('s'). m_tag4(node26_87,'1'). const('1'). m_tag10(node26_87,'a'). const('a'). 
%%%%%%%% node26_88 %%%%%%%%%%%%%%%%%%%
node(node26_88).
a_afun(node26_88, auxx).         const(auxx).
m_form(node26_88, x_).         const(x_).
m_lemma(node26_88, x_).         const(x_).
m_tag(node26_88, z______________).         const(z______________).
m_tag0(node26_88,'z'). const('z'). m_tag1(node26_88,':'). const(':'). 
%%%%%%%% node26_89 %%%%%%%%%%%%%%%%%%%
node(node26_89).
functor(node26_89, rstr).         const(rstr).
gram_sempos(node26_89, v).         const(v).
id(node26_89, t_plzensky57870_txt_001_p1s1a53).         const(t_plzensky57870_txt_001_p1s1a53).
t_lemma(node26_89, venovat_se).         const(venovat_se).
%%%%%%%% node26_90 %%%%%%%%%%%%%%%%%%%
node(node26_90).
functor(node26_90, act).         const(act).
id(node26_90, t_plzensky57870_txt_001_p1s1a66).         const(t_plzensky57870_txt_001_p1s1a66).
t_lemma(node26_90, x_perspron).         const(x_perspron).
%%%%%%%% node26_91 %%%%%%%%%%%%%%%%%%%
node(node26_91).
a_afun(node26_91, auxv).         const(auxv).
m_form(node26_91, budu).         const(budu).
m_lemma(node26_91, byt).         const(byt).
m_tag(node26_91, vb_s___1f_aa___).         const(vb_s___1f_aa___).
m_tag0(node26_91,'v'). const('v'). m_tag1(node26_91,'b'). const('b'). m_tag3(node26_91,'s'). const('s'). m_tag7(node26_91,'1'). const('1'). m_tag8(node26_91,'f'). const('f'). m_tag10(node26_91,'a'). const('a'). m_tag11(node26_91,'a'). const('a'). 
%%%%%%%% node26_92 %%%%%%%%%%%%%%%%%%%
node(node26_92).
a_afun(node26_92, auxt).         const(auxt).
m_form(node26_92, se).         const(se).
m_lemma(node26_92, se___zvr__zajmeno_castice_).         const(se___zvr__zajmeno_castice_).
m_tag(node26_92, p7_x4__________).         const(p7_x4__________).
m_tag0(node26_92,'p'). const('p'). m_tag1(node26_92,'7'). const('7'). m_tag3(node26_92,'x'). const('x'). m_tag4(node26_92,'4'). const('4'). 
%%%%%%%% node26_93 %%%%%%%%%%%%%%%%%%%
node(node26_93).
a_afun(node26_93, obj).         const(obj).
m_form(node26_93, venovat).         const(venovat).
m_lemma(node26_93, venovat__t).         const(venovat__t).
m_tag(node26_93, vf________a____).         const(vf________a____).
m_tag0(node26_93,'v'). const('v'). m_tag1(node26_93,'f'). const('f'). m_tag10(node26_93,'a'). const('a'). 
%%%%%%%% node26_94 %%%%%%%%%%%%%%%%%%%
node(node26_94).
functor(node26_94, pat).         const(pat).
gram_sempos(node26_94, n_denot_neg).         const(n_denot_neg).
id(node26_94, t_plzensky57870_txt_001_p1s1a56).         const(t_plzensky57870_txt_001_p1s1a56).
t_lemma(node26_94, udalost).         const(udalost).
%%%%%%%% node26_95 %%%%%%%%%%%%%%%%%%%
node(node26_95).
functor(node26_95, rstr).         const(rstr).
gram_sempos(node26_95, adj_pron_indef).         const(adj_pron_indef).
id(node26_95, t_plzensky57870_txt_001_p1s1a57).         const(t_plzensky57870_txt_001_p1s1a57).
t_lemma(node26_95, ktery).         const(ktery).
%%%%%%%% node26_96 %%%%%%%%%%%%%%%%%%%
node(node26_96).
functor(node26_96, rhem).         const(rhem).
id(node26_96, t_plzensky57870_txt_001_p1s1a58).         const(t_plzensky57870_txt_001_p1s1a58).
t_lemma(node26_96, pouze).         const(pouze).
%%%%%%%% node26_97 %%%%%%%%%%%%%%%%%%%
node(node26_97).
a_afun(node26_97, auxz).         const(auxz).
m_form(node26_97, pouze).         const(pouze).
m_lemma(node26_97, pouze).         const(pouze).
m_tag(node26_97, db_____________).         const(db_____________).
m_tag0(node26_97,'d'). const('d'). m_tag1(node26_97,'b'). const('b'). 
%%%%%%%% node26_98 %%%%%%%%%%%%%%%%%%%
node(node26_98).
a_afun(node26_98, atr).         const(atr).
m_form(node26_98, nekterym).         const(nekterym).
m_lemma(node26_98, nektery).         const(nektery).
m_tag(node26_98, pzxp3__________).         const(pzxp3__________).
m_tag0(node26_98,'p'). const('p'). m_tag1(node26_98,'z'). const('z'). m_tag2(node26_98,'x'). const('x'). m_tag3(node26_98,'p'). const('p'). m_tag4(node26_98,'3'). const('3'). 
%%%%%%%% node26_99 %%%%%%%%%%%%%%%%%%%
node(node26_99).
functor(node26_99, rstr).         const(rstr).
gram_sempos(node26_99, adj_denot).         const(adj_denot).
id(node26_99, t_plzensky57870_txt_001_p1s1a59).         const(t_plzensky57870_txt_001_p1s1a59).
t_lemma(node26_99, nedelni).         const(nedelni).
%%%%%%%% node26_100 %%%%%%%%%%%%%%%%%%%
node(node26_100).
a_afun(node26_100, atr).         const(atr).
m_form(node26_100, nedelnim).         const(nedelnim).
m_lemma(node26_100, nedelni).         const(nedelni).
m_tag(node26_100, aafp3____1a____).         const(aafp3____1a____).
m_tag0(node26_100,'a'). const('a'). m_tag1(node26_100,'a'). const('a'). m_tag2(node26_100,'f'). const('f'). m_tag3(node26_100,'p'). const('p'). m_tag4(node26_100,'3'). const('3'). m_tag9(node26_100,'1'). const('1'). m_tag10(node26_100,'a'). const('a'). 
%%%%%%%% node26_101 %%%%%%%%%%%%%%%%%%%
node(node26_101).
a_afun(node26_101, obj).         const(obj).
m_form(node26_101, udalostem).         const(udalostem).
m_lemma(node26_101, udalost__a____3y_).         const(udalost__a____3y_).
m_tag(node26_101, nnfp3_____a____).         const(nnfp3_____a____).
m_tag0(node26_101,'n'). const('n'). m_tag1(node26_101,'n'). const('n'). m_tag2(node26_101,'f'). const('f'). m_tag3(node26_101,'p'). const('p'). m_tag4(node26_101,'3'). const('3'). m_tag10(node26_101,'a'). const('a'). 
edge(node26_0, node26_1).
edge(node26_1, node26_2).
edge(node26_1, node26_3).
edge(node26_3, node26_4).
edge(node26_4, node26_5).
edge(node26_4, node26_6).
edge(node26_4, node26_7).
edge(node26_7, node26_8).
edge(node26_8, node26_9).
edge(node26_8, node26_10).
edge(node26_7, node26_11).
edge(node26_11, node26_12).
edge(node26_11, node26_13).
edge(node26_7, node26_14).
edge(node26_7, node26_15).
edge(node26_15, node26_16).
edge(node26_16, node26_17).
edge(node26_16, node26_18).
edge(node26_15, node26_19).
edge(node26_19, node26_20).
edge(node26_15, node26_21).
edge(node26_21, node26_22).
edge(node26_15, node26_23).
edge(node26_15, node26_24).
edge(node26_4, node26_25).
edge(node26_25, node26_26).
edge(node26_4, node26_27).
edge(node26_27, node26_28).
edge(node26_4, node26_29).
edge(node26_4, node26_30).
edge(node26_4, node26_31).
edge(node26_31, node26_32).
edge(node26_31, node26_33).
edge(node26_3, node26_34).
edge(node26_3, node26_35).
edge(node26_3, node26_36).
edge(node26_3, node26_37).
edge(node26_3, node26_38).
edge(node26_3, node26_39).
edge(node26_39, node26_40).
edge(node26_40, node26_41).
edge(node26_39, node26_42).
edge(node26_39, node26_43).
edge(node26_43, node26_44).
edge(node26_44, node26_45).
edge(node26_43, node26_46).
edge(node26_46, node26_47).
edge(node26_43, node26_48).
edge(node26_3, node26_49).
edge(node26_49, node26_50).
edge(node26_1, node26_51).
edge(node26_51, node26_52).
edge(node26_51, node26_53).
edge(node26_53, node26_54).
edge(node26_53, node26_55).
edge(node26_55, node26_56).
edge(node26_56, node26_57).
edge(node26_55, node26_58).
edge(node26_1, node26_59).
edge(node26_59, node26_60).
edge(node26_59, node26_61).
edge(node26_1, node26_62).
edge(node26_1, node26_63).
edge(node26_63, node26_64).
edge(node26_64, node26_65).
edge(node26_63, node26_66).
edge(node26_66, node26_67).
edge(node26_63, node26_68).
edge(node26_68, node26_69).
edge(node26_69, node26_70).
edge(node26_69, node26_71).
edge(node26_69, node26_72).
edge(node26_69, node26_73).
edge(node26_73, node26_74).
edge(node26_74, node26_75).
edge(node26_74, node26_76).
edge(node26_74, node26_77).
edge(node26_77, node26_78).
edge(node26_73, node26_79).
edge(node26_73, node26_80).
edge(node26_80, node26_81).
edge(node26_81, node26_82).
edge(node26_80, node26_83).
edge(node26_80, node26_84).
edge(node26_68, node26_85).
edge(node26_68, node26_86).
edge(node26_86, node26_87).
edge(node26_63, node26_88).
edge(node26_63, node26_89).
edge(node26_89, node26_90).
edge(node26_89, node26_91).
edge(node26_89, node26_92).
edge(node26_89, node26_93).
edge(node26_89, node26_94).
edge(node26_94, node26_95).
edge(node26_95, node26_96).
edge(node26_96, node26_97).
edge(node26_95, node26_98).
edge(node26_94, node26_99).
edge(node26_99, node26_100).
edge(node26_94, node26_101).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% zahynuly pri nich dve osoby. 
tree_root(node27_0).
%%%%%%%% node27_0 %%%%%%%%%%%%%%%%%%%
node(node27_0).
id(node27_0, t_plzensky57870_txt_001_p8s2).         const(t_plzensky57870_txt_001_p8s2).
%%%%%%%% node27_1 %%%%%%%%%%%%%%%%%%%
node(node27_1).
functor(node27_1, pred).         const(pred).
gram_sempos(node27_1, v).         const(v).
id(node27_1, t_plzensky57870_txt_001_p8s2a1).         const(t_plzensky57870_txt_001_p8s2a1).
t_lemma(node27_1, zahynout).         const(zahynout).
%%%%%%%% node27_2 %%%%%%%%%%%%%%%%%%%
node(node27_2).
a_afun(node27_2, pred).         const(pred).
m_form(node27_2, zahynuly).         const(zahynuly).
m_lemma(node27_2, zahynout).         const(zahynout).
m_tag(node27_2, vptp___xr_aa___).         const(vptp___xr_aa___).
m_tag0(node27_2,'v'). const('v'). m_tag1(node27_2,'p'). const('p'). m_tag2(node27_2,'t'). const('t'). m_tag3(node27_2,'p'). const('p'). m_tag7(node27_2,'x'). const('x'). m_tag8(node27_2,'r'). const('r'). m_tag10(node27_2,'a'). const('a'). m_tag11(node27_2,'a'). const('a'). 
%%%%%%%% node27_3 %%%%%%%%%%%%%%%%%%%
node(node27_3).
functor(node27_3, twhen).         const(twhen).
gram_sempos(node27_3, n_pron_def_pers).         const(n_pron_def_pers).
id(node27_3, t_plzensky57870_txt_001_p8s2a3).         const(t_plzensky57870_txt_001_p8s2a3).
t_lemma(node27_3, x_perspron).         const(x_perspron).
%%%%%%%% node27_4 %%%%%%%%%%%%%%%%%%%
node(node27_4).
a_afun(node27_4, auxp).         const(auxp).
m_form(node27_4, pri).         const(pri).
m_lemma(node27_4, pri_1).         const(pri_1).
m_tag(node27_4, rr__6__________).         const(rr__6__________).
m_tag0(node27_4,'r'). const('r'). m_tag1(node27_4,'r'). const('r'). m_tag4(node27_4,'6'). const('6'). 
%%%%%%%% node27_5 %%%%%%%%%%%%%%%%%%%
node(node27_5).
a_afun(node27_5, adv).         const(adv).
m_form(node27_5, nich).         const(nich).
m_lemma(node27_5, on_1).         const(on_1).
m_tag(node27_5, p5xp6__3_______).         const(p5xp6__3_______).
m_tag0(node27_5,'p'). const('p'). m_tag1(node27_5,'5'). const('5'). m_tag2(node27_5,'x'). const('x'). m_tag3(node27_5,'p'). const('p'). m_tag4(node27_5,'6'). const('6'). m_tag7(node27_5,'3'). const('3'). 
%%%%%%%% node27_6 %%%%%%%%%%%%%%%%%%%
node(node27_6).
functor(node27_6, act).         const(act).
gram_sempos(node27_6, n_denot).         const(n_denot).
id(node27_6, t_plzensky57870_txt_001_p8s2a4).         const(t_plzensky57870_txt_001_p8s2a4).
t_lemma(node27_6, osoba).         const(osoba).
%%%%%%%% node27_7 %%%%%%%%%%%%%%%%%%%
node(node27_7).
functor(node27_7, rstr).         const(rstr).
gram_sempos(node27_7, adj_quant_def).         const(adj_quant_def).
id(node27_7, t_plzensky57870_txt_001_p8s2a5).         const(t_plzensky57870_txt_001_p8s2a5).
t_lemma(node27_7, dva).         const(dva).
%%%%%%%% node27_8 %%%%%%%%%%%%%%%%%%%
node(node27_8).
a_afun(node27_8, atr).         const(atr).
m_form(node27_8, dve).         const(dve).
m_lemma(node27_8, dva_2).         const(dva_2).
m_tag(node27_8, clhp1__________).         const(clhp1__________).
m_tag0(node27_8,'c'). const('c'). m_tag1(node27_8,'l'). const('l'). m_tag2(node27_8,'h'). const('h'). m_tag3(node27_8,'p'). const('p'). m_tag4(node27_8,'1'). const('1'). 
%%%%%%%% node27_9 %%%%%%%%%%%%%%%%%%%
node(node27_9).
a_afun(node27_9, sb).         const(sb).
m_form(node27_9, osoby).         const(osoby).
m_lemma(node27_9, osoba).         const(osoba).
m_tag(node27_9, nnfp1_____a____).         const(nnfp1_____a____).
m_tag0(node27_9,'n'). const('n'). m_tag1(node27_9,'n'). const('n'). m_tag2(node27_9,'f'). const('f'). m_tag3(node27_9,'p'). const('p'). m_tag4(node27_9,'1'). const('1'). m_tag10(node27_9,'a'). const('a'). 
edge(node27_0, node27_1).
edge(node27_1, node27_2).
edge(node27_1, node27_3).
edge(node27_3, node27_4).
edge(node27_3, node27_5).
edge(node27_1, node27_6).
edge(node27_6, node27_7).
edge(node27_7, node27_8).
edge(node27_6, node27_9).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% pri nehode byl usmrcen muz v osobnim automobilu. 
tree_root(node28_0).
%%%%%%%% node28_0 %%%%%%%%%%%%%%%%%%%
node(node28_0).
id(node28_0, t_plzensky62815_txt_001_p1s4).         const(t_plzensky62815_txt_001_p1s4).
%%%%%%%% node28_1 %%%%%%%%%%%%%%%%%%%
node(node28_1).
functor(node28_1, pred).         const(pred).
gram_sempos(node28_1, v).         const(v).
id(node28_1, t_plzensky62815_txt_001_p1s4a1).         const(t_plzensky62815_txt_001_p1s4a1).
t_lemma(node28_1, usmrtit).         const(usmrtit).
%%%%%%%% node28_2 %%%%%%%%%%%%%%%%%%%
node(node28_2).
functor(node28_2, act).         const(act).
id(node28_2, t_plzensky62815_txt_001_p1s4a9).         const(t_plzensky62815_txt_001_p1s4a9).
t_lemma(node28_2, x_gen).         const(x_gen).
%%%%%%%% node28_3 %%%%%%%%%%%%%%%%%%%
node(node28_3).
functor(node28_3, twhen).         const(twhen).
gram_sempos(node28_3, n_denot).         const(n_denot).
id(node28_3, t_plzensky62815_txt_001_p1s4a3).         const(t_plzensky62815_txt_001_p1s4a3).
t_lemma(node28_3, nehoda).         const(nehoda).
%%%%%%%% node28_4 %%%%%%%%%%%%%%%%%%%
node(node28_4).
a_afun(node28_4, auxp).         const(auxp).
m_form(node28_4, pri).         const(pri).
m_lemma(node28_4, pri_1).         const(pri_1).
m_tag(node28_4, rr__6__________).         const(rr__6__________).
m_tag0(node28_4,'r'). const('r'). m_tag1(node28_4,'r'). const('r'). m_tag4(node28_4,'6'). const('6'). 
%%%%%%%% node28_5 %%%%%%%%%%%%%%%%%%%
node(node28_5).
a_afun(node28_5, adv).         const(adv).
m_form(node28_5, nehode).         const(nehode).
m_lemma(node28_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node28_5, nnfs6_____a____).         const(nnfs6_____a____).
m_tag0(node28_5,'n'). const('n'). m_tag1(node28_5,'n'). const('n'). m_tag2(node28_5,'f'). const('f'). m_tag3(node28_5,'s'). const('s'). m_tag4(node28_5,'6'). const('6'). m_tag10(node28_5,'a'). const('a'). 
%%%%%%%% node28_6 %%%%%%%%%%%%%%%%%%%
node(node28_6).
a_afun(node28_6, auxv).         const(auxv).
m_form(node28_6, byl).         const(byl).
m_lemma(node28_6, byt).         const(byt).
m_tag(node28_6, vpys___xr_aa___).         const(vpys___xr_aa___).
m_tag0(node28_6,'v'). const('v'). m_tag1(node28_6,'p'). const('p'). m_tag2(node28_6,'y'). const('y'). m_tag3(node28_6,'s'). const('s'). m_tag7(node28_6,'x'). const('x'). m_tag8(node28_6,'r'). const('r'). m_tag10(node28_6,'a'). const('a'). m_tag11(node28_6,'a'). const('a'). 
%%%%%%%% node28_7 %%%%%%%%%%%%%%%%%%%
node(node28_7).
a_afun(node28_7, pred).         const(pred).
m_form(node28_7, usmrcen).         const(usmrcen).
m_lemma(node28_7, usmrtit__w).         const(usmrtit__w).
m_tag(node28_7, vsys___xx_ap___).         const(vsys___xx_ap___).
m_tag0(node28_7,'v'). const('v'). m_tag1(node28_7,'s'). const('s'). m_tag2(node28_7,'y'). const('y'). m_tag3(node28_7,'s'). const('s'). m_tag7(node28_7,'x'). const('x'). m_tag8(node28_7,'x'). const('x'). m_tag10(node28_7,'a'). const('a'). m_tag11(node28_7,'p'). const('p'). 
%%%%%%%% node28_8 %%%%%%%%%%%%%%%%%%%
node(node28_8).
functor(node28_8, pat).         const(pat).
gram_sempos(node28_8, n_denot).         const(n_denot).
id(node28_8, t_plzensky62815_txt_001_p1s4a5).         const(t_plzensky62815_txt_001_p1s4a5).
t_lemma(node28_8, muz).         const(muz).
%%%%%%%% node28_9 %%%%%%%%%%%%%%%%%%%
node(node28_9).
a_afun(node28_9, sb).         const(sb).
m_form(node28_9, muz).         const(muz).
m_lemma(node28_9, muz).         const(muz).
m_tag(node28_9, nnms1_____a____).         const(nnms1_____a____).
m_tag0(node28_9,'n'). const('n'). m_tag1(node28_9,'n'). const('n'). m_tag2(node28_9,'m'). const('m'). m_tag3(node28_9,'s'). const('s'). m_tag4(node28_9,'1'). const('1'). m_tag10(node28_9,'a'). const('a'). 
%%%%%%%% node28_10 %%%%%%%%%%%%%%%%%%%
node(node28_10).
functor(node28_10, loc).         const(loc).
gram_sempos(node28_10, n_denot).         const(n_denot).
id(node28_10, t_plzensky62815_txt_001_p1s4a7).         const(t_plzensky62815_txt_001_p1s4a7).
t_lemma(node28_10, automobil).         const(automobil).
%%%%%%%% node28_11 %%%%%%%%%%%%%%%%%%%
node(node28_11).
functor(node28_11, rstr).         const(rstr).
gram_sempos(node28_11, adj_denot).         const(adj_denot).
id(node28_11, t_plzensky62815_txt_001_p1s4a8).         const(t_plzensky62815_txt_001_p1s4a8).
t_lemma(node28_11, osobni).         const(osobni).
%%%%%%%% node28_12 %%%%%%%%%%%%%%%%%%%
node(node28_12).
a_afun(node28_12, atr).         const(atr).
m_form(node28_12, osobnim).         const(osobnim).
m_lemma(node28_12, osobni).         const(osobni).
m_tag(node28_12, aais6____1a____).         const(aais6____1a____).
m_tag0(node28_12,'a'). const('a'). m_tag1(node28_12,'a'). const('a'). m_tag2(node28_12,'i'). const('i'). m_tag3(node28_12,'s'). const('s'). m_tag4(node28_12,'6'). const('6'). m_tag9(node28_12,'1'). const('1'). m_tag10(node28_12,'a'). const('a'). 
%%%%%%%% node28_13 %%%%%%%%%%%%%%%%%%%
node(node28_13).
a_afun(node28_13, auxp).         const(auxp).
m_form(node28_13, v).         const(v).
m_lemma(node28_13, v_1).         const(v_1).
m_tag(node28_13, rr__6__________).         const(rr__6__________).
m_tag0(node28_13,'r'). const('r'). m_tag1(node28_13,'r'). const('r'). m_tag4(node28_13,'6'). const('6'). 
%%%%%%%% node28_14 %%%%%%%%%%%%%%%%%%%
node(node28_14).
a_afun(node28_14, atr).         const(atr).
m_form(node28_14, automobilu).         const(automobilu).
m_lemma(node28_14, automobil).         const(automobil).
m_tag(node28_14, nnis6_____a____).         const(nnis6_____a____).
m_tag0(node28_14,'n'). const('n'). m_tag1(node28_14,'n'). const('n'). m_tag2(node28_14,'i'). const('i'). m_tag3(node28_14,'s'). const('s'). m_tag4(node28_14,'6'). const('6'). m_tag10(node28_14,'a'). const('a'). 
edge(node28_0, node28_1).
edge(node28_1, node28_2).
edge(node28_1, node28_3).
edge(node28_3, node28_4).
edge(node28_3, node28_5).
edge(node28_1, node28_6).
edge(node28_1, node28_7).
edge(node28_1, node28_8).
edge(node28_8, node28_9).
edge(node28_8, node28_10).
edge(node28_10, node28_11).
edge(node28_11, node28_12).
edge(node28_10, node28_13).
edge(node28_10, node28_14).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% pri druhe nehode byla tezce zranena jedna osoba a na misto byl povolan vrtulnik lzs. 
tree_root(node29_0).
%%%%%%%% node29_0 %%%%%%%%%%%%%%%%%%%
node(node29_0).
id(node29_0, t_plzensky62815_txt_001_p1s12).         const(t_plzensky62815_txt_001_p1s12).
%%%%%%%% node29_1 %%%%%%%%%%%%%%%%%%%
node(node29_1).
functor(node29_1, conj).         const(conj).
id(node29_1, t_plzensky62815_txt_001_p1s12a1).         const(t_plzensky62815_txt_001_p1s12a1).
t_lemma(node29_1, a).         const(a).
%%%%%%%% node29_2 %%%%%%%%%%%%%%%%%%%
node(node29_2).
functor(node29_2, act).         const(act).
id(node29_2, t_plzensky62815_txt_001_p1s12a16).         const(t_plzensky62815_txt_001_p1s12a16).
t_lemma(node29_2, x_gen).         const(x_gen).
%%%%%%%% node29_3 %%%%%%%%%%%%%%%%%%%
node(node29_3).
functor(node29_3, pred).         const(pred).
gram_sempos(node29_3, v).         const(v).
id(node29_3, t_plzensky62815_txt_001_p1s12a2).         const(t_plzensky62815_txt_001_p1s12a2).
t_lemma(node29_3, zranit).         const(zranit).
%%%%%%%% node29_4 %%%%%%%%%%%%%%%%%%%
node(node29_4).
functor(node29_4, twhen).         const(twhen).
gram_sempos(node29_4, n_denot).         const(n_denot).
id(node29_4, t_plzensky62815_txt_001_p1s12a4).         const(t_plzensky62815_txt_001_p1s12a4).
t_lemma(node29_4, nehoda).         const(nehoda).
%%%%%%%% node29_5 %%%%%%%%%%%%%%%%%%%
node(node29_5).
functor(node29_5, rstr).         const(rstr).
gram_sempos(node29_5, adj_quant_def).         const(adj_quant_def).
id(node29_5, t_plzensky62815_txt_001_p1s12a5).         const(t_plzensky62815_txt_001_p1s12a5).
t_lemma(node29_5, dva).         const(dva).
%%%%%%%% node29_6 %%%%%%%%%%%%%%%%%%%
node(node29_6).
a_afun(node29_6, atr).         const(atr).
m_form(node29_6, druhe).         const(druhe).
m_lemma(node29_6, druhy_2).         const(druhy_2).
m_tag(node29_6, crfs6__________).         const(crfs6__________).
m_tag0(node29_6,'c'). const('c'). m_tag1(node29_6,'r'). const('r'). m_tag2(node29_6,'f'). const('f'). m_tag3(node29_6,'s'). const('s'). m_tag4(node29_6,'6'). const('6'). 
%%%%%%%% node29_7 %%%%%%%%%%%%%%%%%%%
node(node29_7).
a_afun(node29_7, auxp).         const(auxp).
m_form(node29_7, pri).         const(pri).
m_lemma(node29_7, pri_1).         const(pri_1).
m_tag(node29_7, rr__6__________).         const(rr__6__________).
m_tag0(node29_7,'r'). const('r'). m_tag1(node29_7,'r'). const('r'). m_tag4(node29_7,'6'). const('6'). 
%%%%%%%% node29_8 %%%%%%%%%%%%%%%%%%%
node(node29_8).
a_afun(node29_8, adv).         const(adv).
m_form(node29_8, nehode).         const(nehode).
m_lemma(node29_8, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node29_8, nnfs6_____a____).         const(nnfs6_____a____).
m_tag0(node29_8,'n'). const('n'). m_tag1(node29_8,'n'). const('n'). m_tag2(node29_8,'f'). const('f'). m_tag3(node29_8,'s'). const('s'). m_tag4(node29_8,'6'). const('6'). m_tag10(node29_8,'a'). const('a'). 
%%%%%%%% node29_9 %%%%%%%%%%%%%%%%%%%
node(node29_9).
functor(node29_9, mann).         const(mann).
gram_sempos(node29_9, adj_denot).         const(adj_denot).
id(node29_9, t_plzensky62815_txt_001_p1s12a7).         const(t_plzensky62815_txt_001_p1s12a7).
t_lemma(node29_9, tezky).         const(tezky).
%%%%%%%% node29_10 %%%%%%%%%%%%%%%%%%%
node(node29_10).
a_afun(node29_10, adv).         const(adv).
m_form(node29_10, tezce).         const(tezce).
m_lemma(node29_10, tezce).         const(tezce).
m_tag(node29_10, dg_______1a____).         const(dg_______1a____).
m_tag0(node29_10,'d'). const('d'). m_tag1(node29_10,'g'). const('g'). m_tag9(node29_10,'1'). const('1'). m_tag10(node29_10,'a'). const('a'). 
%%%%%%%% node29_11 %%%%%%%%%%%%%%%%%%%
node(node29_11).
a_afun(node29_11, auxv).         const(auxv).
m_form(node29_11, byla).         const(byla).
m_lemma(node29_11, byt).         const(byt).
m_tag(node29_11, vpqw___xr_aa___).         const(vpqw___xr_aa___).
m_tag0(node29_11,'v'). const('v'). m_tag1(node29_11,'p'). const('p'). m_tag2(node29_11,'q'). const('q'). m_tag3(node29_11,'w'). const('w'). m_tag7(node29_11,'x'). const('x'). m_tag8(node29_11,'r'). const('r'). m_tag10(node29_11,'a'). const('a'). m_tag11(node29_11,'a'). const('a'). 
%%%%%%%% node29_12 %%%%%%%%%%%%%%%%%%%
node(node29_12).
a_afun(node29_12, pred).         const(pred).
m_form(node29_12, zranena).         const(zranena).
m_lemma(node29_12, zranit__w).         const(zranit__w).
m_tag(node29_12, vsqw___xx_ap___).         const(vsqw___xx_ap___).
m_tag0(node29_12,'v'). const('v'). m_tag1(node29_12,'s'). const('s'). m_tag2(node29_12,'q'). const('q'). m_tag3(node29_12,'w'). const('w'). m_tag7(node29_12,'x'). const('x'). m_tag8(node29_12,'x'). const('x'). m_tag10(node29_12,'a'). const('a'). m_tag11(node29_12,'p'). const('p'). 
%%%%%%%% node29_13 %%%%%%%%%%%%%%%%%%%
node(node29_13).
functor(node29_13, pat).         const(pat).
gram_sempos(node29_13, n_denot).         const(n_denot).
id(node29_13, t_plzensky62815_txt_001_p1s12a8).         const(t_plzensky62815_txt_001_p1s12a8).
t_lemma(node29_13, osoba).         const(osoba).
%%%%%%%% node29_14 %%%%%%%%%%%%%%%%%%%
node(node29_14).
functor(node29_14, rstr).         const(rstr).
gram_sempos(node29_14, adj_quant_def).         const(adj_quant_def).
id(node29_14, t_plzensky62815_txt_001_p1s12a9).         const(t_plzensky62815_txt_001_p1s12a9).
t_lemma(node29_14, jeden).         const(jeden).
%%%%%%%% node29_15 %%%%%%%%%%%%%%%%%%%
node(node29_15).
a_afun(node29_15, atr).         const(atr).
m_form(node29_15, jedna).         const(jedna).
m_lemma(node29_15, jeden_1).         const(jeden_1).
m_tag(node29_15, clfs1__________).         const(clfs1__________).
m_tag0(node29_15,'c'). const('c'). m_tag1(node29_15,'l'). const('l'). m_tag2(node29_15,'f'). const('f'). m_tag3(node29_15,'s'). const('s'). m_tag4(node29_15,'1'). const('1'). 
%%%%%%%% node29_16 %%%%%%%%%%%%%%%%%%%
node(node29_16).
a_afun(node29_16, sb).         const(sb).
m_form(node29_16, osoba).         const(osoba).
m_lemma(node29_16, osoba).         const(osoba).
m_tag(node29_16, nnfs1_____a____).         const(nnfs1_____a____).
m_tag0(node29_16,'n'). const('n'). m_tag1(node29_16,'n'). const('n'). m_tag2(node29_16,'f'). const('f'). m_tag3(node29_16,'s'). const('s'). m_tag4(node29_16,'1'). const('1'). m_tag10(node29_16,'a'). const('a'). 
%%%%%%%% node29_17 %%%%%%%%%%%%%%%%%%%
node(node29_17).
a_afun(node29_17, coord).         const(coord).
m_form(node29_17, a).         const(a).
m_lemma(node29_17, a_1).         const(a_1).
m_tag(node29_17, j______________).         const(j______________).
m_tag0(node29_17,'j'). const('j'). m_tag1(node29_17,'^'). const('^'). 
%%%%%%%% node29_18 %%%%%%%%%%%%%%%%%%%
node(node29_18).
functor(node29_18, pred).         const(pred).
gram_sempos(node29_18, v).         const(v).
id(node29_18, t_plzensky62815_txt_001_p1s12a10).         const(t_plzensky62815_txt_001_p1s12a10).
t_lemma(node29_18, povolat).         const(povolat).
%%%%%%%% node29_19 %%%%%%%%%%%%%%%%%%%
node(node29_19).
functor(node29_19, dir3).         const(dir3).
gram_sempos(node29_19, n_denot).         const(n_denot).
id(node29_19, t_plzensky62815_txt_001_p1s12a12).         const(t_plzensky62815_txt_001_p1s12a12).
t_lemma(node29_19, misto).         const(misto).
%%%%%%%% node29_20 %%%%%%%%%%%%%%%%%%%
node(node29_20).
a_afun(node29_20, auxp).         const(auxp).
m_form(node29_20, na).         const(na).
m_lemma(node29_20, na_1).         const(na_1).
m_tag(node29_20, rr__4__________).         const(rr__4__________).
m_tag0(node29_20,'r'). const('r'). m_tag1(node29_20,'r'). const('r'). m_tag4(node29_20,'4'). const('4'). 
%%%%%%%% node29_21 %%%%%%%%%%%%%%%%%%%
node(node29_21).
a_afun(node29_21, adv).         const(adv).
m_form(node29_21, misto).         const(misto).
m_lemma(node29_21, misto_1___fyzicke_umisteni_).         const(misto_1___fyzicke_umisteni_).
m_tag(node29_21, nnns4_____a____).         const(nnns4_____a____).
m_tag0(node29_21,'n'). const('n'). m_tag1(node29_21,'n'). const('n'). m_tag2(node29_21,'n'). const('n'). m_tag3(node29_21,'s'). const('s'). m_tag4(node29_21,'4'). const('4'). m_tag10(node29_21,'a'). const('a'). 
%%%%%%%% node29_22 %%%%%%%%%%%%%%%%%%%
node(node29_22).
a_afun(node29_22, auxv).         const(auxv).
m_form(node29_22, byl).         const(byl).
m_lemma(node29_22, byt).         const(byt).
m_tag(node29_22, vpys___xr_aa___).         const(vpys___xr_aa___).
m_tag0(node29_22,'v'). const('v'). m_tag1(node29_22,'p'). const('p'). m_tag2(node29_22,'y'). const('y'). m_tag3(node29_22,'s'). const('s'). m_tag7(node29_22,'x'). const('x'). m_tag8(node29_22,'r'). const('r'). m_tag10(node29_22,'a'). const('a'). m_tag11(node29_22,'a'). const('a'). 
%%%%%%%% node29_23 %%%%%%%%%%%%%%%%%%%
node(node29_23).
a_afun(node29_23, pred).         const(pred).
m_form(node29_23, povolan).         const(povolan).
m_lemma(node29_23, povolat__w).         const(povolat__w).
m_tag(node29_23, vsys___xx_ap___).         const(vsys___xx_ap___).
m_tag0(node29_23,'v'). const('v'). m_tag1(node29_23,'s'). const('s'). m_tag2(node29_23,'y'). const('y'). m_tag3(node29_23,'s'). const('s'). m_tag7(node29_23,'x'). const('x'). m_tag8(node29_23,'x'). const('x'). m_tag10(node29_23,'a'). const('a'). m_tag11(node29_23,'p'). const('p'). 
%%%%%%%% node29_24 %%%%%%%%%%%%%%%%%%%
node(node29_24).
functor(node29_24, pat).         const(pat).
gram_sempos(node29_24, n_denot).         const(n_denot).
id(node29_24, t_plzensky62815_txt_001_p1s12a14).         const(t_plzensky62815_txt_001_p1s12a14).
t_lemma(node29_24, lzs).         const(lzs).
%%%%%%%% node29_25 %%%%%%%%%%%%%%%%%%%
node(node29_25).
functor(node29_25, rstr).         const(rstr).
gram_sempos(node29_25, n_denot).         const(n_denot).
id(node29_25, t_plzensky62815_txt_001_p1s12a15).         const(t_plzensky62815_txt_001_p1s12a15).
t_lemma(node29_25, vrtulnik).         const(vrtulnik).
%%%%%%%% node29_26 %%%%%%%%%%%%%%%%%%%
node(node29_26).
a_afun(node29_26, atr).         const(atr).
m_form(node29_26, vrtulnik).         const(vrtulnik).
m_lemma(node29_26, vrtulnik).         const(vrtulnik).
m_tag(node29_26, nnis1_____a____).         const(nnis1_____a____).
m_tag0(node29_26,'n'). const('n'). m_tag1(node29_26,'n'). const('n'). m_tag2(node29_26,'i'). const('i'). m_tag3(node29_26,'s'). const('s'). m_tag4(node29_26,'1'). const('1'). m_tag10(node29_26,'a'). const('a'). 
%%%%%%%% node29_27 %%%%%%%%%%%%%%%%%%%
node(node29_27).
a_afun(node29_27, sb).         const(sb).
m_form(node29_27, lzs).         const(lzs).
m_lemma(node29_27, lzs).         const(lzs).
m_tag(node29_27, nnms1_____a____).         const(nnms1_____a____).
m_tag0(node29_27,'n'). const('n'). m_tag1(node29_27,'n'). const('n'). m_tag2(node29_27,'m'). const('m'). m_tag3(node29_27,'s'). const('s'). m_tag4(node29_27,'1'). const('1'). m_tag10(node29_27,'a'). const('a'). 
edge(node29_0, node29_1).
edge(node29_1, node29_2).
edge(node29_1, node29_3).
edge(node29_3, node29_4).
edge(node29_4, node29_5).
edge(node29_5, node29_6).
edge(node29_4, node29_7).
edge(node29_4, node29_8).
edge(node29_3, node29_9).
edge(node29_9, node29_10).
edge(node29_3, node29_11).
edge(node29_3, node29_12).
edge(node29_3, node29_13).
edge(node29_13, node29_14).
edge(node29_14, node29_15).
edge(node29_13, node29_16).
edge(node29_1, node29_17).
edge(node29_1, node29_18).
edge(node29_18, node29_19).
edge(node29_19, node29_20).
edge(node29_19, node29_21).
edge(node29_18, node29_22).
edge(node29_18, node29_23).
edge(node29_18, node29_24).
edge(node29_24, node29_25).
edge(node29_25, node29_26).
edge(node29_24, node29_27).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% pri nehode byly zraneny dve osoby, z toho jedna tezce. 
tree_root(node30_0).
%%%%%%%% node30_0 %%%%%%%%%%%%%%%%%%%
node(node30_0).
id(node30_0, t_plzensky59310_txt_001_p11s2).         const(t_plzensky59310_txt_001_p11s2).
%%%%%%%% node30_1 %%%%%%%%%%%%%%%%%%%
node(node30_1).
functor(node30_1, conj).         const(conj).
id(node30_1, t_plzensky59310_txt_001_p11s2a1).         const(t_plzensky59310_txt_001_p11s2a1).
t_lemma(node30_1, x_comma).         const(x_comma).
%%%%%%%% node30_2 %%%%%%%%%%%%%%%%%%%
node(node30_2).
functor(node30_2, pred).         const(pred).
gram_sempos(node30_2, v).         const(v).
id(node30_2, t_plzensky59310_txt_001_p11s2a2).         const(t_plzensky59310_txt_001_p11s2a2).
t_lemma(node30_2, zranit).         const(zranit).
%%%%%%%% node30_3 %%%%%%%%%%%%%%%%%%%
node(node30_3).
functor(node30_3, act).         const(act).
id(node30_3, t_plzensky59310_txt_001_p11s2a12).         const(t_plzensky59310_txt_001_p11s2a12).
t_lemma(node30_3, x_gen).         const(x_gen).
%%%%%%%% node30_4 %%%%%%%%%%%%%%%%%%%
node(node30_4).
functor(node30_4, twhen).         const(twhen).
gram_sempos(node30_4, n_denot).         const(n_denot).
id(node30_4, t_plzensky59310_txt_001_p11s2a4).         const(t_plzensky59310_txt_001_p11s2a4).
t_lemma(node30_4, nehoda).         const(nehoda).
%%%%%%%% node30_5 %%%%%%%%%%%%%%%%%%%
node(node30_5).
a_afun(node30_5, auxp).         const(auxp).
m_form(node30_5, pri).         const(pri).
m_lemma(node30_5, pri_1).         const(pri_1).
m_tag(node30_5, rr__6__________).         const(rr__6__________).
m_tag0(node30_5,'r'). const('r'). m_tag1(node30_5,'r'). const('r'). m_tag4(node30_5,'6'). const('6'). 
%%%%%%%% node30_6 %%%%%%%%%%%%%%%%%%%
node(node30_6).
a_afun(node30_6, adv).         const(adv).
m_form(node30_6, nehode).         const(nehode).
m_lemma(node30_6, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node30_6, nnfs6_____a____).         const(nnfs6_____a____).
m_tag0(node30_6,'n'). const('n'). m_tag1(node30_6,'n'). const('n'). m_tag2(node30_6,'f'). const('f'). m_tag3(node30_6,'s'). const('s'). m_tag4(node30_6,'6'). const('6'). m_tag10(node30_6,'a'). const('a'). 
%%%%%%%% node30_7 %%%%%%%%%%%%%%%%%%%
node(node30_7).
a_afun(node30_7, auxv).         const(auxv).
m_form(node30_7, byly).         const(byly).
m_lemma(node30_7, byt).         const(byt).
m_tag(node30_7, vptp___xr_aa___).         const(vptp___xr_aa___).
m_tag0(node30_7,'v'). const('v'). m_tag1(node30_7,'p'). const('p'). m_tag2(node30_7,'t'). const('t'). m_tag3(node30_7,'p'). const('p'). m_tag7(node30_7,'x'). const('x'). m_tag8(node30_7,'r'). const('r'). m_tag10(node30_7,'a'). const('a'). m_tag11(node30_7,'a'). const('a'). 
%%%%%%%% node30_8 %%%%%%%%%%%%%%%%%%%
node(node30_8).
a_afun(node30_8, pred).         const(pred).
m_form(node30_8, zraneny).         const(zraneny).
m_lemma(node30_8, zranit__w).         const(zranit__w).
m_tag(node30_8, vstp___xx_ap___).         const(vstp___xx_ap___).
m_tag0(node30_8,'v'). const('v'). m_tag1(node30_8,'s'). const('s'). m_tag2(node30_8,'t'). const('t'). m_tag3(node30_8,'p'). const('p'). m_tag7(node30_8,'x'). const('x'). m_tag8(node30_8,'x'). const('x'). m_tag10(node30_8,'a'). const('a'). m_tag11(node30_8,'p'). const('p'). 
%%%%%%%% node30_9 %%%%%%%%%%%%%%%%%%%
node(node30_9).
functor(node30_9, pat).         const(pat).
gram_sempos(node30_9, n_denot).         const(n_denot).
id(node30_9, t_plzensky59310_txt_001_p11s2a6).         const(t_plzensky59310_txt_001_p11s2a6).
t_lemma(node30_9, osoba).         const(osoba).
%%%%%%%% node30_10 %%%%%%%%%%%%%%%%%%%
node(node30_10).
functor(node30_10, rstr).         const(rstr).
gram_sempos(node30_10, adj_quant_def).         const(adj_quant_def).
id(node30_10, t_plzensky59310_txt_001_p11s2a7).         const(t_plzensky59310_txt_001_p11s2a7).
t_lemma(node30_10, dva).         const(dva).
%%%%%%%% node30_11 %%%%%%%%%%%%%%%%%%%
node(node30_11).
a_afun(node30_11, atr).         const(atr).
m_form(node30_11, dve).         const(dve).
m_lemma(node30_11, dva_2).         const(dva_2).
m_tag(node30_11, clhp1__________).         const(clhp1__________).
m_tag0(node30_11,'c'). const('c'). m_tag1(node30_11,'l'). const('l'). m_tag2(node30_11,'h'). const('h'). m_tag3(node30_11,'p'). const('p'). m_tag4(node30_11,'1'). const('1'). 
%%%%%%%% node30_12 %%%%%%%%%%%%%%%%%%%
node(node30_12).
a_afun(node30_12, sb).         const(sb).
m_form(node30_12, osoby).         const(osoby).
m_lemma(node30_12, osoba).         const(osoba).
m_tag(node30_12, nnfp1_____a____).         const(nnfp1_____a____).
m_tag0(node30_12,'n'). const('n'). m_tag1(node30_12,'n'). const('n'). m_tag2(node30_12,'f'). const('f'). m_tag3(node30_12,'p'). const('p'). m_tag4(node30_12,'1'). const('1'). m_tag10(node30_12,'a'). const('a'). 
%%%%%%%% node30_13 %%%%%%%%%%%%%%%%%%%
node(node30_13).
a_afun(node30_13, coord).         const(coord).
m_form(node30_13, x_).         const(x_).
m_lemma(node30_13, x_).         const(x_).
m_tag(node30_13, z______________).         const(z______________).
m_tag0(node30_13,'z'). const('z'). m_tag1(node30_13,':'). const(':'). 
%%%%%%%% node30_14 %%%%%%%%%%%%%%%%%%%
node(node30_14).
functor(node30_14, dir1).         const(dir1).
gram_sempos(node30_14, n_pron_def_demon).         const(n_pron_def_demon).
id(node30_14, t_plzensky59310_txt_001_p11s2a9).         const(t_plzensky59310_txt_001_p11s2a9).
t_lemma(node30_14, ten).         const(ten).
%%%%%%%% node30_15 %%%%%%%%%%%%%%%%%%%
node(node30_15).
a_afun(node30_15, auxp).         const(auxp).
m_form(node30_15, z).         const(z).
m_lemma(node30_15, z_1).         const(z_1).
m_tag(node30_15, rr__2__________).         const(rr__2__________).
m_tag0(node30_15,'r'). const('r'). m_tag1(node30_15,'r'). const('r'). m_tag4(node30_15,'2'). const('2'). 
%%%%%%%% node30_16 %%%%%%%%%%%%%%%%%%%
node(node30_16).
a_afun(node30_16, exd).         const(exd).
m_form(node30_16, toho).         const(toho).
m_lemma(node30_16, ten).         const(ten).
m_tag(node30_16, pdzs2__________).         const(pdzs2__________).
m_tag0(node30_16,'p'). const('p'). m_tag1(node30_16,'d'). const('d'). m_tag2(node30_16,'z'). const('z'). m_tag3(node30_16,'s'). const('s'). m_tag4(node30_16,'2'). const('2'). 
%%%%%%%% node30_17 %%%%%%%%%%%%%%%%%%%
node(node30_17).
functor(node30_17, rstr).         const(rstr).
gram_sempos(node30_17, n_quant_def).         const(n_quant_def).
id(node30_17, t_plzensky59310_txt_001_p11s2a10).         const(t_plzensky59310_txt_001_p11s2a10).
t_lemma(node30_17, jeden).         const(jeden).
%%%%%%%% node30_18 %%%%%%%%%%%%%%%%%%%
node(node30_18).
a_afun(node30_18, exd).         const(exd).
m_form(node30_18, jedna).         const(jedna).
m_lemma(node30_18, jeden_1).         const(jeden_1).
m_tag(node30_18, clfs1__________).         const(clfs1__________).
m_tag0(node30_18,'c'). const('c'). m_tag1(node30_18,'l'). const('l'). m_tag2(node30_18,'f'). const('f'). m_tag3(node30_18,'s'). const('s'). m_tag4(node30_18,'1'). const('1'). 
%%%%%%%% node30_19 %%%%%%%%%%%%%%%%%%%
node(node30_19).
functor(node30_19, twhen).         const(twhen).
gram_sempos(node30_19, adj_denot).         const(adj_denot).
id(node30_19, t_plzensky59310_txt_001_p11s2a11).         const(t_plzensky59310_txt_001_p11s2a11).
t_lemma(node30_19, tezky).         const(tezky).
%%%%%%%% node30_20 %%%%%%%%%%%%%%%%%%%
node(node30_20).
a_afun(node30_20, exd).         const(exd).
m_form(node30_20, tezce).         const(tezce).
m_lemma(node30_20, tezce).         const(tezce).
m_tag(node30_20, dg_______1a____).         const(dg_______1a____).
m_tag0(node30_20,'d'). const('d'). m_tag1(node30_20,'g'). const('g'). m_tag9(node30_20,'1'). const('1'). m_tag10(node30_20,'a'). const('a'). 
edge(node30_0, node30_1).
edge(node30_1, node30_2).
edge(node30_2, node30_3).
edge(node30_2, node30_4).
edge(node30_4, node30_5).
edge(node30_4, node30_6).
edge(node30_2, node30_7).
edge(node30_2, node30_8).
edge(node30_2, node30_9).
edge(node30_9, node30_10).
edge(node30_10, node30_11).
edge(node30_9, node30_12).
edge(node30_1, node30_13).
edge(node30_1, node30_14).
edge(node30_14, node30_15).
edge(node30_14, node30_16).
edge(node30_1, node30_17).
edge(node30_17, node30_18).
edge(node30_1, node30_19).
edge(node30_19, node30_20).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% muz pozdeji zemrel. 
tree_root(node31_0).
%%%%%%%% node31_0 %%%%%%%%%%%%%%%%%%%
node(node31_0).
id(node31_0, t_plzensky69691_txt_001_p2s4).         const(t_plzensky69691_txt_001_p2s4).
%%%%%%%% node31_1 %%%%%%%%%%%%%%%%%%%
node(node31_1).
functor(node31_1, pred).         const(pred).
gram_sempos(node31_1, v).         const(v).
id(node31_1, t_plzensky69691_txt_001_p2s4a1).         const(t_plzensky69691_txt_001_p2s4a1).
t_lemma(node31_1, zemrit).         const(zemrit).
%%%%%%%% node31_2 %%%%%%%%%%%%%%%%%%%
node(node31_2).
functor(node31_2, act).         const(act).
gram_sempos(node31_2, n_denot).         const(n_denot).
id(node31_2, t_plzensky69691_txt_001_p2s4a2).         const(t_plzensky69691_txt_001_p2s4a2).
t_lemma(node31_2, muz).         const(muz).
%%%%%%%% node31_3 %%%%%%%%%%%%%%%%%%%
node(node31_3).
a_afun(node31_3, sb).         const(sb).
m_form(node31_3, muz).         const(muz).
m_lemma(node31_3, muz).         const(muz).
m_tag(node31_3, nnms1_____a____).         const(nnms1_____a____).
m_tag0(node31_3,'n'). const('n'). m_tag1(node31_3,'n'). const('n'). m_tag2(node31_3,'m'). const('m'). m_tag3(node31_3,'s'). const('s'). m_tag4(node31_3,'1'). const('1'). m_tag10(node31_3,'a'). const('a'). 
%%%%%%%% node31_4 %%%%%%%%%%%%%%%%%%%
node(node31_4).
functor(node31_4, twhen).         const(twhen).
gram_sempos(node31_4, adv_denot_grad_nneg).         const(adv_denot_grad_nneg).
id(node31_4, t_plzensky69691_txt_001_p2s4a3).         const(t_plzensky69691_txt_001_p2s4a3).
t_lemma(node31_4, pozde).         const(pozde).
%%%%%%%% node31_5 %%%%%%%%%%%%%%%%%%%
node(node31_5).
a_afun(node31_5, adv).         const(adv).
m_form(node31_5, pozdeji).         const(pozdeji).
m_lemma(node31_5, pozde).         const(pozde).
m_tag(node31_5, dg_______2a____).         const(dg_______2a____).
m_tag0(node31_5,'d'). const('d'). m_tag1(node31_5,'g'). const('g'). m_tag9(node31_5,'2'). const('2'). m_tag10(node31_5,'a'). const('a'). 
%%%%%%%% node31_6 %%%%%%%%%%%%%%%%%%%
node(node31_6).
a_afun(node31_6, pred).         const(pred).
m_form(node31_6, zemrel).         const(zemrel).
m_lemma(node31_6, zemrit).         const(zemrit).
m_tag(node31_6, vpys___xr_aa___).         const(vpys___xr_aa___).
m_tag0(node31_6,'v'). const('v'). m_tag1(node31_6,'p'). const('p'). m_tag2(node31_6,'y'). const('y'). m_tag3(node31_6,'s'). const('s'). m_tag7(node31_6,'x'). const('x'). m_tag8(node31_6,'r'). const('r'). m_tag10(node31_6,'a'). const('a'). m_tag11(node31_6,'a'). const('a'). 
edge(node31_0, node31_1).
edge(node31_1, node31_2).
edge(node31_2, node31_3).
edge(node31_1, node31_4).
edge(node31_4, node31_5).
edge(node31_1, node31_6).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% nikdo nebyl zranen. 
tree_root(node32_0).
%%%%%%%% node32_0 %%%%%%%%%%%%%%%%%%%
node(node32_0).
id(node32_0, t_plzensky70461_txt_001_p1s12).         const(t_plzensky70461_txt_001_p1s12).
%%%%%%%% node32_1 %%%%%%%%%%%%%%%%%%%
node(node32_1).
functor(node32_1, pred).         const(pred).
gram_sempos(node32_1, v).         const(v).
id(node32_1, t_plzensky70461_txt_001_p1s12a1).         const(t_plzensky70461_txt_001_p1s12a1).
t_lemma(node32_1, zranit).         const(zranit).
%%%%%%%% node32_2 %%%%%%%%%%%%%%%%%%%
node(node32_2).
functor(node32_2, act).         const(act).
id(node32_2, t_plzensky70461_txt_001_p1s12a3).         const(t_plzensky70461_txt_001_p1s12a3).
t_lemma(node32_2, x_gen).         const(x_gen).
%%%%%%%% node32_3 %%%%%%%%%%%%%%%%%%%
node(node32_3).
functor(node32_3, pat).         const(pat).
gram_sempos(node32_3, n_pron_indef).         const(n_pron_indef).
id(node32_3, t_plzensky70461_txt_001_p1s12a2).         const(t_plzensky70461_txt_001_p1s12a2).
t_lemma(node32_3, kdo).         const(kdo).
%%%%%%%% node32_4 %%%%%%%%%%%%%%%%%%%
node(node32_4).
a_afun(node32_4, sb).         const(sb).
m_form(node32_4, nikdo).         const(nikdo).
m_lemma(node32_4, nikdo).         const(nikdo).
m_tag(node32_4, pwm_1__________).         const(pwm_1__________).
m_tag0(node32_4,'p'). const('p'). m_tag1(node32_4,'w'). const('w'). m_tag2(node32_4,'m'). const('m'). m_tag4(node32_4,'1'). const('1'). 
%%%%%%%% node32_5 %%%%%%%%%%%%%%%%%%%
node(node32_5).
a_afun(node32_5, auxv).         const(auxv).
m_form(node32_5, nebyl).         const(nebyl).
m_lemma(node32_5, byt).         const(byt).
m_tag(node32_5, vpys___xr_na___).         const(vpys___xr_na___).
m_tag0(node32_5,'v'). const('v'). m_tag1(node32_5,'p'). const('p'). m_tag2(node32_5,'y'). const('y'). m_tag3(node32_5,'s'). const('s'). m_tag7(node32_5,'x'). const('x'). m_tag8(node32_5,'r'). const('r'). m_tag10(node32_5,'n'). const('n'). m_tag11(node32_5,'a'). const('a'). 
%%%%%%%% node32_6 %%%%%%%%%%%%%%%%%%%
node(node32_6).
a_afun(node32_6, pred).         const(pred).
m_form(node32_6, zranen).         const(zranen).
m_lemma(node32_6, zranit__w).         const(zranit__w).
m_tag(node32_6, vsys___xx_ap___).         const(vsys___xx_ap___).
m_tag0(node32_6,'v'). const('v'). m_tag1(node32_6,'s'). const('s'). m_tag2(node32_6,'y'). const('y'). m_tag3(node32_6,'s'). const('s'). m_tag7(node32_6,'x'). const('x'). m_tag8(node32_6,'x'). const('x'). m_tag10(node32_6,'a'). const('a'). m_tag11(node32_6,'p'). const('p'). 
edge(node32_0, node32_1).
edge(node32_1, node32_2).
edge(node32_1, node32_3).
edge(node32_3, node32_4).
edge(node32_1, node32_5).
edge(node32_1, node32_6).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% nikdo nebyl zranen. 
tree_root(node33_0).
%%%%%%%% node33_0 %%%%%%%%%%%%%%%%%%%
node(node33_0).
id(node33_0, t_plzensky49244_txt_001_p1s2).         const(t_plzensky49244_txt_001_p1s2).
%%%%%%%% node33_1 %%%%%%%%%%%%%%%%%%%
node(node33_1).
functor(node33_1, pred).         const(pred).