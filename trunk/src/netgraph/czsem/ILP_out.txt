%%%%%%%%%%%%%%%%%%%%%%%
% Declarations
%:- set(nodes,500000)?
%:- set(h,1000000)?
%:- set(r,10000)?
:- set(c,2),set(i,2),  set(inflate,800)?
:- set(verbose,2)?
:- modeh(1,tree_root(+node))?
:- modeh(1,valid_root(+node))?
:- modeb(*,edge(-node,+node))?
:- modeb(*,edge(+node,-node))?
:- modeb(*,edge(+node,+node))?

% begin of definitions of linguistic attributes
:- modeb(1,atree_rf(+node,#const))?
:- modeb(1,compl_rf(+node,#const))?
:- modeb(1,coref_gram_rf(+node,#const))?
:- modeb(1,coref_special(+node,#const))?
:- modeb(1,coref_text_rf(+node,#const))?
:- modeb(1,deepord(+node,#const))?
:- modeb(1,functor(+node,#const))?
:- modeb(1,gram_aspect(+node,#const))?
:- modeb(1,gram_degcmp(+node,#const))?
:- modeb(1,gram_deontmod(+node,#const))?
:- modeb(1,gram_dispmod(+node,#const))?
:- modeb(1,gram_gender(+node,#const))?
:- modeb(1,gram_indeftype(+node,#const))?
:- modeb(1,gram_iterativeness(+node,#const))?
:- modeb(1,gram_negation(+node,#const))?
:- modeb(1,gram_number(+node,#const))?
:- modeb(1,gram_numertype(+node,#const))?
:- modeb(1,gram_person(+node,#const))?
:- modeb(1,gram_politeness(+node,#const))?
:- modeb(1,gram_resultative(+node,#const))?
:- modeb(1,gram_sempos(+node,#const))?
:- modeb(1,gram_tense(+node,#const))?
:- modeb(1,gram_verbmod(+node,#const))?
:- modeb(1,id(+node,#const))?
:- modeb(1,is_dsp_root(+node,#const))?
:- modeb(1,is_generated(+node,#const))?
:- modeb(1,is_member(+node,#const))?
:- modeb(1,is_name_of_person(+node,#const))?
:- modeb(1,is_parenthesis(+node,#const))?
:- modeb(1,is_state(+node,#const))?
:- modeb(1,nodetype(+node,#const))?
:- modeb(1,quot_set_id(+node,#const))?
:- modeb(1,quot_type(+node,#const))?
:- modeb(1,sentmod(+node,#const))?
:- modeb(1,subfunctor(+node,#const))?
:- modeb(1,t_lemma(+node,#const))?
:- modeb(1,tfa(+node,#const))?
:- modeb(1,val_frame_rf(+node,#const))?
:- modeb(1,sentence(+node,#const))?
:- modeb(1,a_ref_type(+node,#const))?
:- modeb(1,a_afun(+node,#const))?
:- modeb(1,a_is_member(+node,#const))?
:- modeb(1,m_form(+node,#const))?
:- modeb(1,m_lemma(+node,#const))?
:- modeb(1,m_tag(+node,#const))?
:- modeb(1,w_token(+node,#const))?
:- modeb(1,w_no_space_after(+node,#const))?
:- modeb(1,a_ord(+node,#const))?
:- modeb(1,a_parent_id(+node,#const))?
:- modeb(1,hide(+node,#const))?
:- modeb(1,x_transitive(+node,#const))?
:- modeb(1,x_optional(+node,#const))?
:- modeb(1,x__sons(+node,#const))?
:- modeb(1,x__hsons(+node,#const))?
:- modeb(1,x__descendants(+node,#const))?
:- modeb(1,x__lbrothers(+node,#const))?
:- modeb(1,x__rbrothers(+node,#const))?
:- modeb(1,x_depth(+node,#const))?
:- modeb(1,x__occurrences(+node,#const))?
:- modeb(1,x_name(+node,#const))?
:- modeb(1,x_sentence(+node,#const))?
:- modeb(1,x_querymatch(+node,#const))?
% end of definitions of linguistic attributes

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode byly zraneny dve osoby. 
tree_root(node0_0).
valid_root(node0_0).
%%%%%%%% node0_0 %%%%%%%%%%%%%%%%%%%
node(node0_0).
atree_rf(node0_0, a_a_plzensky70827_txt_001_p1s3).         const(a_a_plzensky70827_txt_001_p1s3).
deepord(node0_0, 0).         const(0).
id(node0_0, T_plzensky70827_txt_001_p1s3).         const(T_plzensky70827_txt_001_p1s3).
nodetype(node0_0, root).         const(root).
sentence(node0_0, Pri_nehode_byly_zraneny_dve_osoby__).         const(Pri_nehode_byly_zraneny_dve_osoby__).
%%%%%%%% node0_1 %%%%%%%%%%%%%%%%%%%
node(node0_1).
deepord(node0_1, 3).         const(3).
functor(node0_1, PRED).         const(PRED).
gram_sempos(node0_1, v).         const(v).
id(node0_1, T_plzensky70827_txt_001_p1s3a1).         const(T_plzensky70827_txt_001_p1s3a1).
nodetype(node0_1, complex).         const(complex).
t_lemma(node0_1, zranit).         const(zranit).
val_frame_rf(node0_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node0_2 %%%%%%%%%%%%%%%%%%%
node(node0_2).
deepord(node0_2, 1).         const(1).
functor(node0_2, ACT).         const(ACT).
id(node0_2, T_plzensky70827_txt_001_p1s3a7).         const(T_plzensky70827_txt_001_p1s3a7).
is_generated(node0_2, 1).         const(1).
nodetype(node0_2, qcomplex).         const(qcomplex).
t_lemma(node0_2, x_Gen).         const(x_Gen).
%%%%%%%% node0_3 %%%%%%%%%%%%%%%%%%%
node(node0_3).
deepord(node0_3, 2).         const(2).
functor(node0_3, TWHEN).         const(TWHEN).
gram_sempos(node0_3, n_denot).         const(n_denot).
id(node0_3, T_plzensky70827_txt_001_p1s3a3).         const(T_plzensky70827_txt_001_p1s3a3).
nodetype(node0_3, complex).         const(complex).
subfunctor(node0_3, basic).         const(basic).
t_lemma(node0_3, nehoda).         const(nehoda).
%%%%%%%% node0_4 %%%%%%%%%%%%%%%%%%%
node(node0_4).
deepord(node0_4, x2_1).         const(x2_1).
a_ref_type(node0_4, tree).         const(tree).
a_afun(node0_4, AuxP).         const(AuxP).
m_form(node0_4, Pri).         const(Pri).
m_lemma(node0_4, pri_1).         const(pri_1).
m_tag(node0_4, RR__6__________).         const(RR__6__________).
w_token(node0_4, Pri).         const(Pri).
a_ord(node0_4, 1).         const(1).
a_parent_id(node0_4, a_plzensky70827_txt_001_p1s3W4).         const(a_plzensky70827_txt_001_p1s3W4).
hide(node0_4, hide).         const(hide).
%%%%%%%% node0_5 %%%%%%%%%%%%%%%%%%%
node(node0_5).
deepord(node0_5, x2_2).         const(x2_2).
a_ref_type(node0_5, tree).         const(tree).
a_afun(node0_5, Adv).         const(Adv).
m_form(node0_5, nehode).         const(nehode).
m_lemma(node0_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node0_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node0_5, nehode).         const(nehode).
a_ord(node0_5, 2).         const(2).
a_parent_id(node0_5, a_plzensky70827_txt_001_p1s3W1).         const(a_plzensky70827_txt_001_p1s3W1).
hide(node0_5, hide).         const(hide).
%%%%%%%% node0_6 %%%%%%%%%%%%%%%%%%%
node(node0_6).
deepord(node0_6, x3_1).         const(x3_1).
a_ref_type(node0_6, tree).         const(tree).
a_afun(node0_6, AuxV).         const(AuxV).
m_form(node0_6, byly).         const(byly).
m_lemma(node0_6, byt).         const(byt).
m_tag(node0_6, VpTP___XR_AA___).         const(VpTP___XR_AA___).
w_token(node0_6, byly).         const(byly).
a_ord(node0_6, 3).         const(3).
a_parent_id(node0_6, a_plzensky70827_txt_001_p1s3W4).         const(a_plzensky70827_txt_001_p1s3W4).
hide(node0_6, hide).         const(hide).
%%%%%%%% node0_7 %%%%%%%%%%%%%%%%%%%
node(node0_7).
deepord(node0_7, x3_2).         const(x3_2).
a_ref_type(node0_7, tree).         const(tree).
a_afun(node0_7, Pred).         const(Pred).
m_form(node0_7, zraneny).         const(zraneny).
m_lemma(node0_7, zranit__W).         const(zranit__W).
m_tag(node0_7, VsTP___XX_AP___).         const(VsTP___XX_AP___).
w_token(node0_7, zraneny).         const(zraneny).
a_ord(node0_7, 4).         const(4).
a_parent_id(node0_7, a_plzensky70827_txt_001_p1s3).         const(a_plzensky70827_txt_001_p1s3).
hide(node0_7, hide).         const(hide).
%%%%%%%% node0_8 %%%%%%%%%%%%%%%%%%%
node(node0_8).
deepord(node0_8, 5).         const(5).
functor(node0_8, PAT).         const(PAT).
gram_sempos(node0_8, n_denot).         const(n_denot).
id(node0_8, T_plzensky70827_txt_001_p1s3a5).         const(T_plzensky70827_txt_001_p1s3a5).
nodetype(node0_8, complex).         const(complex).
t_lemma(node0_8, osoba).         const(osoba).
%%%%%%%% node0_9 %%%%%%%%%%%%%%%%%%%
node(node0_9).
deepord(node0_9, 4).         const(4).
functor(node0_9, RSTR).         const(RSTR).
gram_sempos(node0_9, adj_quant_def).         const(adj_quant_def).
id(node0_9, T_plzensky70827_txt_001_p1s3a6).         const(T_plzensky70827_txt_001_p1s3a6).
nodetype(node0_9, complex).         const(complex).
t_lemma(node0_9, dva).         const(dva).
%%%%%%%% node0_10 %%%%%%%%%%%%%%%%%%%
node(node0_10).
deepord(node0_10, x4_1).         const(x4_1).
a_ref_type(node0_10, tree).         const(tree).
a_afun(node0_10, Atr).         const(Atr).
m_form(node0_10, dve).         const(dve).
m_lemma(node0_10, dva_2).         const(dva_2).
m_tag(node0_10, ClHP1__________).         const(ClHP1__________).
w_token(node0_10, dve).         const(dve).
a_ord(node0_10, 5).         const(5).
a_parent_id(node0_10, a_plzensky70827_txt_001_p1s3W6).         const(a_plzensky70827_txt_001_p1s3W6).
hide(node0_10, hide).         const(hide).
%%%%%%%% node0_11 %%%%%%%%%%%%%%%%%%%
node(node0_11).
deepord(node0_11, x5_1).         const(x5_1).
a_ref_type(node0_11, tree).         const(tree).
a_afun(node0_11, Sb).         const(Sb).
m_form(node0_11, osoby).         const(osoby).
m_lemma(node0_11, osoba).         const(osoba).
m_tag(node0_11, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node0_11, osoby).         const(osoby).
w_no_space_after(node0_11, 1).         const(1).
a_ord(node0_11, 6).         const(6).
a_parent_id(node0_11, a_plzensky70827_txt_001_p1s3W4).         const(a_plzensky70827_txt_001_p1s3W4).
hide(node0_11, hide).         const(hide).
edge(node0_0, node0_1).
edge(node0_1, node0_2).
edge(node0_1, node0_3).
edge(node0_3, node0_4).
edge(node0_3, node0_5).
edge(node0_1, node0_6).
edge(node0_1, node0_7).
edge(node0_1, node0_8).
edge(node0_8, node0_9).
edge(node0_9, node0_10).
edge(node0_8, node0_11).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode byly zraneny dve osoby. 
tree_root(node1_0).
valid_root(node1_0).
%%%%%%%% node1_0 %%%%%%%%%%%%%%%%%%%
node(node1_0).
atree_rf(node1_0, a_a_plzensky70827_txt_001_p1s3).         const(a_a_plzensky70827_txt_001_p1s3).
deepord(node1_0, 0).         const(0).
id(node1_0, T_plzensky70827_txt_001_p1s3).         const(T_plzensky70827_txt_001_p1s3).
nodetype(node1_0, root).         const(root).
sentence(node1_0, Pri_nehode_byly_zraneny_dve_osoby__).         const(Pri_nehode_byly_zraneny_dve_osoby__).
%%%%%%%% node1_1 %%%%%%%%%%%%%%%%%%%
node(node1_1).
deepord(node1_1, 3).         const(3).
functor(node1_1, PRED).         const(PRED).
gram_sempos(node1_1, v).         const(v).
id(node1_1, T_plzensky70827_txt_001_p1s3a1).         const(T_plzensky70827_txt_001_p1s3a1).
nodetype(node1_1, complex).         const(complex).
t_lemma(node1_1, zranit).         const(zranit).
val_frame_rf(node1_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node1_2 %%%%%%%%%%%%%%%%%%%
node(node1_2).
deepord(node1_2, 1).         const(1).
functor(node1_2, ACT).         const(ACT).
id(node1_2, T_plzensky70827_txt_001_p1s3a7).         const(T_plzensky70827_txt_001_p1s3a7).
is_generated(node1_2, 1).         const(1).
nodetype(node1_2, qcomplex).         const(qcomplex).
t_lemma(node1_2, x_Gen).         const(x_Gen).
%%%%%%%% node1_3 %%%%%%%%%%%%%%%%%%%
node(node1_3).
deepord(node1_3, 2).         const(2).
functor(node1_3, TWHEN).         const(TWHEN).
gram_sempos(node1_3, n_denot).         const(n_denot).
id(node1_3, T_plzensky70827_txt_001_p1s3a3).         const(T_plzensky70827_txt_001_p1s3a3).
nodetype(node1_3, complex).         const(complex).
subfunctor(node1_3, basic).         const(basic).
t_lemma(node1_3, nehoda).         const(nehoda).
%%%%%%%% node1_4 %%%%%%%%%%%%%%%%%%%
node(node1_4).
deepord(node1_4, x2_1).         const(x2_1).
a_ref_type(node1_4, tree).         const(tree).
a_afun(node1_4, AuxP).         const(AuxP).
m_form(node1_4, Pri).         const(Pri).
m_lemma(node1_4, pri_1).         const(pri_1).
m_tag(node1_4, RR__6__________).         const(RR__6__________).
w_token(node1_4, Pri).         const(Pri).
a_ord(node1_4, 1).         const(1).
a_parent_id(node1_4, a_plzensky70827_txt_001_p1s3W4).         const(a_plzensky70827_txt_001_p1s3W4).
hide(node1_4, hide).         const(hide).
%%%%%%%% node1_5 %%%%%%%%%%%%%%%%%%%
node(node1_5).
deepord(node1_5, x2_2).         const(x2_2).
a_ref_type(node1_5, tree).         const(tree).
a_afun(node1_5, Adv).         const(Adv).
m_form(node1_5, nehode).         const(nehode).
m_lemma(node1_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node1_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node1_5, nehode).         const(nehode).
a_ord(node1_5, 2).         const(2).
a_parent_id(node1_5, a_plzensky70827_txt_001_p1s3W1).         const(a_plzensky70827_txt_001_p1s3W1).
hide(node1_5, hide).         const(hide).
%%%%%%%% node1_6 %%%%%%%%%%%%%%%%%%%
node(node1_6).
deepord(node1_6, x3_1).         const(x3_1).
a_ref_type(node1_6, tree).         const(tree).
a_afun(node1_6, AuxV).         const(AuxV).
m_form(node1_6, byly).         const(byly).
m_lemma(node1_6, byt).         const(byt).
m_tag(node1_6, VpTP___XR_AA___).         const(VpTP___XR_AA___).
w_token(node1_6, byly).         const(byly).
a_ord(node1_6, 3).         const(3).
a_parent_id(node1_6, a_plzensky70827_txt_001_p1s3W4).         const(a_plzensky70827_txt_001_p1s3W4).
hide(node1_6, hide).         const(hide).
%%%%%%%% node1_7 %%%%%%%%%%%%%%%%%%%
node(node1_7).
deepord(node1_7, x3_2).         const(x3_2).
a_ref_type(node1_7, tree).         const(tree).
a_afun(node1_7, Pred).         const(Pred).
m_form(node1_7, zraneny).         const(zraneny).
m_lemma(node1_7, zranit__W).         const(zranit__W).
m_tag(node1_7, VsTP___XX_AP___).         const(VsTP___XX_AP___).
w_token(node1_7, zraneny).         const(zraneny).
a_ord(node1_7, 4).         const(4).
a_parent_id(node1_7, a_plzensky70827_txt_001_p1s3).         const(a_plzensky70827_txt_001_p1s3).
hide(node1_7, hide).         const(hide).
%%%%%%%% node1_8 %%%%%%%%%%%%%%%%%%%
node(node1_8).
deepord(node1_8, 5).         const(5).
functor(node1_8, PAT).         const(PAT).
gram_sempos(node1_8, n_denot).         const(n_denot).
id(node1_8, T_plzensky70827_txt_001_p1s3a5).         const(T_plzensky70827_txt_001_p1s3a5).
nodetype(node1_8, complex).         const(complex).
t_lemma(node1_8, osoba).         const(osoba).
%%%%%%%% node1_9 %%%%%%%%%%%%%%%%%%%
node(node1_9).
deepord(node1_9, 4).         const(4).
functor(node1_9, RSTR).         const(RSTR).
gram_sempos(node1_9, adj_quant_def).         const(adj_quant_def).
id(node1_9, T_plzensky70827_txt_001_p1s3a6).         const(T_plzensky70827_txt_001_p1s3a6).
nodetype(node1_9, complex).         const(complex).
t_lemma(node1_9, dva).         const(dva).
%%%%%%%% node1_10 %%%%%%%%%%%%%%%%%%%
node(node1_10).
deepord(node1_10, x4_1).         const(x4_1).
a_ref_type(node1_10, tree).         const(tree).
a_afun(node1_10, Atr).         const(Atr).
m_form(node1_10, dve).         const(dve).
m_lemma(node1_10, dva_2).         const(dva_2).
m_tag(node1_10, ClHP1__________).         const(ClHP1__________).
w_token(node1_10, dve).         const(dve).
a_ord(node1_10, 5).         const(5).
a_parent_id(node1_10, a_plzensky70827_txt_001_p1s3W6).         const(a_plzensky70827_txt_001_p1s3W6).
hide(node1_10, hide).         const(hide).
%%%%%%%% node1_11 %%%%%%%%%%%%%%%%%%%
node(node1_11).
deepord(node1_11, x5_1).         const(x5_1).
a_ref_type(node1_11, tree).         const(tree).
a_afun(node1_11, Sb).         const(Sb).
m_form(node1_11, osoby).         const(osoby).
m_lemma(node1_11, osoba).         const(osoba).
m_tag(node1_11, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node1_11, osoby).         const(osoby).
w_no_space_after(node1_11, 1).         const(1).
a_ord(node1_11, 6).         const(6).
a_parent_id(node1_11, a_plzensky70827_txt_001_p1s3W4).         const(a_plzensky70827_txt_001_p1s3W4).
hide(node1_11, hide).         const(hide).
edge(node1_0, node1_1).
edge(node1_1, node1_2).
edge(node1_1, node1_3).
edge(node1_3, node1_4).
edge(node1_3, node1_5).
edge(node1_1, node1_6).
edge(node1_1, node1_7).
edge(node1_1, node1_8).
edge(node1_8, node1_9).
edge(node1_9, node1_10).
edge(node1_8, node1_11).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode byl zranen muz. 
tree_root(node2_0).
valid_root(node2_0).
%%%%%%%% node2_0 %%%%%%%%%%%%%%%%%%%
node(node2_0).
atree_rf(node2_0, a_a_plzensky72450_txt_001_p3s2).         const(a_a_plzensky72450_txt_001_p3s2).
deepord(node2_0, 0).         const(0).
id(node2_0, T_plzensky72450_txt_001_p3s2).         const(T_plzensky72450_txt_001_p3s2).
nodetype(node2_0, root).         const(root).
sentence(node2_0, Pri_nehode_byl_zranen_muz__).         const(Pri_nehode_byl_zranen_muz__).
%%%%%%%% node2_1 %%%%%%%%%%%%%%%%%%%
node(node2_1).
deepord(node2_1, 3).         const(3).
functor(node2_1, PRED).         const(PRED).
gram_sempos(node2_1, v).         const(v).
id(node2_1, T_plzensky72450_txt_001_p3s2a1).         const(T_plzensky72450_txt_001_p3s2a1).
nodetype(node2_1, complex).         const(complex).
t_lemma(node2_1, zranit).         const(zranit).
val_frame_rf(node2_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node2_2 %%%%%%%%%%%%%%%%%%%
node(node2_2).
deepord(node2_2, 1).         const(1).
functor(node2_2, ACT).         const(ACT).
id(node2_2, T_plzensky72450_txt_001_p3s2a6).         const(T_plzensky72450_txt_001_p3s2a6).
is_generated(node2_2, 1).         const(1).
nodetype(node2_2, qcomplex).         const(qcomplex).
t_lemma(node2_2, x_Gen).         const(x_Gen).
%%%%%%%% node2_3 %%%%%%%%%%%%%%%%%%%
node(node2_3).
deepord(node2_3, 2).         const(2).
functor(node2_3, TWHEN).         const(TWHEN).
gram_sempos(node2_3, n_denot).         const(n_denot).
id(node2_3, T_plzensky72450_txt_001_p3s2a3).         const(T_plzensky72450_txt_001_p3s2a3).
nodetype(node2_3, complex).         const(complex).
subfunctor(node2_3, basic).         const(basic).
t_lemma(node2_3, nehoda).         const(nehoda).
%%%%%%%% node2_4 %%%%%%%%%%%%%%%%%%%
node(node2_4).
deepord(node2_4, x2_1).         const(x2_1).
a_ref_type(node2_4, tree).         const(tree).
a_afun(node2_4, AuxP).         const(AuxP).
m_form(node2_4, Pri).         const(Pri).
m_lemma(node2_4, pri_1).         const(pri_1).
m_tag(node2_4, RR__6__________).         const(RR__6__________).
w_token(node2_4, Pri).         const(Pri).
a_ord(node2_4, 1).         const(1).
a_parent_id(node2_4, a_plzensky72450_txt_001_p3s2W4).         const(a_plzensky72450_txt_001_p3s2W4).
hide(node2_4, hide).         const(hide).
%%%%%%%% node2_5 %%%%%%%%%%%%%%%%%%%
node(node2_5).
deepord(node2_5, x2_2).         const(x2_2).
a_ref_type(node2_5, tree).         const(tree).
a_afun(node2_5, Adv).         const(Adv).
m_form(node2_5, nehode).         const(nehode).
m_lemma(node2_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node2_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node2_5, nehode).         const(nehode).
a_ord(node2_5, 2).         const(2).
a_parent_id(node2_5, a_plzensky72450_txt_001_p3s2W1).         const(a_plzensky72450_txt_001_p3s2W1).
hide(node2_5, hide).         const(hide).
%%%%%%%% node2_6 %%%%%%%%%%%%%%%%%%%
node(node2_6).
deepord(node2_6, x3_1).         const(x3_1).
a_ref_type(node2_6, tree).         const(tree).
a_afun(node2_6, AuxV).         const(AuxV).
m_form(node2_6, byl).         const(byl).
m_lemma(node2_6, byt).         const(byt).
m_tag(node2_6, VpYS___XR_AA___).         const(VpYS___XR_AA___).
w_token(node2_6, byl).         const(byl).
a_ord(node2_6, 3).         const(3).
a_parent_id(node2_6, a_plzensky72450_txt_001_p3s2W4).         const(a_plzensky72450_txt_001_p3s2W4).
hide(node2_6, hide).         const(hide).
%%%%%%%% node2_7 %%%%%%%%%%%%%%%%%%%
node(node2_7).
deepord(node2_7, x3_2).         const(x3_2).
a_ref_type(node2_7, tree).         const(tree).
a_afun(node2_7, Pred).         const(Pred).
m_form(node2_7, zranen).         const(zranen).
m_lemma(node2_7, zranit__W).         const(zranit__W).
m_tag(node2_7, VsYS___XX_AP___).         const(VsYS___XX_AP___).
w_token(node2_7, zranen).         const(zranen).
a_ord(node2_7, 4).         const(4).
a_parent_id(node2_7, a_plzensky72450_txt_001_p3s2).         const(a_plzensky72450_txt_001_p3s2).
hide(node2_7, hide).         const(hide).
%%%%%%%% node2_8 %%%%%%%%%%%%%%%%%%%
node(node2_8).
deepord(node2_8, 4).         const(4).
functor(node2_8, PAT).         const(PAT).
gram_sempos(node2_8, n_denot).         const(n_denot).
id(node2_8, T_plzensky72450_txt_001_p3s2a5).         const(T_plzensky72450_txt_001_p3s2a5).
nodetype(node2_8, complex).         const(complex).
t_lemma(node2_8, muz).         const(muz).
%%%%%%%% node2_9 %%%%%%%%%%%%%%%%%%%
node(node2_9).
deepord(node2_9, x4_1).         const(x4_1).
a_ref_type(node2_9, tree).         const(tree).
a_afun(node2_9, Sb).         const(Sb).
m_form(node2_9, muz).         const(muz).
m_lemma(node2_9, muz).         const(muz).
m_tag(node2_9, NNMS1_____A____).         const(NNMS1_____A____).
w_token(node2_9, muz).         const(muz).
w_no_space_after(node2_9, 1).         const(1).
a_ord(node2_9, 5).         const(5).
a_parent_id(node2_9, a_plzensky72450_txt_001_p3s2W4).         const(a_plzensky72450_txt_001_p3s2W4).
hide(node2_9, hide).         const(hide).
edge(node2_0, node2_1).
edge(node2_1, node2_2).
edge(node2_1, node2_3).
edge(node2_3, node2_4).
edge(node2_3, node2_5).
edge(node2_1, node2_6).
edge(node2_1, node2_7).
edge(node2_1, node2_8).
edge(node2_8, node2_9).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode byla lehce zranena jedna osoba. 
tree_root(node3_0).
valid_root(node3_0).
%%%%%%%% node3_0 %%%%%%%%%%%%%%%%%%%
node(node3_0).
atree_rf(node3_0, a_a_plzensky72450_txt_001_p19s2).         const(a_a_plzensky72450_txt_001_p19s2).
deepord(node3_0, 0).         const(0).
id(node3_0, T_plzensky72450_txt_001_p19s2).         const(T_plzensky72450_txt_001_p19s2).
nodetype(node3_0, root).         const(root).
sentence(node3_0, Pri_nehode_byla_lehce_zranena_jedna_osoba__).         const(Pri_nehode_byla_lehce_zranena_jedna_osoba__).
%%%%%%%% node3_1 %%%%%%%%%%%%%%%%%%%
node(node3_1).
deepord(node3_1, 4).         const(4).
functor(node3_1, PRED).         const(PRED).
gram_sempos(node3_1, v).         const(v).
id(node3_1, T_plzensky72450_txt_001_p19s2a1).         const(T_plzensky72450_txt_001_p19s2a1).
nodetype(node3_1, complex).         const(complex).
t_lemma(node3_1, zranit).         const(zranit).
val_frame_rf(node3_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node3_2 %%%%%%%%%%%%%%%%%%%
node(node3_2).
deepord(node3_2, 1).         const(1).
functor(node3_2, ACT).         const(ACT).
id(node3_2, T_plzensky72450_txt_001_p19s2a8).         const(T_plzensky72450_txt_001_p19s2a8).
is_generated(node3_2, 1).         const(1).
nodetype(node3_2, qcomplex).         const(qcomplex).
t_lemma(node3_2, x_Gen).         const(x_Gen).
%%%%%%%% node3_3 %%%%%%%%%%%%%%%%%%%
node(node3_3).
deepord(node3_3, 2).         const(2).
functor(node3_3, TWHEN).         const(TWHEN).
gram_sempos(node3_3, n_denot).         const(n_denot).
id(node3_3, T_plzensky72450_txt_001_p19s2a3).         const(T_plzensky72450_txt_001_p19s2a3).
nodetype(node3_3, complex).         const(complex).
subfunctor(node3_3, basic).         const(basic).
t_lemma(node3_3, nehoda).         const(nehoda).
%%%%%%%% node3_4 %%%%%%%%%%%%%%%%%%%
node(node3_4).
deepord(node3_4, x2_1).         const(x2_1).
a_ref_type(node3_4, tree).         const(tree).
a_afun(node3_4, AuxP).         const(AuxP).
m_form(node3_4, Pri).         const(Pri).
m_lemma(node3_4, pri_1).         const(pri_1).
m_tag(node3_4, RR__6__________).         const(RR__6__________).
w_token(node3_4, Pri).         const(Pri).
a_ord(node3_4, 1).         const(1).
a_parent_id(node3_4, a_plzensky72450_txt_001_p19s2W5).         const(a_plzensky72450_txt_001_p19s2W5).
hide(node3_4, hide).         const(hide).
%%%%%%%% node3_5 %%%%%%%%%%%%%%%%%%%
node(node3_5).
deepord(node3_5, x2_2).         const(x2_2).
a_ref_type(node3_5, tree).         const(tree).
a_afun(node3_5, Adv).         const(Adv).
m_form(node3_5, nehode).         const(nehode).
m_lemma(node3_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node3_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node3_5, nehode).         const(nehode).
a_ord(node3_5, 2).         const(2).
a_parent_id(node3_5, a_plzensky72450_txt_001_p19s2W1).         const(a_plzensky72450_txt_001_p19s2W1).
hide(node3_5, hide).         const(hide).
%%%%%%%% node3_6 %%%%%%%%%%%%%%%%%%%
node(node3_6).
deepord(node3_6, 3).         const(3).
functor(node3_6, MANN).         const(MANN).
gram_sempos(node3_6, adj_denot).         const(adj_denot).
id(node3_6, T_plzensky72450_txt_001_p19s2a5).         const(T_plzensky72450_txt_001_p19s2a5).
nodetype(node3_6, complex).         const(complex).
t_lemma(node3_6, lehky).         const(lehky).
%%%%%%%% node3_7 %%%%%%%%%%%%%%%%%%%
node(node3_7).
deepord(node3_7, x3_1).         const(x3_1).
a_ref_type(node3_7, tree).         const(tree).
a_afun(node3_7, Adv).         const(Adv).
m_form(node3_7, lehce).         const(lehce).
m_lemma(node3_7, lehce).         const(lehce).
m_tag(node3_7, Dg_______1A____).         const(Dg_______1A____).
w_token(node3_7, lehce).         const(lehce).
a_ord(node3_7, 4).         const(4).
a_parent_id(node3_7, a_plzensky72450_txt_001_p19s2W5).         const(a_plzensky72450_txt_001_p19s2W5).
hide(node3_7, hide).         const(hide).
%%%%%%%% node3_8 %%%%%%%%%%%%%%%%%%%
node(node3_8).
deepord(node3_8, x4_1).         const(x4_1).
a_ref_type(node3_8, tree).         const(tree).
a_afun(node3_8, AuxV).         const(AuxV).
m_form(node3_8, byla).         const(byla).
m_lemma(node3_8, byt).         const(byt).
m_tag(node3_8, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node3_8, byla).         const(byla).
a_ord(node3_8, 3).         const(3).
a_parent_id(node3_8, a_plzensky72450_txt_001_p19s2W5).         const(a_plzensky72450_txt_001_p19s2W5).
hide(node3_8, hide).         const(hide).
%%%%%%%% node3_9 %%%%%%%%%%%%%%%%%%%
node(node3_9).
deepord(node3_9, x4_2).         const(x4_2).
a_ref_type(node3_9, tree).         const(tree).
a_afun(node3_9, Pred).         const(Pred).
m_form(node3_9, zranena).         const(zranena).
m_lemma(node3_9, zranit__W).         const(zranit__W).
m_tag(node3_9, VsQW___XX_AP___).         const(VsQW___XX_AP___).
w_token(node3_9, zranena).         const(zranena).
a_ord(node3_9, 5).         const(5).
a_parent_id(node3_9, a_plzensky72450_txt_001_p19s2).         const(a_plzensky72450_txt_001_p19s2).
hide(node3_9, hide).         const(hide).
%%%%%%%% node3_10 %%%%%%%%%%%%%%%%%%%
node(node3_10).
deepord(node3_10, 6).         const(6).
functor(node3_10, PAT).         const(PAT).
gram_sempos(node3_10, n_denot).         const(n_denot).
id(node3_10, T_plzensky72450_txt_001_p19s2a6).         const(T_plzensky72450_txt_001_p19s2a6).
nodetype(node3_10, complex).         const(complex).
t_lemma(node3_10, osoba).         const(osoba).
%%%%%%%% node3_11 %%%%%%%%%%%%%%%%%%%
node(node3_11).
deepord(node3_11, 5).         const(5).
functor(node3_11, RSTR).         const(RSTR).
gram_sempos(node3_11, adj_quant_def).         const(adj_quant_def).
id(node3_11, T_plzensky72450_txt_001_p19s2a7).         const(T_plzensky72450_txt_001_p19s2a7).
nodetype(node3_11, complex).         const(complex).
t_lemma(node3_11, jeden).         const(jeden).
%%%%%%%% node3_12 %%%%%%%%%%%%%%%%%%%
node(node3_12).
deepord(node3_12, x5_1).         const(x5_1).
a_ref_type(node3_12, tree).         const(tree).
a_afun(node3_12, Atr).         const(Atr).
m_form(node3_12, jedna).         const(jedna).
m_lemma(node3_12, jeden_1).         const(jeden_1).
m_tag(node3_12, ClFS1__________).         const(ClFS1__________).
w_token(node3_12, jedna).         const(jedna).
a_ord(node3_12, 6).         const(6).
a_parent_id(node3_12, a_plzensky72450_txt_001_p19s2W7).         const(a_plzensky72450_txt_001_p19s2W7).
hide(node3_12, hide).         const(hide).
%%%%%%%% node3_13 %%%%%%%%%%%%%%%%%%%
node(node3_13).
deepord(node3_13, x6_1).         const(x6_1).
a_ref_type(node3_13, tree).         const(tree).
a_afun(node3_13, Sb).         const(Sb).
m_form(node3_13, osoba).         const(osoba).
m_lemma(node3_13, osoba).         const(osoba).
m_tag(node3_13, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node3_13, osoba).         const(osoba).
w_no_space_after(node3_13, 1).         const(1).
a_ord(node3_13, 7).         const(7).
a_parent_id(node3_13, a_plzensky72450_txt_001_p19s2W5).         const(a_plzensky72450_txt_001_p19s2W5).
hide(node3_13, hide).         const(hide).
edge(node3_0, node3_1).
edge(node3_1, node3_2).
edge(node3_1, node3_3).
edge(node3_3, node3_4).
edge(node3_3, node3_5).
edge(node3_1, node3_6).
edge(node3_6, node3_7).
edge(node3_1, node3_8).
edge(node3_1, node3_9).
edge(node3_1, node3_10).
edge(node3_10, node3_11).
edge(node3_11, node3_12).
edge(node3_10, node3_13).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode byla lehce zranena jedna osoba. 
tree_root(node4_0).
valid_root(node4_0).
%%%%%%%% node4_0 %%%%%%%%%%%%%%%%%%%
node(node4_0).
atree_rf(node4_0, a_a_plzensky72450_txt_001_p19s2).         const(a_a_plzensky72450_txt_001_p19s2).
deepord(node4_0, 0).         const(0).
id(node4_0, T_plzensky72450_txt_001_p19s2).         const(T_plzensky72450_txt_001_p19s2).
nodetype(node4_0, root).         const(root).
sentence(node4_0, Pri_nehode_byla_lehce_zranena_jedna_osoba__).         const(Pri_nehode_byla_lehce_zranena_jedna_osoba__).
%%%%%%%% node4_1 %%%%%%%%%%%%%%%%%%%
node(node4_1).
deepord(node4_1, 4).         const(4).
functor(node4_1, PRED).         const(PRED).
gram_sempos(node4_1, v).         const(v).
id(node4_1, T_plzensky72450_txt_001_p19s2a1).         const(T_plzensky72450_txt_001_p19s2a1).
nodetype(node4_1, complex).         const(complex).
t_lemma(node4_1, zranit).         const(zranit).
val_frame_rf(node4_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node4_2 %%%%%%%%%%%%%%%%%%%
node(node4_2).
deepord(node4_2, 1).         const(1).
functor(node4_2, ACT).         const(ACT).
id(node4_2, T_plzensky72450_txt_001_p19s2a8).         const(T_plzensky72450_txt_001_p19s2a8).
is_generated(node4_2, 1).         const(1).
nodetype(node4_2, qcomplex).         const(qcomplex).
t_lemma(node4_2, x_Gen).         const(x_Gen).
%%%%%%%% node4_3 %%%%%%%%%%%%%%%%%%%
node(node4_3).
deepord(node4_3, 2).         const(2).
functor(node4_3, TWHEN).         const(TWHEN).
gram_sempos(node4_3, n_denot).         const(n_denot).
id(node4_3, T_plzensky72450_txt_001_p19s2a3).         const(T_plzensky72450_txt_001_p19s2a3).
nodetype(node4_3, complex).         const(complex).
subfunctor(node4_3, basic).         const(basic).
t_lemma(node4_3, nehoda).         const(nehoda).
%%%%%%%% node4_4 %%%%%%%%%%%%%%%%%%%
node(node4_4).
deepord(node4_4, x2_1).         const(x2_1).
a_ref_type(node4_4, tree).         const(tree).
a_afun(node4_4, AuxP).         const(AuxP).
m_form(node4_4, Pri).         const(Pri).
m_lemma(node4_4, pri_1).         const(pri_1).
m_tag(node4_4, RR__6__________).         const(RR__6__________).
w_token(node4_4, Pri).         const(Pri).
a_ord(node4_4, 1).         const(1).
a_parent_id(node4_4, a_plzensky72450_txt_001_p19s2W5).         const(a_plzensky72450_txt_001_p19s2W5).
hide(node4_4, hide).         const(hide).
%%%%%%%% node4_5 %%%%%%%%%%%%%%%%%%%
node(node4_5).
deepord(node4_5, x2_2).         const(x2_2).
a_ref_type(node4_5, tree).         const(tree).
a_afun(node4_5, Adv).         const(Adv).
m_form(node4_5, nehode).         const(nehode).
m_lemma(node4_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node4_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node4_5, nehode).         const(nehode).
a_ord(node4_5, 2).         const(2).
a_parent_id(node4_5, a_plzensky72450_txt_001_p19s2W1).         const(a_plzensky72450_txt_001_p19s2W1).
hide(node4_5, hide).         const(hide).
%%%%%%%% node4_6 %%%%%%%%%%%%%%%%%%%
node(node4_6).
deepord(node4_6, 3).         const(3).
functor(node4_6, MANN).         const(MANN).
gram_sempos(node4_6, adj_denot).         const(adj_denot).
id(node4_6, T_plzensky72450_txt_001_p19s2a5).         const(T_plzensky72450_txt_001_p19s2a5).
nodetype(node4_6, complex).         const(complex).
t_lemma(node4_6, lehky).         const(lehky).
%%%%%%%% node4_7 %%%%%%%%%%%%%%%%%%%
node(node4_7).
deepord(node4_7, x3_1).         const(x3_1).
a_ref_type(node4_7, tree).         const(tree).
a_afun(node4_7, Adv).         const(Adv).
m_form(node4_7, lehce).         const(lehce).
m_lemma(node4_7, lehce).         const(lehce).
m_tag(node4_7, Dg_______1A____).         const(Dg_______1A____).
w_token(node4_7, lehce).         const(lehce).
a_ord(node4_7, 4).         const(4).
a_parent_id(node4_7, a_plzensky72450_txt_001_p19s2W5).         const(a_plzensky72450_txt_001_p19s2W5).
hide(node4_7, hide).         const(hide).
%%%%%%%% node4_8 %%%%%%%%%%%%%%%%%%%
node(node4_8).
deepord(node4_8, x4_1).         const(x4_1).
a_ref_type(node4_8, tree).         const(tree).
a_afun(node4_8, AuxV).         const(AuxV).
m_form(node4_8, byla).         const(byla).
m_lemma(node4_8, byt).         const(byt).
m_tag(node4_8, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node4_8, byla).         const(byla).
a_ord(node4_8, 3).         const(3).
a_parent_id(node4_8, a_plzensky72450_txt_001_p19s2W5).         const(a_plzensky72450_txt_001_p19s2W5).
hide(node4_8, hide).         const(hide).
%%%%%%%% node4_9 %%%%%%%%%%%%%%%%%%%
node(node4_9).
deepord(node4_9, x4_2).         const(x4_2).
a_ref_type(node4_9, tree).         const(tree).
a_afun(node4_9, Pred).         const(Pred).
m_form(node4_9, zranena).         const(zranena).
m_lemma(node4_9, zranit__W).         const(zranit__W).
m_tag(node4_9, VsQW___XX_AP___).         const(VsQW___XX_AP___).
w_token(node4_9, zranena).         const(zranena).
a_ord(node4_9, 5).         const(5).
a_parent_id(node4_9, a_plzensky72450_txt_001_p19s2).         const(a_plzensky72450_txt_001_p19s2).
hide(node4_9, hide).         const(hide).
%%%%%%%% node4_10 %%%%%%%%%%%%%%%%%%%
node(node4_10).
deepord(node4_10, 6).         const(6).
functor(node4_10, PAT).         const(PAT).
gram_sempos(node4_10, n_denot).         const(n_denot).
id(node4_10, T_plzensky72450_txt_001_p19s2a6).         const(T_plzensky72450_txt_001_p19s2a6).
nodetype(node4_10, complex).         const(complex).
t_lemma(node4_10, osoba).         const(osoba).
%%%%%%%% node4_11 %%%%%%%%%%%%%%%%%%%
node(node4_11).
deepord(node4_11, 5).         const(5).
functor(node4_11, RSTR).         const(RSTR).
gram_sempos(node4_11, adj_quant_def).         const(adj_quant_def).
id(node4_11, T_plzensky72450_txt_001_p19s2a7).         const(T_plzensky72450_txt_001_p19s2a7).
nodetype(node4_11, complex).         const(complex).
t_lemma(node4_11, jeden).         const(jeden).
%%%%%%%% node4_12 %%%%%%%%%%%%%%%%%%%
node(node4_12).
deepord(node4_12, x5_1).         const(x5_1).
a_ref_type(node4_12, tree).         const(tree).
a_afun(node4_12, Atr).         const(Atr).
m_form(node4_12, jedna).         const(jedna).
m_lemma(node4_12, jeden_1).         const(jeden_1).
m_tag(node4_12, ClFS1__________).         const(ClFS1__________).
w_token(node4_12, jedna).         const(jedna).
a_ord(node4_12, 6).         const(6).
a_parent_id(node4_12, a_plzensky72450_txt_001_p19s2W7).         const(a_plzensky72450_txt_001_p19s2W7).
hide(node4_12, hide).         const(hide).
%%%%%%%% node4_13 %%%%%%%%%%%%%%%%%%%
node(node4_13).
deepord(node4_13, x6_1).         const(x6_1).
a_ref_type(node4_13, tree).         const(tree).
a_afun(node4_13, Sb).         const(Sb).
m_form(node4_13, osoba).         const(osoba).
m_lemma(node4_13, osoba).         const(osoba).
m_tag(node4_13, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node4_13, osoba).         const(osoba).
w_no_space_after(node4_13, 1).         const(1).
a_ord(node4_13, 7).         const(7).
a_parent_id(node4_13, a_plzensky72450_txt_001_p19s2W5).         const(a_plzensky72450_txt_001_p19s2W5).
hide(node4_13, hide).         const(hide).
edge(node4_0, node4_1).
edge(node4_1, node4_2).
edge(node4_1, node4_3).
edge(node4_3, node4_4).
edge(node4_3, node4_5).
edge(node4_1, node4_6).
edge(node4_6, node4_7).
edge(node4_1, node4_8).
edge(node4_1, node4_9).
edge(node4_1, node4_10).
edge(node4_10, node4_11).
edge(node4_11, node4_12).
edge(node4_10, node4_13).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode byla lehce zranena jedna osoba. 
tree_root(node5_0).
valid_root(node5_0).
%%%%%%%% node5_0 %%%%%%%%%%%%%%%%%%%
node(node5_0).
atree_rf(node5_0, a_a_plzensky72450_txt_001_p19s2).         const(a_a_plzensky72450_txt_001_p19s2).
deepord(node5_0, 0).         const(0).
id(node5_0, T_plzensky72450_txt_001_p19s2).         const(T_plzensky72450_txt_001_p19s2).
nodetype(node5_0, root).         const(root).
sentence(node5_0, Pri_nehode_byla_lehce_zranena_jedna_osoba__).         const(Pri_nehode_byla_lehce_zranena_jedna_osoba__).
%%%%%%%% node5_1 %%%%%%%%%%%%%%%%%%%
node(node5_1).
deepord(node5_1, 4).         const(4).
functor(node5_1, PRED).         const(PRED).
gram_sempos(node5_1, v).         const(v).
id(node5_1, T_plzensky72450_txt_001_p19s2a1).         const(T_plzensky72450_txt_001_p19s2a1).
nodetype(node5_1, complex).         const(complex).
t_lemma(node5_1, zranit).         const(zranit).
val_frame_rf(node5_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node5_2 %%%%%%%%%%%%%%%%%%%
node(node5_2).
deepord(node5_2, 1).         const(1).
functor(node5_2, ACT).         const(ACT).
id(node5_2, T_plzensky72450_txt_001_p19s2a8).         const(T_plzensky72450_txt_001_p19s2a8).
is_generated(node5_2, 1).         const(1).
nodetype(node5_2, qcomplex).         const(qcomplex).
t_lemma(node5_2, x_Gen).         const(x_Gen).
%%%%%%%% node5_3 %%%%%%%%%%%%%%%%%%%
node(node5_3).
deepord(node5_3, 2).         const(2).
functor(node5_3, TWHEN).         const(TWHEN).
gram_sempos(node5_3, n_denot).         const(n_denot).
id(node5_3, T_plzensky72450_txt_001_p19s2a3).         const(T_plzensky72450_txt_001_p19s2a3).
nodetype(node5_3, complex).         const(complex).
subfunctor(node5_3, basic).         const(basic).
t_lemma(node5_3, nehoda).         const(nehoda).
%%%%%%%% node5_4 %%%%%%%%%%%%%%%%%%%
node(node5_4).
deepord(node5_4, x2_1).         const(x2_1).
a_ref_type(node5_4, tree).         const(tree).
a_afun(node5_4, AuxP).         const(AuxP).
m_form(node5_4, Pri).         const(Pri).
m_lemma(node5_4, pri_1).         const(pri_1).
m_tag(node5_4, RR__6__________).         const(RR__6__________).
w_token(node5_4, Pri).         const(Pri).
a_ord(node5_4, 1).         const(1).
a_parent_id(node5_4, a_plzensky72450_txt_001_p19s2W5).         const(a_plzensky72450_txt_001_p19s2W5).
hide(node5_4, hide).         const(hide).
%%%%%%%% node5_5 %%%%%%%%%%%%%%%%%%%
node(node5_5).
deepord(node5_5, x2_2).         const(x2_2).
a_ref_type(node5_5, tree).         const(tree).
a_afun(node5_5, Adv).         const(Adv).
m_form(node5_5, nehode).         const(nehode).
m_lemma(node5_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node5_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node5_5, nehode).         const(nehode).
a_ord(node5_5, 2).         const(2).
a_parent_id(node5_5, a_plzensky72450_txt_001_p19s2W1).         const(a_plzensky72450_txt_001_p19s2W1).
hide(node5_5, hide).         const(hide).
%%%%%%%% node5_6 %%%%%%%%%%%%%%%%%%%
node(node5_6).
deepord(node5_6, 3).         const(3).
functor(node5_6, MANN).         const(MANN).
gram_sempos(node5_6, adj_denot).         const(adj_denot).
id(node5_6, T_plzensky72450_txt_001_p19s2a5).         const(T_plzensky72450_txt_001_p19s2a5).
nodetype(node5_6, complex).         const(complex).
t_lemma(node5_6, lehky).         const(lehky).
%%%%%%%% node5_7 %%%%%%%%%%%%%%%%%%%
node(node5_7).
deepord(node5_7, x3_1).         const(x3_1).
a_ref_type(node5_7, tree).         const(tree).
a_afun(node5_7, Adv).         const(Adv).
m_form(node5_7, lehce).         const(lehce).
m_lemma(node5_7, lehce).         const(lehce).
m_tag(node5_7, Dg_______1A____).         const(Dg_______1A____).
w_token(node5_7, lehce).         const(lehce).
a_ord(node5_7, 4).         const(4).
a_parent_id(node5_7, a_plzensky72450_txt_001_p19s2W5).         const(a_plzensky72450_txt_001_p19s2W5).
hide(node5_7, hide).         const(hide).
%%%%%%%% node5_8 %%%%%%%%%%%%%%%%%%%
node(node5_8).
deepord(node5_8, x4_1).         const(x4_1).
a_ref_type(node5_8, tree).         const(tree).
a_afun(node5_8, AuxV).         const(AuxV).
m_form(node5_8, byla).         const(byla).
m_lemma(node5_8, byt).         const(byt).
m_tag(node5_8, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node5_8, byla).         const(byla).
a_ord(node5_8, 3).         const(3).
a_parent_id(node5_8, a_plzensky72450_txt_001_p19s2W5).         const(a_plzensky72450_txt_001_p19s2W5).
hide(node5_8, hide).         const(hide).
%%%%%%%% node5_9 %%%%%%%%%%%%%%%%%%%
node(node5_9).
deepord(node5_9, x4_2).         const(x4_2).
a_ref_type(node5_9, tree).         const(tree).
a_afun(node5_9, Pred).         const(Pred).
m_form(node5_9, zranena).         const(zranena).
m_lemma(node5_9, zranit__W).         const(zranit__W).
m_tag(node5_9, VsQW___XX_AP___).         const(VsQW___XX_AP___).
w_token(node5_9, zranena).         const(zranena).
a_ord(node5_9, 5).         const(5).
a_parent_id(node5_9, a_plzensky72450_txt_001_p19s2).         const(a_plzensky72450_txt_001_p19s2).
hide(node5_9, hide).         const(hide).
%%%%%%%% node5_10 %%%%%%%%%%%%%%%%%%%
node(node5_10).
deepord(node5_10, 6).         const(6).
functor(node5_10, PAT).         const(PAT).
gram_sempos(node5_10, n_denot).         const(n_denot).
id(node5_10, T_plzensky72450_txt_001_p19s2a6).         const(T_plzensky72450_txt_001_p19s2a6).
nodetype(node5_10, complex).         const(complex).
t_lemma(node5_10, osoba).         const(osoba).
%%%%%%%% node5_11 %%%%%%%%%%%%%%%%%%%
node(node5_11).
deepord(node5_11, 5).         const(5).
functor(node5_11, RSTR).         const(RSTR).
gram_sempos(node5_11, adj_quant_def).         const(adj_quant_def).
id(node5_11, T_plzensky72450_txt_001_p19s2a7).         const(T_plzensky72450_txt_001_p19s2a7).
nodetype(node5_11, complex).         const(complex).
t_lemma(node5_11, jeden).         const(jeden).
%%%%%%%% node5_12 %%%%%%%%%%%%%%%%%%%
node(node5_12).
deepord(node5_12, x5_1).         const(x5_1).
a_ref_type(node5_12, tree).         const(tree).
a_afun(node5_12, Atr).         const(Atr).
m_form(node5_12, jedna).         const(jedna).
m_lemma(node5_12, jeden_1).         const(jeden_1).
m_tag(node5_12, ClFS1__________).         const(ClFS1__________).
w_token(node5_12, jedna).         const(jedna).
a_ord(node5_12, 6).         const(6).
a_parent_id(node5_12, a_plzensky72450_txt_001_p19s2W7).         const(a_plzensky72450_txt_001_p19s2W7).
hide(node5_12, hide).         const(hide).
%%%%%%%% node5_13 %%%%%%%%%%%%%%%%%%%
node(node5_13).
deepord(node5_13, x6_1).         const(x6_1).
a_ref_type(node5_13, tree).         const(tree).
a_afun(node5_13, Sb).         const(Sb).
m_form(node5_13, osoba).         const(osoba).
m_lemma(node5_13, osoba).         const(osoba).
m_tag(node5_13, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node5_13, osoba).         const(osoba).
w_no_space_after(node5_13, 1).         const(1).
a_ord(node5_13, 7).         const(7).
a_parent_id(node5_13, a_plzensky72450_txt_001_p19s2W5).         const(a_plzensky72450_txt_001_p19s2W5).
hide(node5_13, hide).         const(hide).
edge(node5_0, node5_1).
edge(node5_1, node5_2).
edge(node5_1, node5_3).
edge(node5_3, node5_4).
edge(node5_3, node5_5).
edge(node5_1, node5_6).
edge(node5_6, node5_7).
edge(node5_1, node5_8).
edge(node5_1, node5_9).
edge(node5_1, node5_10).
edge(node5_10, node5_11).
edge(node5_11, node5_12).
edge(node5_10, node5_13).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode byla lehce zranena jedna osoba. 
tree_root(node6_0).
valid_root(node6_0).
%%%%%%%% node6_0 %%%%%%%%%%%%%%%%%%%
node(node6_0).
atree_rf(node6_0, a_a_plzensky72450_txt_001_p19s2).         const(a_a_plzensky72450_txt_001_p19s2).
deepord(node6_0, 0).         const(0).
id(node6_0, T_plzensky72450_txt_001_p19s2).         const(T_plzensky72450_txt_001_p19s2).
nodetype(node6_0, root).         const(root).
sentence(node6_0, Pri_nehode_byla_lehce_zranena_jedna_osoba__).         const(Pri_nehode_byla_lehce_zranena_jedna_osoba__).
%%%%%%%% node6_1 %%%%%%%%%%%%%%%%%%%
node(node6_1).
deepord(node6_1, 4).         const(4).
functor(node6_1, PRED).         const(PRED).
gram_sempos(node6_1, v).         const(v).
id(node6_1, T_plzensky72450_txt_001_p19s2a1).         const(T_plzensky72450_txt_001_p19s2a1).
nodetype(node6_1, complex).         const(complex).
t_lemma(node6_1, zranit).         const(zranit).
val_frame_rf(node6_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node6_2 %%%%%%%%%%%%%%%%%%%
node(node6_2).
deepord(node6_2, 1).         const(1).
functor(node6_2, ACT).         const(ACT).
id(node6_2, T_plzensky72450_txt_001_p19s2a8).         const(T_plzensky72450_txt_001_p19s2a8).
is_generated(node6_2, 1).         const(1).
nodetype(node6_2, qcomplex).         const(qcomplex).
t_lemma(node6_2, x_Gen).         const(x_Gen).
%%%%%%%% node6_3 %%%%%%%%%%%%%%%%%%%
node(node6_3).
deepord(node6_3, 2).         const(2).
functor(node6_3, TWHEN).         const(TWHEN).
gram_sempos(node6_3, n_denot).         const(n_denot).
id(node6_3, T_plzensky72450_txt_001_p19s2a3).         const(T_plzensky72450_txt_001_p19s2a3).
nodetype(node6_3, complex).         const(complex).
subfunctor(node6_3, basic).         const(basic).
t_lemma(node6_3, nehoda).         const(nehoda).
%%%%%%%% node6_4 %%%%%%%%%%%%%%%%%%%
node(node6_4).
deepord(node6_4, x2_1).         const(x2_1).
a_ref_type(node6_4, tree).         const(tree).
a_afun(node6_4, AuxP).         const(AuxP).
m_form(node6_4, Pri).         const(Pri).
m_lemma(node6_4, pri_1).         const(pri_1).
m_tag(node6_4, RR__6__________).         const(RR__6__________).
w_token(node6_4, Pri).         const(Pri).
a_ord(node6_4, 1).         const(1).
a_parent_id(node6_4, a_plzensky72450_txt_001_p19s2W5).         const(a_plzensky72450_txt_001_p19s2W5).
hide(node6_4, hide).         const(hide).
%%%%%%%% node6_5 %%%%%%%%%%%%%%%%%%%
node(node6_5).
deepord(node6_5, x2_2).         const(x2_2).
a_ref_type(node6_5, tree).         const(tree).
a_afun(node6_5, Adv).         const(Adv).
m_form(node6_5, nehode).         const(nehode).
m_lemma(node6_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node6_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node6_5, nehode).         const(nehode).
a_ord(node6_5, 2).         const(2).
a_parent_id(node6_5, a_plzensky72450_txt_001_p19s2W1).         const(a_plzensky72450_txt_001_p19s2W1).
hide(node6_5, hide).         const(hide).
%%%%%%%% node6_6 %%%%%%%%%%%%%%%%%%%
node(node6_6).
deepord(node6_6, 3).         const(3).
functor(node6_6, MANN).         const(MANN).
gram_sempos(node6_6, adj_denot).         const(adj_denot).
id(node6_6, T_plzensky72450_txt_001_p19s2a5).         const(T_plzensky72450_txt_001_p19s2a5).
nodetype(node6_6, complex).         const(complex).
t_lemma(node6_6, lehky).         const(lehky).
%%%%%%%% node6_7 %%%%%%%%%%%%%%%%%%%
node(node6_7).
deepord(node6_7, x3_1).         const(x3_1).
a_ref_type(node6_7, tree).         const(tree).
a_afun(node6_7, Adv).         const(Adv).
m_form(node6_7, lehce).         const(lehce).
m_lemma(node6_7, lehce).         const(lehce).
m_tag(node6_7, Dg_______1A____).         const(Dg_______1A____).
w_token(node6_7, lehce).         const(lehce).
a_ord(node6_7, 4).         const(4).
a_parent_id(node6_7, a_plzensky72450_txt_001_p19s2W5).         const(a_plzensky72450_txt_001_p19s2W5).
hide(node6_7, hide).         const(hide).
%%%%%%%% node6_8 %%%%%%%%%%%%%%%%%%%
node(node6_8).
deepord(node6_8, x4_1).         const(x4_1).
a_ref_type(node6_8, tree).         const(tree).
a_afun(node6_8, AuxV).         const(AuxV).
m_form(node6_8, byla).         const(byla).
m_lemma(node6_8, byt).         const(byt).
m_tag(node6_8, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node6_8, byla).         const(byla).
a_ord(node6_8, 3).         const(3).
a_parent_id(node6_8, a_plzensky72450_txt_001_p19s2W5).         const(a_plzensky72450_txt_001_p19s2W5).
hide(node6_8, hide).         const(hide).
%%%%%%%% node6_9 %%%%%%%%%%%%%%%%%%%
node(node6_9).
deepord(node6_9, x4_2).         const(x4_2).
a_ref_type(node6_9, tree).         const(tree).
a_afun(node6_9, Pred).         const(Pred).
m_form(node6_9, zranena).         const(zranena).
m_lemma(node6_9, zranit__W).         const(zranit__W).
m_tag(node6_9, VsQW___XX_AP___).         const(VsQW___XX_AP___).
w_token(node6_9, zranena).         const(zranena).
a_ord(node6_9, 5).         const(5).
a_parent_id(node6_9, a_plzensky72450_txt_001_p19s2).         const(a_plzensky72450_txt_001_p19s2).
hide(node6_9, hide).         const(hide).
%%%%%%%% node6_10 %%%%%%%%%%%%%%%%%%%
node(node6_10).
deepord(node6_10, 6).         const(6).
functor(node6_10, PAT).         const(PAT).
gram_sempos(node6_10, n_denot).         const(n_denot).
id(node6_10, T_plzensky72450_txt_001_p19s2a6).         const(T_plzensky72450_txt_001_p19s2a6).
nodetype(node6_10, complex).         const(complex).
t_lemma(node6_10, osoba).         const(osoba).
%%%%%%%% node6_11 %%%%%%%%%%%%%%%%%%%
node(node6_11).
deepord(node6_11, 5).         const(5).
functor(node6_11, RSTR).         const(RSTR).
gram_sempos(node6_11, adj_quant_def).         const(adj_quant_def).
id(node6_11, T_plzensky72450_txt_001_p19s2a7).         const(T_plzensky72450_txt_001_p19s2a7).
nodetype(node6_11, complex).         const(complex).
t_lemma(node6_11, jeden).         const(jeden).
%%%%%%%% node6_12 %%%%%%%%%%%%%%%%%%%
node(node6_12).
deepord(node6_12, x5_1).         const(x5_1).
a_ref_type(node6_12, tree).         const(tree).
a_afun(node6_12, Atr).         const(Atr).
m_form(node6_12, jedna).         const(jedna).
m_lemma(node6_12, jeden_1).         const(jeden_1).
m_tag(node6_12, ClFS1__________).         const(ClFS1__________).
w_token(node6_12, jedna).         const(jedna).
a_ord(node6_12, 6).         const(6).
a_parent_id(node6_12, a_plzensky72450_txt_001_p19s2W7).         const(a_plzensky72450_txt_001_p19s2W7).
hide(node6_12, hide).         const(hide).
%%%%%%%% node6_13 %%%%%%%%%%%%%%%%%%%
node(node6_13).
deepord(node6_13, x6_1).         const(x6_1).
a_ref_type(node6_13, tree).         const(tree).
a_afun(node6_13, Sb).         const(Sb).
m_form(node6_13, osoba).         const(osoba).
m_lemma(node6_13, osoba).         const(osoba).
m_tag(node6_13, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node6_13, osoba).         const(osoba).
w_no_space_after(node6_13, 1).         const(1).
a_ord(node6_13, 7).         const(7).
a_parent_id(node6_13, a_plzensky72450_txt_001_p19s2W5).         const(a_plzensky72450_txt_001_p19s2W5).
hide(node6_13, hide).         const(hide).
edge(node6_0, node6_1).
edge(node6_1, node6_2).
edge(node6_1, node6_3).
edge(node6_3, node6_4).
edge(node6_3, node6_5).
edge(node6_1, node6_6).
edge(node6_6, node6_7).
edge(node6_1, node6_8).
edge(node6_1, node6_9).
edge(node6_1, node6_10).
edge(node6_10, node6_11).
edge(node6_11, node6_12).
edge(node6_10, node6_13).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode byly zraneny dve osoby. 
tree_root(node7_0).
valid_root(node7_0).
%%%%%%%% node7_0 %%%%%%%%%%%%%%%%%%%
node(node7_0).
atree_rf(node7_0, a_a_plzensky49076_txt_001_p1s3).         const(a_a_plzensky49076_txt_001_p1s3).
deepord(node7_0, 0).         const(0).
id(node7_0, T_plzensky49076_txt_001_p1s3).         const(T_plzensky49076_txt_001_p1s3).
nodetype(node7_0, root).         const(root).
sentence(node7_0, Pri_nehode_byly_zraneny_dve_osoby__).         const(Pri_nehode_byly_zraneny_dve_osoby__).
%%%%%%%% node7_1 %%%%%%%%%%%%%%%%%%%
node(node7_1).
deepord(node7_1, 3).         const(3).
functor(node7_1, PRED).         const(PRED).
gram_sempos(node7_1, v).         const(v).
id(node7_1, T_plzensky49076_txt_001_p1s3a1).         const(T_plzensky49076_txt_001_p1s3a1).
nodetype(node7_1, complex).         const(complex).
t_lemma(node7_1, zranit).         const(zranit).
val_frame_rf(node7_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node7_2 %%%%%%%%%%%%%%%%%%%
node(node7_2).
deepord(node7_2, 1).         const(1).
functor(node7_2, ACT).         const(ACT).
id(node7_2, T_plzensky49076_txt_001_p1s3a7).         const(T_plzensky49076_txt_001_p1s3a7).
is_generated(node7_2, 1).         const(1).
nodetype(node7_2, qcomplex).         const(qcomplex).
t_lemma(node7_2, x_Gen).         const(x_Gen).
%%%%%%%% node7_3 %%%%%%%%%%%%%%%%%%%
node(node7_3).
deepord(node7_3, 2).         const(2).
functor(node7_3, TWHEN).         const(TWHEN).
gram_sempos(node7_3, n_denot).         const(n_denot).
id(node7_3, T_plzensky49076_txt_001_p1s3a3).         const(T_plzensky49076_txt_001_p1s3a3).
nodetype(node7_3, complex).         const(complex).
subfunctor(node7_3, basic).         const(basic).
t_lemma(node7_3, nehoda).         const(nehoda).
%%%%%%%% node7_4 %%%%%%%%%%%%%%%%%%%
node(node7_4).
deepord(node7_4, x2_1).         const(x2_1).
a_ref_type(node7_4, tree).         const(tree).
a_afun(node7_4, AuxP).         const(AuxP).
m_form(node7_4, Pri).         const(Pri).
m_lemma(node7_4, pri_1).         const(pri_1).
m_tag(node7_4, RR__6__________).         const(RR__6__________).
w_token(node7_4, Pri).         const(Pri).
a_ord(node7_4, 1).         const(1).
a_parent_id(node7_4, a_plzensky49076_txt_001_p1s3W4).         const(a_plzensky49076_txt_001_p1s3W4).
hide(node7_4, hide).         const(hide).
%%%%%%%% node7_5 %%%%%%%%%%%%%%%%%%%
node(node7_5).
deepord(node7_5, x2_2).         const(x2_2).
a_ref_type(node7_5, tree).         const(tree).
a_afun(node7_5, Adv).         const(Adv).
m_form(node7_5, nehode).         const(nehode).
m_lemma(node7_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node7_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node7_5, nehode).         const(nehode).
a_ord(node7_5, 2).         const(2).
a_parent_id(node7_5, a_plzensky49076_txt_001_p1s3W1).         const(a_plzensky49076_txt_001_p1s3W1).
hide(node7_5, hide).         const(hide).
%%%%%%%% node7_6 %%%%%%%%%%%%%%%%%%%
node(node7_6).
deepord(node7_6, x3_1).         const(x3_1).
a_ref_type(node7_6, tree).         const(tree).
a_afun(node7_6, AuxV).         const(AuxV).
m_form(node7_6, byly).         const(byly).
m_lemma(node7_6, byt).         const(byt).
m_tag(node7_6, VpTP___XR_AA___).         const(VpTP___XR_AA___).
w_token(node7_6, byly).         const(byly).
a_ord(node7_6, 3).         const(3).
a_parent_id(node7_6, a_plzensky49076_txt_001_p1s3W4).         const(a_plzensky49076_txt_001_p1s3W4).
hide(node7_6, hide).         const(hide).
%%%%%%%% node7_7 %%%%%%%%%%%%%%%%%%%
node(node7_7).
deepord(node7_7, x3_2).         const(x3_2).
a_ref_type(node7_7, tree).         const(tree).
a_afun(node7_7, Pred).         const(Pred).
m_form(node7_7, zraneny).         const(zraneny).
m_lemma(node7_7, zranit__W).         const(zranit__W).
m_tag(node7_7, VsTP___XX_AP___).         const(VsTP___XX_AP___).
w_token(node7_7, zraneny).         const(zraneny).
a_ord(node7_7, 4).         const(4).
a_parent_id(node7_7, a_plzensky49076_txt_001_p1s3).         const(a_plzensky49076_txt_001_p1s3).
hide(node7_7, hide).         const(hide).
%%%%%%%% node7_8 %%%%%%%%%%%%%%%%%%%
node(node7_8).
deepord(node7_8, 5).         const(5).
functor(node7_8, PAT).         const(PAT).
gram_sempos(node7_8, n_denot).         const(n_denot).
id(node7_8, T_plzensky49076_txt_001_p1s3a5).         const(T_plzensky49076_txt_001_p1s3a5).
nodetype(node7_8, complex).         const(complex).
t_lemma(node7_8, osoba).         const(osoba).
%%%%%%%% node7_9 %%%%%%%%%%%%%%%%%%%
node(node7_9).
deepord(node7_9, 4).         const(4).
functor(node7_9, RSTR).         const(RSTR).
gram_sempos(node7_9, adj_quant_def).         const(adj_quant_def).
id(node7_9, T_plzensky49076_txt_001_p1s3a6).         const(T_plzensky49076_txt_001_p1s3a6).
nodetype(node7_9, complex).         const(complex).
t_lemma(node7_9, dva).         const(dva).
%%%%%%%% node7_10 %%%%%%%%%%%%%%%%%%%
node(node7_10).
deepord(node7_10, x4_1).         const(x4_1).
a_ref_type(node7_10, tree).         const(tree).
a_afun(node7_10, Atr).         const(Atr).
m_form(node7_10, dve).         const(dve).
m_lemma(node7_10, dva_2).         const(dva_2).
m_tag(node7_10, ClHP1__________).         const(ClHP1__________).
w_token(node7_10, dve).         const(dve).
a_ord(node7_10, 5).         const(5).
a_parent_id(node7_10, a_plzensky49076_txt_001_p1s3W6).         const(a_plzensky49076_txt_001_p1s3W6).
hide(node7_10, hide).         const(hide).
%%%%%%%% node7_11 %%%%%%%%%%%%%%%%%%%
node(node7_11).
deepord(node7_11, x5_1).         const(x5_1).
a_ref_type(node7_11, tree).         const(tree).
a_afun(node7_11, Sb).         const(Sb).
m_form(node7_11, osoby).         const(osoby).
m_lemma(node7_11, osoba).         const(osoba).
m_tag(node7_11, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node7_11, osoby).         const(osoby).
w_no_space_after(node7_11, 1).         const(1).
a_ord(node7_11, 6).         const(6).
a_parent_id(node7_11, a_plzensky49076_txt_001_p1s3W4).         const(a_plzensky49076_txt_001_p1s3W4).
hide(node7_11, hide).         const(hide).
edge(node7_0, node7_1).
edge(node7_1, node7_2).
edge(node7_1, node7_3).
edge(node7_3, node7_4).
edge(node7_3, node7_5).
edge(node7_1, node7_6).
edge(node7_1, node7_7).
edge(node7_1, node7_8).
edge(node7_8, node7_9).
edge(node7_9, node7_10).
edge(node7_8, node7_11).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode byly zraneny dve osoby. 
tree_root(node8_0).
valid_root(node8_0).
%%%%%%%% node8_0 %%%%%%%%%%%%%%%%%%%
node(node8_0).
atree_rf(node8_0, a_a_plzensky49076_txt_001_p1s3).         const(a_a_plzensky49076_txt_001_p1s3).
deepord(node8_0, 0).         const(0).
id(node8_0, T_plzensky49076_txt_001_p1s3).         const(T_plzensky49076_txt_001_p1s3).
nodetype(node8_0, root).         const(root).
sentence(node8_0, Pri_nehode_byly_zraneny_dve_osoby__).         const(Pri_nehode_byly_zraneny_dve_osoby__).
%%%%%%%% node8_1 %%%%%%%%%%%%%%%%%%%
node(node8_1).
deepord(node8_1, 3).         const(3).
functor(node8_1, PRED).         const(PRED).
gram_sempos(node8_1, v).         const(v).
id(node8_1, T_plzensky49076_txt_001_p1s3a1).         const(T_plzensky49076_txt_001_p1s3a1).
nodetype(node8_1, complex).         const(complex).
t_lemma(node8_1, zranit).         const(zranit).
val_frame_rf(node8_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node8_2 %%%%%%%%%%%%%%%%%%%
node(node8_2).
deepord(node8_2, 1).         const(1).
functor(node8_2, ACT).         const(ACT).
id(node8_2, T_plzensky49076_txt_001_p1s3a7).         const(T_plzensky49076_txt_001_p1s3a7).
is_generated(node8_2, 1).         const(1).
nodetype(node8_2, qcomplex).         const(qcomplex).
t_lemma(node8_2, x_Gen).         const(x_Gen).
%%%%%%%% node8_3 %%%%%%%%%%%%%%%%%%%
node(node8_3).
deepord(node8_3, 2).         const(2).
functor(node8_3, TWHEN).         const(TWHEN).
gram_sempos(node8_3, n_denot).         const(n_denot).
id(node8_3, T_plzensky49076_txt_001_p1s3a3).         const(T_plzensky49076_txt_001_p1s3a3).
nodetype(node8_3, complex).         const(complex).
subfunctor(node8_3, basic).         const(basic).
t_lemma(node8_3, nehoda).         const(nehoda).
%%%%%%%% node8_4 %%%%%%%%%%%%%%%%%%%
node(node8_4).
deepord(node8_4, x2_1).         const(x2_1).
a_ref_type(node8_4, tree).         const(tree).
a_afun(node8_4, AuxP).         const(AuxP).
m_form(node8_4, Pri).         const(Pri).
m_lemma(node8_4, pri_1).         const(pri_1).
m_tag(node8_4, RR__6__________).         const(RR__6__________).
w_token(node8_4, Pri).         const(Pri).
a_ord(node8_4, 1).         const(1).
a_parent_id(node8_4, a_plzensky49076_txt_001_p1s3W4).         const(a_plzensky49076_txt_001_p1s3W4).
hide(node8_4, hide).         const(hide).
%%%%%%%% node8_5 %%%%%%%%%%%%%%%%%%%
node(node8_5).
deepord(node8_5, x2_2).         const(x2_2).
a_ref_type(node8_5, tree).         const(tree).
a_afun(node8_5, Adv).         const(Adv).
m_form(node8_5, nehode).         const(nehode).
m_lemma(node8_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node8_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node8_5, nehode).         const(nehode).
a_ord(node8_5, 2).         const(2).
a_parent_id(node8_5, a_plzensky49076_txt_001_p1s3W1).         const(a_plzensky49076_txt_001_p1s3W1).
hide(node8_5, hide).         const(hide).
%%%%%%%% node8_6 %%%%%%%%%%%%%%%%%%%
node(node8_6).
deepord(node8_6, x3_1).         const(x3_1).
a_ref_type(node8_6, tree).         const(tree).
a_afun(node8_6, AuxV).         const(AuxV).
m_form(node8_6, byly).         const(byly).
m_lemma(node8_6, byt).         const(byt).
m_tag(node8_6, VpTP___XR_AA___).         const(VpTP___XR_AA___).
w_token(node8_6, byly).         const(byly).
a_ord(node8_6, 3).         const(3).
a_parent_id(node8_6, a_plzensky49076_txt_001_p1s3W4).         const(a_plzensky49076_txt_001_p1s3W4).
hide(node8_6, hide).         const(hide).
%%%%%%%% node8_7 %%%%%%%%%%%%%%%%%%%
node(node8_7).
deepord(node8_7, x3_2).         const(x3_2).
a_ref_type(node8_7, tree).         const(tree).
a_afun(node8_7, Pred).         const(Pred).
m_form(node8_7, zraneny).         const(zraneny).
m_lemma(node8_7, zranit__W).         const(zranit__W).
m_tag(node8_7, VsTP___XX_AP___).         const(VsTP___XX_AP___).
w_token(node8_7, zraneny).         const(zraneny).
a_ord(node8_7, 4).         const(4).
a_parent_id(node8_7, a_plzensky49076_txt_001_p1s3).         const(a_plzensky49076_txt_001_p1s3).
hide(node8_7, hide).         const(hide).
%%%%%%%% node8_8 %%%%%%%%%%%%%%%%%%%
node(node8_8).
deepord(node8_8, 5).         const(5).
functor(node8_8, PAT).         const(PAT).
gram_sempos(node8_8, n_denot).         const(n_denot).
id(node8_8, T_plzensky49076_txt_001_p1s3a5).         const(T_plzensky49076_txt_001_p1s3a5).
nodetype(node8_8, complex).         const(complex).
t_lemma(node8_8, osoba).         const(osoba).
%%%%%%%% node8_9 %%%%%%%%%%%%%%%%%%%
node(node8_9).
deepord(node8_9, 4).         const(4).
functor(node8_9, RSTR).         const(RSTR).
gram_sempos(node8_9, adj_quant_def).         const(adj_quant_def).
id(node8_9, T_plzensky49076_txt_001_p1s3a6).         const(T_plzensky49076_txt_001_p1s3a6).
nodetype(node8_9, complex).         const(complex).
t_lemma(node8_9, dva).         const(dva).
%%%%%%%% node8_10 %%%%%%%%%%%%%%%%%%%
node(node8_10).
deepord(node8_10, x4_1).         const(x4_1).
a_ref_type(node8_10, tree).         const(tree).
a_afun(node8_10, Atr).         const(Atr).
m_form(node8_10, dve).         const(dve).
m_lemma(node8_10, dva_2).         const(dva_2).
m_tag(node8_10, ClHP1__________).         const(ClHP1__________).
w_token(node8_10, dve).         const(dve).
a_ord(node8_10, 5).         const(5).
a_parent_id(node8_10, a_plzensky49076_txt_001_p1s3W6).         const(a_plzensky49076_txt_001_p1s3W6).
hide(node8_10, hide).         const(hide).
%%%%%%%% node8_11 %%%%%%%%%%%%%%%%%%%
node(node8_11).
deepord(node8_11, x5_1).         const(x5_1).
a_ref_type(node8_11, tree).         const(tree).
a_afun(node8_11, Sb).         const(Sb).
m_form(node8_11, osoby).         const(osoby).
m_lemma(node8_11, osoba).         const(osoba).
m_tag(node8_11, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node8_11, osoby).         const(osoby).
w_no_space_after(node8_11, 1).         const(1).
a_ord(node8_11, 6).         const(6).
a_parent_id(node8_11, a_plzensky49076_txt_001_p1s3W4).         const(a_plzensky49076_txt_001_p1s3W4).
hide(node8_11, hide).         const(hide).
edge(node8_0, node8_1).
edge(node8_1, node8_2).
edge(node8_1, node8_3).
edge(node8_3, node8_4).
edge(node8_3, node8_5).
edge(node8_1, node8_6).
edge(node8_1, node8_7).
edge(node8_1, node8_8).
edge(node8_8, node8_9).
edge(node8_9, node8_10).
edge(node8_8, node8_11).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Ve vozidle cestovaly dve osoby, ridic byl lehce zranen a do sve pece ho prevzala ZZS. 
tree_root(node9_0).
valid_root(node9_0).
%%%%%%%% node9_0 %%%%%%%%%%%%%%%%%%%
node(node9_0).
atree_rf(node9_0, a_a_plzensky63162_txt_001_p1s3).         const(a_a_plzensky63162_txt_001_p1s3).
deepord(node9_0, 0).         const(0).
id(node9_0, T_plzensky63162_txt_001_p1s3).         const(T_plzensky63162_txt_001_p1s3).
nodetype(node9_0, root).         const(root).
sentence(node9_0, Ve_vozidle_cestovaly_dve_osoby__ridic_byl_lehce_zranen_a_do_sve_pece_ho_prevzala_ZZS__).         const(Ve_vozidle_cestovaly_dve_osoby__ridic_byl_lehce_zranen_a_do_sve_pece_ho_prevzala_ZZS__).
%%%%%%%% node9_1 %%%%%%%%%%%%%%%%%%%
node(node9_1).
deepord(node9_1, 2).         const(2).
functor(node9_1, PRED).         const(PRED).
gram_sempos(node9_1, v).         const(v).
id(node9_1, T_plzensky63162_txt_001_p1s3a1).         const(T_plzensky63162_txt_001_p1s3a1).
nodetype(node9_1, complex).         const(complex).
t_lemma(node9_1, cestovat).         const(cestovat).
val_frame_rf(node9_1, v_v_w263f1).         const(v_v_w263f1).
%%%%%%%% node9_2 %%%%%%%%%%%%%%%%%%%
node(node9_2).
deepord(node9_2, 1).         const(1).
functor(node9_2, LOC).         const(LOC).
gram_sempos(node9_2, n_denot).         const(n_denot).
id(node9_2, T_plzensky63162_txt_001_p1s3a3).         const(T_plzensky63162_txt_001_p1s3a3).
nodetype(node9_2, complex).         const(complex).
subfunctor(node9_2, basic).         const(basic).
t_lemma(node9_2, vozidlo).         const(vozidlo).
%%%%%%%% node9_3 %%%%%%%%%%%%%%%%%%%
node(node9_3).
deepord(node9_3, x1_1).         const(x1_1).
a_ref_type(node9_3, tree).         const(tree).
a_afun(node9_3, AuxP).         const(AuxP).
m_form(node9_3, Ve).         const(Ve).
m_lemma(node9_3, v_1).         const(v_1).
m_tag(node9_3, RV__6__________).         const(RV__6__________).
w_token(node9_3, Ve).         const(Ve).
a_ord(node9_3, 1).         const(1).
a_parent_id(node9_3, a_plzensky63162_txt_001_p1s3W3).         const(a_plzensky63162_txt_001_p1s3W3).
hide(node9_3, hide).         const(hide).
%%%%%%%% node9_4 %%%%%%%%%%%%%%%%%%%
node(node9_4).
deepord(node9_4, x1_2).         const(x1_2).
a_ref_type(node9_4, tree).         const(tree).
a_afun(node9_4, Adv).         const(Adv).
m_form(node9_4, vozidle).         const(vozidle).
m_lemma(node9_4, vozidlo).         const(vozidlo).
m_tag(node9_4, NNNS6_____A____).         const(NNNS6_____A____).
w_token(node9_4, vozidle).         const(vozidle).
a_ord(node9_4, 2).         const(2).
a_parent_id(node9_4, a_plzensky63162_txt_001_p1s3W1).         const(a_plzensky63162_txt_001_p1s3W1).
hide(node9_4, hide).         const(hide).
%%%%%%%% node9_5 %%%%%%%%%%%%%%%%%%%
node(node9_5).
deepord(node9_5, x2_1).         const(x2_1).
a_ref_type(node9_5, tree).         const(tree).
a_afun(node9_5, Pred).         const(Pred).
m_form(node9_5, cestovaly).         const(cestovaly).
m_lemma(node9_5, cestovat__T).         const(cestovat__T).
m_tag(node9_5, VpTP___XR_AA___).         const(VpTP___XR_AA___).
w_token(node9_5, cestovaly).         const(cestovaly).
a_ord(node9_5, 3).         const(3).
a_parent_id(node9_5, a_plzensky63162_txt_001_p1s3).         const(a_plzensky63162_txt_001_p1s3).
hide(node9_5, hide).         const(hide).
%%%%%%%% node9_6 %%%%%%%%%%%%%%%%%%%
node(node9_6).
deepord(node9_6, 4).         const(4).
functor(node9_6, ACT).         const(ACT).
gram_sempos(node9_6, n_denot).         const(n_denot).
id(node9_6, T_plzensky63162_txt_001_p1s3a4).         const(T_plzensky63162_txt_001_p1s3a4).
nodetype(node9_6, complex).         const(complex).
t_lemma(node9_6, osoba).         const(osoba).
%%%%%%%% node9_7 %%%%%%%%%%%%%%%%%%%
node(node9_7).
deepord(node9_7, 3).         const(3).
functor(node9_7, RSTR).         const(RSTR).
gram_sempos(node9_7, adj_quant_def).         const(adj_quant_def).
id(node9_7, T_plzensky63162_txt_001_p1s3a5).         const(T_plzensky63162_txt_001_p1s3a5).
nodetype(node9_7, complex).         const(complex).
t_lemma(node9_7, dva).         const(dva).
%%%%%%%% node9_8 %%%%%%%%%%%%%%%%%%%
node(node9_8).
deepord(node9_8, x3_1).         const(x3_1).
a_ref_type(node9_8, tree).         const(tree).
a_afun(node9_8, Atr).         const(Atr).
m_form(node9_8, dve).         const(dve).
m_lemma(node9_8, dva_2).         const(dva_2).
m_tag(node9_8, ClHP1__________).         const(ClHP1__________).
w_token(node9_8, dve).         const(dve).
a_ord(node9_8, 4).         const(4).
a_parent_id(node9_8, a_plzensky63162_txt_001_p1s3W5).         const(a_plzensky63162_txt_001_p1s3W5).
hide(node9_8, hide).         const(hide).
%%%%%%%% node9_9 %%%%%%%%%%%%%%%%%%%
node(node9_9).
deepord(node9_9, x4_1).         const(x4_1).
a_ref_type(node9_9, tree).         const(tree).
a_afun(node9_9, Sb).         const(Sb).
m_form(node9_9, osoby).         const(osoby).
m_lemma(node9_9, osoba).         const(osoba).
m_tag(node9_9, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node9_9, osoby).         const(osoby).
w_no_space_after(node9_9, 1).         const(1).
a_ord(node9_9, 5).         const(5).
a_parent_id(node9_9, a_plzensky63162_txt_001_p1s3W3).         const(a_plzensky63162_txt_001_p1s3W3).
hide(node9_9, hide).         const(hide).
%%%%%%%% node9_10 %%%%%%%%%%%%%%%%%%%
node(node9_10).
deepord(node9_10, 9).         const(9).
functor(node9_10, CONJ).         const(CONJ).
id(node9_10, T_plzensky63162_txt_001_p1s3a6).         const(T_plzensky63162_txt_001_p1s3a6).
nodetype(node9_10, coap).         const(coap).
t_lemma(node9_10, a).         const(a).
%%%%%%%% node9_11 %%%%%%%%%%%%%%%%%%%
node(node9_11).
deepord(node9_11, 8).         const(8).
functor(node9_11, RSTR).         const(RSTR).
gram_sempos(node9_11, v).         const(v).
id(node9_11, T_plzensky63162_txt_001_p1s3a9).         const(T_plzensky63162_txt_001_p1s3a9).
is_member(node9_11, 1).         const(1).
nodetype(node9_11, complex).         const(complex).
t_lemma(node9_11, zranit).         const(zranit).
val_frame_rf(node9_11, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node9_12 %%%%%%%%%%%%%%%%%%%
node(node9_12).
deepord(node9_12, 5).         const(5).
functor(node9_12, ACT).         const(ACT).
id(node9_12, T_plzensky63162_txt_001_p1s3a18).         const(T_plzensky63162_txt_001_p1s3a18).
is_generated(node9_12, 1).         const(1).
nodetype(node9_12, qcomplex).         const(qcomplex).
t_lemma(node9_12, x_Gen).         const(x_Gen).
%%%%%%%% node9_13 %%%%%%%%%%%%%%%%%%%
node(node9_13).
deepord(node9_13, 6).         const(6).
functor(node9_13, PAT).         const(PAT).
gram_sempos(node9_13, n_denot).         const(n_denot).
id(node9_13, T_plzensky63162_txt_001_p1s3a8).         const(T_plzensky63162_txt_001_p1s3a8).
nodetype(node9_13, complex).         const(complex).
t_lemma(node9_13, ridic).         const(ridic).
%%%%%%%% node9_14 %%%%%%%%%%%%%%%%%%%
node(node9_14).
deepord(node9_14, x6_1).         const(x6_1).
a_ref_type(node9_14, tree).         const(tree).
a_afun(node9_14, Atr).         const(Atr).
m_form(node9_14, ridic).         const(ridic).
m_lemma(node9_14, ridic).         const(ridic).
m_tag(node9_14, NNMS1_____A____).         const(NNMS1_____A____).
w_token(node9_14, ridic).         const(ridic).
a_ord(node9_14, 7).         const(7).
a_parent_id(node9_14, a_plzensky63162_txt_001_p1s3W11).         const(a_plzensky63162_txt_001_p1s3W11).
hide(node9_14, hide).         const(hide).
%%%%%%%% node9_15 %%%%%%%%%%%%%%%%%%%
node(node9_15).
deepord(node9_15, 7).         const(7).
functor(node9_15, MANN).         const(MANN).
gram_sempos(node9_15, adj_denot).         const(adj_denot).
id(node9_15, T_plzensky63162_txt_001_p1s3a11).         const(T_plzensky63162_txt_001_p1s3a11).
nodetype(node9_15, complex).         const(complex).
t_lemma(node9_15, lehky).         const(lehky).
%%%%%%%% node9_16 %%%%%%%%%%%%%%%%%%%
node(node9_16).
deepord(node9_16, x7_1).         const(x7_1).
a_ref_type(node9_16, tree).         const(tree).
a_afun(node9_16, Adv).         const(Adv).
m_form(node9_16, lehce).         const(lehce).
m_lemma(node9_16, lehce).         const(lehce).
m_tag(node9_16, Dg_______1A____).         const(Dg_______1A____).
w_token(node9_16, lehce).         const(lehce).
a_ord(node9_16, 9).         const(9).
a_parent_id(node9_16, a_plzensky63162_txt_001_p1s3W10).         const(a_plzensky63162_txt_001_p1s3W10).
hide(node9_16, hide).         const(hide).
%%%%%%%% node9_17 %%%%%%%%%%%%%%%%%%%
node(node9_17).
deepord(node9_17, x8_1).         const(x8_1).
a_ref_type(node9_17, tree).         const(tree).
a_afun(node9_17, AuxV).         const(AuxV).
m_form(node9_17, byl).         const(byl).
m_lemma(node9_17, byt).         const(byt).
m_tag(node9_17, VpYS___XR_AA___).         const(VpYS___XR_AA___).
w_token(node9_17, byl).         const(byl).
a_ord(node9_17, 8).         const(8).
a_parent_id(node9_17, a_plzensky63162_txt_001_p1s3W10).         const(a_plzensky63162_txt_001_p1s3W10).
hide(node9_17, hide).         const(hide).
%%%%%%%% node9_18 %%%%%%%%%%%%%%%%%%%
node(node9_18).
deepord(node9_18, x8_2).         const(x8_2).
a_ref_type(node9_18, tree).         const(tree).
a_afun(node9_18, Atr).         const(Atr).
m_form(node9_18, zranen).         const(zranen).
m_lemma(node9_18, zranit__W).         const(zranit__W).
m_tag(node9_18, VsYS___XX_AP___).         const(VsYS___XX_AP___).
w_token(node9_18, zranen).         const(zranen).
a_ord(node9_18, 10).         const(10).
a_parent_id(node9_18, a_plzensky63162_txt_001_p1s3W11).         const(a_plzensky63162_txt_001_p1s3W11).
hide(node9_18, hide).         const(hide).
%%%%%%%% node9_19 %%%%%%%%%%%%%%%%%%%
node(node9_19).
deepord(node9_19, x9_1).         const(x9_1).
a_ref_type(node9_19, tree).         const(tree).
a_afun(node9_19, Coord).         const(Coord).
m_form(node9_19, a).         const(a).
m_lemma(node9_19, a_1).         const(a_1).
m_tag(node9_19, J______________).         const(J______________).
w_token(node9_19, a).         const(a).
a_ord(node9_19, 11).         const(11).
a_parent_id(node9_19, a_plzensky63162_txt_001_p1s3W5).         const(a_plzensky63162_txt_001_p1s3W5).
hide(node9_19, hide).         const(hide).
%%%%%%%% node9_20 %%%%%%%%%%%%%%%%%%%
node(node9_20).
deepord(node9_20, 13).         const(13).
functor(node9_20, RSTR).         const(RSTR).
gram_sempos(node9_20, v).         const(v).
id(node9_20, T_plzensky63162_txt_001_p1s3a12).         const(T_plzensky63162_txt_001_p1s3a12).
is_member(node9_20, 1).         const(1).
nodetype(node9_20, complex).         const(complex).
t_lemma(node9_20, prevzit).         const(prevzit).
val_frame_rf(node9_20, v_v_w5060f1).         const(v_v_w5060f1).
%%%%%%%% node9_21 %%%%%%%%%%%%%%%%%%%
node(node9_21).
deepord(node9_21, 11).         const(11).
functor(node9_21, DIR3).         const(DIR3).
gram_sempos(node9_21, n_denot).         const(n_denot).
id(node9_21, T_plzensky63162_txt_001_p1s3a14).         const(T_plzensky63162_txt_001_p1s3a14).
nodetype(node9_21, complex).         const(complex).
subfunctor(node9_21, basic).         const(basic).
t_lemma(node9_21, pece).         const(pece).
%%%%%%%% node9_22 %%%%%%%%%%%%%%%%%%%
node(node9_22).
deepord(node9_22, 10).         const(10).
functor(node9_22, APP).         const(APP).
gram_sempos(node9_22, n_pron_def_pers).         const(n_pron_def_pers).
id(node9_22, T_plzensky63162_txt_001_p1s3a15).         const(T_plzensky63162_txt_001_p1s3a15).
nodetype(node9_22, complex).         const(complex).
t_lemma(node9_22, x_PersPron).         const(x_PersPron).
%%%%%%%% node9_23 %%%%%%%%%%%%%%%%%%%
node(node9_23).
deepord(node9_23, x10_1).         const(x10_1).
a_ref_type(node9_23, tree).         const(tree).
a_afun(node9_23, Atr).         const(Atr).
m_form(node9_23, sve).         const(sve).
m_lemma(node9_23, svuj_1___privlast__).         const(svuj_1___privlast__).
m_tag(node9_23, P8FS2_________1).         const(P8FS2_________1).
w_token(node9_23, sve).         const(sve).
a_ord(node9_23, 13).         const(13).
a_parent_id(node9_23, a_plzensky63162_txt_001_p1s3W14).         const(a_plzensky63162_txt_001_p1s3W14).
hide(node9_23, hide).         const(hide).
%%%%%%%% node9_24 %%%%%%%%%%%%%%%%%%%
node(node9_24).
deepord(node9_24, x11_1).         const(x11_1).
a_ref_type(node9_24, tree).         const(tree).
a_afun(node9_24, AuxP).         const(AuxP).
m_form(node9_24, do).         const(do).
m_lemma(node9_24, do_1).         const(do_1).
m_tag(node9_24, RR__2__________).         const(RR__2__________).
w_token(node9_24, do).         const(do).
a_ord(node9_24, 12).         const(12).
a_parent_id(node9_24, a_plzensky63162_txt_001_p1s3W16).         const(a_plzensky63162_txt_001_p1s3W16).
hide(node9_24, hide).         const(hide).
%%%%%%%% node9_25 %%%%%%%%%%%%%%%%%%%
node(node9_25).
deepord(node9_25, x11_2).         const(x11_2).
a_ref_type(node9_25, tree).         const(tree).
a_afun(node9_25, Adv).         const(Adv).
m_form(node9_25, pece).         const(pece).
m_lemma(node9_25, pece).         const(pece).
m_tag(node9_25, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node9_25, pece).         const(pece).
a_ord(node9_25, 14).         const(14).
a_parent_id(node9_25, a_plzensky63162_txt_001_p1s3W12).         const(a_plzensky63162_txt_001_p1s3W12).
hide(node9_25, hide).         const(hide).
%%%%%%%% node9_26 %%%%%%%%%%%%%%%%%%%
node(node9_26).
deepord(node9_26, 12).         const(12).
functor(node9_26, PAT).         const(PAT).
gram_sempos(node9_26, n_pron_def_pers).         const(n_pron_def_pers).
id(node9_26, T_plzensky63162_txt_001_p1s3a16).         const(T_plzensky63162_txt_001_p1s3a16).
nodetype(node9_26, complex).         const(complex).
t_lemma(node9_26, x_PersPron).         const(x_PersPron).
%%%%%%%% node9_27 %%%%%%%%%%%%%%%%%%%
node(node9_27).
deepord(node9_27, x12_1).         const(x12_1).
a_ref_type(node9_27, tree).         const(tree).
a_afun(node9_27, Obj).         const(Obj).
m_form(node9_27, ho).         const(ho).
m_lemma(node9_27, on_1).         const(on_1).
m_tag(node9_27, PHZS4__3_______).         const(PHZS4__3_______).
w_token(node9_27, ho).         const(ho).
a_ord(node9_27, 15).         const(15).
a_parent_id(node9_27, a_plzensky63162_txt_001_p1s3W16).         const(a_plzensky63162_txt_001_p1s3W16).
hide(node9_27, hide).         const(hide).
%%%%%%%% node9_28 %%%%%%%%%%%%%%%%%%%
node(node9_28).
deepord(node9_28, x13_1).         const(x13_1).
a_ref_type(node9_28, tree).         const(tree).
a_afun(node9_28, Atr).         const(Atr).
m_form(node9_28, prevzala).         const(prevzala).
m_lemma(node9_28, prevzit___pr__od_nekoho_vec__zodpovednost____).         const(prevzit___pr__od_nekoho_vec__zodpovednost____).
m_tag(node9_28, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node9_28, prevzala).         const(prevzala).
a_ord(node9_28, 16).         const(16).
a_parent_id(node9_28, a_plzensky63162_txt_001_p1s3W11).         const(a_plzensky63162_txt_001_p1s3W11).
hide(node9_28, hide).         const(hide).
%%%%%%%% node9_29 %%%%%%%%%%%%%%%%%%%
node(node9_29).
deepord(node9_29, 14).         const(14).
functor(node9_29, ACT).         const(ACT).
gram_sempos(node9_29, n_denot).         const(n_denot).
id(node9_29, T_plzensky63162_txt_001_p1s3a17).         const(T_plzensky63162_txt_001_p1s3a17).
nodetype(node9_29, complex).         const(complex).
t_lemma(node9_29, Zzs).         const(Zzs).
%%%%%%%% node9_30 %%%%%%%%%%%%%%%%%%%
node(node9_30).
deepord(node9_30, x14_1).         const(x14_1).
a_ref_type(node9_30, tree).         const(tree).
a_afun(node9_30, Sb).         const(Sb).
m_form(node9_30, ZZS).         const(ZZS).
m_lemma(node9_30, Zzs).         const(Zzs).
m_tag(node9_30, NNFXX_____A____).         const(NNFXX_____A____).
w_token(node9_30, ZZS).         const(ZZS).
w_no_space_after(node9_30, 1).         const(1).
a_ord(node9_30, 17).         const(17).
a_parent_id(node9_30, a_plzensky63162_txt_001_p1s3W16).         const(a_plzensky63162_txt_001_p1s3W16).
hide(node9_30, hide).         const(hide).
edge(node9_0, node9_1).
edge(node9_1, node9_2).
edge(node9_2, node9_3).
edge(node9_2, node9_4).
edge(node9_1, node9_5).
edge(node9_1, node9_6).
edge(node9_6, node9_7).
edge(node9_7, node9_8).
edge(node9_6, node9_9).
edge(node9_6, node9_10).
edge(node9_10, node9_11).
edge(node9_11, node9_12).
edge(node9_11, node9_13).
edge(node9_13, node9_14).
edge(node9_11, node9_15).
edge(node9_15, node9_16).
edge(node9_11, node9_17).
edge(node9_11, node9_18).
edge(node9_10, node9_19).
edge(node9_10, node9_20).
edge(node9_20, node9_21).
edge(node9_21, node9_22).
edge(node9_22, node9_23).
edge(node9_21, node9_24).
edge(node9_21, node9_25).
edge(node9_20, node9_26).
edge(node9_26, node9_27).
edge(node9_20, node9_28).
edge(node9_20, node9_29).
edge(node9_29, node9_30).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Ve vozidle cestovaly dve osoby, ridic byl lehce zranen a do sve pece ho prevzala ZZS. 
tree_root(node10_0).
valid_root(node10_0).
%%%%%%%% node10_0 %%%%%%%%%%%%%%%%%%%
node(node10_0).
atree_rf(node10_0, a_a_plzensky63162_txt_001_p1s3).         const(a_a_plzensky63162_txt_001_p1s3).
deepord(node10_0, 0).         const(0).
id(node10_0, T_plzensky63162_txt_001_p1s3).         const(T_plzensky63162_txt_001_p1s3).
nodetype(node10_0, root).         const(root).
sentence(node10_0, Ve_vozidle_cestovaly_dve_osoby__ridic_byl_lehce_zranen_a_do_sve_pece_ho_prevzala_ZZS__).         const(Ve_vozidle_cestovaly_dve_osoby__ridic_byl_lehce_zranen_a_do_sve_pece_ho_prevzala_ZZS__).
%%%%%%%% node10_1 %%%%%%%%%%%%%%%%%%%
node(node10_1).
deepord(node10_1, 2).         const(2).
functor(node10_1, PRED).         const(PRED).
gram_sempos(node10_1, v).         const(v).
id(node10_1, T_plzensky63162_txt_001_p1s3a1).         const(T_plzensky63162_txt_001_p1s3a1).
nodetype(node10_1, complex).         const(complex).
t_lemma(node10_1, cestovat).         const(cestovat).
val_frame_rf(node10_1, v_v_w263f1).         const(v_v_w263f1).
%%%%%%%% node10_2 %%%%%%%%%%%%%%%%%%%
node(node10_2).
deepord(node10_2, 1).         const(1).
functor(node10_2, LOC).         const(LOC).
gram_sempos(node10_2, n_denot).         const(n_denot).
id(node10_2, T_plzensky63162_txt_001_p1s3a3).         const(T_plzensky63162_txt_001_p1s3a3).
nodetype(node10_2, complex).         const(complex).
subfunctor(node10_2, basic).         const(basic).
t_lemma(node10_2, vozidlo).         const(vozidlo).
%%%%%%%% node10_3 %%%%%%%%%%%%%%%%%%%
node(node10_3).
deepord(node10_3, x1_1).         const(x1_1).
a_ref_type(node10_3, tree).         const(tree).
a_afun(node10_3, AuxP).         const(AuxP).
m_form(node10_3, Ve).         const(Ve).
m_lemma(node10_3, v_1).         const(v_1).
m_tag(node10_3, RV__6__________).         const(RV__6__________).
w_token(node10_3, Ve).         const(Ve).
a_ord(node10_3, 1).         const(1).
a_parent_id(node10_3, a_plzensky63162_txt_001_p1s3W3).         const(a_plzensky63162_txt_001_p1s3W3).
hide(node10_3, hide).         const(hide).
%%%%%%%% node10_4 %%%%%%%%%%%%%%%%%%%
node(node10_4).
deepord(node10_4, x1_2).         const(x1_2).
a_ref_type(node10_4, tree).         const(tree).
a_afun(node10_4, Adv).         const(Adv).
m_form(node10_4, vozidle).         const(vozidle).
m_lemma(node10_4, vozidlo).         const(vozidlo).
m_tag(node10_4, NNNS6_____A____).         const(NNNS6_____A____).
w_token(node10_4, vozidle).         const(vozidle).
a_ord(node10_4, 2).         const(2).
a_parent_id(node10_4, a_plzensky63162_txt_001_p1s3W1).         const(a_plzensky63162_txt_001_p1s3W1).
hide(node10_4, hide).         const(hide).
%%%%%%%% node10_5 %%%%%%%%%%%%%%%%%%%
node(node10_5).
deepord(node10_5, x2_1).         const(x2_1).
a_ref_type(node10_5, tree).         const(tree).
a_afun(node10_5, Pred).         const(Pred).
m_form(node10_5, cestovaly).         const(cestovaly).
m_lemma(node10_5, cestovat__T).         const(cestovat__T).
m_tag(node10_5, VpTP___XR_AA___).         const(VpTP___XR_AA___).
w_token(node10_5, cestovaly).         const(cestovaly).
a_ord(node10_5, 3).         const(3).
a_parent_id(node10_5, a_plzensky63162_txt_001_p1s3).         const(a_plzensky63162_txt_001_p1s3).
hide(node10_5, hide).         const(hide).
%%%%%%%% node10_6 %%%%%%%%%%%%%%%%%%%
node(node10_6).
deepord(node10_6, 4).         const(4).
functor(node10_6, ACT).         const(ACT).
gram_sempos(node10_6, n_denot).         const(n_denot).
id(node10_6, T_plzensky63162_txt_001_p1s3a4).         const(T_plzensky63162_txt_001_p1s3a4).
nodetype(node10_6, complex).         const(complex).
t_lemma(node10_6, osoba).         const(osoba).
%%%%%%%% node10_7 %%%%%%%%%%%%%%%%%%%
node(node10_7).
deepord(node10_7, 3).         const(3).
functor(node10_7, RSTR).         const(RSTR).
gram_sempos(node10_7, adj_quant_def).         const(adj_quant_def).
id(node10_7, T_plzensky63162_txt_001_p1s3a5).         const(T_plzensky63162_txt_001_p1s3a5).
nodetype(node10_7, complex).         const(complex).
t_lemma(node10_7, dva).         const(dva).
%%%%%%%% node10_8 %%%%%%%%%%%%%%%%%%%
node(node10_8).
deepord(node10_8, x3_1).         const(x3_1).
a_ref_type(node10_8, tree).         const(tree).
a_afun(node10_8, Atr).         const(Atr).
m_form(node10_8, dve).         const(dve).
m_lemma(node10_8, dva_2).         const(dva_2).
m_tag(node10_8, ClHP1__________).         const(ClHP1__________).
w_token(node10_8, dve).         const(dve).
a_ord(node10_8, 4).         const(4).
a_parent_id(node10_8, a_plzensky63162_txt_001_p1s3W5).         const(a_plzensky63162_txt_001_p1s3W5).
hide(node10_8, hide).         const(hide).
%%%%%%%% node10_9 %%%%%%%%%%%%%%%%%%%
node(node10_9).
deepord(node10_9, x4_1).         const(x4_1).
a_ref_type(node10_9, tree).         const(tree).
a_afun(node10_9, Sb).         const(Sb).
m_form(node10_9, osoby).         const(osoby).
m_lemma(node10_9, osoba).         const(osoba).
m_tag(node10_9, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node10_9, osoby).         const(osoby).
w_no_space_after(node10_9, 1).         const(1).
a_ord(node10_9, 5).         const(5).
a_parent_id(node10_9, a_plzensky63162_txt_001_p1s3W3).         const(a_plzensky63162_txt_001_p1s3W3).
hide(node10_9, hide).         const(hide).
%%%%%%%% node10_10 %%%%%%%%%%%%%%%%%%%
node(node10_10).
deepord(node10_10, 9).         const(9).
functor(node10_10, CONJ).         const(CONJ).
id(node10_10, T_plzensky63162_txt_001_p1s3a6).         const(T_plzensky63162_txt_001_p1s3a6).
nodetype(node10_10, coap).         const(coap).
t_lemma(node10_10, a).         const(a).
%%%%%%%% node10_11 %%%%%%%%%%%%%%%%%%%
node(node10_11).
deepord(node10_11, 8).         const(8).
functor(node10_11, RSTR).         const(RSTR).
gram_sempos(node10_11, v).         const(v).
id(node10_11, T_plzensky63162_txt_001_p1s3a9).         const(T_plzensky63162_txt_001_p1s3a9).
is_member(node10_11, 1).         const(1).
nodetype(node10_11, complex).         const(complex).
t_lemma(node10_11, zranit).         const(zranit).
val_frame_rf(node10_11, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node10_12 %%%%%%%%%%%%%%%%%%%
node(node10_12).
deepord(node10_12, 5).         const(5).
functor(node10_12, ACT).         const(ACT).
id(node10_12, T_plzensky63162_txt_001_p1s3a18).         const(T_plzensky63162_txt_001_p1s3a18).
is_generated(node10_12, 1).         const(1).
nodetype(node10_12, qcomplex).         const(qcomplex).
t_lemma(node10_12, x_Gen).         const(x_Gen).
%%%%%%%% node10_13 %%%%%%%%%%%%%%%%%%%
node(node10_13).
deepord(node10_13, 6).         const(6).
functor(node10_13, PAT).         const(PAT).
gram_sempos(node10_13, n_denot).         const(n_denot).
id(node10_13, T_plzensky63162_txt_001_p1s3a8).         const(T_plzensky63162_txt_001_p1s3a8).
nodetype(node10_13, complex).         const(complex).
t_lemma(node10_13, ridic).         const(ridic).
%%%%%%%% node10_14 %%%%%%%%%%%%%%%%%%%
node(node10_14).
deepord(node10_14, x6_1).         const(x6_1).
a_ref_type(node10_14, tree).         const(tree).
a_afun(node10_14, Atr).         const(Atr).
m_form(node10_14, ridic).         const(ridic).
m_lemma(node10_14, ridic).         const(ridic).
m_tag(node10_14, NNMS1_____A____).         const(NNMS1_____A____).
w_token(node10_14, ridic).         const(ridic).
a_ord(node10_14, 7).         const(7).
a_parent_id(node10_14, a_plzensky63162_txt_001_p1s3W11).         const(a_plzensky63162_txt_001_p1s3W11).
hide(node10_14, hide).         const(hide).
%%%%%%%% node10_15 %%%%%%%%%%%%%%%%%%%
node(node10_15).
deepord(node10_15, 7).         const(7).
functor(node10_15, MANN).         const(MANN).
gram_sempos(node10_15, adj_denot).         const(adj_denot).
id(node10_15, T_plzensky63162_txt_001_p1s3a11).         const(T_plzensky63162_txt_001_p1s3a11).
nodetype(node10_15, complex).         const(complex).
t_lemma(node10_15, lehky).         const(lehky).
%%%%%%%% node10_16 %%%%%%%%%%%%%%%%%%%
node(node10_16).
deepord(node10_16, x7_1).         const(x7_1).
a_ref_type(node10_16, tree).         const(tree).
a_afun(node10_16, Adv).         const(Adv).
m_form(node10_16, lehce).         const(lehce).
m_lemma(node10_16, lehce).         const(lehce).
m_tag(node10_16, Dg_______1A____).         const(Dg_______1A____).
w_token(node10_16, lehce).         const(lehce).
a_ord(node10_16, 9).         const(9).
a_parent_id(node10_16, a_plzensky63162_txt_001_p1s3W10).         const(a_plzensky63162_txt_001_p1s3W10).
hide(node10_16, hide).         const(hide).
%%%%%%%% node10_17 %%%%%%%%%%%%%%%%%%%
node(node10_17).
deepord(node10_17, x8_1).         const(x8_1).
a_ref_type(node10_17, tree).         const(tree).
a_afun(node10_17, AuxV).         const(AuxV).
m_form(node10_17, byl).         const(byl).
m_lemma(node10_17, byt).         const(byt).
m_tag(node10_17, VpYS___XR_AA___).         const(VpYS___XR_AA___).
w_token(node10_17, byl).         const(byl).
a_ord(node10_17, 8).         const(8).
a_parent_id(node10_17, a_plzensky63162_txt_001_p1s3W10).         const(a_plzensky63162_txt_001_p1s3W10).
hide(node10_17, hide).         const(hide).
%%%%%%%% node10_18 %%%%%%%%%%%%%%%%%%%
node(node10_18).
deepord(node10_18, x8_2).         const(x8_2).
a_ref_type(node10_18, tree).         const(tree).
a_afun(node10_18, Atr).         const(Atr).
m_form(node10_18, zranen).         const(zranen).
m_lemma(node10_18, zranit__W).         const(zranit__W).
m_tag(node10_18, VsYS___XX_AP___).         const(VsYS___XX_AP___).
w_token(node10_18, zranen).         const(zranen).
a_ord(node10_18, 10).         const(10).
a_parent_id(node10_18, a_plzensky63162_txt_001_p1s3W11).         const(a_plzensky63162_txt_001_p1s3W11).
hide(node10_18, hide).         const(hide).
%%%%%%%% node10_19 %%%%%%%%%%%%%%%%%%%
node(node10_19).
deepord(node10_19, x9_1).         const(x9_1).
a_ref_type(node10_19, tree).         const(tree).
a_afun(node10_19, Coord).         const(Coord).
m_form(node10_19, a).         const(a).
m_lemma(node10_19, a_1).         const(a_1).
m_tag(node10_19, J______________).         const(J______________).
w_token(node10_19, a).         const(a).
a_ord(node10_19, 11).         const(11).
a_parent_id(node10_19, a_plzensky63162_txt_001_p1s3W5).         const(a_plzensky63162_txt_001_p1s3W5).
hide(node10_19, hide).         const(hide).
%%%%%%%% node10_20 %%%%%%%%%%%%%%%%%%%
node(node10_20).
deepord(node10_20, 13).         const(13).
functor(node10_20, RSTR).         const(RSTR).
gram_sempos(node10_20, v).         const(v).
id(node10_20, T_plzensky63162_txt_001_p1s3a12).         const(T_plzensky63162_txt_001_p1s3a12).
is_member(node10_20, 1).         const(1).
nodetype(node10_20, complex).         const(complex).
t_lemma(node10_20, prevzit).         const(prevzit).
val_frame_rf(node10_20, v_v_w5060f1).         const(v_v_w5060f1).
%%%%%%%% node10_21 %%%%%%%%%%%%%%%%%%%
node(node10_21).
deepord(node10_21, 11).         const(11).
functor(node10_21, DIR3).         const(DIR3).
gram_sempos(node10_21, n_denot).         const(n_denot).
id(node10_21, T_plzensky63162_txt_001_p1s3a14).         const(T_plzensky63162_txt_001_p1s3a14).
nodetype(node10_21, complex).         const(complex).
subfunctor(node10_21, basic).         const(basic).
t_lemma(node10_21, pece).         const(pece).
%%%%%%%% node10_22 %%%%%%%%%%%%%%%%%%%
node(node10_22).
deepord(node10_22, 10).         const(10).
functor(node10_22, APP).         const(APP).
gram_sempos(node10_22, n_pron_def_pers).         const(n_pron_def_pers).
id(node10_22, T_plzensky63162_txt_001_p1s3a15).         const(T_plzensky63162_txt_001_p1s3a15).
nodetype(node10_22, complex).         const(complex).
t_lemma(node10_22, x_PersPron).         const(x_PersPron).
%%%%%%%% node10_23 %%%%%%%%%%%%%%%%%%%
node(node10_23).
deepord(node10_23, x10_1).         const(x10_1).
a_ref_type(node10_23, tree).         const(tree).
a_afun(node10_23, Atr).         const(Atr).
m_form(node10_23, sve).         const(sve).
m_lemma(node10_23, svuj_1___privlast__).         const(svuj_1___privlast__).
m_tag(node10_23, P8FS2_________1).         const(P8FS2_________1).
w_token(node10_23, sve).         const(sve).
a_ord(node10_23, 13).         const(13).
a_parent_id(node10_23, a_plzensky63162_txt_001_p1s3W14).         const(a_plzensky63162_txt_001_p1s3W14).
hide(node10_23, hide).         const(hide).
%%%%%%%% node10_24 %%%%%%%%%%%%%%%%%%%
node(node10_24).
deepord(node10_24, x11_1).         const(x11_1).
a_ref_type(node10_24, tree).         const(tree).
a_afun(node10_24, AuxP).         const(AuxP).
m_form(node10_24, do).         const(do).
m_lemma(node10_24, do_1).         const(do_1).
m_tag(node10_24, RR__2__________).         const(RR__2__________).
w_token(node10_24, do).         const(do).
a_ord(node10_24, 12).         const(12).
a_parent_id(node10_24, a_plzensky63162_txt_001_p1s3W16).         const(a_plzensky63162_txt_001_p1s3W16).
hide(node10_24, hide).         const(hide).
%%%%%%%% node10_25 %%%%%%%%%%%%%%%%%%%
node(node10_25).
deepord(node10_25, x11_2).         const(x11_2).
a_ref_type(node10_25, tree).         const(tree).
a_afun(node10_25, Adv).         const(Adv).
m_form(node10_25, pece).         const(pece).
m_lemma(node10_25, pece).         const(pece).
m_tag(node10_25, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node10_25, pece).         const(pece).
a_ord(node10_25, 14).         const(14).
a_parent_id(node10_25, a_plzensky63162_txt_001_p1s3W12).         const(a_plzensky63162_txt_001_p1s3W12).
hide(node10_25, hide).         const(hide).
%%%%%%%% node10_26 %%%%%%%%%%%%%%%%%%%
node(node10_26).
deepord(node10_26, 12).         const(12).
functor(node10_26, PAT).         const(PAT).
gram_sempos(node10_26, n_pron_def_pers).         const(n_pron_def_pers).
id(node10_26, T_plzensky63162_txt_001_p1s3a16).         const(T_plzensky63162_txt_001_p1s3a16).
nodetype(node10_26, complex).         const(complex).
t_lemma(node10_26, x_PersPron).         const(x_PersPron).
%%%%%%%% node10_27 %%%%%%%%%%%%%%%%%%%
node(node10_27).
deepord(node10_27, x12_1).         const(x12_1).
a_ref_type(node10_27, tree).         const(tree).
a_afun(node10_27, Obj).         const(Obj).
m_form(node10_27, ho).         const(ho).
m_lemma(node10_27, on_1).         const(on_1).
m_tag(node10_27, PHZS4__3_______).         const(PHZS4__3_______).
w_token(node10_27, ho).         const(ho).
a_ord(node10_27, 15).         const(15).
a_parent_id(node10_27, a_plzensky63162_txt_001_p1s3W16).         const(a_plzensky63162_txt_001_p1s3W16).
hide(node10_27, hide).         const(hide).
%%%%%%%% node10_28 %%%%%%%%%%%%%%%%%%%
node(node10_28).
deepord(node10_28, x13_1).         const(x13_1).
a_ref_type(node10_28, tree).         const(tree).
a_afun(node10_28, Atr).         const(Atr).
m_form(node10_28, prevzala).         const(prevzala).
m_lemma(node10_28, prevzit___pr__od_nekoho_vec__zodpovednost____).         const(prevzit___pr__od_nekoho_vec__zodpovednost____).
m_tag(node10_28, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node10_28, prevzala).         const(prevzala).
a_ord(node10_28, 16).         const(16).
a_parent_id(node10_28, a_plzensky63162_txt_001_p1s3W11).         const(a_plzensky63162_txt_001_p1s3W11).
hide(node10_28, hide).         const(hide).
%%%%%%%% node10_29 %%%%%%%%%%%%%%%%%%%
node(node10_29).
deepord(node10_29, 14).         const(14).
functor(node10_29, ACT).         const(ACT).
gram_sempos(node10_29, n_denot).         const(n_denot).
id(node10_29, T_plzensky63162_txt_001_p1s3a17).         const(T_plzensky63162_txt_001_p1s3a17).
nodetype(node10_29, complex).         const(complex).
t_lemma(node10_29, Zzs).         const(Zzs).
%%%%%%%% node10_30 %%%%%%%%%%%%%%%%%%%
node(node10_30).
deepord(node10_30, x14_1).         const(x14_1).
a_ref_type(node10_30, tree).         const(tree).
a_afun(node10_30, Sb).         const(Sb).
m_form(node10_30, ZZS).         const(ZZS).
m_lemma(node10_30, Zzs).         const(Zzs).
m_tag(node10_30, NNFXX_____A____).         const(NNFXX_____A____).
w_token(node10_30, ZZS).         const(ZZS).
w_no_space_after(node10_30, 1).         const(1).
a_ord(node10_30, 17).         const(17).
a_parent_id(node10_30, a_plzensky63162_txt_001_p1s3W16).         const(a_plzensky63162_txt_001_p1s3W16).
hide(node10_30, hide).         const(hide).
edge(node10_0, node10_1).
edge(node10_1, node10_2).
edge(node10_2, node10_3).
edge(node10_2, node10_4).
edge(node10_1, node10_5).
edge(node10_1, node10_6).
edge(node10_6, node10_7).
edge(node10_7, node10_8).
edge(node10_6, node10_9).
edge(node10_6, node10_10).
edge(node10_10, node10_11).
edge(node10_11, node10_12).
edge(node10_11, node10_13).
edge(node10_13, node10_14).
edge(node10_11, node10_15).
edge(node10_15, node10_16).
edge(node10_11, node10_17).
edge(node10_11, node10_18).
edge(node10_10, node10_19).
edge(node10_10, node10_20).
edge(node10_20, node10_21).
edge(node10_21, node10_22).
edge(node10_22, node10_23).
edge(node10_21, node10_24).
edge(node10_21, node10_25).
edge(node10_20, node10_26).
edge(node10_26, node10_27).
edge(node10_20, node10_28).
edge(node10_20, node10_29).
edge(node10_29, node10_30).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode byla zranena jedna osoba. 
tree_root(node11_0).
valid_root(node11_0).
%%%%%%%% node11_0 %%%%%%%%%%%%%%%%%%%
node(node11_0).
atree_rf(node11_0, a_a_plzensky72795_txt_001_p2s3).         const(a_a_plzensky72795_txt_001_p2s3).
deepord(node11_0, 0).         const(0).
id(node11_0, T_plzensky72795_txt_001_p2s3).         const(T_plzensky72795_txt_001_p2s3).
nodetype(node11_0, root).         const(root).
sentence(node11_0, Pri_nehode_byla_zranena_jedna_osoba__).         const(Pri_nehode_byla_zranena_jedna_osoba__).
%%%%%%%% node11_1 %%%%%%%%%%%%%%%%%%%
node(node11_1).
deepord(node11_1, 3).         const(3).
functor(node11_1, PRED).         const(PRED).
gram_sempos(node11_1, v).         const(v).
id(node11_1, T_plzensky72795_txt_001_p2s3a1).         const(T_plzensky72795_txt_001_p2s3a1).
nodetype(node11_1, complex).         const(complex).
t_lemma(node11_1, zranit).         const(zranit).
val_frame_rf(node11_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node11_2 %%%%%%%%%%%%%%%%%%%
node(node11_2).
deepord(node11_2, 1).         const(1).
functor(node11_2, ACT).         const(ACT).
id(node11_2, T_plzensky72795_txt_001_p2s3a7).         const(T_plzensky72795_txt_001_p2s3a7).
is_generated(node11_2, 1).         const(1).
nodetype(node11_2, qcomplex).         const(qcomplex).
t_lemma(node11_2, x_Gen).         const(x_Gen).
%%%%%%%% node11_3 %%%%%%%%%%%%%%%%%%%
node(node11_3).
deepord(node11_3, 2).         const(2).
functor(node11_3, TWHEN).         const(TWHEN).
gram_sempos(node11_3, n_denot).         const(n_denot).
id(node11_3, T_plzensky72795_txt_001_p2s3a3).         const(T_plzensky72795_txt_001_p2s3a3).
nodetype(node11_3, complex).         const(complex).
subfunctor(node11_3, basic).         const(basic).
t_lemma(node11_3, nehoda).         const(nehoda).
%%%%%%%% node11_4 %%%%%%%%%%%%%%%%%%%
node(node11_4).
deepord(node11_4, x2_1).         const(x2_1).
a_ref_type(node11_4, tree).         const(tree).
a_afun(node11_4, AuxP).         const(AuxP).
m_form(node11_4, Pri).         const(Pri).
m_lemma(node11_4, pri_1).         const(pri_1).
m_tag(node11_4, RR__6__________).         const(RR__6__________).
w_token(node11_4, Pri).         const(Pri).
a_ord(node11_4, 1).         const(1).
a_parent_id(node11_4, a_plzensky72795_txt_001_p2s3W4).         const(a_plzensky72795_txt_001_p2s3W4).
hide(node11_4, hide).         const(hide).
%%%%%%%% node11_5 %%%%%%%%%%%%%%%%%%%
node(node11_5).
deepord(node11_5, x2_2).         const(x2_2).
a_ref_type(node11_5, tree).         const(tree).
a_afun(node11_5, Adv).         const(Adv).
m_form(node11_5, nehode).         const(nehode).
m_lemma(node11_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node11_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node11_5, nehode).         const(nehode).
a_ord(node11_5, 2).         const(2).
a_parent_id(node11_5, a_plzensky72795_txt_001_p2s3W1).         const(a_plzensky72795_txt_001_p2s3W1).
hide(node11_5, hide).         const(hide).
%%%%%%%% node11_6 %%%%%%%%%%%%%%%%%%%
node(node11_6).
deepord(node11_6, x3_1).         const(x3_1).
a_ref_type(node11_6, tree).         const(tree).
a_afun(node11_6, AuxV).         const(AuxV).
m_form(node11_6, byla).         const(byla).
m_lemma(node11_6, byt).         const(byt).
m_tag(node11_6, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node11_6, byla).         const(byla).
a_ord(node11_6, 3).         const(3).
a_parent_id(node11_6, a_plzensky72795_txt_001_p2s3W4).         const(a_plzensky72795_txt_001_p2s3W4).
hide(node11_6, hide).         const(hide).
%%%%%%%% node11_7 %%%%%%%%%%%%%%%%%%%
node(node11_7).
deepord(node11_7, x3_2).         const(x3_2).
a_ref_type(node11_7, tree).         const(tree).
a_afun(node11_7, Pred).         const(Pred).
m_form(node11_7, zranena).         const(zranena).
m_lemma(node11_7, zranit__W).         const(zranit__W).
m_tag(node11_7, VsQW___XX_AP___).         const(VsQW___XX_AP___).
w_token(node11_7, zranena).         const(zranena).
a_ord(node11_7, 4).         const(4).
a_parent_id(node11_7, a_plzensky72795_txt_001_p2s3).         const(a_plzensky72795_txt_001_p2s3).
hide(node11_7, hide).         const(hide).
%%%%%%%% node11_8 %%%%%%%%%%%%%%%%%%%
node(node11_8).
deepord(node11_8, 5).         const(5).
functor(node11_8, PAT).         const(PAT).
gram_sempos(node11_8, n_denot).         const(n_denot).
id(node11_8, T_plzensky72795_txt_001_p2s3a5).         const(T_plzensky72795_txt_001_p2s3a5).
nodetype(node11_8, complex).         const(complex).
t_lemma(node11_8, osoba).         const(osoba).
%%%%%%%% node11_9 %%%%%%%%%%%%%%%%%%%
node(node11_9).
deepord(node11_9, 4).         const(4).
functor(node11_9, RSTR).         const(RSTR).
gram_sempos(node11_9, adj_quant_def).         const(adj_quant_def).
id(node11_9, T_plzensky72795_txt_001_p2s3a6).         const(T_plzensky72795_txt_001_p2s3a6).
nodetype(node11_9, complex).         const(complex).
t_lemma(node11_9, jeden).         const(jeden).
%%%%%%%% node11_10 %%%%%%%%%%%%%%%%%%%
node(node11_10).
deepord(node11_10, x4_1).         const(x4_1).
a_ref_type(node11_10, tree).         const(tree).
a_afun(node11_10, Atr).         const(Atr).
m_form(node11_10, jedna).         const(jedna).
m_lemma(node11_10, jeden_1).         const(jeden_1).
m_tag(node11_10, ClFS1__________).         const(ClFS1__________).
w_token(node11_10, jedna).         const(jedna).
a_ord(node11_10, 5).         const(5).
a_parent_id(node11_10, a_plzensky72795_txt_001_p2s3W6).         const(a_plzensky72795_txt_001_p2s3W6).
hide(node11_10, hide).         const(hide).
%%%%%%%% node11_11 %%%%%%%%%%%%%%%%%%%
node(node11_11).
deepord(node11_11, x5_1).         const(x5_1).
a_ref_type(node11_11, tree).         const(tree).
a_afun(node11_11, Sb).         const(Sb).
m_form(node11_11, osoba).         const(osoba).
m_lemma(node11_11, osoba).         const(osoba).
m_tag(node11_11, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node11_11, osoba).         const(osoba).
w_no_space_after(node11_11, 1).         const(1).
a_ord(node11_11, 6).         const(6).
a_parent_id(node11_11, a_plzensky72795_txt_001_p2s3W4).         const(a_plzensky72795_txt_001_p2s3W4).
hide(node11_11, hide).         const(hide).
edge(node11_0, node11_1).
edge(node11_1, node11_2).
edge(node11_1, node11_3).
edge(node11_3, node11_4).
edge(node11_3, node11_5).
edge(node11_1, node11_6).
edge(node11_1, node11_7).
edge(node11_1, node11_8).
edge(node11_8, node11_9).
edge(node11_9, node11_10).
edge(node11_8, node11_11).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode byla zranena jedna osoba. 
tree_root(node12_0).
valid_root(node12_0).
%%%%%%%% node12_0 %%%%%%%%%%%%%%%%%%%
node(node12_0).
atree_rf(node12_0, a_a_plzensky72795_txt_001_p2s3).         const(a_a_plzensky72795_txt_001_p2s3).
deepord(node12_0, 0).         const(0).
id(node12_0, T_plzensky72795_txt_001_p2s3).         const(T_plzensky72795_txt_001_p2s3).
nodetype(node12_0, root).         const(root).
sentence(node12_0, Pri_nehode_byla_zranena_jedna_osoba__).         const(Pri_nehode_byla_zranena_jedna_osoba__).
%%%%%%%% node12_1 %%%%%%%%%%%%%%%%%%%
node(node12_1).
deepord(node12_1, 3).         const(3).
functor(node12_1, PRED).         const(PRED).
gram_sempos(node12_1, v).         const(v).
id(node12_1, T_plzensky72795_txt_001_p2s3a1).         const(T_plzensky72795_txt_001_p2s3a1).
nodetype(node12_1, complex).         const(complex).
t_lemma(node12_1, zranit).         const(zranit).
val_frame_rf(node12_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node12_2 %%%%%%%%%%%%%%%%%%%
node(node12_2).
deepord(node12_2, 1).         const(1).
functor(node12_2, ACT).         const(ACT).
id(node12_2, T_plzensky72795_txt_001_p2s3a7).         const(T_plzensky72795_txt_001_p2s3a7).
is_generated(node12_2, 1).         const(1).
nodetype(node12_2, qcomplex).         const(qcomplex).
t_lemma(node12_2, x_Gen).         const(x_Gen).
%%%%%%%% node12_3 %%%%%%%%%%%%%%%%%%%
node(node12_3).
deepord(node12_3, 2).         const(2).
functor(node12_3, TWHEN).         const(TWHEN).
gram_sempos(node12_3, n_denot).         const(n_denot).
id(node12_3, T_plzensky72795_txt_001_p2s3a3).         const(T_plzensky72795_txt_001_p2s3a3).
nodetype(node12_3, complex).         const(complex).
subfunctor(node12_3, basic).         const(basic).
t_lemma(node12_3, nehoda).         const(nehoda).
%%%%%%%% node12_4 %%%%%%%%%%%%%%%%%%%
node(node12_4).
deepord(node12_4, x2_1).         const(x2_1).
a_ref_type(node12_4, tree).         const(tree).
a_afun(node12_4, AuxP).         const(AuxP).
m_form(node12_4, Pri).         const(Pri).
m_lemma(node12_4, pri_1).         const(pri_1).
m_tag(node12_4, RR__6__________).         const(RR__6__________).
w_token(node12_4, Pri).         const(Pri).
a_ord(node12_4, 1).         const(1).
a_parent_id(node12_4, a_plzensky72795_txt_001_p2s3W4).         const(a_plzensky72795_txt_001_p2s3W4).
hide(node12_4, hide).         const(hide).
%%%%%%%% node12_5 %%%%%%%%%%%%%%%%%%%
node(node12_5).
deepord(node12_5, x2_2).         const(x2_2).
a_ref_type(node12_5, tree).         const(tree).
a_afun(node12_5, Adv).         const(Adv).
m_form(node12_5, nehode).         const(nehode).
m_lemma(node12_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node12_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node12_5, nehode).         const(nehode).
a_ord(node12_5, 2).         const(2).
a_parent_id(node12_5, a_plzensky72795_txt_001_p2s3W1).         const(a_plzensky72795_txt_001_p2s3W1).
hide(node12_5, hide).         const(hide).
%%%%%%%% node12_6 %%%%%%%%%%%%%%%%%%%
node(node12_6).
deepord(node12_6, x3_1).         const(x3_1).
a_ref_type(node12_6, tree).         const(tree).
a_afun(node12_6, AuxV).         const(AuxV).
m_form(node12_6, byla).         const(byla).
m_lemma(node12_6, byt).         const(byt).
m_tag(node12_6, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node12_6, byla).         const(byla).
a_ord(node12_6, 3).         const(3).
a_parent_id(node12_6, a_plzensky72795_txt_001_p2s3W4).         const(a_plzensky72795_txt_001_p2s3W4).
hide(node12_6, hide).         const(hide).
%%%%%%%% node12_7 %%%%%%%%%%%%%%%%%%%
node(node12_7).
deepord(node12_7, x3_2).         const(x3_2).
a_ref_type(node12_7, tree).         const(tree).
a_afun(node12_7, Pred).         const(Pred).
m_form(node12_7, zranena).         const(zranena).
m_lemma(node12_7, zranit__W).         const(zranit__W).
m_tag(node12_7, VsQW___XX_AP___).         const(VsQW___XX_AP___).
w_token(node12_7, zranena).         const(zranena).
a_ord(node12_7, 4).         const(4).
a_parent_id(node12_7, a_plzensky72795_txt_001_p2s3).         const(a_plzensky72795_txt_001_p2s3).
hide(node12_7, hide).         const(hide).
%%%%%%%% node12_8 %%%%%%%%%%%%%%%%%%%
node(node12_8).
deepord(node12_8, 5).         const(5).
functor(node12_8, PAT).         const(PAT).
gram_sempos(node12_8, n_denot).         const(n_denot).
id(node12_8, T_plzensky72795_txt_001_p2s3a5).         const(T_plzensky72795_txt_001_p2s3a5).
nodetype(node12_8, complex).         const(complex).
t_lemma(node12_8, osoba).         const(osoba).
%%%%%%%% node12_9 %%%%%%%%%%%%%%%%%%%
node(node12_9).
deepord(node12_9, 4).         const(4).
functor(node12_9, RSTR).         const(RSTR).
gram_sempos(node12_9, adj_quant_def).         const(adj_quant_def).
id(node12_9, T_plzensky72795_txt_001_p2s3a6).         const(T_plzensky72795_txt_001_p2s3a6).
nodetype(node12_9, complex).         const(complex).
t_lemma(node12_9, jeden).         const(jeden).
%%%%%%%% node12_10 %%%%%%%%%%%%%%%%%%%
node(node12_10).
deepord(node12_10, x4_1).         const(x4_1).
a_ref_type(node12_10, tree).         const(tree).
a_afun(node12_10, Atr).         const(Atr).
m_form(node12_10, jedna).         const(jedna).
m_lemma(node12_10, jeden_1).         const(jeden_1).
m_tag(node12_10, ClFS1__________).         const(ClFS1__________).
w_token(node12_10, jedna).         const(jedna).
a_ord(node12_10, 5).         const(5).
a_parent_id(node12_10, a_plzensky72795_txt_001_p2s3W6).         const(a_plzensky72795_txt_001_p2s3W6).
hide(node12_10, hide).         const(hide).
%%%%%%%% node12_11 %%%%%%%%%%%%%%%%%%%
node(node12_11).
deepord(node12_11, x5_1).         const(x5_1).
a_ref_type(node12_11, tree).         const(tree).
a_afun(node12_11, Sb).         const(Sb).
m_form(node12_11, osoba).         const(osoba).
m_lemma(node12_11, osoba).         const(osoba).
m_tag(node12_11, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node12_11, osoba).         const(osoba).
w_no_space_after(node12_11, 1).         const(1).
a_ord(node12_11, 6).         const(6).
a_parent_id(node12_11, a_plzensky72795_txt_001_p2s3W4).         const(a_plzensky72795_txt_001_p2s3W4).
hide(node12_11, hide).         const(hide).
edge(node12_0, node12_1).
edge(node12_1, node12_2).
edge(node12_1, node12_3).
edge(node12_3, node12_4).
edge(node12_3, node12_5).
edge(node12_1, node12_6).
edge(node12_1, node12_7).
edge(node12_1, node12_8).
edge(node12_8, node12_9).
edge(node12_9, node12_10).
edge(node12_8, node12_11).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode nebyl nikdo zranen. 
tree_root(node13_0).
valid_root(node13_0).
%%%%%%%% node13_0 %%%%%%%%%%%%%%%%%%%
node(node13_0).
atree_rf(node13_0, a_a_plzensky57010_txt_001_p3s3).         const(a_a_plzensky57010_txt_001_p3s3).
deepord(node13_0, 0).         const(0).
id(node13_0, T_plzensky57010_txt_001_p3s3).         const(T_plzensky57010_txt_001_p3s3).
nodetype(node13_0, root).         const(root).
sentence(node13_0, Pri_nehode_nebyl_nikdo_zranen__).         const(Pri_nehode_nebyl_nikdo_zranen__).
%%%%%%%% node13_1 %%%%%%%%%%%%%%%%%%%
node(node13_1).
deepord(node13_1, 4).         const(4).
functor(node13_1, PRED).         const(PRED).
gram_sempos(node13_1, v).         const(v).
id(node13_1, T_plzensky57010_txt_001_p3s3a1).         const(T_plzensky57010_txt_001_p3s3a1).
nodetype(node13_1, complex).         const(complex).
t_lemma(node13_1, zranit).         const(zranit).
val_frame_rf(node13_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node13_2 %%%%%%%%%%%%%%%%%%%
node(node13_2).
deepord(node13_2, 1).         const(1).
functor(node13_2, ACT).         const(ACT).
id(node13_2, T_plzensky57010_txt_001_p3s3a6).         const(T_plzensky57010_txt_001_p3s3a6).
is_generated(node13_2, 1).         const(1).
nodetype(node13_2, qcomplex).         const(qcomplex).
t_lemma(node13_2, x_Gen).         const(x_Gen).
%%%%%%%% node13_3 %%%%%%%%%%%%%%%%%%%
node(node13_3).
deepord(node13_3, 2).         const(2).
functor(node13_3, TWHEN).         const(TWHEN).
gram_sempos(node13_3, n_denot).         const(n_denot).
id(node13_3, T_plzensky57010_txt_001_p3s3a3).         const(T_plzensky57010_txt_001_p3s3a3).
nodetype(node13_3, complex).         const(complex).
subfunctor(node13_3, basic).         const(basic).
t_lemma(node13_3, nehoda).         const(nehoda).
%%%%%%%% node13_4 %%%%%%%%%%%%%%%%%%%
node(node13_4).
deepord(node13_4, x2_1).         const(x2_1).
a_ref_type(node13_4, tree).         const(tree).
a_afun(node13_4, AuxP).         const(AuxP).
m_form(node13_4, Pri).         const(Pri).
m_lemma(node13_4, pri_1).         const(pri_1).
m_tag(node13_4, RR__6__________).         const(RR__6__________).
w_token(node13_4, Pri).         const(Pri).
a_ord(node13_4, 1).         const(1).
a_parent_id(node13_4, a_plzensky57010_txt_001_p3s3W5).         const(a_plzensky57010_txt_001_p3s3W5).
hide(node13_4, hide).         const(hide).
%%%%%%%% node13_5 %%%%%%%%%%%%%%%%%%%
node(node13_5).
deepord(node13_5, x2_2).         const(x2_2).
a_ref_type(node13_5, tree).         const(tree).
a_afun(node13_5, Adv).         const(Adv).
m_form(node13_5, nehode).         const(nehode).
m_lemma(node13_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node13_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node13_5, nehode).         const(nehode).
a_ord(node13_5, 2).         const(2).
a_parent_id(node13_5, a_plzensky57010_txt_001_p3s3W1).         const(a_plzensky57010_txt_001_p3s3W1).
hide(node13_5, hide).         const(hide).
%%%%%%%% node13_6 %%%%%%%%%%%%%%%%%%%
node(node13_6).
deepord(node13_6, 3).         const(3).
functor(node13_6, PAT).         const(PAT).
gram_sempos(node13_6, n_pron_indef).         const(n_pron_indef).
id(node13_6, T_plzensky57010_txt_001_p3s3a5).         const(T_plzensky57010_txt_001_p3s3a5).
nodetype(node13_6, complex).         const(complex).
t_lemma(node13_6, kdo).         const(kdo).
%%%%%%%% node13_7 %%%%%%%%%%%%%%%%%%%
node(node13_7).
deepord(node13_7, x3_1).         const(x3_1).
a_ref_type(node13_7, tree).         const(tree).
a_afun(node13_7, Sb).         const(Sb).
m_form(node13_7, nikdo).         const(nikdo).
m_lemma(node13_7, nikdo).         const(nikdo).
m_tag(node13_7, PWM_1__________).         const(PWM_1__________).
w_token(node13_7, nikdo).         const(nikdo).
a_ord(node13_7, 4).         const(4).
a_parent_id(node13_7, a_plzensky57010_txt_001_p3s3W5).         const(a_plzensky57010_txt_001_p3s3W5).
hide(node13_7, hide).         const(hide).
%%%%%%%% node13_8 %%%%%%%%%%%%%%%%%%%
node(node13_8).
deepord(node13_8, x4_1).         const(x4_1).
a_ref_type(node13_8, tree).         const(tree).
a_afun(node13_8, AuxV).         const(AuxV).
m_form(node13_8, nebyl).         const(nebyl).
m_lemma(node13_8, byt).         const(byt).
m_tag(node13_8, VpYS___XR_NA___).         const(VpYS___XR_NA___).
w_token(node13_8, nebyl).         const(nebyl).
a_ord(node13_8, 3).         const(3).
a_parent_id(node13_8, a_plzensky57010_txt_001_p3s3W5).         const(a_plzensky57010_txt_001_p3s3W5).
hide(node13_8, hide).         const(hide).
%%%%%%%% node13_9 %%%%%%%%%%%%%%%%%%%
node(node13_9).
deepord(node13_9, x4_2).         const(x4_2).
a_ref_type(node13_9, tree).         const(tree).
a_afun(node13_9, Pred).         const(Pred).
m_form(node13_9, zranen).         const(zranen).
m_lemma(node13_9, zranit__W).         const(zranit__W).
m_tag(node13_9, VsYS___XX_AP___).         const(VsYS___XX_AP___).
w_token(node13_9, zranen).         const(zranen).
w_no_space_after(node13_9, 1).         const(1).
a_ord(node13_9, 5).         const(5).
a_parent_id(node13_9, a_plzensky57010_txt_001_p3s3).         const(a_plzensky57010_txt_001_p3s3).
hide(node13_9, hide).         const(hide).
edge(node13_0, node13_1).
edge(node13_1, node13_2).
edge(node13_1, node13_3).
edge(node13_3, node13_4).
edge(node13_3, node13_5).
edge(node13_1, node13_6).
edge(node13_6, node13_7).
edge(node13_1, node13_8).
edge(node13_1, node13_9).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode nebyl nikdo zranen. 
tree_root(node14_0).
valid_root(node14_0).
%%%%%%%% node14_0 %%%%%%%%%%%%%%%%%%%
node(node14_0).
atree_rf(node14_0, a_a_plzensky57010_txt_001_p3s3).         const(a_a_plzensky57010_txt_001_p3s3).
deepord(node14_0, 0).         const(0).
id(node14_0, T_plzensky57010_txt_001_p3s3).         const(T_plzensky57010_txt_001_p3s3).
nodetype(node14_0, root).         const(root).
sentence(node14_0, Pri_nehode_nebyl_nikdo_zranen__).         const(Pri_nehode_nebyl_nikdo_zranen__).
%%%%%%%% node14_1 %%%%%%%%%%%%%%%%%%%
node(node14_1).
deepord(node14_1, 4).         const(4).
functor(node14_1, PRED).         const(PRED).
gram_sempos(node14_1, v).         const(v).
id(node14_1, T_plzensky57010_txt_001_p3s3a1).         const(T_plzensky57010_txt_001_p3s3a1).
nodetype(node14_1, complex).         const(complex).
t_lemma(node14_1, zranit).         const(zranit).
val_frame_rf(node14_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node14_2 %%%%%%%%%%%%%%%%%%%
node(node14_2).
deepord(node14_2, 1).         const(1).
functor(node14_2, ACT).         const(ACT).
id(node14_2, T_plzensky57010_txt_001_p3s3a6).         const(T_plzensky57010_txt_001_p3s3a6).
is_generated(node14_2, 1).         const(1).
nodetype(node14_2, qcomplex).         const(qcomplex).
t_lemma(node14_2, x_Gen).         const(x_Gen).
%%%%%%%% node14_3 %%%%%%%%%%%%%%%%%%%
node(node14_3).
deepord(node14_3, 2).         const(2).
functor(node14_3, TWHEN).         const(TWHEN).
gram_sempos(node14_3, n_denot).         const(n_denot).
id(node14_3, T_plzensky57010_txt_001_p3s3a3).         const(T_plzensky57010_txt_001_p3s3a3).
nodetype(node14_3, complex).         const(complex).
subfunctor(node14_3, basic).         const(basic).
t_lemma(node14_3, nehoda).         const(nehoda).
%%%%%%%% node14_4 %%%%%%%%%%%%%%%%%%%
node(node14_4).
deepord(node14_4, x2_1).         const(x2_1).
a_ref_type(node14_4, tree).         const(tree).
a_afun(node14_4, AuxP).         const(AuxP).
m_form(node14_4, Pri).         const(Pri).
m_lemma(node14_4, pri_1).         const(pri_1).
m_tag(node14_4, RR__6__________).         const(RR__6__________).
w_token(node14_4, Pri).         const(Pri).
a_ord(node14_4, 1).         const(1).
a_parent_id(node14_4, a_plzensky57010_txt_001_p3s3W5).         const(a_plzensky57010_txt_001_p3s3W5).
hide(node14_4, hide).         const(hide).
%%%%%%%% node14_5 %%%%%%%%%%%%%%%%%%%
node(node14_5).
deepord(node14_5, x2_2).         const(x2_2).
a_ref_type(node14_5, tree).         const(tree).
a_afun(node14_5, Adv).         const(Adv).
m_form(node14_5, nehode).         const(nehode).
m_lemma(node14_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node14_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node14_5, nehode).         const(nehode).
a_ord(node14_5, 2).         const(2).
a_parent_id(node14_5, a_plzensky57010_txt_001_p3s3W1).         const(a_plzensky57010_txt_001_p3s3W1).
hide(node14_5, hide).         const(hide).
%%%%%%%% node14_6 %%%%%%%%%%%%%%%%%%%
node(node14_6).
deepord(node14_6, 3).         const(3).
functor(node14_6, PAT).         const(PAT).
gram_sempos(node14_6, n_pron_indef).         const(n_pron_indef).
id(node14_6, T_plzensky57010_txt_001_p3s3a5).         const(T_plzensky57010_txt_001_p3s3a5).
nodetype(node14_6, complex).         const(complex).
t_lemma(node14_6, kdo).         const(kdo).
%%%%%%%% node14_7 %%%%%%%%%%%%%%%%%%%
node(node14_7).
deepord(node14_7, x3_1).         const(x3_1).
a_ref_type(node14_7, tree).         const(tree).
a_afun(node14_7, Sb).         const(Sb).
m_form(node14_7, nikdo).         const(nikdo).
m_lemma(node14_7, nikdo).         const(nikdo).
m_tag(node14_7, PWM_1__________).         const(PWM_1__________).
w_token(node14_7, nikdo).         const(nikdo).
a_ord(node14_7, 4).         const(4).
a_parent_id(node14_7, a_plzensky57010_txt_001_p3s3W5).         const(a_plzensky57010_txt_001_p3s3W5).
hide(node14_7, hide).         const(hide).
%%%%%%%% node14_8 %%%%%%%%%%%%%%%%%%%
node(node14_8).
deepord(node14_8, x4_1).         const(x4_1).
a_ref_type(node14_8, tree).         const(tree).
a_afun(node14_8, AuxV).         const(AuxV).
m_form(node14_8, nebyl).         const(nebyl).
m_lemma(node14_8, byt).         const(byt).
m_tag(node14_8, VpYS___XR_NA___).         const(VpYS___XR_NA___).
w_token(node14_8, nebyl).         const(nebyl).
a_ord(node14_8, 3).         const(3).
a_parent_id(node14_8, a_plzensky57010_txt_001_p3s3W5).         const(a_plzensky57010_txt_001_p3s3W5).
hide(node14_8, hide).         const(hide).
%%%%%%%% node14_9 %%%%%%%%%%%%%%%%%%%
node(node14_9).
deepord(node14_9, x4_2).         const(x4_2).
a_ref_type(node14_9, tree).         const(tree).
a_afun(node14_9, Pred).         const(Pred).
m_form(node14_9, zranen).         const(zranen).
m_lemma(node14_9, zranit__W).         const(zranit__W).
m_tag(node14_9, VsYS___XX_AP___).         const(VsYS___XX_AP___).
w_token(node14_9, zranen).         const(zranen).
w_no_space_after(node14_9, 1).         const(1).
a_ord(node14_9, 5).         const(5).
a_parent_id(node14_9, a_plzensky57010_txt_001_p3s3).         const(a_plzensky57010_txt_001_p3s3).
hide(node14_9, hide).         const(hide).
edge(node14_0, node14_1).
edge(node14_1, node14_2).
edge(node14_1, node14_3).
edge(node14_3, node14_4).
edge(node14_3, node14_5).
edge(node14_1, node14_6).
edge(node14_6, node14_7).
edge(node14_1, node14_8).
edge(node14_1, node14_9).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Vazne zranen byl i ridic druheho automobilu. 
tree_root(node15_0).
valid_root(node15_0).
%%%%%%%% node15_0 %%%%%%%%%%%%%%%%%%%
node(node15_0).
atree_rf(node15_0, a_a_plzensky60375_txt_001_p1s6).         const(a_a_plzensky60375_txt_001_p1s6).
deepord(node15_0, 0).         const(0).
id(node15_0, T_plzensky60375_txt_001_p1s6).         const(T_plzensky60375_txt_001_p1s6).
nodetype(node15_0, root).         const(root).
sentence(node15_0, Vazne_zranen_byl_i_ridic_druheho_automobilu__).         const(Vazne_zranen_byl_i_ridic_druheho_automobilu__).
%%%%%%%% node15_1 %%%%%%%%%%%%%%%%%%%
node(node15_1).
deepord(node15_1, 3).         const(3).
functor(node15_1, PRED).         const(PRED).
gram_sempos(node15_1, v).         const(v).
id(node15_1, T_plzensky60375_txt_001_p1s6a1).         const(T_plzensky60375_txt_001_p1s6a1).
nodetype(node15_1, complex).         const(complex).
t_lemma(node15_1, zranit).         const(zranit).
val_frame_rf(node15_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node15_2 %%%%%%%%%%%%%%%%%%%
node(node15_2).
deepord(node15_2, 1).         const(1).
functor(node15_2, ACT).         const(ACT).
id(node15_2, T_plzensky60375_txt_001_p1s6a8).         const(T_plzensky60375_txt_001_p1s6a8).
is_generated(node15_2, 1).         const(1).
nodetype(node15_2, qcomplex).         const(qcomplex).
t_lemma(node15_2, x_Gen).         const(x_Gen).
%%%%%%%% node15_3 %%%%%%%%%%%%%%%%%%%
node(node15_3).
deepord(node15_3, 2).         const(2).
functor(node15_3, MANN).         const(MANN).
gram_sempos(node15_3, adj_denot).         const(adj_denot).
id(node15_3, T_plzensky60375_txt_001_p1s6a2).         const(T_plzensky60375_txt_001_p1s6a2).
nodetype(node15_3, complex).         const(complex).
t_lemma(node15_3, vazny).         const(vazny).
%%%%%%%% node15_4 %%%%%%%%%%%%%%%%%%%
node(node15_4).
deepord(node15_4, x2_1).         const(x2_1).
a_ref_type(node15_4, tree).         const(tree).
a_afun(node15_4, Adv).         const(Adv).
m_form(node15_4, Vazne).         const(Vazne).
m_lemma(node15_4, vazne____1y_).         const(vazne____1y_).
m_tag(node15_4, Dg_______1A____).         const(Dg_______1A____).
w_token(node15_4, Vazne).         const(Vazne).
a_ord(node15_4, 1).         const(1).
a_parent_id(node15_4, a_plzensky60375_txt_001_p1s6W2).         const(a_plzensky60375_txt_001_p1s6W2).
hide(node15_4, hide).         const(hide).
%%%%%%%% node15_5 %%%%%%%%%%%%%%%%%%%
node(node15_5).
deepord(node15_5, x3_1).         const(x3_1).
a_ref_type(node15_5, tree).         const(tree).
a_afun(node15_5, Pred).         const(Pred).
m_form(node15_5, zranen).         const(zranen).
m_lemma(node15_5, zranit__W).         const(zranit__W).
m_tag(node15_5, VsYS___XX_AP___).         const(VsYS___XX_AP___).
w_token(node15_5, zranen).         const(zranen).
a_ord(node15_5, 2).         const(2).
a_parent_id(node15_5, a_plzensky60375_txt_001_p1s6).         const(a_plzensky60375_txt_001_p1s6).
hide(node15_5, hide).         const(hide).
%%%%%%%% node15_6 %%%%%%%%%%%%%%%%%%%
node(node15_6).
deepord(node15_6, x3_2).         const(x3_2).
a_ref_type(node15_6, tree).         const(tree).
a_afun(node15_6, AuxV).         const(AuxV).
m_form(node15_6, byl).         const(byl).
m_lemma(node15_6, byt).         const(byt).
m_tag(node15_6, VpYS___XR_AA___).         const(VpYS___XR_AA___).
w_token(node15_6, byl).         const(byl).
a_ord(node15_6, 3).         const(3).
a_parent_id(node15_6, a_plzensky60375_txt_001_p1s6W2).         const(a_plzensky60375_txt_001_p1s6W2).
hide(node15_6, hide).         const(hide).
%%%%%%%% node15_7 %%%%%%%%%%%%%%%%%%%
node(node15_7).
deepord(node15_7, 5).         const(5).
functor(node15_7, PAT).         const(PAT).
gram_sempos(node15_7, n_denot).         const(n_denot).
id(node15_7, T_plzensky60375_txt_001_p1s6a4).         const(T_plzensky60375_txt_001_p1s6a4).
nodetype(node15_7, complex).         const(complex).
t_lemma(node15_7, ridic).         const(ridic).
%%%%%%%% node15_8 %%%%%%%%%%%%%%%%%%%
node(node15_8).
deepord(node15_8, 4).         const(4).
functor(node15_8, CONJ).         const(CONJ).
id(node15_8, T_plzensky60375_txt_001_p1s6a5).         const(T_plzensky60375_txt_001_p1s6a5).
nodetype(node15_8, coap).         const(coap).
t_lemma(node15_8, i).         const(i).
%%%%%%%% node15_9 %%%%%%%%%%%%%%%%%%%
node(node15_9).
deepord(node15_9, x4_1).         const(x4_1).
a_ref_type(node15_9, tree).         const(tree).
a_afun(node15_9, Coord).         const(Coord).
m_form(node15_9, i).         const(i).
m_lemma(node15_9, i_1).         const(i_1).
m_tag(node15_9, J______________).         const(J______________).
w_token(node15_9, i).         const(i).
a_ord(node15_9, 4).         const(4).
a_parent_id(node15_9, a_plzensky60375_txt_001_p1s6W5).         const(a_plzensky60375_txt_001_p1s6W5).
hide(node15_9, hide).         const(hide).
%%%%%%%% node15_10 %%%%%%%%%%%%%%%%%%%
node(node15_10).
deepord(node15_10, x5_1).         const(x5_1).
a_ref_type(node15_10, tree).         const(tree).
a_afun(node15_10, Sb).         const(Sb).
m_form(node15_10, ridic).         const(ridic).
m_lemma(node15_10, ridic).         const(ridic).
m_tag(node15_10, NNMS1_____A____).         const(NNMS1_____A____).
w_token(node15_10, ridic).         const(ridic).
a_ord(node15_10, 5).         const(5).
a_parent_id(node15_10, a_plzensky60375_txt_001_p1s6W2).         const(a_plzensky60375_txt_001_p1s6W2).
hide(node15_10, hide).         const(hide).
%%%%%%%% node15_11 %%%%%%%%%%%%%%%%%%%
node(node15_11).
deepord(node15_11, 7).         const(7).
functor(node15_11, APP).         const(APP).
gram_sempos(node15_11, n_denot).         const(n_denot).
id(node15_11, T_plzensky60375_txt_001_p1s6a6).         const(T_plzensky60375_txt_001_p1s6a6).
nodetype(node15_11, complex).         const(complex).
t_lemma(node15_11, automobil).         const(automobil).
%%%%%%%% node15_12 %%%%%%%%%%%%%%%%%%%
node(node15_12).
deepord(node15_12, 6).         const(6).
functor(node15_12, RSTR).         const(RSTR).
gram_sempos(node15_12, adj_quant_def).         const(adj_quant_def).
id(node15_12, T_plzensky60375_txt_001_p1s6a7).         const(T_plzensky60375_txt_001_p1s6a7).
nodetype(node15_12, complex).         const(complex).
t_lemma(node15_12, dva).         const(dva).
%%%%%%%% node15_13 %%%%%%%%%%%%%%%%%%%
node(node15_13).
deepord(node15_13, x6_1).         const(x6_1).
a_ref_type(node15_13, tree).         const(tree).
a_afun(node15_13, Atr).         const(Atr).
m_form(node15_13, druheho).         const(druheho).
m_lemma(node15_13, druhy_1___jiny_).         const(druhy_1___jiny_).
m_tag(node15_13, AAIS2____1A____).         const(AAIS2____1A____).
w_token(node15_13, druheho).         const(druheho).
a_ord(node15_13, 6).         const(6).
a_parent_id(node15_13, a_plzensky60375_txt_001_p1s6W7).         const(a_plzensky60375_txt_001_p1s6W7).
hide(node15_13, hide).         const(hide).
%%%%%%%% node15_14 %%%%%%%%%%%%%%%%%%%
node(node15_14).
deepord(node15_14, x7_1).         const(x7_1).
a_ref_type(node15_14, tree).         const(tree).
a_afun(node15_14, Atr).         const(Atr).
m_form(node15_14, automobilu).         const(automobilu).
m_lemma(node15_14, automobil).         const(automobil).
m_tag(node15_14, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node15_14, automobilu).         const(automobilu).
w_no_space_after(node15_14, 1).         const(1).
a_ord(node15_14, 7).         const(7).
a_parent_id(node15_14, a_plzensky60375_txt_001_p1s6W5).         const(a_plzensky60375_txt_001_p1s6W5).
hide(node15_14, hide).         const(hide).
edge(node15_0, node15_1).
edge(node15_1, node15_2).
edge(node15_1, node15_3).
edge(node15_3, node15_4).
edge(node15_1, node15_5).
edge(node15_1, node15_6).
edge(node15_1, node15_7).
edge(node15_7, node15_8).
edge(node15_8, node15_9).
edge(node15_7, node15_10).
edge(node15_7, node15_11).
edge(node15_11, node15_12).
edge(node15_12, node15_13).
edge(node15_11, node15_14).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Vazne zranen byl i ridic druheho automobilu. 
tree_root(node16_0).
valid_root(node16_0).
%%%%%%%% node16_0 %%%%%%%%%%%%%%%%%%%
node(node16_0).
atree_rf(node16_0, a_a_plzensky60375_txt_001_p1s6).         const(a_a_plzensky60375_txt_001_p1s6).
deepord(node16_0, 0).         const(0).
id(node16_0, T_plzensky60375_txt_001_p1s6).         const(T_plzensky60375_txt_001_p1s6).
nodetype(node16_0, root).         const(root).
sentence(node16_0, Vazne_zranen_byl_i_ridic_druheho_automobilu__).         const(Vazne_zranen_byl_i_ridic_druheho_automobilu__).
%%%%%%%% node16_1 %%%%%%%%%%%%%%%%%%%
node(node16_1).
deepord(node16_1, 3).         const(3).
functor(node16_1, PRED).         const(PRED).
gram_sempos(node16_1, v).         const(v).
id(node16_1, T_plzensky60375_txt_001_p1s6a1).         const(T_plzensky60375_txt_001_p1s6a1).
nodetype(node16_1, complex).         const(complex).
t_lemma(node16_1, zranit).         const(zranit).
val_frame_rf(node16_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node16_2 %%%%%%%%%%%%%%%%%%%
node(node16_2).
deepord(node16_2, 1).         const(1).
functor(node16_2, ACT).         const(ACT).
id(node16_2, T_plzensky60375_txt_001_p1s6a8).         const(T_plzensky60375_txt_001_p1s6a8).
is_generated(node16_2, 1).         const(1).
nodetype(node16_2, qcomplex).         const(qcomplex).
t_lemma(node16_2, x_Gen).         const(x_Gen).
%%%%%%%% node16_3 %%%%%%%%%%%%%%%%%%%
node(node16_3).
deepord(node16_3, 2).         const(2).
functor(node16_3, MANN).         const(MANN).
gram_sempos(node16_3, adj_denot).         const(adj_denot).
id(node16_3, T_plzensky60375_txt_001_p1s6a2).         const(T_plzensky60375_txt_001_p1s6a2).
nodetype(node16_3, complex).         const(complex).
t_lemma(node16_3, vazny).         const(vazny).
%%%%%%%% node16_4 %%%%%%%%%%%%%%%%%%%
node(node16_4).
deepord(node16_4, x2_1).         const(x2_1).
a_ref_type(node16_4, tree).         const(tree).
a_afun(node16_4, Adv).         const(Adv).
m_form(node16_4, Vazne).         const(Vazne).
m_lemma(node16_4, vazne____1y_).         const(vazne____1y_).
m_tag(node16_4, Dg_______1A____).         const(Dg_______1A____).
w_token(node16_4, Vazne).         const(Vazne).
a_ord(node16_4, 1).         const(1).
a_parent_id(node16_4, a_plzensky60375_txt_001_p1s6W2).         const(a_plzensky60375_txt_001_p1s6W2).
hide(node16_4, hide).         const(hide).
%%%%%%%% node16_5 %%%%%%%%%%%%%%%%%%%
node(node16_5).
deepord(node16_5, x3_1).         const(x3_1).
a_ref_type(node16_5, tree).         const(tree).
a_afun(node16_5, Pred).         const(Pred).
m_form(node16_5, zranen).         const(zranen).
m_lemma(node16_5, zranit__W).         const(zranit__W).
m_tag(node16_5, VsYS___XX_AP___).         const(VsYS___XX_AP___).
w_token(node16_5, zranen).         const(zranen).
a_ord(node16_5, 2).         const(2).
a_parent_id(node16_5, a_plzensky60375_txt_001_p1s6).         const(a_plzensky60375_txt_001_p1s6).
hide(node16_5, hide).         const(hide).
%%%%%%%% node16_6 %%%%%%%%%%%%%%%%%%%
node(node16_6).
deepord(node16_6, x3_2).         const(x3_2).
a_ref_type(node16_6, tree).         const(tree).
a_afun(node16_6, AuxV).         const(AuxV).
m_form(node16_6, byl).         const(byl).
m_lemma(node16_6, byt).         const(byt).
m_tag(node16_6, VpYS___XR_AA___).         const(VpYS___XR_AA___).
w_token(node16_6, byl).         const(byl).
a_ord(node16_6, 3).         const(3).
a_parent_id(node16_6, a_plzensky60375_txt_001_p1s6W2).         const(a_plzensky60375_txt_001_p1s6W2).
hide(node16_6, hide).         const(hide).
%%%%%%%% node16_7 %%%%%%%%%%%%%%%%%%%
node(node16_7).
deepord(node16_7, 5).         const(5).
functor(node16_7, PAT).         const(PAT).
gram_sempos(node16_7, n_denot).         const(n_denot).
id(node16_7, T_plzensky60375_txt_001_p1s6a4).         const(T_plzensky60375_txt_001_p1s6a4).
nodetype(node16_7, complex).         const(complex).
t_lemma(node16_7, ridic).         const(ridic).
%%%%%%%% node16_8 %%%%%%%%%%%%%%%%%%%
node(node16_8).
deepord(node16_8, 4).         const(4).
functor(node16_8, CONJ).         const(CONJ).
id(node16_8, T_plzensky60375_txt_001_p1s6a5).         const(T_plzensky60375_txt_001_p1s6a5).
nodetype(node16_8, coap).         const(coap).
t_lemma(node16_8, i).         const(i).
%%%%%%%% node16_9 %%%%%%%%%%%%%%%%%%%
node(node16_9).
deepord(node16_9, x4_1).         const(x4_1).
a_ref_type(node16_9, tree).         const(tree).
a_afun(node16_9, Coord).         const(Coord).
m_form(node16_9, i).         const(i).
m_lemma(node16_9, i_1).         const(i_1).
m_tag(node16_9, J______________).         const(J______________).
w_token(node16_9, i).         const(i).
a_ord(node16_9, 4).         const(4).
a_parent_id(node16_9, a_plzensky60375_txt_001_p1s6W5).         const(a_plzensky60375_txt_001_p1s6W5).
hide(node16_9, hide).         const(hide).
%%%%%%%% node16_10 %%%%%%%%%%%%%%%%%%%
node(node16_10).
deepord(node16_10, x5_1).         const(x5_1).
a_ref_type(node16_10, tree).         const(tree).
a_afun(node16_10, Sb).         const(Sb).
m_form(node16_10, ridic).         const(ridic).
m_lemma(node16_10, ridic).         const(ridic).
m_tag(node16_10, NNMS1_____A____).         const(NNMS1_____A____).
w_token(node16_10, ridic).         const(ridic).
a_ord(node16_10, 5).         const(5).
a_parent_id(node16_10, a_plzensky60375_txt_001_p1s6W2).         const(a_plzensky60375_txt_001_p1s6W2).
hide(node16_10, hide).         const(hide).
%%%%%%%% node16_11 %%%%%%%%%%%%%%%%%%%
node(node16_11).
deepord(node16_11, 7).         const(7).
functor(node16_11, APP).         const(APP).
gram_sempos(node16_11, n_denot).         const(n_denot).
id(node16_11, T_plzensky60375_txt_001_p1s6a6).         const(T_plzensky60375_txt_001_p1s6a6).
nodetype(node16_11, complex).         const(complex).
t_lemma(node16_11, automobil).         const(automobil).
%%%%%%%% node16_12 %%%%%%%%%%%%%%%%%%%
node(node16_12).
deepord(node16_12, 6).         const(6).
functor(node16_12, RSTR).         const(RSTR).
gram_sempos(node16_12, adj_quant_def).         const(adj_quant_def).
id(node16_12, T_plzensky60375_txt_001_p1s6a7).         const(T_plzensky60375_txt_001_p1s6a7).
nodetype(node16_12, complex).         const(complex).
t_lemma(node16_12, dva).         const(dva).
%%%%%%%% node16_13 %%%%%%%%%%%%%%%%%%%
node(node16_13).
deepord(node16_13, x6_1).         const(x6_1).
a_ref_type(node16_13, tree).         const(tree).
a_afun(node16_13, Atr).         const(Atr).
m_form(node16_13, druheho).         const(druheho).
m_lemma(node16_13, druhy_1___jiny_).         const(druhy_1___jiny_).
m_tag(node16_13, AAIS2____1A____).         const(AAIS2____1A____).
w_token(node16_13, druheho).         const(druheho).
a_ord(node16_13, 6).         const(6).
a_parent_id(node16_13, a_plzensky60375_txt_001_p1s6W7).         const(a_plzensky60375_txt_001_p1s6W7).
hide(node16_13, hide).         const(hide).
%%%%%%%% node16_14 %%%%%%%%%%%%%%%%%%%
node(node16_14).
deepord(node16_14, x7_1).         const(x7_1).
a_ref_type(node16_14, tree).         const(tree).
a_afun(node16_14, Atr).         const(Atr).
m_form(node16_14, automobilu).         const(automobilu).
m_lemma(node16_14, automobil).         const(automobil).
m_tag(node16_14, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node16_14, automobilu).         const(automobilu).
w_no_space_after(node16_14, 1).         const(1).
a_ord(node16_14, 7).         const(7).
a_parent_id(node16_14, a_plzensky60375_txt_001_p1s6W5).         const(a_plzensky60375_txt_001_p1s6W5).
hide(node16_14, hide).         const(hide).
edge(node16_0, node16_1).
edge(node16_1, node16_2).
edge(node16_1, node16_3).
edge(node16_3, node16_4).
edge(node16_1, node16_5).
edge(node16_1, node16_6).
edge(node16_1, node16_7).
edge(node16_7, node16_8).
edge(node16_8, node16_9).
edge(node16_7, node16_10).
edge(node16_7, node16_11).
edge(node16_11, node16_12).
edge(node16_12, node16_13).
edge(node16_11, node16_14).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Nehodu neprezil spolujezdec z BMW. 
tree_root(node17_0).
valid_root(node17_0).
%%%%%%%% node17_0 %%%%%%%%%%%%%%%%%%%
node(node17_0).
atree_rf(node17_0, a_a_plzensky60375_txt_001_p1s8).         const(a_a_plzensky60375_txt_001_p1s8).
deepord(node17_0, 0).         const(0).
id(node17_0, T_plzensky60375_txt_001_p1s8).         const(T_plzensky60375_txt_001_p1s8).
nodetype(node17_0, root).         const(root).
sentence(node17_0, Nehodu_neprezil_spolujezdec_z_BMW__).         const(Nehodu_neprezil_spolujezdec_z_BMW__).
%%%%%%%% node17_1 %%%%%%%%%%%%%%%%%%%
node(node17_1).
deepord(node17_1, 3).         const(3).
functor(node17_1, PRED).         const(PRED).
gram_sempos(node17_1, v).         const(v).
id(node17_1, T_plzensky60375_txt_001_p1s8a1).         const(T_plzensky60375_txt_001_p1s8a1).
nodetype(node17_1, complex).         const(complex).
t_lemma(node17_1, prezit).         const(prezit).
val_frame_rf(node17_1, v_v_w5071f1).         const(v_v_w5071f1).
%%%%%%%% node17_2 %%%%%%%%%%%%%%%%%%%
node(node17_2).
deepord(node17_2, 1).         const(1).
functor(node17_2, RHEM).         const(RHEM).
id(node17_2, T_plzensky60375_txt_001_p1s8a6).         const(T_plzensky60375_txt_001_p1s8a6).
is_generated(node17_2, 1).         const(1).
nodetype(node17_2, atom).         const(atom).
t_lemma(node17_2, x_Neg).         const(x_Neg).
%%%%%%%% node17_3 %%%%%%%%%%%%%%%%%%%
node(node17_3).
deepord(node17_3, 2).         const(2).
functor(node17_3, PAT).         const(PAT).
gram_sempos(node17_3, n_denot).         const(n_denot).
id(node17_3, T_plzensky60375_txt_001_p1s8a2).         const(T_plzensky60375_txt_001_p1s8a2).
nodetype(node17_3, complex).         const(complex).
t_lemma(node17_3, Nehoda).         const(Nehoda).
%%%%%%%% node17_4 %%%%%%%%%%%%%%%%%%%
node(node17_4).
deepord(node17_4, x2_1).         const(x2_1).
a_ref_type(node17_4, tree).         const(tree).
a_afun(node17_4, Obj).         const(Obj).
m_form(node17_4, Nehodu).         const(Nehodu).
m_lemma(node17_4, Nehoda__S).         const(Nehoda__S).
m_tag(node17_4, NNMS4_____A____).         const(NNMS4_____A____).
w_token(node17_4, Nehodu).         const(Nehodu).
a_ord(node17_4, 1).         const(1).
a_parent_id(node17_4, a_plzensky60375_txt_001_p1s8W2).         const(a_plzensky60375_txt_001_p1s8W2).
hide(node17_4, hide).         const(hide).
%%%%%%%% node17_5 %%%%%%%%%%%%%%%%%%%
node(node17_5).
deepord(node17_5, x3_1).         const(x3_1).
a_ref_type(node17_5, tree).         const(tree).
a_afun(node17_5, Pred).         const(Pred).
m_form(node17_5, neprezil).         const(neprezil).
m_lemma(node17_5, prezit).         const(prezit).
m_tag(node17_5, VpYS___XR_NA___).         const(VpYS___XR_NA___).
w_token(node17_5, neprezil).         const(neprezil).
a_ord(node17_5, 2).         const(2).
a_parent_id(node17_5, a_plzensky60375_txt_001_p1s8).         const(a_plzensky60375_txt_001_p1s8).
hide(node17_5, hide).         const(hide).
%%%%%%%% node17_6 %%%%%%%%%%%%%%%%%%%
node(node17_6).
deepord(node17_6, 4).         const(4).
functor(node17_6, ACT).         const(ACT).
gram_sempos(node17_6, n_denot).         const(n_denot).
id(node17_6, T_plzensky60375_txt_001_p1s8a3).         const(T_plzensky60375_txt_001_p1s8a3).
nodetype(node17_6, complex).         const(complex).
t_lemma(node17_6, spolujezdec).         const(spolujezdec).
%%%%%%%% node17_7 %%%%%%%%%%%%%%%%%%%
node(node17_7).
deepord(node17_7, x4_1).         const(x4_1).
a_ref_type(node17_7, tree).         const(tree).
a_afun(node17_7, Sb).         const(Sb).
m_form(node17_7, spolujezdec).         const(spolujezdec).
m_lemma(node17_7, spolujezdec).         const(spolujezdec).
m_tag(node17_7, NNMS1_____A____).         const(NNMS1_____A____).
w_token(node17_7, spolujezdec).         const(spolujezdec).
a_ord(node17_7, 3).         const(3).
a_parent_id(node17_7, a_plzensky60375_txt_001_p1s8W2).         const(a_plzensky60375_txt_001_p1s8W2).
hide(node17_7, hide).         const(hide).
%%%%%%%% node17_8 %%%%%%%%%%%%%%%%%%%
node(node17_8).
deepord(node17_8, 5).         const(5).
functor(node17_8, DIR1).         const(DIR1).
gram_sempos(node17_8, n_denot).         const(n_denot).
id(node17_8, T_plzensky60375_txt_001_p1s8a5).         const(T_plzensky60375_txt_001_p1s8a5).
nodetype(node17_8, complex).         const(complex).
subfunctor(node17_8, basic).         const(basic).
t_lemma(node17_8, BMW).         const(BMW).
%%%%%%%% node17_9 %%%%%%%%%%%%%%%%%%%
node(node17_9).
deepord(node17_9, x5_1).         const(x5_1).
a_ref_type(node17_9, tree).         const(tree).
a_afun(node17_9, AuxP).         const(AuxP).
m_form(node17_9, z).         const(z).
m_lemma(node17_9, z_1).         const(z_1).
m_tag(node17_9, RR__2__________).         const(RR__2__________).
w_token(node17_9, z).         const(z).
a_ord(node17_9, 4).         const(4).
a_parent_id(node17_9, a_plzensky60375_txt_001_p1s8W3).         const(a_plzensky60375_txt_001_p1s8W3).
hide(node17_9, hide).         const(hide).
%%%%%%%% node17_10 %%%%%%%%%%%%%%%%%%%
node(node17_10).
deepord(node17_10, x5_2).         const(x5_2).
a_ref_type(node17_10, tree).         const(tree).
a_afun(node17_10, Atr).         const(Atr).
m_form(node17_10, BMW).         const(BMW).
m_lemma(node17_10, BMW_1__B__K).         const(BMW_1__B__K).
m_tag(node17_10, NNNXX_____A____).         const(NNNXX_____A____).
w_token(node17_10, BMW).         const(BMW).
w_no_space_after(node17_10, 1).         const(1).
a_ord(node17_10, 5).         const(5).
a_parent_id(node17_10, a_plzensky60375_txt_001_p1s8W4).         const(a_plzensky60375_txt_001_p1s8W4).
hide(node17_10, hide).         const(hide).
edge(node17_0, node17_1).
edge(node17_1, node17_2).
edge(node17_1, node17_3).
edge(node17_3, node17_4).
edge(node17_1, node17_5).
edge(node17_1, node17_6).
edge(node17_6, node17_7).
edge(node17_6, node17_8).
edge(node17_8, node17_9).
edge(node17_8, node17_10).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Nehodu neprezil spolujezdec z BMW. 
tree_root(node18_0).
valid_root(node18_0).
%%%%%%%% node18_0 %%%%%%%%%%%%%%%%%%%
node(node18_0).
atree_rf(node18_0, a_a_plzensky60375_txt_001_p1s8).         const(a_a_plzensky60375_txt_001_p1s8).
deepord(node18_0, 0).         const(0).
id(node18_0, T_plzensky60375_txt_001_p1s8).         const(T_plzensky60375_txt_001_p1s8).
nodetype(node18_0, root).         const(root).
sentence(node18_0, Nehodu_neprezil_spolujezdec_z_BMW__).         const(Nehodu_neprezil_spolujezdec_z_BMW__).
%%%%%%%% node18_1 %%%%%%%%%%%%%%%%%%%
node(node18_1).
deepord(node18_1, 3).         const(3).
functor(node18_1, PRED).         const(PRED).
gram_sempos(node18_1, v).         const(v).
id(node18_1, T_plzensky60375_txt_001_p1s8a1).         const(T_plzensky60375_txt_001_p1s8a1).
nodetype(node18_1, complex).         const(complex).
t_lemma(node18_1, prezit).         const(prezit).
val_frame_rf(node18_1, v_v_w5071f1).         const(v_v_w5071f1).
%%%%%%%% node18_2 %%%%%%%%%%%%%%%%%%%
node(node18_2).
deepord(node18_2, 1).         const(1).
functor(node18_2, RHEM).         const(RHEM).
id(node18_2, T_plzensky60375_txt_001_p1s8a6).         const(T_plzensky60375_txt_001_p1s8a6).
is_generated(node18_2, 1).         const(1).
nodetype(node18_2, atom).         const(atom).
t_lemma(node18_2, x_Neg).         const(x_Neg).
%%%%%%%% node18_3 %%%%%%%%%%%%%%%%%%%
node(node18_3).
deepord(node18_3, 2).         const(2).
functor(node18_3, PAT).         const(PAT).
gram_sempos(node18_3, n_denot).         const(n_denot).
id(node18_3, T_plzensky60375_txt_001_p1s8a2).         const(T_plzensky60375_txt_001_p1s8a2).
nodetype(node18_3, complex).         const(complex).
t_lemma(node18_3, Nehoda).         const(Nehoda).
%%%%%%%% node18_4 %%%%%%%%%%%%%%%%%%%
node(node18_4).
deepord(node18_4, x2_1).         const(x2_1).
a_ref_type(node18_4, tree).         const(tree).
a_afun(node18_4, Obj).         const(Obj).
m_form(node18_4, Nehodu).         const(Nehodu).
m_lemma(node18_4, Nehoda__S).         const(Nehoda__S).
m_tag(node18_4, NNMS4_____A____).         const(NNMS4_____A____).
w_token(node18_4, Nehodu).         const(Nehodu).
a_ord(node18_4, 1).         const(1).
a_parent_id(node18_4, a_plzensky60375_txt_001_p1s8W2).         const(a_plzensky60375_txt_001_p1s8W2).
hide(node18_4, hide).         const(hide).
%%%%%%%% node18_5 %%%%%%%%%%%%%%%%%%%
node(node18_5).
deepord(node18_5, x3_1).         const(x3_1).
a_ref_type(node18_5, tree).         const(tree).
a_afun(node18_5, Pred).         const(Pred).
m_form(node18_5, neprezil).         const(neprezil).
m_lemma(node18_5, prezit).         const(prezit).
m_tag(node18_5, VpYS___XR_NA___).         const(VpYS___XR_NA___).
w_token(node18_5, neprezil).         const(neprezil).
a_ord(node18_5, 2).         const(2).
a_parent_id(node18_5, a_plzensky60375_txt_001_p1s8).         const(a_plzensky60375_txt_001_p1s8).
hide(node18_5, hide).         const(hide).
%%%%%%%% node18_6 %%%%%%%%%%%%%%%%%%%
node(node18_6).
deepord(node18_6, 4).         const(4).
functor(node18_6, ACT).         const(ACT).
gram_sempos(node18_6, n_denot).         const(n_denot).
id(node18_6, T_plzensky60375_txt_001_p1s8a3).         const(T_plzensky60375_txt_001_p1s8a3).
nodetype(node18_6, complex).         const(complex).
t_lemma(node18_6, spolujezdec).         const(spolujezdec).
%%%%%%%% node18_7 %%%%%%%%%%%%%%%%%%%
node(node18_7).
deepord(node18_7, x4_1).         const(x4_1).
a_ref_type(node18_7, tree).         const(tree).
a_afun(node18_7, Sb).         const(Sb).
m_form(node18_7, spolujezdec).         const(spolujezdec).
m_lemma(node18_7, spolujezdec).         const(spolujezdec).
m_tag(node18_7, NNMS1_____A____).         const(NNMS1_____A____).
w_token(node18_7, spolujezdec).         const(spolujezdec).
a_ord(node18_7, 3).         const(3).
a_parent_id(node18_7, a_plzensky60375_txt_001_p1s8W2).         const(a_plzensky60375_txt_001_p1s8W2).
hide(node18_7, hide).         const(hide).
%%%%%%%% node18_8 %%%%%%%%%%%%%%%%%%%
node(node18_8).
deepord(node18_8, 5).         const(5).
functor(node18_8, DIR1).         const(DIR1).
gram_sempos(node18_8, n_denot).         const(n_denot).
id(node18_8, T_plzensky60375_txt_001_p1s8a5).         const(T_plzensky60375_txt_001_p1s8a5).
nodetype(node18_8, complex).         const(complex).
subfunctor(node18_8, basic).         const(basic).
t_lemma(node18_8, BMW).         const(BMW).
%%%%%%%% node18_9 %%%%%%%%%%%%%%%%%%%
node(node18_9).
deepord(node18_9, x5_1).         const(x5_1).
a_ref_type(node18_9, tree).         const(tree).
a_afun(node18_9, AuxP).         const(AuxP).
m_form(node18_9, z).         const(z).
m_lemma(node18_9, z_1).         const(z_1).
m_tag(node18_9, RR__2__________).         const(RR__2__________).
w_token(node18_9, z).         const(z).
a_ord(node18_9, 4).         const(4).
a_parent_id(node18_9, a_plzensky60375_txt_001_p1s8W3).         const(a_plzensky60375_txt_001_p1s8W3).
hide(node18_9, hide).         const(hide).
%%%%%%%% node18_10 %%%%%%%%%%%%%%%%%%%
node(node18_10).
deepord(node18_10, x5_2).         const(x5_2).
a_ref_type(node18_10, tree).         const(tree).
a_afun(node18_10, Atr).         const(Atr).
m_form(node18_10, BMW).         const(BMW).
m_lemma(node18_10, BMW_1__B__K).         const(BMW_1__B__K).
m_tag(node18_10, NNNXX_____A____).         const(NNNXX_____A____).
w_token(node18_10, BMW).         const(BMW).
w_no_space_after(node18_10, 1).         const(1).
a_ord(node18_10, 5).         const(5).
a_parent_id(node18_10, a_plzensky60375_txt_001_p1s8W4).         const(a_plzensky60375_txt_001_p1s8W4).
hide(node18_10, hide).         const(hide).
edge(node18_0, node18_1).
edge(node18_1, node18_2).
edge(node18_1, node18_3).
edge(node18_3, node18_4).
edge(node18_1, node18_5).
edge(node18_1, node18_6).
edge(node18_6, node18_7).
edge(node18_6, node18_8).
edge(node18_8, node18_9).
edge(node18_8, node18_10).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode byl usmrcen sedmactyricetilety ridic osobniho vozidla. 
tree_root(node19_0).
valid_root(node19_0).
%%%%%%%% node19_0 %%%%%%%%%%%%%%%%%%%
node(node19_0).
atree_rf(node19_0, a_a_plzensky72977_txt_001_p1s2).         const(a_a_plzensky72977_txt_001_p1s2).
deepord(node19_0, 0).         const(0).
id(node19_0, T_plzensky72977_txt_001_p1s2).         const(T_plzensky72977_txt_001_p1s2).
nodetype(node19_0, root).         const(root).
sentence(node19_0, Pri_nehode_byl_usmrcen_sedmactyricetilety_ridic_osobniho_vozidla__).         const(Pri_nehode_byl_usmrcen_sedmactyricetilety_ridic_osobniho_vozidla__).
%%%%%%%% node19_1 %%%%%%%%%%%%%%%%%%%
node(node19_1).
deepord(node19_1, 3).         const(3).
functor(node19_1, PRED).         const(PRED).
gram_sempos(node19_1, v).         const(v).
id(node19_1, T_plzensky72977_txt_001_p1s2a1).         const(T_plzensky72977_txt_001_p1s2a1).
nodetype(node19_1, complex).         const(complex).
t_lemma(node19_1, usmrtit).         const(usmrtit).
val_frame_rf(node19_1, v_v_w7307f1).         const(v_v_w7307f1).
%%%%%%%% node19_2 %%%%%%%%%%%%%%%%%%%
node(node19_2).
deepord(node19_2, 1).         const(1).
functor(node19_2, ACT).         const(ACT).
id(node19_2, T_plzensky72977_txt_001_p1s2a9).         const(T_plzensky72977_txt_001_p1s2a9).
is_generated(node19_2, 1).         const(1).
nodetype(node19_2, qcomplex).         const(qcomplex).
t_lemma(node19_2, x_Gen).         const(x_Gen).
%%%%%%%% node19_3 %%%%%%%%%%%%%%%%%%%
node(node19_3).
deepord(node19_3, 2).         const(2).
functor(node19_3, TWHEN).         const(TWHEN).
gram_sempos(node19_3, n_denot).         const(n_denot).
id(node19_3, T_plzensky72977_txt_001_p1s2a3).         const(T_plzensky72977_txt_001_p1s2a3).
nodetype(node19_3, complex).         const(complex).
subfunctor(node19_3, basic).         const(basic).
t_lemma(node19_3, nehoda).         const(nehoda).
%%%%%%%% node19_4 %%%%%%%%%%%%%%%%%%%
node(node19_4).
deepord(node19_4, x2_1).         const(x2_1).
a_ref_type(node19_4, tree).         const(tree).
a_afun(node19_4, AuxP).         const(AuxP).
m_form(node19_4, Pri).         const(Pri).
m_lemma(node19_4, pri_1).         const(pri_1).
m_tag(node19_4, RR__6__________).         const(RR__6__________).
w_token(node19_4, Pri).         const(Pri).
a_ord(node19_4, 1).         const(1).
a_parent_id(node19_4, a_plzensky72977_txt_001_p1s2W4).         const(a_plzensky72977_txt_001_p1s2W4).
hide(node19_4, hide).         const(hide).
%%%%%%%% node19_5 %%%%%%%%%%%%%%%%%%%
node(node19_5).
deepord(node19_5, x2_2).         const(x2_2).
a_ref_type(node19_5, tree).         const(tree).
a_afun(node19_5, Adv).         const(Adv).
m_form(node19_5, nehode).         const(nehode).
m_lemma(node19_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node19_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node19_5, nehode).         const(nehode).
a_ord(node19_5, 2).         const(2).
a_parent_id(node19_5, a_plzensky72977_txt_001_p1s2W1).         const(a_plzensky72977_txt_001_p1s2W1).
hide(node19_5, hide).         const(hide).
%%%%%%%% node19_6 %%%%%%%%%%%%%%%%%%%
node(node19_6).
deepord(node19_6, x3_1).         const(x3_1).
a_ref_type(node19_6, tree).         const(tree).
a_afun(node19_6, AuxV).         const(AuxV).
m_form(node19_6, byl).         const(byl).
m_lemma(node19_6, byt).         const(byt).
m_tag(node19_6, VpYS___XR_AA___).         const(VpYS___XR_AA___).
w_token(node19_6, byl).         const(byl).
a_ord(node19_6, 3).         const(3).
a_parent_id(node19_6, a_plzensky72977_txt_001_p1s2W4).         const(a_plzensky72977_txt_001_p1s2W4).
hide(node19_6, hide).         const(hide).
%%%%%%%% node19_7 %%%%%%%%%%%%%%%%%%%
node(node19_7).
deepord(node19_7, x3_2).         const(x3_2).
a_ref_type(node19_7, tree).         const(tree).
a_afun(node19_7, Pred).         const(Pred).
m_form(node19_7, usmrcen).         const(usmrcen).
m_lemma(node19_7, usmrtit__W).         const(usmrtit__W).
m_tag(node19_7, VsYS___XX_AP___).         const(VsYS___XX_AP___).
w_token(node19_7, usmrcen).         const(usmrcen).
a_ord(node19_7, 4).         const(4).
a_parent_id(node19_7, a_plzensky72977_txt_001_p1s2).         const(a_plzensky72977_txt_001_p1s2).
hide(node19_7, hide).         const(hide).
%%%%%%%% node19_8 %%%%%%%%%%%%%%%%%%%
node(node19_8).
deepord(node19_8, 5).         const(5).
functor(node19_8, PAT).         const(PAT).
gram_sempos(node19_8, n_denot).         const(n_denot).
id(node19_8, T_plzensky72977_txt_001_p1s2a5).         const(T_plzensky72977_txt_001_p1s2a5).
nodetype(node19_8, complex).         const(complex).
t_lemma(node19_8, ridic).         const(ridic).
%%%%%%%% node19_9 %%%%%%%%%%%%%%%%%%%
node(node19_9).
deepord(node19_9, 4).         const(4).
functor(node19_9, RSTR).         const(RSTR).
gram_sempos(node19_9, adj_denot).         const(adj_denot).
id(node19_9, T_plzensky72977_txt_001_p1s2a6).         const(T_plzensky72977_txt_001_p1s2a6).
nodetype(node19_9, complex).         const(complex).
t_lemma(node19_9, sedmactyricetilety).         const(sedmactyricetilety).
%%%%%%%% node19_10 %%%%%%%%%%%%%%%%%%%
node(node19_10).
deepord(node19_10, x4_1).         const(x4_1).
a_ref_type(node19_10, tree).         const(tree).
a_afun(node19_10, Atr).         const(Atr).
m_form(node19_10, sedmactyricetilety).         const(sedmactyricetilety).
m_lemma(node19_10, sedmactyricetilety).         const(sedmactyricetilety).
m_tag(node19_10, AAMS1____1A____).         const(AAMS1____1A____).
w_token(node19_10, sedmactyricetilety).         const(sedmactyricetilety).
a_ord(node19_10, 5).         const(5).
a_parent_id(node19_10, a_plzensky72977_txt_001_p1s2W6).         const(a_plzensky72977_txt_001_p1s2W6).
hide(node19_10, hide).         const(hide).
%%%%%%%% node19_11 %%%%%%%%%%%%%%%%%%%
node(node19_11).
deepord(node19_11, x5_1).         const(x5_1).
a_ref_type(node19_11, tree).         const(tree).
a_afun(node19_11, Sb).         const(Sb).
m_form(node19_11, ridic).         const(ridic).
m_lemma(node19_11, ridic).         const(ridic).
m_tag(node19_11, NNMS1_____A____).         const(NNMS1_____A____).
w_token(node19_11, ridic).         const(ridic).
a_ord(node19_11, 6).         const(6).
a_parent_id(node19_11, a_plzensky72977_txt_001_p1s2W4).         const(a_plzensky72977_txt_001_p1s2W4).
hide(node19_11, hide).         const(hide).
%%%%%%%% node19_12 %%%%%%%%%%%%%%%%%%%
node(node19_12).
deepord(node19_12, 7).         const(7).
functor(node19_12, APP).         const(APP).
gram_sempos(node19_12, n_denot).         const(n_denot).
id(node19_12, T_plzensky72977_txt_001_p1s2a7).         const(T_plzensky72977_txt_001_p1s2a7).
nodetype(node19_12, complex).         const(complex).
t_lemma(node19_12, vozidlo).         const(vozidlo).
%%%%%%%% node19_13 %%%%%%%%%%%%%%%%%%%
node(node19_13).
deepord(node19_13, 6).         const(6).
functor(node19_13, RSTR).         const(RSTR).
gram_sempos(node19_13, adj_denot).         const(adj_denot).
id(node19_13, T_plzensky72977_txt_001_p1s2a8).         const(T_plzensky72977_txt_001_p1s2a8).
nodetype(node19_13, complex).         const(complex).
t_lemma(node19_13, osobni).         const(osobni).
%%%%%%%% node19_14 %%%%%%%%%%%%%%%%%%%
node(node19_14).
deepord(node19_14, x6_1).         const(x6_1).
a_ref_type(node19_14, tree).         const(tree).
a_afun(node19_14, Atr).         const(Atr).
m_form(node19_14, osobniho).         const(osobniho).
m_lemma(node19_14, osobni).         const(osobni).
m_tag(node19_14, AANS2____1A____).         const(AANS2____1A____).
w_token(node19_14, osobniho).         const(osobniho).
a_ord(node19_14, 7).         const(7).
a_parent_id(node19_14, a_plzensky72977_txt_001_p1s2W8).         const(a_plzensky72977_txt_001_p1s2W8).
hide(node19_14, hide).         const(hide).
%%%%%%%% node19_15 %%%%%%%%%%%%%%%%%%%
node(node19_15).
deepord(node19_15, x7_1).         const(x7_1).
a_ref_type(node19_15, tree).         const(tree).
a_afun(node19_15, Atr).         const(Atr).
m_form(node19_15, vozidla).         const(vozidla).
m_lemma(node19_15, vozidlo).         const(vozidlo).
m_tag(node19_15, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node19_15, vozidla).         const(vozidla).
w_no_space_after(node19_15, 1).         const(1).
a_ord(node19_15, 8).         const(8).
a_parent_id(node19_15, a_plzensky72977_txt_001_p1s2W6).         const(a_plzensky72977_txt_001_p1s2W6).
hide(node19_15, hide).         const(hide).
edge(node19_0, node19_1).
edge(node19_1, node19_2).
edge(node19_1, node19_3).
edge(node19_3, node19_4).
edge(node19_3, node19_5).
edge(node19_1, node19_6).
edge(node19_1, node19_7).
edge(node19_1, node19_8).
edge(node19_8, node19_9).
edge(node19_9, node19_10).
edge(node19_8, node19_11).
edge(node19_8, node19_12).
edge(node19_12, node19_13).
edge(node19_13, node19_14).
edge(node19_12, node19_15).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Ridic vozidla nebyl zranen. 
tree_root(node20_0).
valid_root(node20_0).
%%%%%%%% node20_0 %%%%%%%%%%%%%%%%%%%
node(node20_0).
atree_rf(node20_0, a_a_plzensky57806_txt_001_p2s3).         const(a_a_plzensky57806_txt_001_p2s3).
deepord(node20_0, 0).         const(0).
id(node20_0, T_plzensky57806_txt_001_p2s3).         const(T_plzensky57806_txt_001_p2s3).
nodetype(node20_0, root).         const(root).
sentence(node20_0, Ridic_vozidla_nebyl_zranen__).         const(Ridic_vozidla_nebyl_zranen__).
%%%%%%%% node20_1 %%%%%%%%%%%%%%%%%%%
node(node20_1).
deepord(node20_1, 4).         const(4).
functor(node20_1, PRED).         const(PRED).
gram_sempos(node20_1, v).         const(v).
id(node20_1, T_plzensky57806_txt_001_p2s3a1).         const(T_plzensky57806_txt_001_p2s3a1).
nodetype(node20_1, complex).         const(complex).
t_lemma(node20_1, zranit).         const(zranit).
val_frame_rf(node20_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node20_2 %%%%%%%%%%%%%%%%%%%
node(node20_2).
deepord(node20_2, 1).         const(1).
functor(node20_2, ACT).         const(ACT).
id(node20_2, T_plzensky57806_txt_001_p2s3a4).         const(T_plzensky57806_txt_001_p2s3a4).
is_generated(node20_2, 1).         const(1).
nodetype(node20_2, qcomplex).         const(qcomplex).
t_lemma(node20_2, x_Gen).         const(x_Gen).
%%%%%%%% node20_3 %%%%%%%%%%%%%%%%%%%
node(node20_3).
deepord(node20_3, 2).         const(2).
functor(node20_3, PAT).         const(PAT).
gram_sempos(node20_3, n_denot).         const(n_denot).
id(node20_3, T_plzensky57806_txt_001_p2s3a2).         const(T_plzensky57806_txt_001_p2s3a2).
nodetype(node20_3, complex).         const(complex).
t_lemma(node20_3, ridic).         const(ridic).
%%%%%%%% node20_4 %%%%%%%%%%%%%%%%%%%
node(node20_4).
deepord(node20_4, x2_1).         const(x2_1).
a_ref_type(node20_4, tree).         const(tree).
a_afun(node20_4, Sb).         const(Sb).
m_form(node20_4, Ridic).         const(Ridic).
m_lemma(node20_4, ridic).         const(ridic).
m_tag(node20_4, NNMS1_____A____).         const(NNMS1_____A____).
w_token(node20_4, Ridic).         const(Ridic).
a_ord(node20_4, 1).         const(1).
a_parent_id(node20_4, a_plzensky57806_txt_001_p2s3W4).         const(a_plzensky57806_txt_001_p2s3W4).
hide(node20_4, hide).         const(hide).
%%%%%%%% node20_5 %%%%%%%%%%%%%%%%%%%
node(node20_5).
deepord(node20_5, 3).         const(3).
functor(node20_5, APP).         const(APP).
gram_sempos(node20_5, n_denot).         const(n_denot).
id(node20_5, T_plzensky57806_txt_001_p2s3a3).         const(T_plzensky57806_txt_001_p2s3a3).
nodetype(node20_5, complex).         const(complex).
t_lemma(node20_5, vozidlo).         const(vozidlo).
%%%%%%%% node20_6 %%%%%%%%%%%%%%%%%%%
node(node20_6).
deepord(node20_6, x3_1).         const(x3_1).
a_ref_type(node20_6, tree).         const(tree).
a_afun(node20_6, Atr).         const(Atr).
m_form(node20_6, vozidla).         const(vozidla).
m_lemma(node20_6, vozidlo).         const(vozidlo).
m_tag(node20_6, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node20_6, vozidla).         const(vozidla).
a_ord(node20_6, 2).         const(2).
a_parent_id(node20_6, a_plzensky57806_txt_001_p2s3W1).         const(a_plzensky57806_txt_001_p2s3W1).
hide(node20_6, hide).         const(hide).
%%%%%%%% node20_7 %%%%%%%%%%%%%%%%%%%
node(node20_7).
deepord(node20_7, x4_1).         const(x4_1).
a_ref_type(node20_7, tree).         const(tree).
a_afun(node20_7, AuxV).         const(AuxV).
m_form(node20_7, nebyl).         const(nebyl).
m_lemma(node20_7, byt).         const(byt).
m_tag(node20_7, VpYS___XR_NA___).         const(VpYS___XR_NA___).
w_token(node20_7, nebyl).         const(nebyl).
a_ord(node20_7, 3).         const(3).
a_parent_id(node20_7, a_plzensky57806_txt_001_p2s3W4).         const(a_plzensky57806_txt_001_p2s3W4).
hide(node20_7, hide).         const(hide).
%%%%%%%% node20_8 %%%%%%%%%%%%%%%%%%%
node(node20_8).
deepord(node20_8, x4_2).         const(x4_2).
a_ref_type(node20_8, tree).         const(tree).
a_afun(node20_8, Pred).         const(Pred).
m_form(node20_8, zranen).         const(zranen).
m_lemma(node20_8, zranit__W).         const(zranit__W).
m_tag(node20_8, VsYS___XX_AP___).         const(VsYS___XX_AP___).
w_token(node20_8, zranen).         const(zranen).
w_no_space_after(node20_8, 1).         const(1).
a_ord(node20_8, 4).         const(4).
a_parent_id(node20_8, a_plzensky57806_txt_001_p2s3).         const(a_plzensky57806_txt_001_p2s3).
hide(node20_8, hide).         const(hide).
edge(node20_0, node20_1).
edge(node20_1, node20_2).
edge(node20_1, node20_3).
edge(node20_3, node20_4).
edge(node20_3, node20_5).
edge(node20_5, node20_6).
edge(node20_1, node20_7).
edge(node20_1, node20_8).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Ridic vozidla nebyl zranen. 
tree_root(node21_0).
valid_root(node21_0).
%%%%%%%% node21_0 %%%%%%%%%%%%%%%%%%%
node(node21_0).
atree_rf(node21_0, a_a_plzensky57806_txt_001_p2s3).         const(a_a_plzensky57806_txt_001_p2s3).
deepord(node21_0, 0).         const(0).
id(node21_0, T_plzensky57806_txt_001_p2s3).         const(T_plzensky57806_txt_001_p2s3).
nodetype(node21_0, root).         const(root).
sentence(node21_0, Ridic_vozidla_nebyl_zranen__).         const(Ridic_vozidla_nebyl_zranen__).
%%%%%%%% node21_1 %%%%%%%%%%%%%%%%%%%
node(node21_1).
deepord(node21_1, 4).         const(4).
functor(node21_1, PRED).         const(PRED).
gram_sempos(node21_1, v).         const(v).
id(node21_1, T_plzensky57806_txt_001_p2s3a1).         const(T_plzensky57806_txt_001_p2s3a1).
nodetype(node21_1, complex).         const(complex).
t_lemma(node21_1, zranit).         const(zranit).
val_frame_rf(node21_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node21_2 %%%%%%%%%%%%%%%%%%%
node(node21_2).
deepord(node21_2, 1).         const(1).
functor(node21_2, ACT).         const(ACT).
id(node21_2, T_plzensky57806_txt_001_p2s3a4).         const(T_plzensky57806_txt_001_p2s3a4).
is_generated(node21_2, 1).         const(1).
nodetype(node21_2, qcomplex).         const(qcomplex).
t_lemma(node21_2, x_Gen).         const(x_Gen).
%%%%%%%% node21_3 %%%%%%%%%%%%%%%%%%%
node(node21_3).
deepord(node21_3, 2).         const(2).
functor(node21_3, PAT).         const(PAT).
gram_sempos(node21_3, n_denot).         const(n_denot).
id(node21_3, T_plzensky57806_txt_001_p2s3a2).         const(T_plzensky57806_txt_001_p2s3a2).
nodetype(node21_3, complex).         const(complex).
t_lemma(node21_3, ridic).         const(ridic).
%%%%%%%% node21_4 %%%%%%%%%%%%%%%%%%%
node(node21_4).
deepord(node21_4, x2_1).         const(x2_1).
a_ref_type(node21_4, tree).         const(tree).
a_afun(node21_4, Sb).         const(Sb).
m_form(node21_4, Ridic).         const(Ridic).
m_lemma(node21_4, ridic).         const(ridic).
m_tag(node21_4, NNMS1_____A____).         const(NNMS1_____A____).
w_token(node21_4, Ridic).         const(Ridic).
a_ord(node21_4, 1).         const(1).
a_parent_id(node21_4, a_plzensky57806_txt_001_p2s3W4).         const(a_plzensky57806_txt_001_p2s3W4).
hide(node21_4, hide).         const(hide).
%%%%%%%% node21_5 %%%%%%%%%%%%%%%%%%%
node(node21_5).
deepord(node21_5, 3).         const(3).
functor(node21_5, APP).         const(APP).
gram_sempos(node21_5, n_denot).         const(n_denot).
id(node21_5, T_plzensky57806_txt_001_p2s3a3).         const(T_plzensky57806_txt_001_p2s3a3).
nodetype(node21_5, complex).         const(complex).
t_lemma(node21_5, vozidlo).         const(vozidlo).
%%%%%%%% node21_6 %%%%%%%%%%%%%%%%%%%
node(node21_6).
deepord(node21_6, x3_1).         const(x3_1).
a_ref_type(node21_6, tree).         const(tree).
a_afun(node21_6, Atr).         const(Atr).
m_form(node21_6, vozidla).         const(vozidla).
m_lemma(node21_6, vozidlo).         const(vozidlo).
m_tag(node21_6, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node21_6, vozidla).         const(vozidla).
a_ord(node21_6, 2).         const(2).
a_parent_id(node21_6, a_plzensky57806_txt_001_p2s3W1).         const(a_plzensky57806_txt_001_p2s3W1).
hide(node21_6, hide).         const(hide).
%%%%%%%% node21_7 %%%%%%%%%%%%%%%%%%%
node(node21_7).
deepord(node21_7, x4_1).         const(x4_1).
a_ref_type(node21_7, tree).         const(tree).
a_afun(node21_7, AuxV).         const(AuxV).
m_form(node21_7, nebyl).         const(nebyl).
m_lemma(node21_7, byt).         const(byt).
m_tag(node21_7, VpYS___XR_NA___).         const(VpYS___XR_NA___).
w_token(node21_7, nebyl).         const(nebyl).
a_ord(node21_7, 3).         const(3).
a_parent_id(node21_7, a_plzensky57806_txt_001_p2s3W4).         const(a_plzensky57806_txt_001_p2s3W4).
hide(node21_7, hide).         const(hide).
%%%%%%%% node21_8 %%%%%%%%%%%%%%%%%%%
node(node21_8).
deepord(node21_8, x4_2).         const(x4_2).
a_ref_type(node21_8, tree).         const(tree).
a_afun(node21_8, Pred).         const(Pred).
m_form(node21_8, zranen).         const(zranen).
m_lemma(node21_8, zranit__W).         const(zranit__W).
m_tag(node21_8, VsYS___XX_AP___).         const(VsYS___XX_AP___).
w_token(node21_8, zranen).         const(zranen).
w_no_space_after(node21_8, 1).         const(1).
a_ord(node21_8, 4).         const(4).
a_parent_id(node21_8, a_plzensky57806_txt_001_p2s3).         const(a_plzensky57806_txt_001_p2s3).
hide(node21_8, hide).         const(hide).
edge(node21_0, node21_1).
edge(node21_1, node21_2).
edge(node21_1, node21_3).
edge(node21_3, node21_4).
edge(node21_3, node21_5).
edge(node21_5, node21_6).
edge(node21_1, node21_7).
edge(node21_1, node21_8).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Ridicka nebyla zranena. 
tree_root(node22_0).
valid_root(node22_0).
%%%%%%%% node22_0 %%%%%%%%%%%%%%%%%%%
node(node22_0).
atree_rf(node22_0, a_a_plzensky57806_txt_001_p2s40).         const(a_a_plzensky57806_txt_001_p2s40).
deepord(node22_0, 0).         const(0).
id(node22_0, T_plzensky57806_txt_001_p2s40).         const(T_plzensky57806_txt_001_p2s40).
nodetype(node22_0, root).         const(root).
sentence(node22_0, Ridicka_nebyla_zranena__).         const(Ridicka_nebyla_zranena__).
%%%%%%%% node22_1 %%%%%%%%%%%%%%%%%%%
node(node22_1).
deepord(node22_1, 3).         const(3).
functor(node22_1, PRED).         const(PRED).
gram_sempos(node22_1, v).         const(v).
id(node22_1, T_plzensky57806_txt_001_p2s40a1).         const(T_plzensky57806_txt_001_p2s40a1).
nodetype(node22_1, complex).         const(complex).
t_lemma(node22_1, zranit).         const(zranit).
val_frame_rf(node22_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node22_2 %%%%%%%%%%%%%%%%%%%
node(node22_2).
deepord(node22_2, 1).         const(1).
functor(node22_2, ACT).         const(ACT).
id(node22_2, T_plzensky57806_txt_001_p2s40a3).         const(T_plzensky57806_txt_001_p2s40a3).
is_generated(node22_2, 1).         const(1).
nodetype(node22_2, qcomplex).         const(qcomplex).
t_lemma(node22_2, x_Gen).         const(x_Gen).
%%%%%%%% node22_3 %%%%%%%%%%%%%%%%%%%
node(node22_3).
deepord(node22_3, 2).         const(2).
functor(node22_3, PAT).         const(PAT).
gram_sempos(node22_3, n_denot).         const(n_denot).
id(node22_3, T_plzensky57806_txt_001_p2s40a2).         const(T_plzensky57806_txt_001_p2s40a2).
nodetype(node22_3, complex).         const(complex).
t_lemma(node22_3, ridicka).         const(ridicka).
%%%%%%%% node22_4 %%%%%%%%%%%%%%%%%%%
node(node22_4).
deepord(node22_4, x2_1).         const(x2_1).
a_ref_type(node22_4, tree).         const(tree).
a_afun(node22_4, Sb).         const(Sb).
m_form(node22_4, Ridicka).         const(Ridicka).
m_lemma(node22_4, ridicka____2_).         const(ridicka____2_).
m_tag(node22_4, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node22_4, Ridicka).         const(Ridicka).
a_ord(node22_4, 1).         const(1).
a_parent_id(node22_4, a_plzensky57806_txt_001_p2s40W3).         const(a_plzensky57806_txt_001_p2s40W3).
hide(node22_4, hide).         const(hide).
%%%%%%%% node22_5 %%%%%%%%%%%%%%%%%%%
node(node22_5).
deepord(node22_5, x3_1).         const(x3_1).
a_ref_type(node22_5, tree).         const(tree).
a_afun(node22_5, AuxV).         const(AuxV).
m_form(node22_5, nebyla).         const(nebyla).
m_lemma(node22_5, byt).         const(byt).
m_tag(node22_5, VpQW___XR_NA___).         const(VpQW___XR_NA___).
w_token(node22_5, nebyla).         const(nebyla).
a_ord(node22_5, 2).         const(2).
a_parent_id(node22_5, a_plzensky57806_txt_001_p2s40W3).         const(a_plzensky57806_txt_001_p2s40W3).
hide(node22_5, hide).         const(hide).
%%%%%%%% node22_6 %%%%%%%%%%%%%%%%%%%
node(node22_6).
deepord(node22_6, x3_2).         const(x3_2).
a_ref_type(node22_6, tree).         const(tree).
a_afun(node22_6, Pred).         const(Pred).
m_form(node22_6, zranena).         const(zranena).
m_lemma(node22_6, zranit__W).         const(zranit__W).
m_tag(node22_6, VsQW___XX_AP___).         const(VsQW___XX_AP___).
w_token(node22_6, zranena).         const(zranena).
w_no_space_after(node22_6, 1).         const(1).
a_ord(node22_6, 3).         const(3).
a_parent_id(node22_6, a_plzensky57806_txt_001_p2s40).         const(a_plzensky57806_txt_001_p2s40).
hide(node22_6, hide).         const(hide).
edge(node22_0, node22_1).
edge(node22_1, node22_2).
edge(node22_1, node22_3).
edge(node22_3, node22_4).
edge(node22_1, node22_5).
edge(node22_1, node22_6).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Ridicka nebyla zranena. 
tree_root(node23_0).
valid_root(node23_0).
%%%%%%%% node23_0 %%%%%%%%%%%%%%%%%%%
node(node23_0).
atree_rf(node23_0, a_a_plzensky57806_txt_001_p2s40).         const(a_a_plzensky57806_txt_001_p2s40).
deepord(node23_0, 0).         const(0).
id(node23_0, T_plzensky57806_txt_001_p2s40).         const(T_plzensky57806_txt_001_p2s40).
nodetype(node23_0, root).         const(root).
sentence(node23_0, Ridicka_nebyla_zranena__).         const(Ridicka_nebyla_zranena__).
%%%%%%%% node23_1 %%%%%%%%%%%%%%%%%%%
node(node23_1).
deepord(node23_1, 3).         const(3).
functor(node23_1, PRED).         const(PRED).
gram_sempos(node23_1, v).         const(v).
id(node23_1, T_plzensky57806_txt_001_p2s40a1).         const(T_plzensky57806_txt_001_p2s40a1).
nodetype(node23_1, complex).         const(complex).
t_lemma(node23_1, zranit).         const(zranit).
val_frame_rf(node23_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node23_2 %%%%%%%%%%%%%%%%%%%
node(node23_2).
deepord(node23_2, 1).         const(1).
functor(node23_2, ACT).         const(ACT).
id(node23_2, T_plzensky57806_txt_001_p2s40a3).         const(T_plzensky57806_txt_001_p2s40a3).
is_generated(node23_2, 1).         const(1).
nodetype(node23_2, qcomplex).         const(qcomplex).
t_lemma(node23_2, x_Gen).         const(x_Gen).
%%%%%%%% node23_3 %%%%%%%%%%%%%%%%%%%
node(node23_3).
deepord(node23_3, 2).         const(2).
functor(node23_3, PAT).         const(PAT).
gram_sempos(node23_3, n_denot).         const(n_denot).
id(node23_3, T_plzensky57806_txt_001_p2s40a2).         const(T_plzensky57806_txt_001_p2s40a2).
nodetype(node23_3, complex).         const(complex).
t_lemma(node23_3, ridicka).         const(ridicka).
%%%%%%%% node23_4 %%%%%%%%%%%%%%%%%%%
node(node23_4).
deepord(node23_4, x2_1).         const(x2_1).
a_ref_type(node23_4, tree).         const(tree).
a_afun(node23_4, Sb).         const(Sb).
m_form(node23_4, Ridicka).         const(Ridicka).
m_lemma(node23_4, ridicka____2_).         const(ridicka____2_).
m_tag(node23_4, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node23_4, Ridicka).         const(Ridicka).
a_ord(node23_4, 1).         const(1).
a_parent_id(node23_4, a_plzensky57806_txt_001_p2s40W3).         const(a_plzensky57806_txt_001_p2s40W3).
hide(node23_4, hide).         const(hide).
%%%%%%%% node23_5 %%%%%%%%%%%%%%%%%%%
node(node23_5).
deepord(node23_5, x3_1).         const(x3_1).
a_ref_type(node23_5, tree).         const(tree).
a_afun(node23_5, AuxV).         const(AuxV).
m_form(node23_5, nebyla).         const(nebyla).
m_lemma(node23_5, byt).         const(byt).
m_tag(node23_5, VpQW___XR_NA___).         const(VpQW___XR_NA___).
w_token(node23_5, nebyla).         const(nebyla).
a_ord(node23_5, 2).         const(2).
a_parent_id(node23_5, a_plzensky57806_txt_001_p2s40W3).         const(a_plzensky57806_txt_001_p2s40W3).
hide(node23_5, hide).         const(hide).
%%%%%%%% node23_6 %%%%%%%%%%%%%%%%%%%
node(node23_6).
deepord(node23_6, x3_2).         const(x3_2).
a_ref_type(node23_6, tree).         const(tree).
a_afun(node23_6, Pred).         const(Pred).
m_form(node23_6, zranena).         const(zranena).
m_lemma(node23_6, zranit__W).         const(zranit__W).
m_tag(node23_6, VsQW___XX_AP___).         const(VsQW___XX_AP___).
w_token(node23_6, zranena).         const(zranena).
w_no_space_after(node23_6, 1).         const(1).
a_ord(node23_6, 3).         const(3).
a_parent_id(node23_6, a_plzensky57806_txt_001_p2s40).         const(a_plzensky57806_txt_001_p2s40).
hide(node23_6, hide).         const(hide).
edge(node23_0, node23_1).
edge(node23_1, node23_2).
edge(node23_1, node23_3).
edge(node23_3, node23_4).
edge(node23_1, node23_5).
edge(node23_1, node23_6).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% V dobe prijezdu hasicu byla jedna zranena osoba v peci RZR, druha nebyla zranena. 
tree_root(node24_0).
valid_root(node24_0).
%%%%%%%% node24_0 %%%%%%%%%%%%%%%%%%%
node(node24_0).
atree_rf(node24_0, a_a_plzensky51802_txt_001_p6s2).         const(a_a_plzensky51802_txt_001_p6s2).
deepord(node24_0, 0).         const(0).
id(node24_0, T_plzensky51802_txt_001_p6s2).         const(T_plzensky51802_txt_001_p6s2).
nodetype(node24_0, root).         const(root).
sentence(node24_0, V_dobe_prijezdu_hasicu_byla_jedna_zranena_osoba_v_peci_RZR__druha_nebyla_zranena__).         const(V_dobe_prijezdu_hasicu_byla_jedna_zranena_osoba_v_peci_RZR__druha_nebyla_zranena__).
%%%%%%%% node24_1 %%%%%%%%%%%%%%%%%%%
node(node24_1).
deepord(node24_1, 11).         const(11).
functor(node24_1, PRED).         const(PRED).
gram_sempos(node24_1, v).         const(v).
id(node24_1, T_plzensky51802_txt_001_p6s2a14).         const(T_plzensky51802_txt_001_p6s2a14).
nodetype(node24_1, complex).         const(complex).
t_lemma(node24_1, zranit).         const(zranit).
val_frame_rf(node24_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node24_2 %%%%%%%%%%%%%%%%%%%
node(node24_2).
deepord(node24_2, 1).         const(1).
functor(node24_2, ACT).         const(ACT).
id(node24_2, T_plzensky51802_txt_001_p6s2a15).         const(T_plzensky51802_txt_001_p6s2a15).
is_generated(node24_2, 1).         const(1).
nodetype(node24_2, qcomplex).         const(qcomplex).
t_lemma(node24_2, x_Gen).         const(x_Gen).
%%%%%%%% node24_3 %%%%%%%%%%%%%%%%%%%
node(node24_3).
deepord(node24_3, 2).         const(2).
functor(node24_3, TWHEN).         const(TWHEN).
gram_sempos(node24_3, n_denot).         const(n_denot).
id(node24_3, T_plzensky51802_txt_001_p6s2a4).         const(T_plzensky51802_txt_001_p6s2a4).
nodetype(node24_3, complex).         const(complex).
subfunctor(node24_3, basic).         const(basic).
t_lemma(node24_3, prijezd).         const(prijezd).
%%%%%%%% node24_4 %%%%%%%%%%%%%%%%%%%
node(node24_4).
deepord(node24_4, x2_1).         const(x2_1).
a_ref_type(node24_4, tree).         const(tree).
a_afun(node24_4, AuxP).         const(AuxP).
m_form(node24_4, V).         const(V).
m_lemma(node24_4, v_1).         const(v_1).
m_tag(node24_4, RR__6__________).         const(RR__6__________).
w_token(node24_4, V).         const(V).
a_ord(node24_4, 1).         const(1).
a_parent_id(node24_4, a_plzensky51802_txt_001_p6s2W5).         const(a_plzensky51802_txt_001_p6s2W5).
hide(node24_4, hide).         const(hide).
%%%%%%%% node24_5 %%%%%%%%%%%%%%%%%%%
node(node24_5).
deepord(node24_5, x2_2).         const(x2_2).
a_ref_type(node24_5, tree).         const(tree).
a_afun(node24_5, Adv).         const(Adv).
m_form(node24_5, dobe).         const(dobe).
m_lemma(node24_5, doba).         const(doba).
m_tag(node24_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node24_5, dobe).         const(dobe).
a_ord(node24_5, 2).         const(2).
a_parent_id(node24_5, a_plzensky51802_txt_001_p6s2W1).         const(a_plzensky51802_txt_001_p6s2W1).
hide(node24_5, hide).         const(hide).
%%%%%%%% node24_6 %%%%%%%%%%%%%%%%%%%
node(node24_6).
deepord(node24_6, x2_3).         const(x2_3).
a_ref_type(node24_6, tree).         const(tree).
a_afun(node24_6, Atr).         const(Atr).
m_form(node24_6, prijezdu).         const(prijezdu).
m_lemma(node24_6, prijezd).         const(prijezd).
m_tag(node24_6, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node24_6, prijezdu).         const(prijezdu).
a_ord(node24_6, 3).         const(3).
a_parent_id(node24_6, a_plzensky51802_txt_001_p6s2W2).         const(a_plzensky51802_txt_001_p6s2W2).
hide(node24_6, hide).         const(hide).
%%%%%%%% node24_7 %%%%%%%%%%%%%%%%%%%
node(node24_7).
deepord(node24_7, 3).         const(3).
functor(node24_7, ACT).         const(ACT).
gram_sempos(node24_7, n_denot).         const(n_denot).
id(node24_7, T_plzensky51802_txt_001_p6s2a5).         const(T_plzensky51802_txt_001_p6s2a5).
nodetype(node24_7, complex).         const(complex).
t_lemma(node24_7, hasic).         const(hasic).
%%%%%%%% node24_8 %%%%%%%%%%%%%%%%%%%
node(node24_8).
deepord(node24_8, x3_1).         const(x3_1).
a_ref_type(node24_8, tree).         const(tree).
a_afun(node24_8, Atr).         const(Atr).
m_form(node24_8, hasicu).         const(hasicu).
m_lemma(node24_8, hasic).         const(hasic).
m_tag(node24_8, NNMP2_____A____).         const(NNMP2_____A____).
w_token(node24_8, hasicu).         const(hasicu).
a_ord(node24_8, 4).         const(4).
a_parent_id(node24_8, a_plzensky51802_txt_001_p6s2W3).         const(a_plzensky51802_txt_001_p6s2W3).
hide(node24_8, hide).         const(hide).
%%%%%%%% node24_9 %%%%%%%%%%%%%%%%%%%
node(node24_9).
deepord(node24_9, 6).         const(6).
functor(node24_9, PAT).         const(PAT).
gram_sempos(node24_9, n_denot).         const(n_denot).
id(node24_9, T_plzensky51802_txt_001_p6s2a6).         const(T_plzensky51802_txt_001_p6s2a6).
nodetype(node24_9, complex).         const(complex).
t_lemma(node24_9, osoba).         const(osoba).
%%%%%%%% node24_10 %%%%%%%%%%%%%%%%%%%
node(node24_10).
deepord(node24_10, 4).         const(4).
functor(node24_10, RSTR).         const(RSTR).
gram_sempos(node24_10, adj_quant_def).         const(adj_quant_def).
id(node24_10, T_plzensky51802_txt_001_p6s2a7).         const(T_plzensky51802_txt_001_p6s2a7).
nodetype(node24_10, complex).         const(complex).
t_lemma(node24_10, jeden).         const(jeden).
%%%%%%%% node24_11 %%%%%%%%%%%%%%%%%%%
node(node24_11).
deepord(node24_11, x4_1).         const(x4_1).
a_ref_type(node24_11, tree).         const(tree).
a_afun(node24_11, Atr).         const(Atr).
m_form(node24_11, jedna).         const(jedna).
m_lemma(node24_11, jeden_1).         const(jeden_1).
m_tag(node24_11, ClFS1__________).         const(ClFS1__________).
w_token(node24_11, jedna).         const(jedna).
a_ord(node24_11, 6).         const(6).
a_parent_id(node24_11, a_plzensky51802_txt_001_p6s2W8).         const(a_plzensky51802_txt_001_p6s2W8).
hide(node24_11, hide).         const(hide).
%%%%%%%% node24_12 %%%%%%%%%%%%%%%%%%%
node(node24_12).
deepord(node24_12, 5).         const(5).
functor(node24_12, RSTR).         const(RSTR).
gram_sempos(node24_12, adj_denot).         const(adj_denot).
id(node24_12, T_plzensky51802_txt_001_p6s2a8).         const(T_plzensky51802_txt_001_p6s2a8).
nodetype(node24_12, complex).         const(complex).
t_lemma(node24_12, zraneny).         const(zraneny).
%%%%%%%% node24_13 %%%%%%%%%%%%%%%%%%%
node(node24_13).
deepord(node24_13, x5_1).         const(x5_1).
a_ref_type(node24_13, tree).         const(tree).
a_afun(node24_13, Atr).         const(Atr).
m_form(node24_13, zranena).         const(zranena).
m_lemma(node24_13, zraneny____3it_).         const(zraneny____3it_).
m_tag(node24_13, AAFS1____1A____).         const(AAFS1____1A____).
w_token(node24_13, zranena).         const(zranena).
a_ord(node24_13, 7).         const(7).
a_parent_id(node24_13, a_plzensky51802_txt_001_p6s2W8).         const(a_plzensky51802_txt_001_p6s2W8).
hide(node24_13, hide).         const(hide).
%%%%%%%% node24_14 %%%%%%%%%%%%%%%%%%%
node(node24_14).
deepord(node24_14, x6_1).         const(x6_1).
a_ref_type(node24_14, tree).         const(tree).
a_afun(node24_14, Sb).         const(Sb).
m_form(node24_14, osoba).         const(osoba).
m_lemma(node24_14, osoba).         const(osoba).
m_tag(node24_14, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node24_14, osoba).         const(osoba).
a_ord(node24_14, 8).         const(8).
a_parent_id(node24_14, a_plzensky51802_txt_001_p6s2W5).         const(a_plzensky51802_txt_001_p6s2W5).
hide(node24_14, hide).         const(hide).
%%%%%%%% node24_15 %%%%%%%%%%%%%%%%%%%
node(node24_15).
deepord(node24_15, 9).         const(9).
functor(node24_15, RSTR).         const(RSTR).
id(node24_15, T_plzensky51802_txt_001_p6s2a9).         const(T_plzensky51802_txt_001_p6s2a9).
nodetype(node24_15, complex).         const(complex).
t_lemma(node24_15, x_Comma).         const(x_Comma).
%%%%%%%% node24_16 %%%%%%%%%%%%%%%%%%%
node(node24_16).
deepord(node24_16, 7).         const(7).
functor(node24_16, LOC).         const(LOC).
gram_sempos(node24_16, n_denot).         const(n_denot).
id(node24_16, T_plzensky51802_txt_001_p6s2a11).         const(T_plzensky51802_txt_001_p6s2a11).
nodetype(node24_16, complex).         const(complex).
subfunctor(node24_16, basic).         const(basic).
t_lemma(node24_16, pece).         const(pece).
%%%%%%%% node24_17 %%%%%%%%%%%%%%%%%%%
node(node24_17).
deepord(node24_17, x7_1).         const(x7_1).
a_ref_type(node24_17, tree).         const(tree).
a_afun(node24_17, AuxP).         const(AuxP).
m_form(node24_17, v).         const(v).
m_lemma(node24_17, v_1).         const(v_1).
m_tag(node24_17, RR__6__________).         const(RR__6__________).
w_token(node24_17, v).         const(v).
a_ord(node24_17, 9).         const(9).
a_parent_id(node24_17, a_plzensky51802_txt_001_p6s2W12).         const(a_plzensky51802_txt_001_p6s2W12).
hide(node24_17, hide).         const(hide).
%%%%%%%% node24_18 %%%%%%%%%%%%%%%%%%%
node(node24_18).
deepord(node24_18, x7_2).         const(x7_2).
a_ref_type(node24_18, tree).         const(tree).
a_afun(node24_18, Adv).         const(Adv).
m_form(node24_18, peci).         const(peci).
m_lemma(node24_18, pece).         const(pece).
m_tag(node24_18, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node24_18, peci).         const(peci).
a_ord(node24_18, 10).         const(10).
a_parent_id(node24_18, a_plzensky51802_txt_001_p6s2W9).         const(a_plzensky51802_txt_001_p6s2W9).
hide(node24_18, hide).         const(hide).
%%%%%%%% node24_19 %%%%%%%%%%%%%%%%%%%
node(node24_19).
deepord(node24_19, 8).         const(8).
functor(node24_19, ACT).         const(ACT).
gram_sempos(node24_19, n_denot).         const(n_denot).
id(node24_19, T_plzensky51802_txt_001_p6s2a12).         const(T_plzensky51802_txt_001_p6s2a12).
nodetype(node24_19, complex).         const(complex).
t_lemma(node24_19, RZR).         const(RZR).
%%%%%%%% node24_20 %%%%%%%%%%%%%%%%%%%
node(node24_20).
deepord(node24_20, x8_1).         const(x8_1).
a_ref_type(node24_20, tree).         const(tree).
a_afun(node24_20, Atr).         const(Atr).
m_form(node24_20, RZR).         const(RZR).
m_lemma(node24_20, RZR).         const(RZR).
m_tag(node24_20, NNFXX_____A____).         const(NNFXX_____A____).
w_token(node24_20, RZR).         const(RZR).
w_no_space_after(node24_20, 1).         const(1).
a_ord(node24_20, 11).         const(11).
a_parent_id(node24_20, a_plzensky51802_txt_001_p6s2W10).         const(a_plzensky51802_txt_001_p6s2W10).
hide(node24_20, hide).         const(hide).
%%%%%%%% node24_21 %%%%%%%%%%%%%%%%%%%
node(node24_21).
deepord(node24_21, x9_1).         const(x9_1).
a_ref_type(node24_21, tree).         const(tree).
a_afun(node24_21, AuxX).         const(AuxX).
m_form(node24_21, x_).         const(x_).
m_lemma(node24_21, x_).         const(x_).
m_tag(node24_21, Z______________).         const(Z______________).
w_token(node24_21, x_).         const(x_).
a_ord(node24_21, 12).         const(12).
a_parent_id(node24_21, a_plzensky51802_txt_001_p6s2W5).         const(a_plzensky51802_txt_001_p6s2W5).
hide(node24_21, hide).         const(hide).
%%%%%%%% node24_22 %%%%%%%%%%%%%%%%%%%
node(node24_22).
deepord(node24_22, 10).         const(10).
functor(node24_22, RSTR).         const(RSTR).
gram_sempos(node24_22, adj_quant_def).         const(adj_quant_def).
id(node24_22, T_plzensky51802_txt_001_p6s2a13).         const(T_plzensky51802_txt_001_p6s2a13).
nodetype(node24_22, complex).         const(complex).
t_lemma(node24_22, dva).         const(dva).
%%%%%%%% node24_23 %%%%%%%%%%%%%%%%%%%
node(node24_23).
deepord(node24_23, x10_1).         const(x10_1).
a_ref_type(node24_23, tree).         const(tree).
a_afun(node24_23, Pnom).         const(Pnom).
m_form(node24_23, druha).         const(druha).
m_lemma(node24_23, druhy_1___jiny_).         const(druhy_1___jiny_).
m_tag(node24_23, AAFS1____1A____).         const(AAFS1____1A____).
w_token(node24_23, druha).         const(druha).
a_ord(node24_23, 13).         const(13).
a_parent_id(node24_23, a_plzensky51802_txt_001_p6s2W12).         const(a_plzensky51802_txt_001_p6s2W12).
hide(node24_23, hide).         const(hide).
%%%%%%%% node24_24 %%%%%%%%%%%%%%%%%%%
node(node24_24).
deepord(node24_24, x11_1).         const(x11_1).
a_ref_type(node24_24, tree).         const(tree).
a_afun(node24_24, Pred).         const(Pred).
m_form(node24_24, byla).         const(byla).
m_lemma(node24_24, byt).         const(byt).
m_tag(node24_24, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node24_24, byla).         const(byla).
a_ord(node24_24, 5).         const(5).
a_parent_id(node24_24, a_plzensky51802_txt_001_p6s2).         const(a_plzensky51802_txt_001_p6s2).
hide(node24_24, hide).         const(hide).
%%%%%%%% node24_25 %%%%%%%%%%%%%%%%%%%
node(node24_25).
deepord(node24_25, x11_2).         const(x11_2).
a_ref_type(node24_25, tree).         const(tree).
a_afun(node24_25, AuxV).         const(AuxV).
m_form(node24_25, nebyla).         const(nebyla).
m_lemma(node24_25, byt).         const(byt).
m_tag(node24_25, VpQW___XR_NA___).         const(VpQW___XR_NA___).
w_token(node24_25, nebyla).         const(nebyla).
a_ord(node24_25, 14).         const(14).
a_parent_id(node24_25, a_plzensky51802_txt_001_p6s2W15).         const(a_plzensky51802_txt_001_p6s2W15).
hide(node24_25, hide).         const(hide).
%%%%%%%% node24_26 %%%%%%%%%%%%%%%%%%%
node(node24_26).
deepord(node24_26, x11_3).         const(x11_3).
a_ref_type(node24_26, tree).         const(tree).
a_afun(node24_26, Pnom).         const(Pnom).
m_form(node24_26, zranena).         const(zranena).
m_lemma(node24_26, zranit__W).         const(zranit__W).
m_tag(node24_26, VsQW___XX_AP___).         const(VsQW___XX_AP___).
w_token(node24_26, zranena).         const(zranena).
w_no_space_after(node24_26, 1).         const(1).
a_ord(node24_26, 15).         const(15).
a_parent_id(node24_26, a_plzensky51802_txt_001_p6s2W5).         const(a_plzensky51802_txt_001_p6s2W5).
hide(node24_26, hide).         const(hide).
edge(node24_0, node24_1).
edge(node24_1, node24_2).
edge(node24_1, node24_3).
edge(node24_3, node24_4).
edge(node24_3, node24_5).
edge(node24_3, node24_6).
edge(node24_3, node24_7).
edge(node24_7, node24_8).
edge(node24_1, node24_9).
edge(node24_9, node24_10).
edge(node24_10, node24_11).
edge(node24_9, node24_12).
edge(node24_12, node24_13).
edge(node24_9, node24_14).
edge(node24_1, node24_15).
edge(node24_15, node24_16).
edge(node24_16, node24_17).
edge(node24_16, node24_18).
edge(node24_16, node24_19).
edge(node24_19, node24_20).
edge(node24_15, node24_21).
edge(node24_15, node24_22).
edge(node24_22, node24_23).
edge(node24_1, node24_24).
edge(node24_1, node24_25).
edge(node24_1, node24_26).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% V dobe prijezdu hasicu byla jedna zranena osoba v peci RZR, druha nebyla zranena. 
tree_root(node25_0).
valid_root(node25_0).
%%%%%%%% node25_0 %%%%%%%%%%%%%%%%%%%
node(node25_0).
atree_rf(node25_0, a_a_plzensky51802_txt_001_p6s2).         const(a_a_plzensky51802_txt_001_p6s2).
deepord(node25_0, 0).         const(0).
id(node25_0, T_plzensky51802_txt_001_p6s2).         const(T_plzensky51802_txt_001_p6s2).
nodetype(node25_0, root).         const(root).
sentence(node25_0, V_dobe_prijezdu_hasicu_byla_jedna_zranena_osoba_v_peci_RZR__druha_nebyla_zranena__).         const(V_dobe_prijezdu_hasicu_byla_jedna_zranena_osoba_v_peci_RZR__druha_nebyla_zranena__).
%%%%%%%% node25_1 %%%%%%%%%%%%%%%%%%%
node(node25_1).
deepord(node25_1, 11).         const(11).
functor(node25_1, PRED).         const(PRED).
gram_sempos(node25_1, v).         const(v).
id(node25_1, T_plzensky51802_txt_001_p6s2a14).         const(T_plzensky51802_txt_001_p6s2a14).
nodetype(node25_1, complex).         const(complex).
t_lemma(node25_1, zranit).         const(zranit).
val_frame_rf(node25_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node25_2 %%%%%%%%%%%%%%%%%%%
node(node25_2).
deepord(node25_2, 1).         const(1).
functor(node25_2, ACT).         const(ACT).
id(node25_2, T_plzensky51802_txt_001_p6s2a15).         const(T_plzensky51802_txt_001_p6s2a15).
is_generated(node25_2, 1).         const(1).
nodetype(node25_2, qcomplex).         const(qcomplex).
t_lemma(node25_2, x_Gen).         const(x_Gen).
%%%%%%%% node25_3 %%%%%%%%%%%%%%%%%%%
node(node25_3).
deepord(node25_3, 2).         const(2).
functor(node25_3, TWHEN).         const(TWHEN).
gram_sempos(node25_3, n_denot).         const(n_denot).
id(node25_3, T_plzensky51802_txt_001_p6s2a4).         const(T_plzensky51802_txt_001_p6s2a4).
nodetype(node25_3, complex).         const(complex).
subfunctor(node25_3, basic).         const(basic).
t_lemma(node25_3, prijezd).         const(prijezd).
%%%%%%%% node25_4 %%%%%%%%%%%%%%%%%%%
node(node25_4).
deepord(node25_4, x2_1).         const(x2_1).
a_ref_type(node25_4, tree).         const(tree).
a_afun(node25_4, AuxP).         const(AuxP).
m_form(node25_4, V).         const(V).
m_lemma(node25_4, v_1).         const(v_1).
m_tag(node25_4, RR__6__________).         const(RR__6__________).
w_token(node25_4, V).         const(V).
a_ord(node25_4, 1).         const(1).
a_parent_id(node25_4, a_plzensky51802_txt_001_p6s2W5).         const(a_plzensky51802_txt_001_p6s2W5).
hide(node25_4, hide).         const(hide).
%%%%%%%% node25_5 %%%%%%%%%%%%%%%%%%%
node(node25_5).
deepord(node25_5, x2_2).         const(x2_2).
a_ref_type(node25_5, tree).         const(tree).
a_afun(node25_5, Adv).         const(Adv).
m_form(node25_5, dobe).         const(dobe).
m_lemma(node25_5, doba).         const(doba).
m_tag(node25_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node25_5, dobe).         const(dobe).
a_ord(node25_5, 2).         const(2).
a_parent_id(node25_5, a_plzensky51802_txt_001_p6s2W1).         const(a_plzensky51802_txt_001_p6s2W1).
hide(node25_5, hide).         const(hide).
%%%%%%%% node25_6 %%%%%%%%%%%%%%%%%%%
node(node25_6).
deepord(node25_6, x2_3).         const(x2_3).
a_ref_type(node25_6, tree).         const(tree).
a_afun(node25_6, Atr).         const(Atr).
m_form(node25_6, prijezdu).         const(prijezdu).
m_lemma(node25_6, prijezd).         const(prijezd).
m_tag(node25_6, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node25_6, prijezdu).         const(prijezdu).
a_ord(node25_6, 3).         const(3).
a_parent_id(node25_6, a_plzensky51802_txt_001_p6s2W2).         const(a_plzensky51802_txt_001_p6s2W2).
hide(node25_6, hide).         const(hide).
%%%%%%%% node25_7 %%%%%%%%%%%%%%%%%%%
node(node25_7).
deepord(node25_7, 3).         const(3).
functor(node25_7, ACT).         const(ACT).
gram_sempos(node25_7, n_denot).         const(n_denot).
id(node25_7, T_plzensky51802_txt_001_p6s2a5).         const(T_plzensky51802_txt_001_p6s2a5).
nodetype(node25_7, complex).         const(complex).
t_lemma(node25_7, hasic).         const(hasic).
%%%%%%%% node25_8 %%%%%%%%%%%%%%%%%%%
node(node25_8).
deepord(node25_8, x3_1).         const(x3_1).
a_ref_type(node25_8, tree).         const(tree).
a_afun(node25_8, Atr).         const(Atr).
m_form(node25_8, hasicu).         const(hasicu).
m_lemma(node25_8, hasic).         const(hasic).
m_tag(node25_8, NNMP2_____A____).         const(NNMP2_____A____).
w_token(node25_8, hasicu).         const(hasicu).
a_ord(node25_8, 4).         const(4).
a_parent_id(node25_8, a_plzensky51802_txt_001_p6s2W3).         const(a_plzensky51802_txt_001_p6s2W3).
hide(node25_8, hide).         const(hide).
%%%%%%%% node25_9 %%%%%%%%%%%%%%%%%%%
node(node25_9).
deepord(node25_9, 6).         const(6).
functor(node25_9, PAT).         const(PAT).
gram_sempos(node25_9, n_denot).         const(n_denot).
id(node25_9, T_plzensky51802_txt_001_p6s2a6).         const(T_plzensky51802_txt_001_p6s2a6).
nodetype(node25_9, complex).         const(complex).
t_lemma(node25_9, osoba).         const(osoba).
%%%%%%%% node25_10 %%%%%%%%%%%%%%%%%%%
node(node25_10).
deepord(node25_10, 4).         const(4).
functor(node25_10, RSTR).         const(RSTR).
gram_sempos(node25_10, adj_quant_def).         const(adj_quant_def).
id(node25_10, T_plzensky51802_txt_001_p6s2a7).         const(T_plzensky51802_txt_001_p6s2a7).
nodetype(node25_10, complex).         const(complex).
t_lemma(node25_10, jeden).         const(jeden).
%%%%%%%% node25_11 %%%%%%%%%%%%%%%%%%%
node(node25_11).
deepord(node25_11, x4_1).         const(x4_1).
a_ref_type(node25_11, tree).         const(tree).
a_afun(node25_11, Atr).         const(Atr).
m_form(node25_11, jedna).         const(jedna).
m_lemma(node25_11, jeden_1).         const(jeden_1).
m_tag(node25_11, ClFS1__________).         const(ClFS1__________).
w_token(node25_11, jedna).         const(jedna).
a_ord(node25_11, 6).         const(6).
a_parent_id(node25_11, a_plzensky51802_txt_001_p6s2W8).         const(a_plzensky51802_txt_001_p6s2W8).
hide(node25_11, hide).         const(hide).
%%%%%%%% node25_12 %%%%%%%%%%%%%%%%%%%
node(node25_12).
deepord(node25_12, 5).         const(5).
functor(node25_12, RSTR).         const(RSTR).
gram_sempos(node25_12, adj_denot).         const(adj_denot).
id(node25_12, T_plzensky51802_txt_001_p6s2a8).         const(T_plzensky51802_txt_001_p6s2a8).
nodetype(node25_12, complex).         const(complex).
t_lemma(node25_12, zraneny).         const(zraneny).
%%%%%%%% node25_13 %%%%%%%%%%%%%%%%%%%
node(node25_13).
deepord(node25_13, x5_1).         const(x5_1).
a_ref_type(node25_13, tree).         const(tree).
a_afun(node25_13, Atr).         const(Atr).
m_form(node25_13, zranena).         const(zranena).
m_lemma(node25_13, zraneny____3it_).         const(zraneny____3it_).
m_tag(node25_13, AAFS1____1A____).         const(AAFS1____1A____).
w_token(node25_13, zranena).         const(zranena).
a_ord(node25_13, 7).         const(7).
a_parent_id(node25_13, a_plzensky51802_txt_001_p6s2W8).         const(a_plzensky51802_txt_001_p6s2W8).
hide(node25_13, hide).         const(hide).
%%%%%%%% node25_14 %%%%%%%%%%%%%%%%%%%
node(node25_14).
deepord(node25_14, x6_1).         const(x6_1).
a_ref_type(node25_14, tree).         const(tree).
a_afun(node25_14, Sb).         const(Sb).
m_form(node25_14, osoba).         const(osoba).
m_lemma(node25_14, osoba).         const(osoba).
m_tag(node25_14, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node25_14, osoba).         const(osoba).
a_ord(node25_14, 8).         const(8).
a_parent_id(node25_14, a_plzensky51802_txt_001_p6s2W5).         const(a_plzensky51802_txt_001_p6s2W5).
hide(node25_14, hide).         const(hide).
%%%%%%%% node25_15 %%%%%%%%%%%%%%%%%%%
node(node25_15).
deepord(node25_15, 9).         const(9).
functor(node25_15, RSTR).         const(RSTR).
id(node25_15, T_plzensky51802_txt_001_p6s2a9).         const(T_plzensky51802_txt_001_p6s2a9).
nodetype(node25_15, complex).         const(complex).
t_lemma(node25_15, x_Comma).         const(x_Comma).
%%%%%%%% node25_16 %%%%%%%%%%%%%%%%%%%
node(node25_16).
deepord(node25_16, 7).         const(7).
functor(node25_16, LOC).         const(LOC).
gram_sempos(node25_16, n_denot).         const(n_denot).
id(node25_16, T_plzensky51802_txt_001_p6s2a11).         const(T_plzensky51802_txt_001_p6s2a11).
nodetype(node25_16, complex).         const(complex).
subfunctor(node25_16, basic).         const(basic).
t_lemma(node25_16, pece).         const(pece).
%%%%%%%% node25_17 %%%%%%%%%%%%%%%%%%%
node(node25_17).
deepord(node25_17, x7_1).         const(x7_1).
a_ref_type(node25_17, tree).         const(tree).
a_afun(node25_17, AuxP).         const(AuxP).
m_form(node25_17, v).         const(v).
m_lemma(node25_17, v_1).         const(v_1).
m_tag(node25_17, RR__6__________).         const(RR__6__________).
w_token(node25_17, v).         const(v).
a_ord(node25_17, 9).         const(9).
a_parent_id(node25_17, a_plzensky51802_txt_001_p6s2W12).         const(a_plzensky51802_txt_001_p6s2W12).
hide(node25_17, hide).         const(hide).
%%%%%%%% node25_18 %%%%%%%%%%%%%%%%%%%
node(node25_18).
deepord(node25_18, x7_2).         const(x7_2).
a_ref_type(node25_18, tree).         const(tree).
a_afun(node25_18, Adv).         const(Adv).
m_form(node25_18, peci).         const(peci).
m_lemma(node25_18, pece).         const(pece).
m_tag(node25_18, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node25_18, peci).         const(peci).
a_ord(node25_18, 10).         const(10).
a_parent_id(node25_18, a_plzensky51802_txt_001_p6s2W9).         const(a_plzensky51802_txt_001_p6s2W9).
hide(node25_18, hide).         const(hide).
%%%%%%%% node25_19 %%%%%%%%%%%%%%%%%%%
node(node25_19).
deepord(node25_19, 8).         const(8).
functor(node25_19, ACT).         const(ACT).
gram_sempos(node25_19, n_denot).         const(n_denot).
id(node25_19, T_plzensky51802_txt_001_p6s2a12).         const(T_plzensky51802_txt_001_p6s2a12).
nodetype(node25_19, complex).         const(complex).
t_lemma(node25_19, RZR).         const(RZR).
%%%%%%%% node25_20 %%%%%%%%%%%%%%%%%%%
node(node25_20).
deepord(node25_20, x8_1).         const(x8_1).
a_ref_type(node25_20, tree).         const(tree).
a_afun(node25_20, Atr).         const(Atr).
m_form(node25_20, RZR).         const(RZR).
m_lemma(node25_20, RZR).         const(RZR).
m_tag(node25_20, NNFXX_____A____).         const(NNFXX_____A____).
w_token(node25_20, RZR).         const(RZR).
w_no_space_after(node25_20, 1).         const(1).
a_ord(node25_20, 11).         const(11).
a_parent_id(node25_20, a_plzensky51802_txt_001_p6s2W10).         const(a_plzensky51802_txt_001_p6s2W10).
hide(node25_20, hide).         const(hide).
%%%%%%%% node25_21 %%%%%%%%%%%%%%%%%%%
node(node25_21).
deepord(node25_21, x9_1).         const(x9_1).
a_ref_type(node25_21, tree).         const(tree).
a_afun(node25_21, AuxX).         const(AuxX).
m_form(node25_21, x_).         const(x_).
m_lemma(node25_21, x_).         const(x_).
m_tag(node25_21, Z______________).         const(Z______________).
w_token(node25_21, x_).         const(x_).
a_ord(node25_21, 12).         const(12).
a_parent_id(node25_21, a_plzensky51802_txt_001_p6s2W5).         const(a_plzensky51802_txt_001_p6s2W5).
hide(node25_21, hide).         const(hide).
%%%%%%%% node25_22 %%%%%%%%%%%%%%%%%%%
node(node25_22).
deepord(node25_22, 10).         const(10).
functor(node25_22, RSTR).         const(RSTR).
gram_sempos(node25_22, adj_quant_def).         const(adj_quant_def).
id(node25_22, T_plzensky51802_txt_001_p6s2a13).         const(T_plzensky51802_txt_001_p6s2a13).
nodetype(node25_22, complex).         const(complex).
t_lemma(node25_22, dva).         const(dva).
%%%%%%%% node25_23 %%%%%%%%%%%%%%%%%%%
node(node25_23).
deepord(node25_23, x10_1).         const(x10_1).
a_ref_type(node25_23, tree).         const(tree).
a_afun(node25_23, Pnom).         const(Pnom).
m_form(node25_23, druha).         const(druha).
m_lemma(node25_23, druhy_1___jiny_).         const(druhy_1___jiny_).
m_tag(node25_23, AAFS1____1A____).         const(AAFS1____1A____).
w_token(node25_23, druha).         const(druha).
a_ord(node25_23, 13).         const(13).
a_parent_id(node25_23, a_plzensky51802_txt_001_p6s2W12).         const(a_plzensky51802_txt_001_p6s2W12).
hide(node25_23, hide).         const(hide).
%%%%%%%% node25_24 %%%%%%%%%%%%%%%%%%%
node(node25_24).
deepord(node25_24, x11_1).         const(x11_1).
a_ref_type(node25_24, tree).         const(tree).
a_afun(node25_24, Pred).         const(Pred).
m_form(node25_24, byla).         const(byla).
m_lemma(node25_24, byt).         const(byt).
m_tag(node25_24, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node25_24, byla).         const(byla).
a_ord(node25_24, 5).         const(5).
a_parent_id(node25_24, a_plzensky51802_txt_001_p6s2).         const(a_plzensky51802_txt_001_p6s2).
hide(node25_24, hide).         const(hide).
%%%%%%%% node25_25 %%%%%%%%%%%%%%%%%%%
node(node25_25).
deepord(node25_25, x11_2).         const(x11_2).
a_ref_type(node25_25, tree).         const(tree).
a_afun(node25_25, AuxV).         const(AuxV).
m_form(node25_25, nebyla).         const(nebyla).
m_lemma(node25_25, byt).         const(byt).
m_tag(node25_25, VpQW___XR_NA___).         const(VpQW___XR_NA___).
w_token(node25_25, nebyla).         const(nebyla).
a_ord(node25_25, 14).         const(14).
a_parent_id(node25_25, a_plzensky51802_txt_001_p6s2W15).         const(a_plzensky51802_txt_001_p6s2W15).
hide(node25_25, hide).         const(hide).
%%%%%%%% node25_26 %%%%%%%%%%%%%%%%%%%
node(node25_26).
deepord(node25_26, x11_3).         const(x11_3).
a_ref_type(node25_26, tree).         const(tree).
a_afun(node25_26, Pnom).         const(Pnom).
m_form(node25_26, zranena).         const(zranena).
m_lemma(node25_26, zranit__W).         const(zranit__W).
m_tag(node25_26, VsQW___XX_AP___).         const(VsQW___XX_AP___).
w_token(node25_26, zranena).         const(zranena).
w_no_space_after(node25_26, 1).         const(1).
a_ord(node25_26, 15).         const(15).
a_parent_id(node25_26, a_plzensky51802_txt_001_p6s2W5).         const(a_plzensky51802_txt_001_p6s2W5).
hide(node25_26, hide).         const(hide).
edge(node25_0, node25_1).
edge(node25_1, node25_2).
edge(node25_1, node25_3).
edge(node25_3, node25_4).
edge(node25_3, node25_5).
edge(node25_3, node25_6).
edge(node25_3, node25_7).
edge(node25_7, node25_8).
edge(node25_1, node25_9).
edge(node25_9, node25_10).
edge(node25_10, node25_11).
edge(node25_9, node25_12).
edge(node25_12, node25_13).
edge(node25_9, node25_14).
edge(node25_1, node25_15).
edge(node25_15, node25_16).
edge(node25_16, node25_17).
edge(node25_16, node25_18).
edge(node25_16, node25_19).
edge(node25_19, node25_20).
edge(node25_15, node25_21).
edge(node25_15, node25_22).
edge(node25_22, node25_23).
edge(node25_1, node25_24).
edge(node25_1, node25_25).
edge(node25_1, node25_26).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% V dobe prijezdu hasicu byla jedna zranena osoba v peci RZR, druha nebyla zranena. 
tree_root(node26_0).
valid_root(node26_0).
%%%%%%%% node26_0 %%%%%%%%%%%%%%%%%%%
node(node26_0).
atree_rf(node26_0, a_a_plzensky51802_txt_001_p6s2).         const(a_a_plzensky51802_txt_001_p6s2).
deepord(node26_0, 0).         const(0).
id(node26_0, T_plzensky51802_txt_001_p6s2).         const(T_plzensky51802_txt_001_p6s2).
nodetype(node26_0, root).         const(root).
sentence(node26_0, V_dobe_prijezdu_hasicu_byla_jedna_zranena_osoba_v_peci_RZR__druha_nebyla_zranena__).         const(V_dobe_prijezdu_hasicu_byla_jedna_zranena_osoba_v_peci_RZR__druha_nebyla_zranena__).
%%%%%%%% node26_1 %%%%%%%%%%%%%%%%%%%
node(node26_1).
deepord(node26_1, 11).         const(11).
functor(node26_1, PRED).         const(PRED).
gram_sempos(node26_1, v).         const(v).
id(node26_1, T_plzensky51802_txt_001_p6s2a14).         const(T_plzensky51802_txt_001_p6s2a14).
nodetype(node26_1, complex).         const(complex).
t_lemma(node26_1, zranit).         const(zranit).
val_frame_rf(node26_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node26_2 %%%%%%%%%%%%%%%%%%%
node(node26_2).
deepord(node26_2, 1).         const(1).
functor(node26_2, ACT).         const(ACT).
id(node26_2, T_plzensky51802_txt_001_p6s2a15).         const(T_plzensky51802_txt_001_p6s2a15).
is_generated(node26_2, 1).         const(1).
nodetype(node26_2, qcomplex).         const(qcomplex).
t_lemma(node26_2, x_Gen).         const(x_Gen).
%%%%%%%% node26_3 %%%%%%%%%%%%%%%%%%%
node(node26_3).
deepord(node26_3, 2).         const(2).
functor(node26_3, TWHEN).         const(TWHEN).
gram_sempos(node26_3, n_denot).         const(n_denot).
id(node26_3, T_plzensky51802_txt_001_p6s2a4).         const(T_plzensky51802_txt_001_p6s2a4).
nodetype(node26_3, complex).         const(complex).
subfunctor(node26_3, basic).         const(basic).
t_lemma(node26_3, prijezd).         const(prijezd).
%%%%%%%% node26_4 %%%%%%%%%%%%%%%%%%%
node(node26_4).
deepord(node26_4, x2_1).         const(x2_1).
a_ref_type(node26_4, tree).         const(tree).
a_afun(node26_4, AuxP).         const(AuxP).
m_form(node26_4, V).         const(V).
m_lemma(node26_4, v_1).         const(v_1).
m_tag(node26_4, RR__6__________).         const(RR__6__________).
w_token(node26_4, V).         const(V).
a_ord(node26_4, 1).         const(1).
a_parent_id(node26_4, a_plzensky51802_txt_001_p6s2W5).         const(a_plzensky51802_txt_001_p6s2W5).
hide(node26_4, hide).         const(hide).
%%%%%%%% node26_5 %%%%%%%%%%%%%%%%%%%
node(node26_5).
deepord(node26_5, x2_2).         const(x2_2).
a_ref_type(node26_5, tree).         const(tree).
a_afun(node26_5, Adv).         const(Adv).
m_form(node26_5, dobe).         const(dobe).
m_lemma(node26_5, doba).         const(doba).
m_tag(node26_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node26_5, dobe).         const(dobe).
a_ord(node26_5, 2).         const(2).
a_parent_id(node26_5, a_plzensky51802_txt_001_p6s2W1).         const(a_plzensky51802_txt_001_p6s2W1).
hide(node26_5, hide).         const(hide).
%%%%%%%% node26_6 %%%%%%%%%%%%%%%%%%%
node(node26_6).
deepord(node26_6, x2_3).         const(x2_3).
a_ref_type(node26_6, tree).         const(tree).
a_afun(node26_6, Atr).         const(Atr).
m_form(node26_6, prijezdu).         const(prijezdu).
m_lemma(node26_6, prijezd).         const(prijezd).
m_tag(node26_6, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node26_6, prijezdu).         const(prijezdu).
a_ord(node26_6, 3).         const(3).
a_parent_id(node26_6, a_plzensky51802_txt_001_p6s2W2).         const(a_plzensky51802_txt_001_p6s2W2).
hide(node26_6, hide).         const(hide).
%%%%%%%% node26_7 %%%%%%%%%%%%%%%%%%%
node(node26_7).
deepord(node26_7, 3).         const(3).
functor(node26_7, ACT).         const(ACT).
gram_sempos(node26_7, n_denot).         const(n_denot).
id(node26_7, T_plzensky51802_txt_001_p6s2a5).         const(T_plzensky51802_txt_001_p6s2a5).
nodetype(node26_7, complex).         const(complex).
t_lemma(node26_7, hasic).         const(hasic).
%%%%%%%% node26_8 %%%%%%%%%%%%%%%%%%%
node(node26_8).
deepord(node26_8, x3_1).         const(x3_1).
a_ref_type(node26_8, tree).         const(tree).
a_afun(node26_8, Atr).         const(Atr).
m_form(node26_8, hasicu).         const(hasicu).
m_lemma(node26_8, hasic).         const(hasic).
m_tag(node26_8, NNMP2_____A____).         const(NNMP2_____A____).
w_token(node26_8, hasicu).         const(hasicu).
a_ord(node26_8, 4).         const(4).
a_parent_id(node26_8, a_plzensky51802_txt_001_p6s2W3).         const(a_plzensky51802_txt_001_p6s2W3).
hide(node26_8, hide).         const(hide).
%%%%%%%% node26_9 %%%%%%%%%%%%%%%%%%%
node(node26_9).
deepord(node26_9, 6).         const(6).
functor(node26_9, PAT).         const(PAT).
gram_sempos(node26_9, n_denot).         const(n_denot).
id(node26_9, T_plzensky51802_txt_001_p6s2a6).         const(T_plzensky51802_txt_001_p6s2a6).
nodetype(node26_9, complex).         const(complex).
t_lemma(node26_9, osoba).         const(osoba).
%%%%%%%% node26_10 %%%%%%%%%%%%%%%%%%%
node(node26_10).
deepord(node26_10, 4).         const(4).
functor(node26_10, RSTR).         const(RSTR).
gram_sempos(node26_10, adj_quant_def).         const(adj_quant_def).
id(node26_10, T_plzensky51802_txt_001_p6s2a7).         const(T_plzensky51802_txt_001_p6s2a7).
nodetype(node26_10, complex).         const(complex).
t_lemma(node26_10, jeden).         const(jeden).
%%%%%%%% node26_11 %%%%%%%%%%%%%%%%%%%
node(node26_11).
deepord(node26_11, x4_1).         const(x4_1).
a_ref_type(node26_11, tree).         const(tree).
a_afun(node26_11, Atr).         const(Atr).
m_form(node26_11, jedna).         const(jedna).
m_lemma(node26_11, jeden_1).         const(jeden_1).
m_tag(node26_11, ClFS1__________).         const(ClFS1__________).
w_token(node26_11, jedna).         const(jedna).
a_ord(node26_11, 6).         const(6).
a_parent_id(node26_11, a_plzensky51802_txt_001_p6s2W8).         const(a_plzensky51802_txt_001_p6s2W8).
hide(node26_11, hide).         const(hide).
%%%%%%%% node26_12 %%%%%%%%%%%%%%%%%%%
node(node26_12).
deepord(node26_12, 5).         const(5).
functor(node26_12, RSTR).         const(RSTR).
gram_sempos(node26_12, adj_denot).         const(adj_denot).
id(node26_12, T_plzensky51802_txt_001_p6s2a8).         const(T_plzensky51802_txt_001_p6s2a8).
nodetype(node26_12, complex).         const(complex).
t_lemma(node26_12, zraneny).         const(zraneny).
%%%%%%%% node26_13 %%%%%%%%%%%%%%%%%%%
node(node26_13).
deepord(node26_13, x5_1).         const(x5_1).
a_ref_type(node26_13, tree).         const(tree).
a_afun(node26_13, Atr).         const(Atr).
m_form(node26_13, zranena).         const(zranena).
m_lemma(node26_13, zraneny____3it_).         const(zraneny____3it_).
m_tag(node26_13, AAFS1____1A____).         const(AAFS1____1A____).
w_token(node26_13, zranena).         const(zranena).
a_ord(node26_13, 7).         const(7).
a_parent_id(node26_13, a_plzensky51802_txt_001_p6s2W8).         const(a_plzensky51802_txt_001_p6s2W8).
hide(node26_13, hide).         const(hide).
%%%%%%%% node26_14 %%%%%%%%%%%%%%%%%%%
node(node26_14).
deepord(node26_14, x6_1).         const(x6_1).
a_ref_type(node26_14, tree).         const(tree).
a_afun(node26_14, Sb).         const(Sb).
m_form(node26_14, osoba).         const(osoba).
m_lemma(node26_14, osoba).         const(osoba).
m_tag(node26_14, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node26_14, osoba).         const(osoba).
a_ord(node26_14, 8).         const(8).
a_parent_id(node26_14, a_plzensky51802_txt_001_p6s2W5).         const(a_plzensky51802_txt_001_p6s2W5).
hide(node26_14, hide).         const(hide).
%%%%%%%% node26_15 %%%%%%%%%%%%%%%%%%%
node(node26_15).
deepord(node26_15, 9).         const(9).
functor(node26_15, RSTR).         const(RSTR).
id(node26_15, T_plzensky51802_txt_001_p6s2a9).         const(T_plzensky51802_txt_001_p6s2a9).
nodetype(node26_15, complex).         const(complex).
t_lemma(node26_15, x_Comma).         const(x_Comma).
%%%%%%%% node26_16 %%%%%%%%%%%%%%%%%%%
node(node26_16).
deepord(node26_16, 7).         const(7).
functor(node26_16, LOC).         const(LOC).
gram_sempos(node26_16, n_denot).         const(n_denot).
id(node26_16, T_plzensky51802_txt_001_p6s2a11).         const(T_plzensky51802_txt_001_p6s2a11).
nodetype(node26_16, complex).         const(complex).
subfunctor(node26_16, basic).         const(basic).
t_lemma(node26_16, pece).         const(pece).
%%%%%%%% node26_17 %%%%%%%%%%%%%%%%%%%
node(node26_17).
deepord(node26_17, x7_1).         const(x7_1).
a_ref_type(node26_17, tree).         const(tree).
a_afun(node26_17, AuxP).         const(AuxP).
m_form(node26_17, v).         const(v).
m_lemma(node26_17, v_1).         const(v_1).
m_tag(node26_17, RR__6__________).         const(RR__6__________).
w_token(node26_17, v).         const(v).
a_ord(node26_17, 9).         const(9).
a_parent_id(node26_17, a_plzensky51802_txt_001_p6s2W12).         const(a_plzensky51802_txt_001_p6s2W12).
hide(node26_17, hide).         const(hide).
%%%%%%%% node26_18 %%%%%%%%%%%%%%%%%%%
node(node26_18).
deepord(node26_18, x7_2).         const(x7_2).
a_ref_type(node26_18, tree).         const(tree).
a_afun(node26_18, Adv).         const(Adv).
m_form(node26_18, peci).         const(peci).
m_lemma(node26_18, pece).         const(pece).
m_tag(node26_18, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node26_18, peci).         const(peci).
a_ord(node26_18, 10).         const(10).
a_parent_id(node26_18, a_plzensky51802_txt_001_p6s2W9).         const(a_plzensky51802_txt_001_p6s2W9).
hide(node26_18, hide).         const(hide).
%%%%%%%% node26_19 %%%%%%%%%%%%%%%%%%%
node(node26_19).
deepord(node26_19, 8).         const(8).
functor(node26_19, ACT).         const(ACT).
gram_sempos(node26_19, n_denot).         const(n_denot).
id(node26_19, T_plzensky51802_txt_001_p6s2a12).         const(T_plzensky51802_txt_001_p6s2a12).
nodetype(node26_19, complex).         const(complex).
t_lemma(node26_19, RZR).         const(RZR).
%%%%%%%% node26_20 %%%%%%%%%%%%%%%%%%%
node(node26_20).
deepord(node26_20, x8_1).         const(x8_1).
a_ref_type(node26_20, tree).         const(tree).
a_afun(node26_20, Atr).         const(Atr).
m_form(node26_20, RZR).         const(RZR).
m_lemma(node26_20, RZR).         const(RZR).
m_tag(node26_20, NNFXX_____A____).         const(NNFXX_____A____).
w_token(node26_20, RZR).         const(RZR).
w_no_space_after(node26_20, 1).         const(1).
a_ord(node26_20, 11).         const(11).
a_parent_id(node26_20, a_plzensky51802_txt_001_p6s2W10).         const(a_plzensky51802_txt_001_p6s2W10).
hide(node26_20, hide).         const(hide).
%%%%%%%% node26_21 %%%%%%%%%%%%%%%%%%%
node(node26_21).
deepord(node26_21, x9_1).         const(x9_1).
a_ref_type(node26_21, tree).         const(tree).
a_afun(node26_21, AuxX).         const(AuxX).
m_form(node26_21, x_).         const(x_).
m_lemma(node26_21, x_).         const(x_).
m_tag(node26_21, Z______________).         const(Z______________).
w_token(node26_21, x_).         const(x_).
a_ord(node26_21, 12).         const(12).
a_parent_id(node26_21, a_plzensky51802_txt_001_p6s2W5).         const(a_plzensky51802_txt_001_p6s2W5).
hide(node26_21, hide).         const(hide).
%%%%%%%% node26_22 %%%%%%%%%%%%%%%%%%%
node(node26_22).
deepord(node26_22, 10).         const(10).
functor(node26_22, RSTR).         const(RSTR).
gram_sempos(node26_22, adj_quant_def).         const(adj_quant_def).
id(node26_22, T_plzensky51802_txt_001_p6s2a13).         const(T_plzensky51802_txt_001_p6s2a13).
nodetype(node26_22, complex).         const(complex).
t_lemma(node26_22, dva).         const(dva).
%%%%%%%% node26_23 %%%%%%%%%%%%%%%%%%%
node(node26_23).
deepord(node26_23, x10_1).         const(x10_1).
a_ref_type(node26_23, tree).         const(tree).
a_afun(node26_23, Pnom).         const(Pnom).
m_form(node26_23, druha).         const(druha).
m_lemma(node26_23, druhy_1___jiny_).         const(druhy_1___jiny_).
m_tag(node26_23, AAFS1____1A____).         const(AAFS1____1A____).
w_token(node26_23, druha).         const(druha).
a_ord(node26_23, 13).         const(13).
a_parent_id(node26_23, a_plzensky51802_txt_001_p6s2W12).         const(a_plzensky51802_txt_001_p6s2W12).
hide(node26_23, hide).         const(hide).
%%%%%%%% node26_24 %%%%%%%%%%%%%%%%%%%
node(node26_24).
deepord(node26_24, x11_1).         const(x11_1).
a_ref_type(node26_24, tree).         const(tree).
a_afun(node26_24, Pred).         const(Pred).
m_form(node26_24, byla).         const(byla).
m_lemma(node26_24, byt).         const(byt).
m_tag(node26_24, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node26_24, byla).         const(byla).
a_ord(node26_24, 5).         const(5).
a_parent_id(node26_24, a_plzensky51802_txt_001_p6s2).         const(a_plzensky51802_txt_001_p6s2).
hide(node26_24, hide).         const(hide).
%%%%%%%% node26_25 %%%%%%%%%%%%%%%%%%%
node(node26_25).
deepord(node26_25, x11_2).         const(x11_2).
a_ref_type(node26_25, tree).         const(tree).
a_afun(node26_25, AuxV).         const(AuxV).
m_form(node26_25, nebyla).         const(nebyla).
m_lemma(node26_25, byt).         const(byt).
m_tag(node26_25, VpQW___XR_NA___).         const(VpQW___XR_NA___).
w_token(node26_25, nebyla).         const(nebyla).
a_ord(node26_25, 14).         const(14).
a_parent_id(node26_25, a_plzensky51802_txt_001_p6s2W15).         const(a_plzensky51802_txt_001_p6s2W15).
hide(node26_25, hide).         const(hide).
%%%%%%%% node26_26 %%%%%%%%%%%%%%%%%%%
node(node26_26).
deepord(node26_26, x11_3).         const(x11_3).
a_ref_type(node26_26, tree).         const(tree).
a_afun(node26_26, Pnom).         const(Pnom).
m_form(node26_26, zranena).         const(zranena).
m_lemma(node26_26, zranit__W).         const(zranit__W).
m_tag(node26_26, VsQW___XX_AP___).         const(VsQW___XX_AP___).
w_token(node26_26, zranena).         const(zranena).
w_no_space_after(node26_26, 1).         const(1).
a_ord(node26_26, 15).         const(15).
a_parent_id(node26_26, a_plzensky51802_txt_001_p6s2W5).         const(a_plzensky51802_txt_001_p6s2W5).
hide(node26_26, hide).         const(hide).
edge(node26_0, node26_1).
edge(node26_1, node26_2).
edge(node26_1, node26_3).
edge(node26_3, node26_4).
edge(node26_3, node26_5).
edge(node26_3, node26_6).
edge(node26_3, node26_7).
edge(node26_7, node26_8).
edge(node26_1, node26_9).
edge(node26_9, node26_10).
edge(node26_10, node26_11).
edge(node26_9, node26_12).
edge(node26_12, node26_13).
edge(node26_9, node26_14).
edge(node26_1, node26_15).
edge(node26_15, node26_16).
edge(node26_16, node26_17).
edge(node26_16, node26_18).
edge(node26_16, node26_19).
edge(node26_19, node26_20).
edge(node26_15, node26_21).
edge(node26_15, node26_22).
edge(node26_22, node26_23).
edge(node26_1, node26_24).
edge(node26_1, node26_25).
edge(node26_1, node26_26).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% V dobe prijezdu hasicu byla jedna zranena osoba v peci RZR, druha nebyla zranena. 
tree_root(node27_0).
valid_root(node27_0).
%%%%%%%% node27_0 %%%%%%%%%%%%%%%%%%%
node(node27_0).
atree_rf(node27_0, a_a_plzensky51802_txt_001_p6s2).         const(a_a_plzensky51802_txt_001_p6s2).
deepord(node27_0, 0).         const(0).
id(node27_0, T_plzensky51802_txt_001_p6s2).         const(T_plzensky51802_txt_001_p6s2).
nodetype(node27_0, root).         const(root).
sentence(node27_0, V_dobe_prijezdu_hasicu_byla_jedna_zranena_osoba_v_peci_RZR__druha_nebyla_zranena__).         const(V_dobe_prijezdu_hasicu_byla_jedna_zranena_osoba_v_peci_RZR__druha_nebyla_zranena__).
%%%%%%%% node27_1 %%%%%%%%%%%%%%%%%%%
node(node27_1).
deepord(node27_1, 11).         const(11).
functor(node27_1, PRED).         const(PRED).
gram_sempos(node27_1, v).         const(v).
id(node27_1, T_plzensky51802_txt_001_p6s2a14).         const(T_plzensky51802_txt_001_p6s2a14).
nodetype(node27_1, complex).         const(complex).
t_lemma(node27_1, zranit).         const(zranit).
val_frame_rf(node27_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node27_2 %%%%%%%%%%%%%%%%%%%
node(node27_2).
deepord(node27_2, 1).         const(1).
functor(node27_2, ACT).         const(ACT).
id(node27_2, T_plzensky51802_txt_001_p6s2a15).         const(T_plzensky51802_txt_001_p6s2a15).
is_generated(node27_2, 1).         const(1).
nodetype(node27_2, qcomplex).         const(qcomplex).
t_lemma(node27_2, x_Gen).         const(x_Gen).
%%%%%%%% node27_3 %%%%%%%%%%%%%%%%%%%
node(node27_3).
deepord(node27_3, 2).         const(2).
functor(node27_3, TWHEN).         const(TWHEN).
gram_sempos(node27_3, n_denot).         const(n_denot).
id(node27_3, T_plzensky51802_txt_001_p6s2a4).         const(T_plzensky51802_txt_001_p6s2a4).
nodetype(node27_3, complex).         const(complex).
subfunctor(node27_3, basic).         const(basic).
t_lemma(node27_3, prijezd).         const(prijezd).
%%%%%%%% node27_4 %%%%%%%%%%%%%%%%%%%
node(node27_4).
deepord(node27_4, x2_1).         const(x2_1).
a_ref_type(node27_4, tree).         const(tree).
a_afun(node27_4, AuxP).         const(AuxP).
m_form(node27_4, V).         const(V).
m_lemma(node27_4, v_1).         const(v_1).
m_tag(node27_4, RR__6__________).         const(RR__6__________).
w_token(node27_4, V).         const(V).
a_ord(node27_4, 1).         const(1).
a_parent_id(node27_4, a_plzensky51802_txt_001_p6s2W5).         const(a_plzensky51802_txt_001_p6s2W5).
hide(node27_4, hide).         const(hide).
%%%%%%%% node27_5 %%%%%%%%%%%%%%%%%%%
node(node27_5).
deepord(node27_5, x2_2).         const(x2_2).
a_ref_type(node27_5, tree).         const(tree).
a_afun(node27_5, Adv).         const(Adv).
m_form(node27_5, dobe).         const(dobe).
m_lemma(node27_5, doba).         const(doba).
m_tag(node27_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node27_5, dobe).         const(dobe).
a_ord(node27_5, 2).         const(2).
a_parent_id(node27_5, a_plzensky51802_txt_001_p6s2W1).         const(a_plzensky51802_txt_001_p6s2W1).
hide(node27_5, hide).         const(hide).
%%%%%%%% node27_6 %%%%%%%%%%%%%%%%%%%
node(node27_6).
deepord(node27_6, x2_3).         const(x2_3).
a_ref_type(node27_6, tree).         const(tree).
a_afun(node27_6, Atr).         const(Atr).
m_form(node27_6, prijezdu).         const(prijezdu).
m_lemma(node27_6, prijezd).         const(prijezd).
m_tag(node27_6, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node27_6, prijezdu).         const(prijezdu).
a_ord(node27_6, 3).         const(3).
a_parent_id(node27_6, a_plzensky51802_txt_001_p6s2W2).         const(a_plzensky51802_txt_001_p6s2W2).
hide(node27_6, hide).         const(hide).
%%%%%%%% node27_7 %%%%%%%%%%%%%%%%%%%
node(node27_7).
deepord(node27_7, 3).         const(3).
functor(node27_7, ACT).         const(ACT).
gram_sempos(node27_7, n_denot).         const(n_denot).
id(node27_7, T_plzensky51802_txt_001_p6s2a5).         const(T_plzensky51802_txt_001_p6s2a5).
nodetype(node27_7, complex).         const(complex).
t_lemma(node27_7, hasic).         const(hasic).
%%%%%%%% node27_8 %%%%%%%%%%%%%%%%%%%
node(node27_8).
deepord(node27_8, x3_1).         const(x3_1).
a_ref_type(node27_8, tree).         const(tree).
a_afun(node27_8, Atr).         const(Atr).
m_form(node27_8, hasicu).         const(hasicu).
m_lemma(node27_8, hasic).         const(hasic).
m_tag(node27_8, NNMP2_____A____).         const(NNMP2_____A____).
w_token(node27_8, hasicu).         const(hasicu).
a_ord(node27_8, 4).         const(4).
a_parent_id(node27_8, a_plzensky51802_txt_001_p6s2W3).         const(a_plzensky51802_txt_001_p6s2W3).
hide(node27_8, hide).         const(hide).
%%%%%%%% node27_9 %%%%%%%%%%%%%%%%%%%
node(node27_9).
deepord(node27_9, 6).         const(6).
functor(node27_9, PAT).         const(PAT).
gram_sempos(node27_9, n_denot).         const(n_denot).
id(node27_9, T_plzensky51802_txt_001_p6s2a6).         const(T_plzensky51802_txt_001_p6s2a6).
nodetype(node27_9, complex).         const(complex).
t_lemma(node27_9, osoba).         const(osoba).
%%%%%%%% node27_10 %%%%%%%%%%%%%%%%%%%
node(node27_10).
deepord(node27_10, 4).         const(4).
functor(node27_10, RSTR).         const(RSTR).
gram_sempos(node27_10, adj_quant_def).         const(adj_quant_def).
id(node27_10, T_plzensky51802_txt_001_p6s2a7).         const(T_plzensky51802_txt_001_p6s2a7).
nodetype(node27_10, complex).         const(complex).
t_lemma(node27_10, jeden).         const(jeden).
%%%%%%%% node27_11 %%%%%%%%%%%%%%%%%%%
node(node27_11).
deepord(node27_11, x4_1).         const(x4_1).
a_ref_type(node27_11, tree).         const(tree).
a_afun(node27_11, Atr).         const(Atr).
m_form(node27_11, jedna).         const(jedna).
m_lemma(node27_11, jeden_1).         const(jeden_1).
m_tag(node27_11, ClFS1__________).         const(ClFS1__________).
w_token(node27_11, jedna).         const(jedna).
a_ord(node27_11, 6).         const(6).
a_parent_id(node27_11, a_plzensky51802_txt_001_p6s2W8).         const(a_plzensky51802_txt_001_p6s2W8).
hide(node27_11, hide).         const(hide).
%%%%%%%% node27_12 %%%%%%%%%%%%%%%%%%%
node(node27_12).
deepord(node27_12, 5).         const(5).
functor(node27_12, RSTR).         const(RSTR).
gram_sempos(node27_12, adj_denot).         const(adj_denot).
id(node27_12, T_plzensky51802_txt_001_p6s2a8).         const(T_plzensky51802_txt_001_p6s2a8).
nodetype(node27_12, complex).         const(complex).
t_lemma(node27_12, zraneny).         const(zraneny).
%%%%%%%% node27_13 %%%%%%%%%%%%%%%%%%%
node(node27_13).
deepord(node27_13, x5_1).         const(x5_1).
a_ref_type(node27_13, tree).         const(tree).
a_afun(node27_13, Atr).         const(Atr).
m_form(node27_13, zranena).         const(zranena).
m_lemma(node27_13, zraneny____3it_).         const(zraneny____3it_).
m_tag(node27_13, AAFS1____1A____).         const(AAFS1____1A____).
w_token(node27_13, zranena).         const(zranena).
a_ord(node27_13, 7).         const(7).
a_parent_id(node27_13, a_plzensky51802_txt_001_p6s2W8).         const(a_plzensky51802_txt_001_p6s2W8).
hide(node27_13, hide).         const(hide).
%%%%%%%% node27_14 %%%%%%%%%%%%%%%%%%%
node(node27_14).
deepord(node27_14, x6_1).         const(x6_1).
a_ref_type(node27_14, tree).         const(tree).
a_afun(node27_14, Sb).         const(Sb).
m_form(node27_14, osoba).         const(osoba).
m_lemma(node27_14, osoba).         const(osoba).
m_tag(node27_14, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node27_14, osoba).         const(osoba).
a_ord(node27_14, 8).         const(8).
a_parent_id(node27_14, a_plzensky51802_txt_001_p6s2W5).         const(a_plzensky51802_txt_001_p6s2W5).
hide(node27_14, hide).         const(hide).
%%%%%%%% node27_15 %%%%%%%%%%%%%%%%%%%
node(node27_15).
deepord(node27_15, 9).         const(9).
functor(node27_15, RSTR).         const(RSTR).
id(node27_15, T_plzensky51802_txt_001_p6s2a9).         const(T_plzensky51802_txt_001_p6s2a9).
nodetype(node27_15, complex).         const(complex).
t_lemma(node27_15, x_Comma).         const(x_Comma).
%%%%%%%% node27_16 %%%%%%%%%%%%%%%%%%%
node(node27_16).
deepord(node27_16, 7).         const(7).
functor(node27_16, LOC).         const(LOC).
gram_sempos(node27_16, n_denot).         const(n_denot).
id(node27_16, T_plzensky51802_txt_001_p6s2a11).         const(T_plzensky51802_txt_001_p6s2a11).
nodetype(node27_16, complex).         const(complex).
subfunctor(node27_16, basic).         const(basic).
t_lemma(node27_16, pece).         const(pece).
%%%%%%%% node27_17 %%%%%%%%%%%%%%%%%%%
node(node27_17).
deepord(node27_17, x7_1).         const(x7_1).
a_ref_type(node27_17, tree).         const(tree).
a_afun(node27_17, AuxP).         const(AuxP).
m_form(node27_17, v).         const(v).
m_lemma(node27_17, v_1).         const(v_1).
m_tag(node27_17, RR__6__________).         const(RR__6__________).
w_token(node27_17, v).         const(v).
a_ord(node27_17, 9).         const(9).
a_parent_id(node27_17, a_plzensky51802_txt_001_p6s2W12).         const(a_plzensky51802_txt_001_p6s2W12).
hide(node27_17, hide).         const(hide).
%%%%%%%% node27_18 %%%%%%%%%%%%%%%%%%%
node(node27_18).
deepord(node27_18, x7_2).         const(x7_2).
a_ref_type(node27_18, tree).         const(tree).
a_afun(node27_18, Adv).         const(Adv).
m_form(node27_18, peci).         const(peci).
m_lemma(node27_18, pece).         const(pece).
m_tag(node27_18, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node27_18, peci).         const(peci).
a_ord(node27_18, 10).         const(10).
a_parent_id(node27_18, a_plzensky51802_txt_001_p6s2W9).         const(a_plzensky51802_txt_001_p6s2W9).
hide(node27_18, hide).         const(hide).
%%%%%%%% node27_19 %%%%%%%%%%%%%%%%%%%
node(node27_19).
deepord(node27_19, 8).         const(8).
functor(node27_19, ACT).         const(ACT).
gram_sempos(node27_19, n_denot).         const(n_denot).
id(node27_19, T_plzensky51802_txt_001_p6s2a12).         const(T_plzensky51802_txt_001_p6s2a12).
nodetype(node27_19, complex).         const(complex).
t_lemma(node27_19, RZR).         const(RZR).
%%%%%%%% node27_20 %%%%%%%%%%%%%%%%%%%
node(node27_20).
deepord(node27_20, x8_1).         const(x8_1).
a_ref_type(node27_20, tree).         const(tree).
a_afun(node27_20, Atr).         const(Atr).
m_form(node27_20, RZR).         const(RZR).
m_lemma(node27_20, RZR).         const(RZR).
m_tag(node27_20, NNFXX_____A____).         const(NNFXX_____A____).
w_token(node27_20, RZR).         const(RZR).
w_no_space_after(node27_20, 1).         const(1).
a_ord(node27_20, 11).         const(11).
a_parent_id(node27_20, a_plzensky51802_txt_001_p6s2W10).         const(a_plzensky51802_txt_001_p6s2W10).
hide(node27_20, hide).         const(hide).
%%%%%%%% node27_21 %%%%%%%%%%%%%%%%%%%
node(node27_21).
deepord(node27_21, x9_1).         const(x9_1).
a_ref_type(node27_21, tree).         const(tree).
a_afun(node27_21, AuxX).         const(AuxX).
m_form(node27_21, x_).         const(x_).
m_lemma(node27_21, x_).         const(x_).
m_tag(node27_21, Z______________).         const(Z______________).
w_token(node27_21, x_).         const(x_).
a_ord(node27_21, 12).         const(12).
a_parent_id(node27_21, a_plzensky51802_txt_001_p6s2W5).         const(a_plzensky51802_txt_001_p6s2W5).
hide(node27_21, hide).         const(hide).
%%%%%%%% node27_22 %%%%%%%%%%%%%%%%%%%
node(node27_22).
deepord(node27_22, 10).         const(10).
functor(node27_22, RSTR).         const(RSTR).
gram_sempos(node27_22, adj_quant_def).         const(adj_quant_def).
id(node27_22, T_plzensky51802_txt_001_p6s2a13).         const(T_plzensky51802_txt_001_p6s2a13).
nodetype(node27_22, complex).         const(complex).
t_lemma(node27_22, dva).         const(dva).
%%%%%%%% node27_23 %%%%%%%%%%%%%%%%%%%
node(node27_23).
deepord(node27_23, x10_1).         const(x10_1).
a_ref_type(node27_23, tree).         const(tree).
a_afun(node27_23, Pnom).         const(Pnom).
m_form(node27_23, druha).         const(druha).
m_lemma(node27_23, druhy_1___jiny_).         const(druhy_1___jiny_).
m_tag(node27_23, AAFS1____1A____).         const(AAFS1____1A____).
w_token(node27_23, druha).         const(druha).
a_ord(node27_23, 13).         const(13).
a_parent_id(node27_23, a_plzensky51802_txt_001_p6s2W12).         const(a_plzensky51802_txt_001_p6s2W12).
hide(node27_23, hide).         const(hide).
%%%%%%%% node27_24 %%%%%%%%%%%%%%%%%%%
node(node27_24).
deepord(node27_24, x11_1).         const(x11_1).
a_ref_type(node27_24, tree).         const(tree).
a_afun(node27_24, Pred).         const(Pred).
m_form(node27_24, byla).         const(byla).
m_lemma(node27_24, byt).         const(byt).
m_tag(node27_24, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node27_24, byla).         const(byla).
a_ord(node27_24, 5).         const(5).
a_parent_id(node27_24, a_plzensky51802_txt_001_p6s2).         const(a_plzensky51802_txt_001_p6s2).
hide(node27_24, hide).         const(hide).
%%%%%%%% node27_25 %%%%%%%%%%%%%%%%%%%
node(node27_25).
deepord(node27_25, x11_2).         const(x11_2).
a_ref_type(node27_25, tree).         const(tree).
a_afun(node27_25, AuxV).         const(AuxV).
m_form(node27_25, nebyla).         const(nebyla).
m_lemma(node27_25, byt).         const(byt).
m_tag(node27_25, VpQW___XR_NA___).         const(VpQW___XR_NA___).
w_token(node27_25, nebyla).         const(nebyla).
a_ord(node27_25, 14).         const(14).
a_parent_id(node27_25, a_plzensky51802_txt_001_p6s2W15).         const(a_plzensky51802_txt_001_p6s2W15).
hide(node27_25, hide).         const(hide).
%%%%%%%% node27_26 %%%%%%%%%%%%%%%%%%%
node(node27_26).
deepord(node27_26, x11_3).         const(x11_3).
a_ref_type(node27_26, tree).         const(tree).
a_afun(node27_26, Pnom).         const(Pnom).
m_form(node27_26, zranena).         const(zranena).
m_lemma(node27_26, zranit__W).         const(zranit__W).
m_tag(node27_26, VsQW___XX_AP___).         const(VsQW___XX_AP___).
w_token(node27_26, zranena).         const(zranena).
w_no_space_after(node27_26, 1).         const(1).
a_ord(node27_26, 15).         const(15).
a_parent_id(node27_26, a_plzensky51802_txt_001_p6s2W5).         const(a_plzensky51802_txt_001_p6s2W5).
hide(node27_26, hide).         const(hide).
edge(node27_0, node27_1).
edge(node27_1, node27_2).
edge(node27_1, node27_3).
edge(node27_3, node27_4).
edge(node27_3, node27_5).
edge(node27_3, node27_6).
edge(node27_3, node27_7).
edge(node27_7, node27_8).
edge(node27_1, node27_9).
edge(node27_9, node27_10).
edge(node27_10, node27_11).
edge(node27_9, node27_12).
edge(node27_12, node27_13).
edge(node27_9, node27_14).
edge(node27_1, node27_15).
edge(node27_15, node27_16).
edge(node27_16, node27_17).
edge(node27_16, node27_18).
edge(node27_16, node27_19).
edge(node27_19, node27_20).
edge(node27_15, node27_21).
edge(node27_15, node27_22).
edge(node27_22, node27_23).
edge(node27_1, node27_24).
edge(node27_1, node27_25).
edge(node27_1, node27_26).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode byla zranena spolujezdkyne a hasici ji poskytli predlekarskou pomoc. 
tree_root(node28_0).
valid_root(node28_0).
%%%%%%%% node28_0 %%%%%%%%%%%%%%%%%%%
node(node28_0).
atree_rf(node28_0, a_a_plzensky69694_txt_001_p3s4).         const(a_a_plzensky69694_txt_001_p3s4).
deepord(node28_0, 0).         const(0).
id(node28_0, T_plzensky69694_txt_001_p3s4).         const(T_plzensky69694_txt_001_p3s4).
nodetype(node28_0, root).         const(root).
sentence(node28_0, Pri_nehode_byla_zranena_spolujezdkyne_a_hasici_ji_poskytli_predlekarskou_pomoc__).         const(Pri_nehode_byla_zranena_spolujezdkyne_a_hasici_ji_poskytli_predlekarskou_pomoc__).
%%%%%%%% node28_1 %%%%%%%%%%%%%%%%%%%
node(node28_1).
deepord(node28_1, 5).         const(5).
functor(node28_1, CONJ).         const(CONJ).
id(node28_1, T_plzensky69694_txt_001_p3s4a1).         const(T_plzensky69694_txt_001_p3s4a1).
nodetype(node28_1, coap).         const(coap).
t_lemma(node28_1, a).         const(a).
%%%%%%%% node28_2 %%%%%%%%%%%%%%%%%%%
node(node28_2).
deepord(node28_2, 3).         const(3).
functor(node28_2, PRED).         const(PRED).
gram_sempos(node28_2, v).         const(v).
id(node28_2, T_plzensky69694_txt_001_p3s4a2).         const(T_plzensky69694_txt_001_p3s4a2).
is_member(node28_2, 1).         const(1).
nodetype(node28_2, complex).         const(complex).
t_lemma(node28_2, zranit).         const(zranit).
val_frame_rf(node28_2, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node28_3 %%%%%%%%%%%%%%%%%%%
node(node28_3).
deepord(node28_3, 1).         const(1).
functor(node28_3, ACT).         const(ACT).
id(node28_3, T_plzensky69694_txt_001_p3s4a12).         const(T_plzensky69694_txt_001_p3s4a12).
is_generated(node28_3, 1).         const(1).
nodetype(node28_3, qcomplex).         const(qcomplex).
t_lemma(node28_3, x_Gen).         const(x_Gen).
%%%%%%%% node28_4 %%%%%%%%%%%%%%%%%%%
node(node28_4).
deepord(node28_4, 2).         const(2).
functor(node28_4, TWHEN).         const(TWHEN).
gram_sempos(node28_4, n_denot).         const(n_denot).
id(node28_4, T_plzensky69694_txt_001_p3s4a4).         const(T_plzensky69694_txt_001_p3s4a4).
nodetype(node28_4, complex).         const(complex).
subfunctor(node28_4, basic).         const(basic).
t_lemma(node28_4, nehoda).         const(nehoda).
%%%%%%%% node28_5 %%%%%%%%%%%%%%%%%%%
node(node28_5).
deepord(node28_5, x2_1).         const(x2_1).
a_ref_type(node28_5, tree).         const(tree).
a_afun(node28_5, AuxP).         const(AuxP).
m_form(node28_5, Pri).         const(Pri).
m_lemma(node28_5, pri_1).         const(pri_1).
m_tag(node28_5, RR__6__________).         const(RR__6__________).
w_token(node28_5, Pri).         const(Pri).
a_ord(node28_5, 1).         const(1).
a_parent_id(node28_5, a_plzensky69694_txt_001_p3s4W4).         const(a_plzensky69694_txt_001_p3s4W4).
hide(node28_5, hide).         const(hide).
%%%%%%%% node28_6 %%%%%%%%%%%%%%%%%%%
node(node28_6).
deepord(node28_6, x2_2).         const(x2_2).
a_ref_type(node28_6, tree).         const(tree).
a_afun(node28_6, Adv).         const(Adv).
m_form(node28_6, nehode).         const(nehode).
m_lemma(node28_6, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node28_6, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node28_6, nehode).         const(nehode).
a_ord(node28_6, 2).         const(2).
a_parent_id(node28_6, a_plzensky69694_txt_001_p3s4W1).         const(a_plzensky69694_txt_001_p3s4W1).
hide(node28_6, hide).         const(hide).
%%%%%%%% node28_7 %%%%%%%%%%%%%%%%%%%
node(node28_7).
deepord(node28_7, x3_1).         const(x3_1).
a_ref_type(node28_7, tree).         const(tree).
a_afun(node28_7, AuxV).         const(AuxV).
m_form(node28_7, byla).         const(byla).
m_lemma(node28_7, byt).         const(byt).
m_tag(node28_7, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node28_7, byla).         const(byla).
a_ord(node28_7, 3).         const(3).
a_parent_id(node28_7, a_plzensky69694_txt_001_p3s4W4).         const(a_plzensky69694_txt_001_p3s4W4).
hide(node28_7, hide).         const(hide).
%%%%%%%% node28_8 %%%%%%%%%%%%%%%%%%%
node(node28_8).
deepord(node28_8, x3_2).         const(x3_2).
a_ref_type(node28_8, tree).         const(tree).
a_afun(node28_8, Pred).         const(Pred).
m_form(node28_8, zranena).         const(zranena).
m_lemma(node28_8, zranit__W).         const(zranit__W).
m_tag(node28_8, VsQW___XX_AP___).         const(VsQW___XX_AP___).
w_token(node28_8, zranena).         const(zranena).
a_ord(node28_8, 4).         const(4).
a_parent_id(node28_8, a_plzensky69694_txt_001_p3s4W6).         const(a_plzensky69694_txt_001_p3s4W6).
hide(node28_8, hide).         const(hide).
%%%%%%%% node28_9 %%%%%%%%%%%%%%%%%%%
node(node28_9).
deepord(node28_9, 4).         const(4).
functor(node28_9, PAT).         const(PAT).
gram_sempos(node28_9, n_denot).         const(n_denot).
id(node28_9, T_plzensky69694_txt_001_p3s4a6).         const(T_plzensky69694_txt_001_p3s4a6).
nodetype(node28_9, complex).         const(complex).
t_lemma(node28_9, spolujezdkyne).         const(spolujezdkyne).
%%%%%%%% node28_10 %%%%%%%%%%%%%%%%%%%
node(node28_10).
deepord(node28_10, x4_1).         const(x4_1).
a_ref_type(node28_10, tree).         const(tree).
a_afun(node28_10, Sb).         const(Sb).
m_form(node28_10, spolujezdkyne).         const(spolujezdkyne).
m_lemma(node28_10, spolujezdkyne____4ec_).         const(spolujezdkyne____4ec_).
m_tag(node28_10, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node28_10, spolujezdkyne).         const(spolujezdkyne).
a_ord(node28_10, 5).         const(5).
a_parent_id(node28_10, a_plzensky69694_txt_001_p3s4W4).         const(a_plzensky69694_txt_001_p3s4W4).
hide(node28_10, hide).         const(hide).
%%%%%%%% node28_11 %%%%%%%%%%%%%%%%%%%
node(node28_11).
deepord(node28_11, x5_1).         const(x5_1).
a_ref_type(node28_11, tree).         const(tree).
a_afun(node28_11, Coord).         const(Coord).
m_form(node28_11, a).         const(a).
m_lemma(node28_11, a_1).         const(a_1).
m_tag(node28_11, J______________).         const(J______________).
w_token(node28_11, a).         const(a).
a_ord(node28_11, 6).         const(6).
a_parent_id(node28_11, a_plzensky69694_txt_001_p3s4).         const(a_plzensky69694_txt_001_p3s4).
hide(node28_11, hide).         const(hide).
%%%%%%%% node28_12 %%%%%%%%%%%%%%%%%%%
node(node28_12).
deepord(node28_12, 8).         const(8).
functor(node28_12, CAUS).         const(CAUS).
gram_sempos(node28_12, v).         const(v).
id(node28_12, T_plzensky69694_txt_001_p3s4a7).         const(T_plzensky69694_txt_001_p3s4a7).
is_member(node28_12, 1).         const(1).
nodetype(node28_12, complex).         const(complex).
t_lemma(node28_12, poskytnout).         const(poskytnout).
val_frame_rf(node28_12, v_v_w3973f2).         const(v_v_w3973f2).
%%%%%%%% node28_13 %%%%%%%%%%%%%%%%%%%
node(node28_13).
deepord(node28_13, 6).         const(6).
functor(node28_13, ACT).         const(ACT).
gram_sempos(node28_13, n_denot).         const(n_denot).
id(node28_13, T_plzensky69694_txt_001_p3s4a8).         const(T_plzensky69694_txt_001_p3s4a8).
nodetype(node28_13, complex).         const(complex).
t_lemma(node28_13, hasic).         const(hasic).
%%%%%%%% node28_14 %%%%%%%%%%%%%%%%%%%
node(node28_14).
deepord(node28_14, x6_1).         const(x6_1).
a_ref_type(node28_14, tree).         const(tree).
a_afun(node28_14, Sb).         const(Sb).
m_form(node28_14, hasici).         const(hasici).
m_lemma(node28_14, hasic).         const(hasic).
m_tag(node28_14, NNMP1_____A____).         const(NNMP1_____A____).
w_token(node28_14, hasici).         const(hasici).
a_ord(node28_14, 7).         const(7).
a_parent_id(node28_14, a_plzensky69694_txt_001_p3s4W9).         const(a_plzensky69694_txt_001_p3s4W9).
hide(node28_14, hide).         const(hide).
%%%%%%%% node28_15 %%%%%%%%%%%%%%%%%%%
node(node28_15).
deepord(node28_15, 7).         const(7).
functor(node28_15, ADDR).         const(ADDR).
gram_sempos(node28_15, n_pron_def_pers).         const(n_pron_def_pers).
id(node28_15, T_plzensky69694_txt_001_p3s4a9).         const(T_plzensky69694_txt_001_p3s4a9).
nodetype(node28_15, complex).         const(complex).
t_lemma(node28_15, x_PersPron).         const(x_PersPron).
%%%%%%%% node28_16 %%%%%%%%%%%%%%%%%%%
node(node28_16).
deepord(node28_16, x7_1).         const(x7_1).
a_ref_type(node28_16, tree).         const(tree).
a_afun(node28_16, Obj).         const(Obj).
m_form(node28_16, ji).         const(ji).
m_lemma(node28_16, on_1___ona_).         const(on_1___ona_).
m_tag(node28_16, PPFS3__3_______).         const(PPFS3__3_______).
w_token(node28_16, ji).         const(ji).
a_ord(node28_16, 8).         const(8).
a_parent_id(node28_16, a_plzensky69694_txt_001_p3s4W9).         const(a_plzensky69694_txt_001_p3s4W9).
hide(node28_16, hide).         const(hide).
%%%%%%%% node28_17 %%%%%%%%%%%%%%%%%%%
node(node28_17).
deepord(node28_17, x8_1).         const(x8_1).
a_ref_type(node28_17, tree).         const(tree).
a_afun(node28_17, Pred).         const(Pred).
m_form(node28_17, poskytli).         const(poskytli).
m_lemma(node28_17, poskytnout__W).         const(poskytnout__W).
m_tag(node28_17, VpMP___XR_AA__1).         const(VpMP___XR_AA__1).
w_token(node28_17, poskytli).         const(poskytli).
a_ord(node28_17, 9).         const(9).
a_parent_id(node28_17, a_plzensky69694_txt_001_p3s4W6).         const(a_plzensky69694_txt_001_p3s4W6).
hide(node28_17, hide).         const(hide).
%%%%%%%% node28_18 %%%%%%%%%%%%%%%%%%%
node(node28_18).
deepord(node28_18, 10).         const(10).
functor(node28_18, CPHR).         const(CPHR).
gram_sempos(node28_18, n_denot).         const(n_denot).
id(node28_18, T_plzensky69694_txt_001_p3s4a10).         const(T_plzensky69694_txt_001_p3s4a10).
nodetype(node28_18, complex).         const(complex).
t_lemma(node28_18, pomoc).         const(pomoc).
%%%%%%%% node28_19 %%%%%%%%%%%%%%%%%%%
node(node28_19).
deepord(node28_19, 9).         const(9).
functor(node28_19, RSTR).         const(RSTR).
gram_sempos(node28_19, adj_denot).         const(adj_denot).
id(node28_19, T_plzensky69694_txt_001_p3s4a11).         const(T_plzensky69694_txt_001_p3s4a11).
nodetype(node28_19, complex).         const(complex).
t_lemma(node28_19, predlekarsky).         const(predlekarsky).
%%%%%%%% node28_20 %%%%%%%%%%%%%%%%%%%
node(node28_20).
deepord(node28_20, x9_1).         const(x9_1).
a_ref_type(node28_20, tree).         const(tree).
a_afun(node28_20, Atr).         const(Atr).
m_form(node28_20, predlekarskou).         const(predlekarskou).
m_lemma(node28_20, predlekarsky).         const(predlekarsky).
m_tag(node28_20, AAFS4____1A____).         const(AAFS4____1A____).
w_token(node28_20, predlekarskou).         const(predlekarskou).
a_ord(node28_20, 10).         const(10).
a_parent_id(node28_20, a_plzensky69694_txt_001_p3s4W11).         const(a_plzensky69694_txt_001_p3s4W11).
hide(node28_20, hide).         const(hide).
%%%%%%%% node28_21 %%%%%%%%%%%%%%%%%%%
node(node28_21).
deepord(node28_21, x10_1).         const(x10_1).
a_ref_type(node28_21, tree).         const(tree).
a_afun(node28_21, Obj).         const(Obj).
m_form(node28_21, pomoc).         const(pomoc).
m_lemma(node28_21, pomoc).         const(pomoc).
m_tag(node28_21, NNFS4_____A____).         const(NNFS4_____A____).
w_token(node28_21, pomoc).         const(pomoc).
w_no_space_after(node28_21, 1).         const(1).
a_ord(node28_21, 11).         const(11).
a_parent_id(node28_21, a_plzensky69694_txt_001_p3s4W9).         const(a_plzensky69694_txt_001_p3s4W9).
hide(node28_21, hide).         const(hide).
edge(node28_0, node28_1).
edge(node28_1, node28_2).
edge(node28_2, node28_3).
edge(node28_2, node28_4).
edge(node28_4, node28_5).
edge(node28_4, node28_6).
edge(node28_2, node28_7).
edge(node28_2, node28_8).
edge(node28_2, node28_9).
edge(node28_9, node28_10).
edge(node28_1, node28_11).
edge(node28_1, node28_12).
edge(node28_12, node28_13).
edge(node28_13, node28_14).
edge(node28_12, node28_15).
edge(node28_15, node28_16).
edge(node28_12, node28_17).
edge(node28_12, node28_18).
edge(node28_18, node28_19).
edge(node28_19, node28_20).
edge(node28_18, node28_21).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode byly zraneny dve osoby. 
tree_root(node29_0).
valid_root(node29_0).
%%%%%%%% node29_0 %%%%%%%%%%%%%%%%%%%
node(node29_0).
atree_rf(node29_0, a_a_plzensky69694_txt_001_p4s2).         const(a_a_plzensky69694_txt_001_p4s2).
deepord(node29_0, 0).         const(0).
id(node29_0, T_plzensky69694_txt_001_p4s2).         const(T_plzensky69694_txt_001_p4s2).
nodetype(node29_0, root).         const(root).
sentence(node29_0, Pri_nehode_byly_zraneny_dve_osoby__).         const(Pri_nehode_byly_zraneny_dve_osoby__).
%%%%%%%% node29_1 %%%%%%%%%%%%%%%%%%%
node(node29_1).
deepord(node29_1, 3).         const(3).
functor(node29_1, PRED).         const(PRED).
gram_sempos(node29_1, v).         const(v).
id(node29_1, T_plzensky69694_txt_001_p4s2a1).         const(T_plzensky69694_txt_001_p4s2a1).
nodetype(node29_1, complex).         const(complex).
t_lemma(node29_1, zranit).         const(zranit).
val_frame_rf(node29_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node29_2 %%%%%%%%%%%%%%%%%%%
node(node29_2).
deepord(node29_2, 1).         const(1).
functor(node29_2, ACT).         const(ACT).
id(node29_2, T_plzensky69694_txt_001_p4s2a7).         const(T_plzensky69694_txt_001_p4s2a7).
is_generated(node29_2, 1).         const(1).
nodetype(node29_2, qcomplex).         const(qcomplex).
t_lemma(node29_2, x_Gen).         const(x_Gen).
%%%%%%%% node29_3 %%%%%%%%%%%%%%%%%%%
node(node29_3).
deepord(node29_3, 2).         const(2).
functor(node29_3, TWHEN).         const(TWHEN).
gram_sempos(node29_3, n_denot).         const(n_denot).
id(node29_3, T_plzensky69694_txt_001_p4s2a3).         const(T_plzensky69694_txt_001_p4s2a3).
nodetype(node29_3, complex).         const(complex).
subfunctor(node29_3, basic).         const(basic).
t_lemma(node29_3, nehoda).         const(nehoda).
%%%%%%%% node29_4 %%%%%%%%%%%%%%%%%%%
node(node29_4).
deepord(node29_4, x2_1).         const(x2_1).
a_ref_type(node29_4, tree).         const(tree).
a_afun(node29_4, AuxP).         const(AuxP).
m_form(node29_4, Pri).         const(Pri).
m_lemma(node29_4, pri_1).         const(pri_1).
m_tag(node29_4, RR__6__________).         const(RR__6__________).
w_token(node29_4, Pri).         const(Pri).
a_ord(node29_4, 1).         const(1).
a_parent_id(node29_4, a_plzensky69694_txt_001_p4s2W4).         const(a_plzensky69694_txt_001_p4s2W4).
hide(node29_4, hide).         const(hide).
%%%%%%%% node29_5 %%%%%%%%%%%%%%%%%%%
node(node29_5).
deepord(node29_5, x2_2).         const(x2_2).
a_ref_type(node29_5, tree).         const(tree).
a_afun(node29_5, Adv).         const(Adv).
m_form(node29_5, nehode).         const(nehode).
m_lemma(node29_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node29_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node29_5, nehode).         const(nehode).
a_ord(node29_5, 2).         const(2).
a_parent_id(node29_5, a_plzensky69694_txt_001_p4s2W1).         const(a_plzensky69694_txt_001_p4s2W1).
hide(node29_5, hide).         const(hide).
%%%%%%%% node29_6 %%%%%%%%%%%%%%%%%%%
node(node29_6).
deepord(node29_6, x3_1).         const(x3_1).
a_ref_type(node29_6, tree).         const(tree).
a_afun(node29_6, AuxV).         const(AuxV).
m_form(node29_6, byly).         const(byly).
m_lemma(node29_6, byt).         const(byt).
m_tag(node29_6, VpTP___XR_AA___).         const(VpTP___XR_AA___).
w_token(node29_6, byly).         const(byly).
a_ord(node29_6, 3).         const(3).
a_parent_id(node29_6, a_plzensky69694_txt_001_p4s2W4).         const(a_plzensky69694_txt_001_p4s2W4).
hide(node29_6, hide).         const(hide).
%%%%%%%% node29_7 %%%%%%%%%%%%%%%%%%%
node(node29_7).
deepord(node29_7, x3_2).         const(x3_2).
a_ref_type(node29_7, tree).         const(tree).
a_afun(node29_7, Pred).         const(Pred).
m_form(node29_7, zraneny).         const(zraneny).
m_lemma(node29_7, zranit__W).         const(zranit__W).
m_tag(node29_7, VsTP___XX_AP___).         const(VsTP___XX_AP___).
w_token(node29_7, zraneny).         const(zraneny).
a_ord(node29_7, 4).         const(4).
a_parent_id(node29_7, a_plzensky69694_txt_001_p4s2).         const(a_plzensky69694_txt_001_p4s2).
hide(node29_7, hide).         const(hide).
%%%%%%%% node29_8 %%%%%%%%%%%%%%%%%%%
node(node29_8).
deepord(node29_8, 5).         const(5).
functor(node29_8, PAT).         const(PAT).
gram_sempos(node29_8, n_denot).         const(n_denot).
id(node29_8, T_plzensky69694_txt_001_p4s2a5).         const(T_plzensky69694_txt_001_p4s2a5).
nodetype(node29_8, complex).         const(complex).
t_lemma(node29_8, osoba).         const(osoba).
%%%%%%%% node29_9 %%%%%%%%%%%%%%%%%%%
node(node29_9).
deepord(node29_9, 4).         const(4).
functor(node29_9, RSTR).         const(RSTR).
gram_sempos(node29_9, adj_quant_def).         const(adj_quant_def).
id(node29_9, T_plzensky69694_txt_001_p4s2a6).         const(T_plzensky69694_txt_001_p4s2a6).
nodetype(node29_9, complex).         const(complex).
t_lemma(node29_9, dva).         const(dva).
%%%%%%%% node29_10 %%%%%%%%%%%%%%%%%%%
node(node29_10).
deepord(node29_10, x4_1).         const(x4_1).
a_ref_type(node29_10, tree).         const(tree).
a_afun(node29_10, Atr).         const(Atr).
m_form(node29_10, dve).         const(dve).
m_lemma(node29_10, dva_2).         const(dva_2).
m_tag(node29_10, ClHP1__________).         const(ClHP1__________).
w_token(node29_10, dve).         const(dve).
a_ord(node29_10, 5).         const(5).
a_parent_id(node29_10, a_plzensky69694_txt_001_p4s2W6).         const(a_plzensky69694_txt_001_p4s2W6).
hide(node29_10, hide).         const(hide).
%%%%%%%% node29_11 %%%%%%%%%%%%%%%%%%%
node(node29_11).
deepord(node29_11, x5_1).         const(x5_1).
a_ref_type(node29_11, tree).         const(tree).
a_afun(node29_11, Sb).         const(Sb).
m_form(node29_11, osoby).         const(osoby).
m_lemma(node29_11, osoba).         const(osoba).
m_tag(node29_11, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node29_11, osoby).         const(osoby).
w_no_space_after(node29_11, 1).         const(1).
a_ord(node29_11, 6).         const(6).
a_parent_id(node29_11, a_plzensky69694_txt_001_p4s2W4).         const(a_plzensky69694_txt_001_p4s2W4).
hide(node29_11, hide).         const(hide).
edge(node29_0, node29_1).
edge(node29_1, node29_2).
edge(node29_1, node29_3).
edge(node29_3, node29_4).
edge(node29_3, node29_5).
edge(node29_1, node29_6).
edge(node29_1, node29_7).
edge(node29_1, node29_8).
edge(node29_8, node29_9).
edge(node29_9, node29_10).
edge(node29_8, node29_11).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode byly zraneny dve osoby. 
tree_root(node30_0).
valid_root(node30_0).
%%%%%%%% node30_0 %%%%%%%%%%%%%%%%%%%
node(node30_0).
atree_rf(node30_0, a_a_plzensky69694_txt_001_p4s2).         const(a_a_plzensky69694_txt_001_p4s2).
deepord(node30_0, 0).         const(0).
id(node30_0, T_plzensky69694_txt_001_p4s2).         const(T_plzensky69694_txt_001_p4s2).
nodetype(node30_0, root).         const(root).
sentence(node30_0, Pri_nehode_byly_zraneny_dve_osoby__).         const(Pri_nehode_byly_zraneny_dve_osoby__).
%%%%%%%% node30_1 %%%%%%%%%%%%%%%%%%%
node(node30_1).
deepord(node30_1, 3).         const(3).
functor(node30_1, PRED).         const(PRED).
gram_sempos(node30_1, v).         const(v).
id(node30_1, T_plzensky69694_txt_001_p4s2a1).         const(T_plzensky69694_txt_001_p4s2a1).
nodetype(node30_1, complex).         const(complex).
t_lemma(node30_1, zranit).         const(zranit).
val_frame_rf(node30_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node30_2 %%%%%%%%%%%%%%%%%%%
node(node30_2).
deepord(node30_2, 1).         const(1).
functor(node30_2, ACT).         const(ACT).
id(node30_2, T_plzensky69694_txt_001_p4s2a7).         const(T_plzensky69694_txt_001_p4s2a7).
is_generated(node30_2, 1).         const(1).
nodetype(node30_2, qcomplex).         const(qcomplex).
t_lemma(node30_2, x_Gen).         const(x_Gen).
%%%%%%%% node30_3 %%%%%%%%%%%%%%%%%%%
node(node30_3).
deepord(node30_3, 2).         const(2).
functor(node30_3, TWHEN).         const(TWHEN).
gram_sempos(node30_3, n_denot).         const(n_denot).
id(node30_3, T_plzensky69694_txt_001_p4s2a3).         const(T_plzensky69694_txt_001_p4s2a3).
nodetype(node30_3, complex).         const(complex).
subfunctor(node30_3, basic).         const(basic).
t_lemma(node30_3, nehoda).         const(nehoda).
%%%%%%%% node30_4 %%%%%%%%%%%%%%%%%%%
node(node30_4).
deepord(node30_4, x2_1).         const(x2_1).
a_ref_type(node30_4, tree).         const(tree).
a_afun(node30_4, AuxP).         const(AuxP).
m_form(node30_4, Pri).         const(Pri).
m_lemma(node30_4, pri_1).         const(pri_1).
m_tag(node30_4, RR__6__________).         const(RR__6__________).
w_token(node30_4, Pri).         const(Pri).
a_ord(node30_4, 1).         const(1).
a_parent_id(node30_4, a_plzensky69694_txt_001_p4s2W4).         const(a_plzensky69694_txt_001_p4s2W4).
hide(node30_4, hide).         const(hide).
%%%%%%%% node30_5 %%%%%%%%%%%%%%%%%%%
node(node30_5).
deepord(node30_5, x2_2).         const(x2_2).
a_ref_type(node30_5, tree).         const(tree).
a_afun(node30_5, Adv).         const(Adv).
m_form(node30_5, nehode).         const(nehode).
m_lemma(node30_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node30_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node30_5, nehode).         const(nehode).
a_ord(node30_5, 2).         const(2).
a_parent_id(node30_5, a_plzensky69694_txt_001_p4s2W1).         const(a_plzensky69694_txt_001_p4s2W1).
hide(node30_5, hide).         const(hide).
%%%%%%%% node30_6 %%%%%%%%%%%%%%%%%%%
node(node30_6).
deepord(node30_6, x3_1).         const(x3_1).
a_ref_type(node30_6, tree).         const(tree).
a_afun(node30_6, AuxV).         const(AuxV).
m_form(node30_6, byly).         const(byly).
m_lemma(node30_6, byt).         const(byt).
m_tag(node30_6, VpTP___XR_AA___).         const(VpTP___XR_AA___).
w_token(node30_6, byly).         const(byly).
a_ord(node30_6, 3).         const(3).
a_parent_id(node30_6, a_plzensky69694_txt_001_p4s2W4).         const(a_plzensky69694_txt_001_p4s2W4).
hide(node30_6, hide).         const(hide).
%%%%%%%% node30_7 %%%%%%%%%%%%%%%%%%%
node(node30_7).
deepord(node30_7, x3_2).         const(x3_2).
a_ref_type(node30_7, tree).         const(tree).
a_afun(node30_7, Pred).         const(Pred).
m_form(node30_7, zraneny).         const(zraneny).
m_lemma(node30_7, zranit__W).         const(zranit__W).
m_tag(node30_7, VsTP___XX_AP___).         const(VsTP___XX_AP___).
w_token(node30_7, zraneny).         const(zraneny).
a_ord(node30_7, 4).         const(4).
a_parent_id(node30_7, a_plzensky69694_txt_001_p4s2).         const(a_plzensky69694_txt_001_p4s2).
hide(node30_7, hide).         const(hide).
%%%%%%%% node30_8 %%%%%%%%%%%%%%%%%%%
node(node30_8).
deepord(node30_8, 5).         const(5).
functor(node30_8, PAT).         const(PAT).
gram_sempos(node30_8, n_denot).         const(n_denot).
id(node30_8, T_plzensky69694_txt_001_p4s2a5).         const(T_plzensky69694_txt_001_p4s2a5).
nodetype(node30_8, complex).         const(complex).
t_lemma(node30_8, osoba).         const(osoba).
%%%%%%%% node30_9 %%%%%%%%%%%%%%%%%%%
node(node30_9).
deepord(node30_9, 4).         const(4).
functor(node30_9, RSTR).         const(RSTR).
gram_sempos(node30_9, adj_quant_def).         const(adj_quant_def).
id(node30_9, T_plzensky69694_txt_001_p4s2a6).         const(T_plzensky69694_txt_001_p4s2a6).
nodetype(node30_9, complex).         const(complex).
t_lemma(node30_9, dva).         const(dva).
%%%%%%%% node30_10 %%%%%%%%%%%%%%%%%%%
node(node30_10).
deepord(node30_10, x4_1).         const(x4_1).
a_ref_type(node30_10, tree).         const(tree).
a_afun(node30_10, Atr).         const(Atr).
m_form(node30_10, dve).         const(dve).
m_lemma(node30_10, dva_2).         const(dva_2).
m_tag(node30_10, ClHP1__________).         const(ClHP1__________).
w_token(node30_10, dve).         const(dve).
a_ord(node30_10, 5).         const(5).
a_parent_id(node30_10, a_plzensky69694_txt_001_p4s2W6).         const(a_plzensky69694_txt_001_p4s2W6).
hide(node30_10, hide).         const(hide).
%%%%%%%% node30_11 %%%%%%%%%%%%%%%%%%%
node(node30_11).
deepord(node30_11, x5_1).         const(x5_1).
a_ref_type(node30_11, tree).         const(tree).
a_afun(node30_11, Sb).         const(Sb).
m_form(node30_11, osoby).         const(osoby).
m_lemma(node30_11, osoba).         const(osoba).
m_tag(node30_11, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node30_11, osoby).         const(osoby).
w_no_space_after(node30_11, 1).         const(1).
a_ord(node30_11, 6).         const(6).
a_parent_id(node30_11, a_plzensky69694_txt_001_p4s2W4).         const(a_plzensky69694_txt_001_p4s2W4).
hide(node30_11, hide).         const(hide).
edge(node30_0, node30_1).
edge(node30_1, node30_2).
edge(node30_1, node30_3).
edge(node30_3, node30_4).
edge(node30_3, node30_5).
edge(node30_1, node30_6).
edge(node30_1, node30_7).
edge(node30_1, node30_8).
edge(node30_8, node30_9).
edge(node30_9, node30_10).
edge(node30_8, node30_11).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Ridic druheho vozidla nebyl zranen. 
tree_root(node31_0).
valid_root(node31_0).
%%%%%%%% node31_0 %%%%%%%%%%%%%%%%%%%
node(node31_0).
atree_rf(node31_0, a_a_plzensky71843_txt_001_p1s7).         const(a_a_plzensky71843_txt_001_p1s7).
deepord(node31_0, 0).         const(0).
id(node31_0, T_plzensky71843_txt_001_p1s7).         const(T_plzensky71843_txt_001_p1s7).
nodetype(node31_0, root).         const(root).
sentence(node31_0, Ridic_druheho_vozidla_nebyl_zranen__).         const(Ridic_druheho_vozidla_nebyl_zranen__).
%%%%%%%% node31_1 %%%%%%%%%%%%%%%%%%%
node(node31_1).
deepord(node31_1, 5).         const(5).
functor(node31_1, PRED).         const(PRED).
gram_sempos(node31_1, v).         const(v).
id(node31_1, T_plzensky71843_txt_001_p1s7a1).         const(T_plzensky71843_txt_001_p1s7a1).
nodetype(node31_1, complex).         const(complex).
t_lemma(node31_1, zranit).         const(zranit).
val_frame_rf(node31_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node31_2 %%%%%%%%%%%%%%%%%%%
node(node31_2).
deepord(node31_2, 1).         const(1).
functor(node31_2, ACT).         const(ACT).
id(node31_2, T_plzensky71843_txt_001_p1s7a5).         const(T_plzensky71843_txt_001_p1s7a5).
is_generated(node31_2, 1).         const(1).
nodetype(node31_2, qcomplex).         const(qcomplex).
t_lemma(node31_2, x_Gen).         const(x_Gen).
%%%%%%%% node31_3 %%%%%%%%%%%%%%%%%%%
node(node31_3).
deepord(node31_3, 2).         const(2).
functor(node31_3, PAT).         const(PAT).
gram_sempos(node31_3, n_denot).         const(n_denot).
id(node31_3, T_plzensky71843_txt_001_p1s7a2).         const(T_plzensky71843_txt_001_p1s7a2).
nodetype(node31_3, complex).         const(complex).
t_lemma(node31_3, ridic).         const(ridic).
%%%%%%%% node31_4 %%%%%%%%%%%%%%%%%%%
node(node31_4).
deepord(node31_4, x2_1).         const(x2_1).
a_ref_type(node31_4, tree).         const(tree).
a_afun(node31_4, Sb).         const(Sb).
m_form(node31_4, Ridic).         const(Ridic).
m_lemma(node31_4, ridic).         const(ridic).
m_tag(node31_4, NNMS1_____A____).         const(NNMS1_____A____).
w_token(node31_4, Ridic).         const(Ridic).
a_ord(node31_4, 1).         const(1).
a_parent_id(node31_4, a_plzensky71843_txt_001_p1s7W5).         const(a_plzensky71843_txt_001_p1s7W5).
hide(node31_4, hide).         const(hide).
%%%%%%%% node31_5 %%%%%%%%%%%%%%%%%%%
node(node31_5).
deepord(node31_5, 4).         const(4).
functor(node31_5, APP).         const(APP).
gram_sempos(node31_5, n_denot).         const(n_denot).
id(node31_5, T_plzensky71843_txt_001_p1s7a3).         const(T_plzensky71843_txt_001_p1s7a3).
nodetype(node31_5, complex).         const(complex).
t_lemma(node31_5, vozidlo).         const(vozidlo).
%%%%%%%% node31_6 %%%%%%%%%%%%%%%%%%%
node(node31_6).
deepord(node31_6, 3).         const(3).
functor(node31_6, RSTR).         const(RSTR).
gram_sempos(node31_6, adj_quant_def).         const(adj_quant_def).
id(node31_6, T_plzensky71843_txt_001_p1s7a4).         const(T_plzensky71843_txt_001_p1s7a4).
nodetype(node31_6, complex).         const(complex).
t_lemma(node31_6, dva).         const(dva).
%%%%%%%% node31_7 %%%%%%%%%%%%%%%%%%%
node(node31_7).
deepord(node31_7, x3_1).         const(x3_1).
a_ref_type(node31_7, tree).         const(tree).
a_afun(node31_7, Atr).         const(Atr).
m_form(node31_7, druheho).         const(druheho).
m_lemma(node31_7, druhy_1___jiny_).         const(druhy_1___jiny_).
m_tag(node31_7, AANS2____1A____).         const(AANS2____1A____).
w_token(node31_7, druheho).         const(druheho).
a_ord(node31_7, 2).         const(2).
a_parent_id(node31_7, a_plzensky71843_txt_001_p1s7W3).         const(a_plzensky71843_txt_001_p1s7W3).
hide(node31_7, hide).         const(hide).
%%%%%%%% node31_8 %%%%%%%%%%%%%%%%%%%
node(node31_8).
deepord(node31_8, x4_1).         const(x4_1).
a_ref_type(node31_8, tree).         const(tree).
a_afun(node31_8, Atr).         const(Atr).
m_form(node31_8, vozidla).         const(vozidla).
m_lemma(node31_8, vozidlo).         const(vozidlo).
m_tag(node31_8, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node31_8, vozidla).         const(vozidla).
a_ord(node31_8, 3).         const(3).
a_parent_id(node31_8, a_plzensky71843_txt_001_p1s7W1).         const(a_plzensky71843_txt_001_p1s7W1).
hide(node31_8, hide).         const(hide).
%%%%%%%% node31_9 %%%%%%%%%%%%%%%%%%%
node(node31_9).
deepord(node31_9, x5_1).         const(x5_1).
a_ref_type(node31_9, tree).         const(tree).
a_afun(node31_9, AuxV).         const(AuxV).
m_form(node31_9, nebyl).         const(nebyl).
m_lemma(node31_9, byt).         const(byt).
m_tag(node31_9, VpYS___XR_NA___).         const(VpYS___XR_NA___).
w_token(node31_9, nebyl).         const(nebyl).
a_ord(node31_9, 4).         const(4).
a_parent_id(node31_9, a_plzensky71843_txt_001_p1s7W5).         const(a_plzensky71843_txt_001_p1s7W5).
hide(node31_9, hide).         const(hide).
%%%%%%%% node31_10 %%%%%%%%%%%%%%%%%%%
node(node31_10).
deepord(node31_10, x5_2).         const(x5_2).
a_ref_type(node31_10, tree).         const(tree).
a_afun(node31_10, Pred).         const(Pred).
m_form(node31_10, zranen).         const(zranen).
m_lemma(node31_10, zranit__W).         const(zranit__W).
m_tag(node31_10, VsYS___XX_AP___).         const(VsYS___XX_AP___).
w_token(node31_10, zranen).         const(zranen).
w_no_space_after(node31_10, 1).         const(1).
a_ord(node31_10, 5).         const(5).
a_parent_id(node31_10, a_plzensky71843_txt_001_p1s7).         const(a_plzensky71843_txt_001_p1s7).
hide(node31_10, hide).         const(hide).
edge(node31_0, node31_1).
edge(node31_1, node31_2).
edge(node31_1, node31_3).
edge(node31_3, node31_4).
edge(node31_3, node31_5).
edge(node31_5, node31_6).
edge(node31_6, node31_7).
edge(node31_5, node31_8).
edge(node31_1, node31_9).
edge(node31_1, node31_10).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Ridic druheho vozidla nebyl zranen. 
tree_root(node32_0).
valid_root(node32_0).
%%%%%%%% node32_0 %%%%%%%%%%%%%%%%%%%
node(node32_0).
atree_rf(node32_0, a_a_plzensky71843_txt_001_p1s7).         const(a_a_plzensky71843_txt_001_p1s7).
deepord(node32_0, 0).         const(0).
id(node32_0, T_plzensky71843_txt_001_p1s7).         const(T_plzensky71843_txt_001_p1s7).
nodetype(node32_0, root).         const(root).
sentence(node32_0, Ridic_druheho_vozidla_nebyl_zranen__).         const(Ridic_druheho_vozidla_nebyl_zranen__).
%%%%%%%% node32_1 %%%%%%%%%%%%%%%%%%%
node(node32_1).
deepord(node32_1, 5).         const(5).
functor(node32_1, PRED).         const(PRED).
gram_sempos(node32_1, v).         const(v).
id(node32_1, T_plzensky71843_txt_001_p1s7a1).         const(T_plzensky71843_txt_001_p1s7a1).
nodetype(node32_1, complex).         const(complex).
t_lemma(node32_1, zranit).         const(zranit).
val_frame_rf(node32_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node32_2 %%%%%%%%%%%%%%%%%%%
node(node32_2).
deepord(node32_2, 1).         const(1).
functor(node32_2, ACT).         const(ACT).
id(node32_2, T_plzensky71843_txt_001_p1s7a5).         const(T_plzensky71843_txt_001_p1s7a5).
is_generated(node32_2, 1).         const(1).
nodetype(node32_2, qcomplex).         const(qcomplex).
t_lemma(node32_2, x_Gen).         const(x_Gen).
%%%%%%%% node32_3 %%%%%%%%%%%%%%%%%%%
node(node32_3).
deepord(node32_3, 2).         const(2).
functor(node32_3, PAT).         const(PAT).
gram_sempos(node32_3, n_denot).         const(n_denot).
id(node32_3, T_plzensky71843_txt_001_p1s7a2).         const(T_plzensky71843_txt_001_p1s7a2).
nodetype(node32_3, complex).         const(complex).
t_lemma(node32_3, ridic).         const(ridic).
%%%%%%%% node32_4 %%%%%%%%%%%%%%%%%%%
node(node32_4).
deepord(node32_4, x2_1).         const(x2_1).
a_ref_type(node32_4, tree).         const(tree).
a_afun(node32_4, Sb).         const(Sb).
m_form(node32_4, Ridic).         const(Ridic).
m_lemma(node32_4, ridic).         const(ridic).
m_tag(node32_4, NNMS1_____A____).         const(NNMS1_____A____).
w_token(node32_4, Ridic).         const(Ridic).
a_ord(node32_4, 1).         const(1).
a_parent_id(node32_4, a_plzensky71843_txt_001_p1s7W5).         const(a_plzensky71843_txt_001_p1s7W5).
hide(node32_4, hide).         const(hide).
%%%%%%%% node32_5 %%%%%%%%%%%%%%%%%%%
node(node32_5).
deepord(node32_5, 4).         const(4).
functor(node32_5, APP).         const(APP).
gram_sempos(node32_5, n_denot).         const(n_denot).
id(node32_5, T_plzensky71843_txt_001_p1s7a3).         const(T_plzensky71843_txt_001_p1s7a3).
nodetype(node32_5, complex).         const(complex).
t_lemma(node32_5, vozidlo).         const(vozidlo).
%%%%%%%% node32_6 %%%%%%%%%%%%%%%%%%%
node(node32_6).
deepord(node32_6, 3).         const(3).
functor(node32_6, RSTR).         const(RSTR).
gram_sempos(node32_6, adj_quant_def).         const(adj_quant_def).
id(node32_6, T_plzensky71843_txt_001_p1s7a4).         const(T_plzensky71843_txt_001_p1s7a4).
nodetype(node32_6, complex).         const(complex).
t_lemma(node32_6, dva).         const(dva).
%%%%%%%% node32_7 %%%%%%%%%%%%%%%%%%%
node(node32_7).
deepord(node32_7, x3_1).         const(x3_1).
a_ref_type(node32_7, tree).         const(tree).
a_afun(node32_7, Atr).         const(Atr).
m_form(node32_7, druheho).         const(druheho).
m_lemma(node32_7, druhy_1___jiny_).         const(druhy_1___jiny_).
m_tag(node32_7, AANS2____1A____).         const(AANS2____1A____).
w_token(node32_7, druheho).         const(druheho).
a_ord(node32_7, 2).         const(2).
a_parent_id(node32_7, a_plzensky71843_txt_001_p1s7W3).         const(a_plzensky71843_txt_001_p1s7W3).
hide(node32_7, hide).         const(hide).
%%%%%%%% node32_8 %%%%%%%%%%%%%%%%%%%
node(node32_8).
deepord(node32_8, x4_1).         const(x4_1).
a_ref_type(node32_8, tree).         const(tree).
a_afun(node32_8, Atr).         const(Atr).
m_form(node32_8, vozidla).         const(vozidla).
m_lemma(node32_8, vozidlo).         const(vozidlo).
m_tag(node32_8, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node32_8, vozidla).         const(vozidla).
a_ord(node32_8, 3).         const(3).
a_parent_id(node32_8, a_plzensky71843_txt_001_p1s7W1).         const(a_plzensky71843_txt_001_p1s7W1).
hide(node32_8, hide).         const(hide).
%%%%%%%% node32_9 %%%%%%%%%%%%%%%%%%%
node(node32_9).
deepord(node32_9, x5_1).         const(x5_1).
a_ref_type(node32_9, tree).         const(tree).
a_afun(node32_9, AuxV).         const(AuxV).
m_form(node32_9, nebyl).         const(nebyl).
m_lemma(node32_9, byt).         const(byt).
m_tag(node32_9, VpYS___XR_NA___).         const(VpYS___XR_NA___).
w_token(node32_9, nebyl).         const(nebyl).
a_ord(node32_9, 4).         const(4).
a_parent_id(node32_9, a_plzensky71843_txt_001_p1s7W5).         const(a_plzensky71843_txt_001_p1s7W5).
hide(node32_9, hide).         const(hide).
%%%%%%%% node32_10 %%%%%%%%%%%%%%%%%%%
node(node32_10).
deepord(node32_10, x5_2).         const(x5_2).
a_ref_type(node32_10, tree).         const(tree).
a_afun(node32_10, Pred).         const(Pred).
m_form(node32_10, zranen).         const(zranen).
m_lemma(node32_10, zranit__W).         const(zranit__W).
m_tag(node32_10, VsYS___XX_AP___).         const(VsYS___XX_AP___).
w_token(node32_10, zranen).         const(zranen).
w_no_space_after(node32_10, 1).         const(1).
a_ord(node32_10, 5).         const(5).
a_parent_id(node32_10, a_plzensky71843_txt_001_p1s7).         const(a_plzensky71843_txt_001_p1s7).
hide(node32_10, hide).         const(hide).
edge(node32_0, node32_1).
edge(node32_1, node32_2).
edge(node32_1, node32_3).
edge(node32_3, node32_4).
edge(node32_3, node32_5).
edge(node32_5, node32_6).
edge(node32_6, node32_7).
edge(node32_5, node32_8).
edge(node32_1, node32_9).
edge(node32_1, node32_10).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode byl zranen jeden ridic a do pece ho prevzala ZZS. 
tree_root(node33_0).
valid_root(node33_0).
%%%%%%%% node33_0 %%%%%%%%%%%%%%%%%%%
node(node33_0).
atree_rf(node33_0, a_a_plzensky58562_txt_001_p3s3).         const(a_a_plzensky58562_txt_001_p3s3).
deepord(node33_0, 0).         const(0).
id(node33_0, T_plzensky58562_txt_001_p3s3).         const(T_plzensky58562_txt_001_p3s3).
nodetype(node33_0, root).         const(root).
sentence(node33_0, Pri_nehode_byl_zranen_jeden_ridic_a_do_pece_ho_prevzala_ZZS__).         const(Pri_nehode_byl_zranen_jeden_ridic_a_do_pece_ho_prevzala_ZZS__).
%%%%%%%% node33_1 %%%%%%%%%%%%%%%%%%%
node(node33_1).
deepord(node33_1, 6).         const(6).
functor(node33_1, CONJ).         const(CONJ).
id(node33_1, T_plzensky58562_txt_001_p3s3a1).         const(T_plzensky58562_txt_001_p3s3a1).
nodetype(node33_1, coap).         const(coap).
t_lemma(node33_1, a).         const(a).
%%%%%%%% node33_2 %%%%%%%%%%%%%%%%%%%
node(node33_2).
deepord(node33_2, 3).         const(3).
functor(node33_2, PRED).         const(PRED).
gram_sempos(node33_2, v).         const(v).
id(node33_2, T_plzensky58562_txt_001_p3s3a2).         const(T_plzensky58562_txt_001_p3s3a2).
is_member(node33_2, 1).         const(1).
nodetype(node33_2, complex).         const(complex).
t_lemma(node33_2, zranit).         const(zranit).
val_frame_rf(node33_2, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node33_3 %%%%%%%%%%%%%%%%%%%
node(node33_3).
deepord(node33_3, 1).         const(1).
functor(node33_3, ACT).         const(ACT).
id(node33_3, T_plzensky58562_txt_001_p3s3a13).         const(T_plzensky58562_txt_001_p3s3a13).
is_generated(node33_3, 1).         const(1).
nodetype(node33_3, qcomplex).         const(qcomplex).
t_lemma(node33_3, x_Gen).         const(x_Gen).
%%%%%%%% node33_4 %%%%%%%%%%%%%%%%%%%
node(node33_4).
deepord(node33_4, 2).         const(2).
functor(node33_4, TWHEN).         const(TWHEN).
gram_sempos(node33_4, n_denot).         const(n_denot).
id(node33_4, T_plzensky58562_txt_001_p3s3a4).         const(T_plzensky58562_txt_001_p3s3a4).
nodetype(node33_4, complex).         const(complex).
subfunctor(node33_4, basic).         const(basic).
t_lemma(node33_4, nehoda).         const(nehoda).
%%%%%%%% node33_5 %%%%%%%%%%%%%%%%%%%
node(node33_5).
deepord(node33_5, x2_1).         const(x2_1).
a_ref_type(node33_5, tree).         const(tree).
a_afun(node33_5, AuxP).         const(AuxP).
m_form(node33_5, Pri).         const(Pri).
m_lemma(node33_5, pri_1).         const(pri_1).
m_tag(node33_5, RR__6__________).         const(RR__6__________).
w_token(node33_5, Pri).         const(Pri).
a_ord(node33_5, 1).         const(1).
a_parent_id(node33_5, a_plzensky58562_txt_001_p3s3W4).         const(a_plzensky58562_txt_001_p3s3W4).
hide(node33_5, hide).         const(hide).
%%%%%%%% node33_6 %%%%%%%%%%%%%%%%%%%
node(node33_6).
deepord(node33_6, x2_2).         const(x2_2).
a_ref_type(node33_6, tree).         const(tree).
a_afun(node33_6, Adv).         const(Adv).
m_form(node33_6, nehode).         const(nehode).
m_lemma(node33_6, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node33_6, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node33_6, nehode).         const(nehode).
a_ord(node33_6, 2).         const(2).
a_parent_id(node33_6, a_plzensky58562_txt_001_p3s3W1).         const(a_plzensky58562_txt_001_p3s3W1).
hide(node33_6, hide).         const(hide).
%%%%%%%% node33_7 %%%%%%%%%%%%%%%%%%%
node(node33_7).
deepord(node33_7, x3_1).         const(x3_1).
a_ref_type(node33_7, tree).         const(tree).
a_afun(node33_7, AuxV).         const(AuxV).
m_form(node33_7, byl).         const(byl).
m_lemma(node33_7, byt).         const(byt).
m_tag(node33_7, VpYS___XR_AA___).         const(VpYS___XR_AA___).
w_token(node33_7, byl).         const(byl).
a_ord(node33_7, 3).         const(3).
a_parent_id(node33_7, a_plzensky58562_txt_001_p3s3W4).         const(a_plzensky58562_txt_001_p3s3W4).
hide(node33_7, hide).         const(hide).
%%%%%%%% node33_8 %%%%%%%%%%%%%%%%%%%
node(node33_8).
deepord(node33_8, x3_2).         const(x3_2).
a_ref_type(node33_8, tree).         const(tree).
a_afun(node33_8, Pred).         const(Pred).
m_form(node33_8, zranen).         const(zranen).
m_lemma(node33_8, zranit__W).         const(zranit__W).
m_tag(node33_8, VsYS___XX_AP___).         const(VsYS___XX_AP___).
w_token(node33_8, zranen).         const(zranen).
a_ord(node33_8, 4).         const(4).
a_parent_id(node33_8, a_plzensky58562_txt_001_p3s3W7).         const(a_plzensky58562_txt_001_p3s3W7).
hide(node33_8, hide).         const(hide).
%%%%%%%% node33_9 %%%%%%%%%%%%%%%%%%%
node(node33_9).
deepord(node33_9, 5).         const(5).
functor(node33_9, PAT).         const(PAT).
gram_sempos(node33_9, n_denot).         const(n_denot).
id(node33_9, T_plzensky58562_txt_001_p3s3a6).         const(T_plzensky58562_txt_001_p3s3a6).
nodetype(node33_9, complex).         const(complex).
t_lemma(node33_9, ridic).         const(ridic).
%%%%%%%% node33_10 %%%%%%%%%%%%%%%%%%%
node(node33_10).
deepord(node33_10, 4).         const(4).
functor(node33_10, RSTR).         const(RSTR).
gram_sempos(node33_10, adj_quant_def).         const(adj_quant_def).
id(node33_10, T_plzensky58562_txt_001_p3s3a7).         const(T_plzensky58562_txt_001_p3s3a7).
nodetype(node33_10, complex).         const(complex).
t_lemma(node33_10, jeden).         const(jeden).
%%%%%%%% node33_11 %%%%%%%%%%%%%%%%%%%
node(node33_11).
deepord(node33_11, x4_1).         const(x4_1).
a_ref_type(node33_11, tree).         const(tree).
a_afun(node33_11, Atr).         const(Atr).
m_form(node33_11, jeden).         const(jeden).
m_lemma(node33_11, jeden_1).         const(jeden_1).
m_tag(node33_11, ClYS1__________).         const(ClYS1__________).
w_token(node33_11, jeden).         const(jeden).
a_ord(node33_11, 5).         const(5).
a_parent_id(node33_11, a_plzensky58562_txt_001_p3s3W6).         const(a_plzensky58562_txt_001_p3s3W6).
hide(node33_11, hide).         const(hide).
%%%%%%%% node33_12 %%%%%%%%%%%%%%%%%%%
node(node33_12).
deepord(node33_12, x5_1).         const(x5_1).
a_ref_type(node33_12, tree).         const(tree).
a_afun(node33_12, Sb).         const(Sb).
m_form(node33_12, ridic).         const(ridic).
m_lemma(node33_12, ridic).         const(ridic).
m_tag(node33_12, NNMS1_____A____).         const(NNMS1_____A____).
w_token(node33_12, ridic).         const(ridic).
a_ord(node33_12, 6).         const(6).
a_parent_id(node33_12, a_plzensky58562_txt_001_p3s3W4).         const(a_plzensky58562_txt_001_p3s3W4).
hide(node33_12, hide).         const(hide).
%%%%%%%% node33_13 %%%%%%%%%%%%%%%%%%%
node(node33_13).
deepord(node33_13, x6_1).         const(x6_1).
a_ref_type(node33_13, tree).         const(tree).
a_afun(node33_13, Coord).         const(Coord).
m_form(node33_13, a).         const(a).
m_lemma(node33_13, a_1).         const(a_1).
m_tag(node33_13, J______________).         const(J______________).
w_token(node33_13, a).         const(a).
a_ord(node33_13, 7).         const(7).
a_parent_id(node33_13, a_plzensky58562_txt_001_p3s3).         const(a_plzensky58562_txt_001_p3s3).
hide(node33_13, hide).         const(hide).
%%%%%%%% node33_14 %%%%%%%%%%%%%%%%%%%
node(node33_14).
deepord(node33_14, 9).         const(9).
functor(node33_14, PRED).         const(PRED).
gram_sempos(node33_14, v).         const(v).
id(node33_14, T_plzensky58562_txt_001_p3s3a8).         const(T_plzensky58562_txt_001_p3s3a8).
is_member(node33_14, 1).         const(1).
nodetype(node33_14, complex).         const(complex).
t_lemma(node33_14, prevzit).         const(prevzit).
val_frame_rf(node33_14, v_v_w5060f1).         const(v_v_w5060f1).
%%%%%%%% node33_15 %%%%%%%%%%%%%%%%%%%
node(node33_15).
deepord(node33_15, 7).         const(7).
functor(node33_15, DIR3).         const(DIR3).
gram_sempos(node33_15, n_denot).         const(n_denot).
id(node33_15, T_plzensky58562_txt_001_p3s3a10).         const(T_plzensky58562_txt_001_p3s3a10).
nodetype(node33_15, complex).         const(complex).
subfunctor(node33_15, basic).         const(basic).
t_lemma(node33_15, pece).         const(pece).
%%%%%%%% node33_16 %%%%%%%%%%%%%%%%%%%
node(node33_16).
deepord(node33_16, x7_1).         const(x7_1).
a_ref_type(node33_16, tree).         const(tree).
a_afun(node33_16, AuxP).         const(AuxP).
m_form(node33_16, do).         const(do).
m_lemma(node33_16, do_1).         const(do_1).
m_tag(node33_16, RR__2__________).         const(RR__2__________).
w_token(node33_16, do).         const(do).
a_ord(node33_16, 8).         const(8).
a_parent_id(node33_16, a_plzensky58562_txt_001_p3s3W11).         const(a_plzensky58562_txt_001_p3s3W11).
hide(node33_16, hide).         const(hide).
%%%%%%%% node33_17 %%%%%%%%%%%%%%%%%%%
node(node33_17).
deepord(node33_17, x7_2).         const(x7_2).
a_ref_type(node33_17, tree).         const(tree).
a_afun(node33_17, Adv).         const(Adv).
m_form(node33_17, pece).         const(pece).
m_lemma(node33_17, pece).         const(pece).
m_tag(node33_17, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node33_17, pece).         const(pece).
a_ord(node33_17, 9).         const(9).
a_parent_id(node33_17, a_plzensky58562_txt_001_p3s3W8).         const(a_plzensky58562_txt_001_p3s3W8).
hide(node33_17, hide).         const(hide).
%%%%%%%% node33_18 %%%%%%%%%%%%%%%%%%%
node(node33_18).
deepord(node33_18, 8).         const(8).
functor(node33_18, PAT).         const(PAT).
gram_sempos(node33_18, n_pron_def_pers).         const(n_pron_def_pers).
id(node33_18, T_plzensky58562_txt_001_p3s3a11).         const(T_plzensky58562_txt_001_p3s3a11).
nodetype(node33_18, complex).         const(complex).
t_lemma(node33_18, x_PersPron).         const(x_PersPron).
%%%%%%%% node33_19 %%%%%%%%%%%%%%%%%%%
node(node33_19).
deepord(node33_19, x8_1).         const(x8_1).
a_ref_type(node33_19, tree).         const(tree).
a_afun(node33_19, Obj).         const(Obj).
m_form(node33_19, ho).         const(ho).
m_lemma(node33_19, on_1).         const(on_1).
m_tag(node33_19, PHZS4__3_______).         const(PHZS4__3_______).
w_token(node33_19, ho).         const(ho).
a_ord(node33_19, 10).         const(10).
a_parent_id(node33_19, a_plzensky58562_txt_001_p3s3W11).         const(a_plzensky58562_txt_001_p3s3W11).
hide(node33_19, hide).         const(hide).
%%%%%%%% node33_20 %%%%%%%%%%%%%%%%%%%
node(node33_20).
deepord(node33_20, x9_1).         const(x9_1).
a_ref_type(node33_20, tree).         const(tree).
a_afun(node33_20, Pred).         const(Pred).
m_form(node33_20, prevzala).         const(prevzala).
m_lemma(node33_20, prevzit___pr__od_nekoho_vec__zodpovednost____).         const(prevzit___pr__od_nekoho_vec__zodpovednost____).
m_tag(node33_20, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node33_20, prevzala).         const(prevzala).
a_ord(node33_20, 11).         const(11).
a_parent_id(node33_20, a_plzensky58562_txt_001_p3s3W7).         const(a_plzensky58562_txt_001_p3s3W7).
hide(node33_20, hide).         const(hide).
%%%%%%%% node33_21 %%%%%%%%%%%%%%%%%%%
node(node33_21).
deepord(node33_21, 10).         const(10).
functor(node33_21, ACT).         const(ACT).
gram_sempos(node33_21, n_denot).         const(n_denot).
id(node33_21, T_plzensky58562_txt_001_p3s3a12).         const(T_plzensky58562_txt_001_p3s3a12).
nodetype(node33_21, complex).         const(complex).
t_lemma(node33_21, Zzs).         const(Zzs).
%%%%%%%% node33_22 %%%%%%%%%%%%%%%%%%%
node(node33_22).
deepord(node33_22, x10_1).         const(x10_1).
a_ref_type(node33_22, tree).         const(tree).
a_afun(node33_22, Sb).         const(Sb).
m_form(node33_22, ZZS).         const(ZZS).
m_lemma(node33_22, Zzs).         const(Zzs).
m_tag(node33_22, NNFXX_____A____).         const(NNFXX_____A____).
w_token(node33_22, ZZS).         const(ZZS).
w_no_space_after(node33_22, 1).         const(1).
a_ord(node33_22, 12).         const(12).
a_parent_id(node33_22, a_plzensky58562_txt_001_p3s3W11).         const(a_plzensky58562_txt_001_p3s3W11).
hide(node33_22, hide).         const(hide).
edge(node33_0, node33_1).
edge(node33_1, node33_2).
edge(node33_2, node33_3).
edge(node33_2, node33_4).
edge(node33_4, node33_5).
edge(node33_4, node33_6).
edge(node33_2, node33_7).
edge(node33_2, node33_8).
edge(node33_2, node33_9).
edge(node33_9, node33_10).
edge(node33_10, node33_11).
edge(node33_9, node33_12).
edge(node33_1, node33_13).
edge(node33_1, node33_14).
edge(node33_14, node33_15).
edge(node33_15, node33_16).
edge(node33_15, node33_17).
edge(node33_14, node33_18).
edge(node33_18, node33_19).
edge(node33_14, node33_20).
edge(node33_14, node33_21).
edge(node33_21, node33_22).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode byl zranen jeden ridic a do pece ho prevzala ZZS. 
tree_root(node34_0).
valid_root(node34_0).
%%%%%%%% node34_0 %%%%%%%%%%%%%%%%%%%
node(node34_0).
atree_rf(node34_0, a_a_plzensky58562_txt_001_p3s3).         const(a_a_plzensky58562_txt_001_p3s3).
deepord(node34_0, 0).         const(0).
id(node34_0, T_plzensky58562_txt_001_p3s3).         const(T_plzensky58562_txt_001_p3s3).
nodetype(node34_0, root).         const(root).
sentence(node34_0, Pri_nehode_byl_zranen_jeden_ridic_a_do_pece_ho_prevzala_ZZS__).         const(Pri_nehode_byl_zranen_jeden_ridic_a_do_pece_ho_prevzala_ZZS__).
%%%%%%%% node34_1 %%%%%%%%%%%%%%%%%%%
node(node34_1).
deepord(node34_1, 6).         const(6).
functor(node34_1, CONJ).         const(CONJ).
id(node34_1, T_plzensky58562_txt_001_p3s3a1).         const(T_plzensky58562_txt_001_p3s3a1).
nodetype(node34_1, coap).         const(coap).
t_lemma(node34_1, a).         const(a).
%%%%%%%% node34_2 %%%%%%%%%%%%%%%%%%%
node(node34_2).
deepord(node34_2, 3).         const(3).
functor(node34_2, PRED).         const(PRED).
gram_sempos(node34_2, v).         const(v).
id(node34_2, T_plzensky58562_txt_001_p3s3a2).         const(T_plzensky58562_txt_001_p3s3a2).
is_member(node34_2, 1).         const(1).
nodetype(node34_2, complex).         const(complex).
t_lemma(node34_2, zranit).         const(zranit).
val_frame_rf(node34_2, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node34_3 %%%%%%%%%%%%%%%%%%%
node(node34_3).
deepord(node34_3, 1).         const(1).
functor(node34_3, ACT).         const(ACT).
id(node34_3, T_plzensky58562_txt_001_p3s3a13).         const(T_plzensky58562_txt_001_p3s3a13).
is_generated(node34_3, 1).         const(1).
nodetype(node34_3, qcomplex).         const(qcomplex).
t_lemma(node34_3, x_Gen).         const(x_Gen).
%%%%%%%% node34_4 %%%%%%%%%%%%%%%%%%%
node(node34_4).
deepord(node34_4, 2).         const(2).
functor(node34_4, TWHEN).         const(TWHEN).
gram_sempos(node34_4, n_denot).         const(n_denot).
id(node34_4, T_plzensky58562_txt_001_p3s3a4).         const(T_plzensky58562_txt_001_p3s3a4).
nodetype(node34_4, complex).         const(complex).
subfunctor(node34_4, basic).         const(basic).
t_lemma(node34_4, nehoda).         const(nehoda).
%%%%%%%% node34_5 %%%%%%%%%%%%%%%%%%%
node(node34_5).
deepord(node34_5, x2_1).         const(x2_1).
a_ref_type(node34_5, tree).         const(tree).
a_afun(node34_5, AuxP).         const(AuxP).
m_form(node34_5, Pri).         const(Pri).
m_lemma(node34_5, pri_1).         const(pri_1).
m_tag(node34_5, RR__6__________).         const(RR__6__________).
w_token(node34_5, Pri).         const(Pri).
a_ord(node34_5, 1).         const(1).
a_parent_id(node34_5, a_plzensky58562_txt_001_p3s3W4).         const(a_plzensky58562_txt_001_p3s3W4).
hide(node34_5, hide).         const(hide).
%%%%%%%% node34_6 %%%%%%%%%%%%%%%%%%%
node(node34_6).
deepord(node34_6, x2_2).         const(x2_2).
a_ref_type(node34_6, tree).         const(tree).
a_afun(node34_6, Adv).         const(Adv).
m_form(node34_6, nehode).         const(nehode).
m_lemma(node34_6, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node34_6, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node34_6, nehode).         const(nehode).
a_ord(node34_6, 2).         const(2).
a_parent_id(node34_6, a_plzensky58562_txt_001_p3s3W1).         const(a_plzensky58562_txt_001_p3s3W1).
hide(node34_6, hide).         const(hide).
%%%%%%%% node34_7 %%%%%%%%%%%%%%%%%%%
node(node34_7).
deepord(node34_7, x3_1).         const(x3_1).
a_ref_type(node34_7, tree).         const(tree).
a_afun(node34_7, AuxV).         const(AuxV).
m_form(node34_7, byl).         const(byl).
m_lemma(node34_7, byt).         const(byt).
m_tag(node34_7, VpYS___XR_AA___).         const(VpYS___XR_AA___).
w_token(node34_7, byl).         const(byl).
a_ord(node34_7, 3).         const(3).
a_parent_id(node34_7, a_plzensky58562_txt_001_p3s3W4).         const(a_plzensky58562_txt_001_p3s3W4).
hide(node34_7, hide).         const(hide).
%%%%%%%% node34_8 %%%%%%%%%%%%%%%%%%%
node(node34_8).
deepord(node34_8, x3_2).         const(x3_2).
a_ref_type(node34_8, tree).         const(tree).
a_afun(node34_8, Pred).         const(Pred).
m_form(node34_8, zranen).         const(zranen).
m_lemma(node34_8, zranit__W).         const(zranit__W).
m_tag(node34_8, VsYS___XX_AP___).         const(VsYS___XX_AP___).
w_token(node34_8, zranen).         const(zranen).
a_ord(node34_8, 4).         const(4).
a_parent_id(node34_8, a_plzensky58562_txt_001_p3s3W7).         const(a_plzensky58562_txt_001_p3s3W7).
hide(node34_8, hide).         const(hide).
%%%%%%%% node34_9 %%%%%%%%%%%%%%%%%%%
node(node34_9).
deepord(node34_9, 5).         const(5).
functor(node34_9, PAT).         const(PAT).
gram_sempos(node34_9, n_denot).         const(n_denot).
id(node34_9, T_plzensky58562_txt_001_p3s3a6).         const(T_plzensky58562_txt_001_p3s3a6).
nodetype(node34_9, complex).         const(complex).
t_lemma(node34_9, ridic).         const(ridic).
%%%%%%%% node34_10 %%%%%%%%%%%%%%%%%%%
node(node34_10).
deepord(node34_10, 4).         const(4).
functor(node34_10, RSTR).         const(RSTR).
gram_sempos(node34_10, adj_quant_def).         const(adj_quant_def).
id(node34_10, T_plzensky58562_txt_001_p3s3a7).         const(T_plzensky58562_txt_001_p3s3a7).
nodetype(node34_10, complex).         const(complex).
t_lemma(node34_10, jeden).         const(jeden).
%%%%%%%% node34_11 %%%%%%%%%%%%%%%%%%%
node(node34_11).
deepord(node34_11, x4_1).         const(x4_1).
a_ref_type(node34_11, tree).         const(tree).
a_afun(node34_11, Atr).         const(Atr).
m_form(node34_11, jeden).         const(jeden).
m_lemma(node34_11, jeden_1).         const(jeden_1).
m_tag(node34_11, ClYS1__________).         const(ClYS1__________).
w_token(node34_11, jeden).         const(jeden).
a_ord(node34_11, 5).         const(5).
a_parent_id(node34_11, a_plzensky58562_txt_001_p3s3W6).         const(a_plzensky58562_txt_001_p3s3W6).
hide(node34_11, hide).         const(hide).
%%%%%%%% node34_12 %%%%%%%%%%%%%%%%%%%
node(node34_12).
deepord(node34_12, x5_1).         const(x5_1).
a_ref_type(node34_12, tree).         const(tree).
a_afun(node34_12, Sb).         const(Sb).
m_form(node34_12, ridic).         const(ridic).
m_lemma(node34_12, ridic).         const(ridic).
m_tag(node34_12, NNMS1_____A____).         const(NNMS1_____A____).
w_token(node34_12, ridic).         const(ridic).
a_ord(node34_12, 6).         const(6).
a_parent_id(node34_12, a_plzensky58562_txt_001_p3s3W4).         const(a_plzensky58562_txt_001_p3s3W4).
hide(node34_12, hide).         const(hide).
%%%%%%%% node34_13 %%%%%%%%%%%%%%%%%%%
node(node34_13).
deepord(node34_13, x6_1).         const(x6_1).
a_ref_type(node34_13, tree).         const(tree).
a_afun(node34_13, Coord).         const(Coord).
m_form(node34_13, a).         const(a).
m_lemma(node34_13, a_1).         const(a_1).
m_tag(node34_13, J______________).         const(J______________).
w_token(node34_13, a).         const(a).
a_ord(node34_13, 7).         const(7).
a_parent_id(node34_13, a_plzensky58562_txt_001_p3s3).         const(a_plzensky58562_txt_001_p3s3).
hide(node34_13, hide).         const(hide).
%%%%%%%% node34_14 %%%%%%%%%%%%%%%%%%%
node(node34_14).
deepord(node34_14, 9).         const(9).
functor(node34_14, PRED).         const(PRED).
gram_sempos(node34_14, v).         const(v).
id(node34_14, T_plzensky58562_txt_001_p3s3a8).         const(T_plzensky58562_txt_001_p3s3a8).
is_member(node34_14, 1).         const(1).
nodetype(node34_14, complex).         const(complex).
t_lemma(node34_14, prevzit).         const(prevzit).
val_frame_rf(node34_14, v_v_w5060f1).         const(v_v_w5060f1).
%%%%%%%% node34_15 %%%%%%%%%%%%%%%%%%%
node(node34_15).
deepord(node34_15, 7).         const(7).
functor(node34_15, DIR3).         const(DIR3).
gram_sempos(node34_15, n_denot).         const(n_denot).
id(node34_15, T_plzensky58562_txt_001_p3s3a10).         const(T_plzensky58562_txt_001_p3s3a10).
nodetype(node34_15, complex).         const(complex).
subfunctor(node34_15, basic).         const(basic).
t_lemma(node34_15, pece).         const(pece).
%%%%%%%% node34_16 %%%%%%%%%%%%%%%%%%%
node(node34_16).
deepord(node34_16, x7_1).         const(x7_1).
a_ref_type(node34_16, tree).         const(tree).
a_afun(node34_16, AuxP).         const(AuxP).
m_form(node34_16, do).         const(do).
m_lemma(node34_16, do_1).         const(do_1).
m_tag(node34_16, RR__2__________).         const(RR__2__________).
w_token(node34_16, do).         const(do).
a_ord(node34_16, 8).         const(8).
a_parent_id(node34_16, a_plzensky58562_txt_001_p3s3W11).         const(a_plzensky58562_txt_001_p3s3W11).
hide(node34_16, hide).         const(hide).
%%%%%%%% node34_17 %%%%%%%%%%%%%%%%%%%
node(node34_17).
deepord(node34_17, x7_2).         const(x7_2).
a_ref_type(node34_17, tree).         const(tree).
a_afun(node34_17, Adv).         const(Adv).
m_form(node34_17, pece).         const(pece).
m_lemma(node34_17, pece).         const(pece).
m_tag(node34_17, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node34_17, pece).         const(pece).
a_ord(node34_17, 9).         const(9).
a_parent_id(node34_17, a_plzensky58562_txt_001_p3s3W8).         const(a_plzensky58562_txt_001_p3s3W8).
hide(node34_17, hide).         const(hide).
%%%%%%%% node34_18 %%%%%%%%%%%%%%%%%%%
node(node34_18).
deepord(node34_18, 8).         const(8).
functor(node34_18, PAT).         const(PAT).
gram_sempos(node34_18, n_pron_def_pers).         const(n_pron_def_pers).
id(node34_18, T_plzensky58562_txt_001_p3s3a11).         const(T_plzensky58562_txt_001_p3s3a11).
nodetype(node34_18, complex).         const(complex).
t_lemma(node34_18, x_PersPron).         const(x_PersPron).
%%%%%%%% node34_19 %%%%%%%%%%%%%%%%%%%
node(node34_19).
deepord(node34_19, x8_1).         const(x8_1).
a_ref_type(node34_19, tree).         const(tree).
a_afun(node34_19, Obj).         const(Obj).
m_form(node34_19, ho).         const(ho).
m_lemma(node34_19, on_1).         const(on_1).
m_tag(node34_19, PHZS4__3_______).         const(PHZS4__3_______).
w_token(node34_19, ho).         const(ho).
a_ord(node34_19, 10).         const(10).
a_parent_id(node34_19, a_plzensky58562_txt_001_p3s3W11).         const(a_plzensky58562_txt_001_p3s3W11).
hide(node34_19, hide).         const(hide).
%%%%%%%% node34_20 %%%%%%%%%%%%%%%%%%%
node(node34_20).
deepord(node34_20, x9_1).         const(x9_1).
a_ref_type(node34_20, tree).         const(tree).
a_afun(node34_20, Pred).         const(Pred).
m_form(node34_20, prevzala).         const(prevzala).
m_lemma(node34_20, prevzit___pr__od_nekoho_vec__zodpovednost____).         const(prevzit___pr__od_nekoho_vec__zodpovednost____).
m_tag(node34_20, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node34_20, prevzala).         const(prevzala).
a_ord(node34_20, 11).         const(11).
a_parent_id(node34_20, a_plzensky58562_txt_001_p3s3W7).         const(a_plzensky58562_txt_001_p3s3W7).
hide(node34_20, hide).         const(hide).
%%%%%%%% node34_21 %%%%%%%%%%%%%%%%%%%
node(node34_21).
deepord(node34_21, 10).         const(10).
functor(node34_21, ACT).         const(ACT).
gram_sempos(node34_21, n_denot).         const(n_denot).
id(node34_21, T_plzensky58562_txt_001_p3s3a12).         const(T_plzensky58562_txt_001_p3s3a12).
nodetype(node34_21, complex).         const(complex).
t_lemma(node34_21, Zzs).         const(Zzs).
%%%%%%%% node34_22 %%%%%%%%%%%%%%%%%%%
node(node34_22).
deepord(node34_22, x10_1).         const(x10_1).
a_ref_type(node34_22, tree).         const(tree).
a_afun(node34_22, Sb).         const(Sb).
m_form(node34_22, ZZS).         const(ZZS).
m_lemma(node34_22, Zzs).         const(Zzs).
m_tag(node34_22, NNFXX_____A____).         const(NNFXX_____A____).
w_token(node34_22, ZZS).         const(ZZS).
w_no_space_after(node34_22, 1).         const(1).
a_ord(node34_22, 12).         const(12).
a_parent_id(node34_22, a_plzensky58562_txt_001_p3s3W11).         const(a_plzensky58562_txt_001_p3s3W11).
hide(node34_22, hide).         const(hide).
edge(node34_0, node34_1).
edge(node34_1, node34_2).
edge(node34_2, node34_3).
edge(node34_2, node34_4).
edge(node34_4, node34_5).
edge(node34_4, node34_6).
edge(node34_2, node34_7).
edge(node34_2, node34_8).
edge(node34_2, node34_9).
edge(node34_9, node34_10).
edge(node34_10, node34_11).
edge(node34_9, node34_12).
edge(node34_1, node34_13).
edge(node34_1, node34_14).
edge(node34_14, node34_15).
edge(node34_15, node34_16).
edge(node34_15, node34_17).
edge(node34_14, node34_18).
edge(node34_18, node34_19).
edge(node34_14, node34_20).
edge(node34_14, node34_21).
edge(node34_21, node34_22).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode byla zranena jedna osoba. 
tree_root(node35_0).
valid_root(node35_0).
%%%%%%%% node35_0 %%%%%%%%%%%%%%%%%%%
node(node35_0).
atree_rf(node35_0, a_a_plzensky72261_txt_001_p14s2).         const(a_a_plzensky72261_txt_001_p14s2).
deepord(node35_0, 0).         const(0).
id(node35_0, T_plzensky72261_txt_001_p14s2).         const(T_plzensky72261_txt_001_p14s2).
nodetype(node35_0, root).         const(root).
sentence(node35_0, Pri_nehode_byla_zranena_jedna_osoba__).         const(Pri_nehode_byla_zranena_jedna_osoba__).
%%%%%%%% node35_1 %%%%%%%%%%%%%%%%%%%
node(node35_1).
deepord(node35_1, 3).         const(3).
functor(node35_1, PRED).         const(PRED).
gram_sempos(node35_1, v).         const(v).
id(node35_1, T_plzensky72261_txt_001_p14s2a1).         const(T_plzensky72261_txt_001_p14s2a1).
nodetype(node35_1, complex).         const(complex).
t_lemma(node35_1, zranit).         const(zranit).
val_frame_rf(node35_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node35_2 %%%%%%%%%%%%%%%%%%%
node(node35_2).
deepord(node35_2, 1).         const(1).
functor(node35_2, ACT).         const(ACT).
id(node35_2, T_plzensky72261_txt_001_p14s2a7).         const(T_plzensky72261_txt_001_p14s2a7).
is_generated(node35_2, 1).         const(1).
nodetype(node35_2, qcomplex).         const(qcomplex).
t_lemma(node35_2, x_Gen).         const(x_Gen).
%%%%%%%% node35_3 %%%%%%%%%%%%%%%%%%%
node(node35_3).
deepord(node35_3, 2).         const(2).
functor(node35_3, TWHEN).         const(TWHEN).
gram_sempos(node35_3, n_denot).         const(n_denot).
id(node35_3, T_plzensky72261_txt_001_p14s2a3).         const(T_plzensky72261_txt_001_p14s2a3).
nodetype(node35_3, complex).         const(complex).
subfunctor(node35_3, basic).         const(basic).
t_lemma(node35_3, nehoda).         const(nehoda).
%%%%%%%% node35_4 %%%%%%%%%%%%%%%%%%%
node(node35_4).
deepord(node35_4, x2_1).         const(x2_1).
a_ref_type(node35_4, tree).         const(tree).
a_afun(node35_4, AuxP).         const(AuxP).
m_form(node35_4, Pri).         const(Pri).
m_lemma(node35_4, pri_1).         const(pri_1).
m_tag(node35_4, RR__6__________).         const(RR__6__________).
w_token(node35_4, Pri).         const(Pri).
a_ord(node35_4, 1).         const(1).
a_parent_id(node35_4, a_plzensky72261_txt_001_p14s2W4).         const(a_plzensky72261_txt_001_p14s2W4).
hide(node35_4, hide).         const(hide).
%%%%%%%% node35_5 %%%%%%%%%%%%%%%%%%%
node(node35_5).
deepord(node35_5, x2_2).         const(x2_2).
a_ref_type(node35_5, tree).         const(tree).
a_afun(node35_5, Adv).         const(Adv).
m_form(node35_5, nehode).         const(nehode).
m_lemma(node35_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node35_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node35_5, nehode).         const(nehode).
a_ord(node35_5, 2).         const(2).
a_parent_id(node35_5, a_plzensky72261_txt_001_p14s2W1).         const(a_plzensky72261_txt_001_p14s2W1).
hide(node35_5, hide).         const(hide).
%%%%%%%% node35_6 %%%%%%%%%%%%%%%%%%%
node(node35_6).
deepord(node35_6, x3_1).         const(x3_1).
a_ref_type(node35_6, tree).         const(tree).
a_afun(node35_6, AuxV).         const(AuxV).
m_form(node35_6, byla).         const(byla).
m_lemma(node35_6, byt).         const(byt).
m_tag(node35_6, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node35_6, byla).         const(byla).
a_ord(node35_6, 3).         const(3).
a_parent_id(node35_6, a_plzensky72261_txt_001_p14s2W4).         const(a_plzensky72261_txt_001_p14s2W4).
hide(node35_6, hide).         const(hide).
%%%%%%%% node35_7 %%%%%%%%%%%%%%%%%%%
node(node35_7).
deepord(node35_7, x3_2).         const(x3_2).
a_ref_type(node35_7, tree).         const(tree).
a_afun(node35_7, Pred).         const(Pred).
m_form(node35_7, zranena).         const(zranena).
m_lemma(node35_7, zranit__W).         const(zranit__W).
m_tag(node35_7, VsQW___XX_AP___).         const(VsQW___XX_AP___).
w_token(node35_7, zranena).         const(zranena).
a_ord(node35_7, 4).         const(4).
a_parent_id(node35_7, a_plzensky72261_txt_001_p14s2).         const(a_plzensky72261_txt_001_p14s2).
hide(node35_7, hide).         const(hide).
%%%%%%%% node35_8 %%%%%%%%%%%%%%%%%%%
node(node35_8).
deepord(node35_8, 5).         const(5).
functor(node35_8, PAT).         const(PAT).
gram_sempos(node35_8, n_denot).         const(n_denot).
id(node35_8, T_plzensky72261_txt_001_p14s2a5).         const(T_plzensky72261_txt_001_p14s2a5).
nodetype(node35_8, complex).         const(complex).
t_lemma(node35_8, osoba).         const(osoba).
%%%%%%%% node35_9 %%%%%%%%%%%%%%%%%%%
node(node35_9).
deepord(node35_9, 4).         const(4).
functor(node35_9, RSTR).         const(RSTR).
gram_sempos(node35_9, adj_quant_def).         const(adj_quant_def).
id(node35_9, T_plzensky72261_txt_001_p14s2a6).         const(T_plzensky72261_txt_001_p14s2a6).
nodetype(node35_9, complex).         const(complex).
t_lemma(node35_9, jeden).         const(jeden).
%%%%%%%% node35_10 %%%%%%%%%%%%%%%%%%%
node(node35_10).
deepord(node35_10, x4_1).         const(x4_1).
a_ref_type(node35_10, tree).         const(tree).
a_afun(node35_10, Atr).         const(Atr).
m_form(node35_10, jedna).         const(jedna).
m_lemma(node35_10, jeden_1).         const(jeden_1).
m_tag(node35_10, ClFS1__________).         const(ClFS1__________).
w_token(node35_10, jedna).         const(jedna).
a_ord(node35_10, 5).         const(5).
a_parent_id(node35_10, a_plzensky72261_txt_001_p14s2W6).         const(a_plzensky72261_txt_001_p14s2W6).
hide(node35_10, hide).         const(hide).
%%%%%%%% node35_11 %%%%%%%%%%%%%%%%%%%
node(node35_11).
deepord(node35_11, x5_1).         const(x5_1).
a_ref_type(node35_11, tree).         const(tree).
a_afun(node35_11, Sb).         const(Sb).
m_form(node35_11, osoba).         const(osoba).
m_lemma(node35_11, osoba).         const(osoba).
m_tag(node35_11, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node35_11, osoba).         const(osoba).
w_no_space_after(node35_11, 1).         const(1).
a_ord(node35_11, 6).         const(6).
a_parent_id(node35_11, a_plzensky72261_txt_001_p14s2W4).         const(a_plzensky72261_txt_001_p14s2W4).
hide(node35_11, hide).         const(hide).
edge(node35_0, node35_1).
edge(node35_1, node35_2).
edge(node35_1, node35_3).
edge(node35_3, node35_4).
edge(node35_3, node35_5).
edge(node35_1, node35_6).
edge(node35_1, node35_7).
edge(node35_1, node35_8).
edge(node35_8, node35_9).
edge(node35_9, node35_10).
edge(node35_8, node35_11).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode byla zranena jedna osoba. 
tree_root(node36_0).
valid_root(node36_0).
%%%%%%%% node36_0 %%%%%%%%%%%%%%%%%%%
node(node36_0).
atree_rf(node36_0, a_a_plzensky72261_txt_001_p14s2).         const(a_a_plzensky72261_txt_001_p14s2).
deepord(node36_0, 0).         const(0).
id(node36_0, T_plzensky72261_txt_001_p14s2).         const(T_plzensky72261_txt_001_p14s2).
nodetype(node36_0, root).         const(root).
sentence(node36_0, Pri_nehode_byla_zranena_jedna_osoba__).         const(Pri_nehode_byla_zranena_jedna_osoba__).
%%%%%%%% node36_1 %%%%%%%%%%%%%%%%%%%
node(node36_1).
deepord(node36_1, 3).         const(3).
functor(node36_1, PRED).         const(PRED).
gram_sempos(node36_1, v).         const(v).
id(node36_1, T_plzensky72261_txt_001_p14s2a1).         const(T_plzensky72261_txt_001_p14s2a1).
nodetype(node36_1, complex).         const(complex).
t_lemma(node36_1, zranit).         const(zranit).
val_frame_rf(node36_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node36_2 %%%%%%%%%%%%%%%%%%%
node(node36_2).
deepord(node36_2, 1).         const(1).
functor(node36_2, ACT).         const(ACT).
id(node36_2, T_plzensky72261_txt_001_p14s2a7).         const(T_plzensky72261_txt_001_p14s2a7).
is_generated(node36_2, 1).         const(1).
nodetype(node36_2, qcomplex).         const(qcomplex).
t_lemma(node36_2, x_Gen).         const(x_Gen).
%%%%%%%% node36_3 %%%%%%%%%%%%%%%%%%%
node(node36_3).
deepord(node36_3, 2).         const(2).
functor(node36_3, TWHEN).         const(TWHEN).
gram_sempos(node36_3, n_denot).         const(n_denot).
id(node36_3, T_plzensky72261_txt_001_p14s2a3).         const(T_plzensky72261_txt_001_p14s2a3).
nodetype(node36_3, complex).         const(complex).
subfunctor(node36_3, basic).         const(basic).
t_lemma(node36_3, nehoda).         const(nehoda).
%%%%%%%% node36_4 %%%%%%%%%%%%%%%%%%%
node(node36_4).
deepord(node36_4, x2_1).         const(x2_1).
a_ref_type(node36_4, tree).         const(tree).
a_afun(node36_4, AuxP).         const(AuxP).
m_form(node36_4, Pri).         const(Pri).
m_lemma(node36_4, pri_1).         const(pri_1).
m_tag(node36_4, RR__6__________).         const(RR__6__________).
w_token(node36_4, Pri).         const(Pri).
a_ord(node36_4, 1).         const(1).
a_parent_id(node36_4, a_plzensky72261_txt_001_p14s2W4).         const(a_plzensky72261_txt_001_p14s2W4).
hide(node36_4, hide).         const(hide).
%%%%%%%% node36_5 %%%%%%%%%%%%%%%%%%%
node(node36_5).
deepord(node36_5, x2_2).         const(x2_2).
a_ref_type(node36_5, tree).         const(tree).
a_afun(node36_5, Adv).         const(Adv).
m_form(node36_5, nehode).         const(nehode).
m_lemma(node36_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node36_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node36_5, nehode).         const(nehode).
a_ord(node36_5, 2).         const(2).
a_parent_id(node36_5, a_plzensky72261_txt_001_p14s2W1).         const(a_plzensky72261_txt_001_p14s2W1).
hide(node36_5, hide).         const(hide).
%%%%%%%% node36_6 %%%%%%%%%%%%%%%%%%%
node(node36_6).
deepord(node36_6, x3_1).         const(x3_1).
a_ref_type(node36_6, tree).         const(tree).
a_afun(node36_6, AuxV).         const(AuxV).
m_form(node36_6, byla).         const(byla).
m_lemma(node36_6, byt).         const(byt).
m_tag(node36_6, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node36_6, byla).         const(byla).
a_ord(node36_6, 3).         const(3).
a_parent_id(node36_6, a_plzensky72261_txt_001_p14s2W4).         const(a_plzensky72261_txt_001_p14s2W4).
hide(node36_6, hide).         const(hide).
%%%%%%%% node36_7 %%%%%%%%%%%%%%%%%%%
node(node36_7).
deepord(node36_7, x3_2).         const(x3_2).
a_ref_type(node36_7, tree).         const(tree).
a_afun(node36_7, Pred).         const(Pred).
m_form(node36_7, zranena).         const(zranena).
m_lemma(node36_7, zranit__W).         const(zranit__W).
m_tag(node36_7, VsQW___XX_AP___).         const(VsQW___XX_AP___).
w_token(node36_7, zranena).         const(zranena).
a_ord(node36_7, 4).         const(4).
a_parent_id(node36_7, a_plzensky72261_txt_001_p14s2).         const(a_plzensky72261_txt_001_p14s2).
hide(node36_7, hide).         const(hide).
%%%%%%%% node36_8 %%%%%%%%%%%%%%%%%%%
node(node36_8).
deepord(node36_8, 5).         const(5).
functor(node36_8, PAT).         const(PAT).
gram_sempos(node36_8, n_denot).         const(n_denot).
id(node36_8, T_plzensky72261_txt_001_p14s2a5).         const(T_plzensky72261_txt_001_p14s2a5).
nodetype(node36_8, complex).         const(complex).
t_lemma(node36_8, osoba).         const(osoba).
%%%%%%%% node36_9 %%%%%%%%%%%%%%%%%%%
node(node36_9).
deepord(node36_9, 4).         const(4).
functor(node36_9, RSTR).         const(RSTR).
gram_sempos(node36_9, adj_quant_def).         const(adj_quant_def).
id(node36_9, T_plzensky72261_txt_001_p14s2a6).         const(T_plzensky72261_txt_001_p14s2a6).
nodetype(node36_9, complex).         const(complex).
t_lemma(node36_9, jeden).         const(jeden).
%%%%%%%% node36_10 %%%%%%%%%%%%%%%%%%%
node(node36_10).
deepord(node36_10, x4_1).         const(x4_1).
a_ref_type(node36_10, tree).         const(tree).
a_afun(node36_10, Atr).         const(Atr).
m_form(node36_10, jedna).         const(jedna).
m_lemma(node36_10, jeden_1).         const(jeden_1).
m_tag(node36_10, ClFS1__________).         const(ClFS1__________).
w_token(node36_10, jedna).         const(jedna).
a_ord(node36_10, 5).         const(5).
a_parent_id(node36_10, a_plzensky72261_txt_001_p14s2W6).         const(a_plzensky72261_txt_001_p14s2W6).
hide(node36_10, hide).         const(hide).
%%%%%%%% node36_11 %%%%%%%%%%%%%%%%%%%
node(node36_11).
deepord(node36_11, x5_1).         const(x5_1).
a_ref_type(node36_11, tree).         const(tree).
a_afun(node36_11, Sb).         const(Sb).
m_form(node36_11, osoba).         const(osoba).
m_lemma(node36_11, osoba).         const(osoba).
m_tag(node36_11, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node36_11, osoba).         const(osoba).
w_no_space_after(node36_11, 1).         const(1).
a_ord(node36_11, 6).         const(6).
a_parent_id(node36_11, a_plzensky72261_txt_001_p14s2W4).         const(a_plzensky72261_txt_001_p14s2W4).
hide(node36_11, hide).         const(hide).
edge(node36_0, node36_1).
edge(node36_1, node36_2).
edge(node36_1, node36_3).
edge(node36_3, node36_4).
edge(node36_3, node36_5).
edge(node36_1, node36_6).
edge(node36_1, node36_7).
edge(node36_1, node36_8).
edge(node36_8, node36_9).
edge(node36_9, node36_10).
edge(node36_8, node36_11).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Nikdo nebyl zranen. 
tree_root(node37_0).
valid_root(node37_0).
%%%%%%%% node37_0 %%%%%%%%%%%%%%%%%%%
node(node37_0).
atree_rf(node37_0, a_a_plzensky72261_txt_001_p15s5).         const(a_a_plzensky72261_txt_001_p15s5).
deepord(node37_0, 0).         const(0).
id(node37_0, T_plzensky72261_txt_001_p15s5).         const(T_plzensky72261_txt_001_p15s5).
nodetype(node37_0, root).         const(root).
sentence(node37_0, Nikdo_nebyl_zranen__).         const(Nikdo_nebyl_zranen__).
%%%%%%%% node37_1 %%%%%%%%%%%%%%%%%%%
node(node37_1).
deepord(node37_1, 3).         const(3).
functor(node37_1, PRED).         const(PRED).
gram_sempos(node37_1, v).         const(v).
id(node37_1, T_plzensky72261_txt_001_p15s5a1).         const(T_plzensky72261_txt_001_p15s5a1).
nodetype(node37_1, complex).         const(complex).
t_lemma(node37_1, zranit).         const(zranit).
val_frame_rf(node37_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node37_2 %%%%%%%%%%%%%%%%%%%
node(node37_2).
deepord(node37_2, 1).         const(1).
functor(node37_2, ACT).         const(ACT).
id(node37_2, T_plzensky72261_txt_001_p15s5a3).         const(T_plzensky72261_txt_001_p15s5a3).
is_generated(node37_2, 1).         const(1).
nodetype(node37_2, qcomplex).         const(qcomplex).
t_lemma(node37_2, x_Gen).         const(x_Gen).
%%%%%%%% node37_3 %%%%%%%%%%%%%%%%%%%
node(node37_3).
deepord(node37_3, 2).         const(2).
functor(node37_3, PAT).         const(PAT).
gram_sempos(node37_3, n_pron_indef).         const(n_pron_indef).
id(node37_3, T_plzensky72261_txt_001_p15s5a2).         const(T_plzensky72261_txt_001_p15s5a2).
nodetype(node37_3, complex).         const(complex).
t_lemma(node37_3, kdo).         const(kdo).
%%%%%%%% node37_4 %%%%%%%%%%%%%%%%%%%
node(node37_4).
deepord(node37_4, x2_1).         const(x2_1).
a_ref_type(node37_4, tree).         const(tree).
a_afun(node37_4, Sb).         const(Sb).
m_form(node37_4, Nikdo).         const(Nikdo).
m_lemma(node37_4, nikdo).         const(nikdo).
m_tag(node37_4, PWM_1__________).         const(PWM_1__________).
w_token(node37_4, Nikdo).         const(Nikdo).
a_ord(node37_4, 1).         const(1).
a_parent_id(node37_4, a_plzensky72261_txt_001_p15s5W3).         const(a_plzensky72261_txt_001_p15s5W3).
hide(node37_4, hide).         const(hide).
%%%%%%%% node37_5 %%%%%%%%%%%%%%%%%%%
node(node37_5).
deepord(node37_5, x3_1).         const(x3_1).
a_ref_type(node37_5, tree).         const(tree).
a_afun(node37_5, AuxV).         const(AuxV).
m_form(node37_5, nebyl).         const(nebyl).
m_lemma(node37_5, byt).         const(byt).
m_tag(node37_5, VpYS___XR_NA___).         const(VpYS___XR_NA___).
w_token(node37_5, nebyl).         const(nebyl).
a_ord(node37_5, 2).         const(2).
a_parent_id(node37_5, a_plzensky72261_txt_001_p15s5W3).         const(a_plzensky72261_txt_001_p15s5W3).
hide(node37_5, hide).         const(hide).
%%%%%%%% node37_6 %%%%%%%%%%%%%%%%%%%
node(node37_6).
deepord(node37_6, x3_2).         const(x3_2).
a_ref_type(node37_6, tree).         const(tree).
a_afun(node37_6, Pred).         const(Pred).
m_form(node37_6, zranen).         const(zranen).
m_lemma(node37_6, zranit__W).         const(zranit__W).
m_tag(node37_6, VsYS___XX_AP___).         const(VsYS___XX_AP___).
w_token(node37_6, zranen).         const(zranen).
w_no_space_after(node37_6, 1).         const(1).
a_ord(node37_6, 3).         const(3).
a_parent_id(node37_6, a_plzensky72261_txt_001_p15s5).         const(a_plzensky72261_txt_001_p15s5).
hide(node37_6, hide).         const(hide).
edge(node37_0, node37_1).
edge(node37_1, node37_2).
edge(node37_1, node37_3).
edge(node37_3, node37_4).
edge(node37_1, node37_5).
edge(node37_1, node37_6).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Nikdo nebyl zranen. 
tree_root(node38_0).
valid_root(node38_0).
%%%%%%%% node38_0 %%%%%%%%%%%%%%%%%%%
node(node38_0).
atree_rf(node38_0, a_a_plzensky72261_txt_001_p15s5).         const(a_a_plzensky72261_txt_001_p15s5).
deepord(node38_0, 0).         const(0).
id(node38_0, T_plzensky72261_txt_001_p15s5).         const(T_plzensky72261_txt_001_p15s5).
nodetype(node38_0, root).         const(root).
sentence(node38_0, Nikdo_nebyl_zranen__).         const(Nikdo_nebyl_zranen__).
%%%%%%%% node38_1 %%%%%%%%%%%%%%%%%%%
node(node38_1).
deepord(node38_1, 3).         const(3).
functor(node38_1, PRED).         const(PRED).
gram_sempos(node38_1, v).         const(v).
id(node38_1, T_plzensky72261_txt_001_p15s5a1).         const(T_plzensky72261_txt_001_p15s5a1).
nodetype(node38_1, complex).         const(complex).
t_lemma(node38_1, zranit).         const(zranit).
val_frame_rf(node38_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node38_2 %%%%%%%%%%%%%%%%%%%
node(node38_2).
deepord(node38_2, 1).         const(1).
functor(node38_2, ACT).         const(ACT).
id(node38_2, T_plzensky72261_txt_001_p15s5a3).         const(T_plzensky72261_txt_001_p15s5a3).
is_generated(node38_2, 1).         const(1).
nodetype(node38_2, qcomplex).         const(qcomplex).
t_lemma(node38_2, x_Gen).         const(x_Gen).
%%%%%%%% node38_3 %%%%%%%%%%%%%%%%%%%
node(node38_3).
deepord(node38_3, 2).         const(2).
functor(node38_3, PAT).         const(PAT).
gram_sempos(node38_3, n_pron_indef).         const(n_pron_indef).
id(node38_3, T_plzensky72261_txt_001_p15s5a2).         const(T_plzensky72261_txt_001_p15s5a2).
nodetype(node38_3, complex).         const(complex).
t_lemma(node38_3, kdo).         const(kdo).
%%%%%%%% node38_4 %%%%%%%%%%%%%%%%%%%
node(node38_4).
deepord(node38_4, x2_1).         const(x2_1).
a_ref_type(node38_4, tree).         const(tree).
a_afun(node38_4, Sb).         const(Sb).
m_form(node38_4, Nikdo).         const(Nikdo).
m_lemma(node38_4, nikdo).         const(nikdo).
m_tag(node38_4, PWM_1__________).         const(PWM_1__________).
w_token(node38_4, Nikdo).         const(Nikdo).
a_ord(node38_4, 1).         const(1).
a_parent_id(node38_4, a_plzensky72261_txt_001_p15s5W3).         const(a_plzensky72261_txt_001_p15s5W3).
hide(node38_4, hide).         const(hide).
%%%%%%%% node38_5 %%%%%%%%%%%%%%%%%%%
node(node38_5).
deepord(node38_5, x3_1).         const(x3_1).
a_ref_type(node38_5, tree).         const(tree).
a_afun(node38_5, AuxV).         const(AuxV).
m_form(node38_5, nebyl).         const(nebyl).
m_lemma(node38_5, byt).         const(byt).
m_tag(node38_5, VpYS___XR_NA___).         const(VpYS___XR_NA___).
w_token(node38_5, nebyl).         const(nebyl).
a_ord(node38_5, 2).         const(2).
a_parent_id(node38_5, a_plzensky72261_txt_001_p15s5W3).         const(a_plzensky72261_txt_001_p15s5W3).
hide(node38_5, hide).         const(hide).
%%%%%%%% node38_6 %%%%%%%%%%%%%%%%%%%
node(node38_6).
deepord(node38_6, x3_2).         const(x3_2).
a_ref_type(node38_6, tree).         const(tree).
a_afun(node38_6, Pred).         const(Pred).
m_form(node38_6, zranen).         const(zranen).
m_lemma(node38_6, zranit__W).         const(zranit__W).
m_tag(node38_6, VsYS___XX_AP___).         const(VsYS___XX_AP___).
w_token(node38_6, zranen).         const(zranen).
w_no_space_after(node38_6, 1).         const(1).
a_ord(node38_6, 3).         const(3).
a_parent_id(node38_6, a_plzensky72261_txt_001_p15s5).         const(a_plzensky72261_txt_001_p15s5).
hide(node38_6, hide).         const(hide).
edge(node38_0, node38_1).
edge(node38_1, node38_2).
edge(node38_1, node38_3).
edge(node38_3, node38_4).
edge(node38_1, node38_5).
edge(node38_1, node38_6).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Z peti zranenych osob byly dve osoby zraneny tezce a tri lehce. 
tree_root(node39_0).
valid_root(node39_0).
%%%%%%%% node39_0 %%%%%%%%%%%%%%%%%%%
node(node39_0).
atree_rf(node39_0, a_a_plzensky71760_txt_001_p2s7).         const(a_a_plzensky71760_txt_001_p2s7).
deepord(node39_0, 0).         const(0).
id(node39_0, T_plzensky71760_txt_001_p2s7).         const(T_plzensky71760_txt_001_p2s7).
nodetype(node39_0, root).         const(root).
sentence(node39_0, Z_peti_zranenych_osob_byly_dve_osoby_zraneny_tezce_a_tri_lehce__).         const(Z_peti_zranenych_osob_byly_dve_osoby_zraneny_tezce_a_tri_lehce__).
%%%%%%%% node39_1 %%%%%%%%%%%%%%%%%%%
node(node39_1).
deepord(node39_1, 9).         const(9).
functor(node39_1, CONJ).         const(CONJ).
id(node39_1, T_plzensky71760_txt_001_p2s7a1).         const(T_plzensky71760_txt_001_p2s7a1).
nodetype(node39_1, coap).         const(coap).
t_lemma(node39_1, a).         const(a).
%%%%%%%% node39_2 %%%%%%%%%%%%%%%%%%%
node(node39_2).
deepord(node39_2, 7).         const(7).
functor(node39_2, PRED).         const(PRED).
gram_sempos(node39_2, v).         const(v).
id(node39_2, T_plzensky71760_txt_001_p2s7a2).         const(T_plzensky71760_txt_001_p2s7a2).
is_member(node39_2, 1).         const(1).
nodetype(node39_2, complex).         const(complex).
t_lemma(node39_2, zranit).         const(zranit).
val_frame_rf(node39_2, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node39_3 %%%%%%%%%%%%%%%%%%%
node(node39_3).
deepord(node39_3, 1).         const(1).
functor(node39_3, ACT).         const(ACT).
id(node39_3, T_plzensky71760_txt_001_p2s7a13).         const(T_plzensky71760_txt_001_p2s7a13).
is_generated(node39_3, 1).         const(1).
nodetype(node39_3, qcomplex).         const(qcomplex).
t_lemma(node39_3, x_Gen).         const(x_Gen).
%%%%%%%% node39_4 %%%%%%%%%%%%%%%%%%%
node(node39_4).
deepord(node39_4, 4).         const(4).
functor(node39_4, DIR1).         const(DIR1).
gram_sempos(node39_4, n_denot).         const(n_denot).
id(node39_4, T_plzensky71760_txt_001_p2s7a4).         const(T_plzensky71760_txt_001_p2s7a4).
nodetype(node39_4, complex).         const(complex).
subfunctor(node39_4, basic).         const(basic).
t_lemma(node39_4, osoba).         const(osoba).
%%%%%%%% node39_5 %%%%%%%%%%%%%%%%%%%
node(node39_5).
deepord(node39_5, 2).         const(2).
functor(node39_5, RSTR).         const(RSTR).
gram_sempos(node39_5, adj_quant_def).         const(adj_quant_def).
id(node39_5, T_plzensky71760_txt_001_p2s7a5).         const(T_plzensky71760_txt_001_p2s7a5).
nodetype(node39_5, complex).         const(complex).
t_lemma(node39_5, pet).         const(pet).
%%%%%%%% node39_6 %%%%%%%%%%%%%%%%%%%
node(node39_6).
deepord(node39_6, x2_1).         const(x2_1).
a_ref_type(node39_6, tree).         const(tree).
a_afun(node39_6, Atr).         const(Atr).
m_form(node39_6, peti).         const(peti).
m_lemma(node39_6, pet_1_5).         const(pet_1_5).
m_tag(node39_6, Cn_P2__________).         const(Cn_P2__________).
w_token(node39_6, peti).         const(peti).
a_ord(node39_6, 2).         const(2).
a_parent_id(node39_6, a_plzensky71760_txt_001_p2s7W4).         const(a_plzensky71760_txt_001_p2s7W4).
hide(node39_6, hide).         const(hide).
%%%%%%%% node39_7 %%%%%%%%%%%%%%%%%%%
node(node39_7).
deepord(node39_7, 3).         const(3).
functor(node39_7, RSTR).         const(RSTR).
gram_sempos(node39_7, adj_denot).         const(adj_denot).
id(node39_7, T_plzensky71760_txt_001_p2s7a6).         const(T_plzensky71760_txt_001_p2s7a6).
nodetype(node39_7, complex).         const(complex).
t_lemma(node39_7, zraneny).         const(zraneny).
%%%%%%%% node39_8 %%%%%%%%%%%%%%%%%%%
node(node39_8).
deepord(node39_8, x3_1).         const(x3_1).
a_ref_type(node39_8, tree).         const(tree).
a_afun(node39_8, Atr).         const(Atr).
m_form(node39_8, zranenych).         const(zranenych).
m_lemma(node39_8, zraneny____3it_).         const(zraneny____3it_).
m_tag(node39_8, AAFP2____1A____).         const(AAFP2____1A____).
w_token(node39_8, zranenych).         const(zranenych).
a_ord(node39_8, 3).         const(3).
a_parent_id(node39_8, a_plzensky71760_txt_001_p2s7W4).         const(a_plzensky71760_txt_001_p2s7W4).
hide(node39_8, hide).         const(hide).
%%%%%%%% node39_9 %%%%%%%%%%%%%%%%%%%
node(node39_9).
deepord(node39_9, x4_1).         const(x4_1).
a_ref_type(node39_9, tree).         const(tree).
a_afun(node39_9, AuxP).         const(AuxP).
m_form(node39_9, Z).         const(Z).
m_lemma(node39_9, z_1).         const(z_1).
m_tag(node39_9, RR__2__________).         const(RR__2__________).
w_token(node39_9, Z).         const(Z).
a_ord(node39_9, 1).         const(1).
a_parent_id(node39_9, a_plzensky71760_txt_001_p2s7W8).         const(a_plzensky71760_txt_001_p2s7W8).
hide(node39_9, hide).         const(hide).
%%%%%%%% node39_10 %%%%%%%%%%%%%%%%%%%
node(node39_10).
deepord(node39_10, x4_2).         const(x4_2).
a_ref_type(node39_10, tree).         const(tree).
a_afun(node39_10, Adv).         const(Adv).
m_form(node39_10, osob).         const(osob).
m_lemma(node39_10, osoba).         const(osoba).
m_tag(node39_10, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node39_10, osob).         const(osob).
a_ord(node39_10, 4).         const(4).
a_parent_id(node39_10, a_plzensky71760_txt_001_p2s7W1).         const(a_plzensky71760_txt_001_p2s7W1).
hide(node39_10, hide).         const(hide).
%%%%%%%% node39_11 %%%%%%%%%%%%%%%%%%%
node(node39_11).
deepord(node39_11, 6).         const(6).
functor(node39_11, PAT).         const(PAT).
gram_sempos(node39_11, n_denot).         const(n_denot).
id(node39_11, T_plzensky71760_txt_001_p2s7a8).         const(T_plzensky71760_txt_001_p2s7a8).
nodetype(node39_11, complex).         const(complex).
t_lemma(node39_11, osoba).         const(osoba).
%%%%%%%% node39_12 %%%%%%%%%%%%%%%%%%%
node(node39_12).
deepord(node39_12, 5).         const(5).
functor(node39_12, RSTR).         const(RSTR).
gram_sempos(node39_12, adj_quant_def).         const(adj_quant_def).
id(node39_12, T_plzensky71760_txt_001_p2s7a9).         const(T_plzensky71760_txt_001_p2s7a9).
nodetype(node39_12, complex).         const(complex).
t_lemma(node39_12, dva).         const(dva).
%%%%%%%% node39_13 %%%%%%%%%%%%%%%%%%%
node(node39_13).
deepord(node39_13, x5_1).         const(x5_1).
a_ref_type(node39_13, tree).         const(tree).
a_afun(node39_13, Atr).         const(Atr).
m_form(node39_13, dve).         const(dve).
m_lemma(node39_13, dva_2).         const(dva_2).
m_tag(node39_13, ClHP1__________).         const(ClHP1__________).
w_token(node39_13, dve).         const(dve).
a_ord(node39_13, 6).         const(6).
a_parent_id(node39_13, a_plzensky71760_txt_001_p2s7W7).         const(a_plzensky71760_txt_001_p2s7W7).
hide(node39_13, hide).         const(hide).
%%%%%%%% node39_14 %%%%%%%%%%%%%%%%%%%
node(node39_14).
deepord(node39_14, x6_1).         const(x6_1).
a_ref_type(node39_14, tree).         const(tree).
a_afun(node39_14, Sb).         const(Sb).
m_form(node39_14, osoby).         const(osoby).
m_lemma(node39_14, osoba).         const(osoba).
m_tag(node39_14, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node39_14, osoby).         const(osoby).
a_ord(node39_14, 7).         const(7).
a_parent_id(node39_14, a_plzensky71760_txt_001_p2s7W8).         const(a_plzensky71760_txt_001_p2s7W8).
hide(node39_14, hide).         const(hide).
%%%%%%%% node39_15 %%%%%%%%%%%%%%%%%%%
node(node39_15).
deepord(node39_15, x7_1).         const(x7_1).
a_ref_type(node39_15, tree).         const(tree).
a_afun(node39_15, AuxV).         const(AuxV).
m_form(node39_15, byly).         const(byly).
m_lemma(node39_15, byt).         const(byt).
m_tag(node39_15, VpTP___XR_AA___).         const(VpTP___XR_AA___).
w_token(node39_15, byly).         const(byly).
a_ord(node39_15, 5).         const(5).
a_parent_id(node39_15, a_plzensky71760_txt_001_p2s7W8).         const(a_plzensky71760_txt_001_p2s7W8).
hide(node39_15, hide).         const(hide).
%%%%%%%% node39_16 %%%%%%%%%%%%%%%%%%%
node(node39_16).
deepord(node39_16, x7_2).         const(x7_2).
a_ref_type(node39_16, tree).         const(tree).
a_afun(node39_16, Pred).         const(Pred).
m_form(node39_16, zraneny).         const(zraneny).
m_lemma(node39_16, zranit__W).         const(zranit__W).
m_tag(node39_16, VsTP___XX_AP___).         const(VsTP___XX_AP___).
w_token(node39_16, zraneny).         const(zraneny).
a_ord(node39_16, 8).         const(8).
a_parent_id(node39_16, a_plzensky71760_txt_001_p2s7W10).         const(a_plzensky71760_txt_001_p2s7W10).
hide(node39_16, hide).         const(hide).
%%%%%%%% node39_17 %%%%%%%%%%%%%%%%%%%
node(node39_17).
deepord(node39_17, 8).         const(8).
functor(node39_17, MANN).         const(MANN).
gram_sempos(node39_17, adj_denot).         const(adj_denot).
id(node39_17, T_plzensky71760_txt_001_p2s7a10).         const(T_plzensky71760_txt_001_p2s7a10).
nodetype(node39_17, complex).         const(complex).
t_lemma(node39_17, tezky).         const(tezky).
%%%%%%%% node39_18 %%%%%%%%%%%%%%%%%%%
node(node39_18).
deepord(node39_18, x8_1).         const(x8_1).
a_ref_type(node39_18, tree).         const(tree).
a_afun(node39_18, Adv).         const(Adv).
m_form(node39_18, tezce).         const(tezce).
m_lemma(node39_18, tezce).         const(tezce).
m_tag(node39_18, Dg_______1A____).         const(Dg_______1A____).
w_token(node39_18, tezce).         const(tezce).
a_ord(node39_18, 9).         const(9).
a_parent_id(node39_18, a_plzensky71760_txt_001_p2s7W8).         const(a_plzensky71760_txt_001_p2s7W8).
hide(node39_18, hide).         const(hide).
%%%%%%%% node39_19 %%%%%%%%%%%%%%%%%%%
node(node39_19).
deepord(node39_19, x9_1).         const(x9_1).
a_ref_type(node39_19, tree).         const(tree).
a_afun(node39_19, Coord).         const(Coord).
m_form(node39_19, a).         const(a).
m_lemma(node39_19, a_1).         const(a_1).
m_tag(node39_19, J______________).         const(J______________).
w_token(node39_19, a).         const(a).
a_ord(node39_19, 10).         const(10).
a_parent_id(node39_19, a_plzensky71760_txt_001_p2s7).         const(a_plzensky71760_txt_001_p2s7).
hide(node39_19, hide).         const(hide).
%%%%%%%% node39_20 %%%%%%%%%%%%%%%%%%%
node(node39_20).
deepord(node39_20, 10).         const(10).
functor(node39_20, RSTR).         const(RSTR).
gram_sempos(node39_20, adj_quant_def).         const(adj_quant_def).
id(node39_20, T_plzensky71760_txt_001_p2s7a11).         const(T_plzensky71760_txt_001_p2s7a11).
is_member(node39_20, 1).         const(1).
nodetype(node39_20, complex).         const(complex).
t_lemma(node39_20, tri).         const(tri).
%%%%%%%% node39_21 %%%%%%%%%%%%%%%%%%%
node(node39_21).
deepord(node39_21, x10_1).         const(x10_1).
a_ref_type(node39_21, tree).         const(tree).
a_afun(node39_21, ExD).         const(ExD).
m_form(node39_21, tri).         const(tri).
m_lemma(node39_21, tri_3).         const(tri_3).
m_tag(node39_21, ClXP1__________).         const(ClXP1__________).
w_token(node39_21, tri).         const(tri).
a_ord(node39_21, 11).         const(11).
a_parent_id(node39_21, a_plzensky71760_txt_001_p2s7W10).         const(a_plzensky71760_txt_001_p2s7W10).
hide(node39_21, hide).         const(hide).
%%%%%%%% node39_22 %%%%%%%%%%%%%%%%%%%
node(node39_22).
deepord(node39_22, 11).         const(11).
functor(node39_22, TWHEN).         const(TWHEN).
gram_sempos(node39_22, adj_denot).         const(adj_denot).
id(node39_22, T_plzensky71760_txt_001_p2s7a12).         const(T_plzensky71760_txt_001_p2s7a12).
is_member(node39_22, 1).         const(1).
nodetype(node39_22, complex).         const(complex).
subfunctor(node39_22, basic).         const(basic).
t_lemma(node39_22, lehky).         const(lehky).
%%%%%%%% node39_23 %%%%%%%%%%%%%%%%%%%
node(node39_23).
deepord(node39_23, x11_1).         const(x11_1).
a_ref_type(node39_23, tree).         const(tree).
a_afun(node39_23, ExD).         const(ExD).
m_form(node39_23, lehce).         const(lehce).
m_lemma(node39_23, lehce).         const(lehce).
m_tag(node39_23, Dg_______1A____).         const(Dg_______1A____).
w_token(node39_23, lehce).         const(lehce).
w_no_space_after(node39_23, 1).         const(1).
a_ord(node39_23, 12).         const(12).
a_parent_id(node39_23, a_plzensky71760_txt_001_p2s7W10).         const(a_plzensky71760_txt_001_p2s7W10).
hide(node39_23, hide).         const(hide).
edge(node39_0, node39_1).
edge(node39_1, node39_2).
edge(node39_2, node39_3).
edge(node39_2, node39_4).
edge(node39_4, node39_5).
edge(node39_5, node39_6).
edge(node39_4, node39_7).
edge(node39_7, node39_8).
edge(node39_4, node39_9).
edge(node39_4, node39_10).
edge(node39_2, node39_11).
edge(node39_11, node39_12).
edge(node39_12, node39_13).
edge(node39_11, node39_14).
edge(node39_2, node39_15).
edge(node39_2, node39_16).
edge(node39_2, node39_17).
edge(node39_17, node39_18).
edge(node39_1, node39_19).
edge(node39_1, node39_20).
edge(node39_20, node39_21).
edge(node39_1, node39_22).
edge(node39_22, node39_23).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Z peti zranenych osob byly dve osoby zraneny tezce a tri lehce. 
tree_root(node40_0).
valid_root(node40_0).
%%%%%%%% node40_0 %%%%%%%%%%%%%%%%%%%
node(node40_0).
atree_rf(node40_0, a_a_plzensky71760_txt_001_p2s7).         const(a_a_plzensky71760_txt_001_p2s7).
deepord(node40_0, 0).         const(0).
id(node40_0, T_plzensky71760_txt_001_p2s7).         const(T_plzensky71760_txt_001_p2s7).
nodetype(node40_0, root).         const(root).
sentence(node40_0, Z_peti_zranenych_osob_byly_dve_osoby_zraneny_tezce_a_tri_lehce__).         const(Z_peti_zranenych_osob_byly_dve_osoby_zraneny_tezce_a_tri_lehce__).
%%%%%%%% node40_1 %%%%%%%%%%%%%%%%%%%
node(node40_1).
deepord(node40_1, 9).         const(9).
functor(node40_1, CONJ).         const(CONJ).
id(node40_1, T_plzensky71760_txt_001_p2s7a1).         const(T_plzensky71760_txt_001_p2s7a1).
nodetype(node40_1, coap).         const(coap).
t_lemma(node40_1, a).         const(a).
%%%%%%%% node40_2 %%%%%%%%%%%%%%%%%%%
node(node40_2).
deepord(node40_2, 7).         const(7).
functor(node40_2, PRED).         const(PRED).
gram_sempos(node40_2, v).         const(v).
id(node40_2, T_plzensky71760_txt_001_p2s7a2).         const(T_plzensky71760_txt_001_p2s7a2).
is_member(node40_2, 1).         const(1).
nodetype(node40_2, complex).         const(complex).
t_lemma(node40_2, zranit).         const(zranit).
val_frame_rf(node40_2, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node40_3 %%%%%%%%%%%%%%%%%%%
node(node40_3).
deepord(node40_3, 1).         const(1).
functor(node40_3, ACT).         const(ACT).
id(node40_3, T_plzensky71760_txt_001_p2s7a13).         const(T_plzensky71760_txt_001_p2s7a13).
is_generated(node40_3, 1).         const(1).
nodetype(node40_3, qcomplex).         const(qcomplex).
t_lemma(node40_3, x_Gen).         const(x_Gen).
%%%%%%%% node40_4 %%%%%%%%%%%%%%%%%%%
node(node40_4).
deepord(node40_4, 4).         const(4).
functor(node40_4, DIR1).         const(DIR1).
gram_sempos(node40_4, n_denot).         const(n_denot).
id(node40_4, T_plzensky71760_txt_001_p2s7a4).         const(T_plzensky71760_txt_001_p2s7a4).
nodetype(node40_4, complex).         const(complex).
subfunctor(node40_4, basic).         const(basic).
t_lemma(node40_4, osoba).         const(osoba).
%%%%%%%% node40_5 %%%%%%%%%%%%%%%%%%%
node(node40_5).
deepord(node40_5, 2).         const(2).
functor(node40_5, RSTR).         const(RSTR).
gram_sempos(node40_5, adj_quant_def).         const(adj_quant_def).
id(node40_5, T_plzensky71760_txt_001_p2s7a5).         const(T_plzensky71760_txt_001_p2s7a5).
nodetype(node40_5, complex).         const(complex).
t_lemma(node40_5, pet).         const(pet).
%%%%%%%% node40_6 %%%%%%%%%%%%%%%%%%%
node(node40_6).
deepord(node40_6, x2_1).         const(x2_1).
a_ref_type(node40_6, tree).         const(tree).
a_afun(node40_6, Atr).         const(Atr).
m_form(node40_6, peti).         const(peti).
m_lemma(node40_6, pet_1_5).         const(pet_1_5).
m_tag(node40_6, Cn_P2__________).         const(Cn_P2__________).
w_token(node40_6, peti).         const(peti).
a_ord(node40_6, 2).         const(2).
a_parent_id(node40_6, a_plzensky71760_txt_001_p2s7W4).         const(a_plzensky71760_txt_001_p2s7W4).
hide(node40_6, hide).         const(hide).
%%%%%%%% node40_7 %%%%%%%%%%%%%%%%%%%
node(node40_7).
deepord(node40_7, 3).         const(3).
functor(node40_7, RSTR).         const(RSTR).
gram_sempos(node40_7, adj_denot).         const(adj_denot).
id(node40_7, T_plzensky71760_txt_001_p2s7a6).         const(T_plzensky71760_txt_001_p2s7a6).
nodetype(node40_7, complex).         const(complex).
t_lemma(node40_7, zraneny).         const(zraneny).
%%%%%%%% node40_8 %%%%%%%%%%%%%%%%%%%
node(node40_8).
deepord(node40_8, x3_1).         const(x3_1).
a_ref_type(node40_8, tree).         const(tree).
a_afun(node40_8, Atr).         const(Atr).
m_form(node40_8, zranenych).         const(zranenych).
m_lemma(node40_8, zraneny____3it_).         const(zraneny____3it_).
m_tag(node40_8, AAFP2____1A____).         const(AAFP2____1A____).
w_token(node40_8, zranenych).         const(zranenych).
a_ord(node40_8, 3).         const(3).
a_parent_id(node40_8, a_plzensky71760_txt_001_p2s7W4).         const(a_plzensky71760_txt_001_p2s7W4).
hide(node40_8, hide).         const(hide).
%%%%%%%% node40_9 %%%%%%%%%%%%%%%%%%%
node(node40_9).
deepord(node40_9, x4_1).         const(x4_1).
a_ref_type(node40_9, tree).         const(tree).
a_afun(node40_9, AuxP).         const(AuxP).
m_form(node40_9, Z).         const(Z).
m_lemma(node40_9, z_1).         const(z_1).
m_tag(node40_9, RR__2__________).         const(RR__2__________).
w_token(node40_9, Z).         const(Z).
a_ord(node40_9, 1).         const(1).
a_parent_id(node40_9, a_plzensky71760_txt_001_p2s7W8).         const(a_plzensky71760_txt_001_p2s7W8).
hide(node40_9, hide).         const(hide).
%%%%%%%% node40_10 %%%%%%%%%%%%%%%%%%%
node(node40_10).
deepord(node40_10, x4_2).         const(x4_2).
a_ref_type(node40_10, tree).         const(tree).
a_afun(node40_10, Adv).         const(Adv).
m_form(node40_10, osob).         const(osob).
m_lemma(node40_10, osoba).         const(osoba).
m_tag(node40_10, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node40_10, osob).         const(osob).
a_ord(node40_10, 4).         const(4).
a_parent_id(node40_10, a_plzensky71760_txt_001_p2s7W1).         const(a_plzensky71760_txt_001_p2s7W1).
hide(node40_10, hide).         const(hide).
%%%%%%%% node40_11 %%%%%%%%%%%%%%%%%%%
node(node40_11).
deepord(node40_11, 6).         const(6).
functor(node40_11, PAT).         const(PAT).
gram_sempos(node40_11, n_denot).         const(n_denot).
id(node40_11, T_plzensky71760_txt_001_p2s7a8).         const(T_plzensky71760_txt_001_p2s7a8).
nodetype(node40_11, complex).         const(complex).
t_lemma(node40_11, osoba).         const(osoba).
%%%%%%%% node40_12 %%%%%%%%%%%%%%%%%%%
node(node40_12).
deepord(node40_12, 5).         const(5).
functor(node40_12, RSTR).         const(RSTR).
gram_sempos(node40_12, adj_quant_def).         const(adj_quant_def).
id(node40_12, T_plzensky71760_txt_001_p2s7a9).         const(T_plzensky71760_txt_001_p2s7a9).
nodetype(node40_12, complex).         const(complex).
t_lemma(node40_12, dva).         const(dva).
%%%%%%%% node40_13 %%%%%%%%%%%%%%%%%%%
node(node40_13).
deepord(node40_13, x5_1).         const(x5_1).
a_ref_type(node40_13, tree).         const(tree).
a_afun(node40_13, Atr).         const(Atr).
m_form(node40_13, dve).         const(dve).
m_lemma(node40_13, dva_2).         const(dva_2).
m_tag(node40_13, ClHP1__________).         const(ClHP1__________).
w_token(node40_13, dve).         const(dve).
a_ord(node40_13, 6).         const(6).
a_parent_id(node40_13, a_plzensky71760_txt_001_p2s7W7).         const(a_plzensky71760_txt_001_p2s7W7).
hide(node40_13, hide).         const(hide).
%%%%%%%% node40_14 %%%%%%%%%%%%%%%%%%%
node(node40_14).
deepord(node40_14, x6_1).         const(x6_1).
a_ref_type(node40_14, tree).         const(tree).
a_afun(node40_14, Sb).         const(Sb).
m_form(node40_14, osoby).         const(osoby).
m_lemma(node40_14, osoba).         const(osoba).
m_tag(node40_14, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node40_14, osoby).         const(osoby).
a_ord(node40_14, 7).         const(7).
a_parent_id(node40_14, a_plzensky71760_txt_001_p2s7W8).         const(a_plzensky71760_txt_001_p2s7W8).
hide(node40_14, hide).         const(hide).
%%%%%%%% node40_15 %%%%%%%%%%%%%%%%%%%
node(node40_15).
deepord(node40_15, x7_1).         const(x7_1).
a_ref_type(node40_15, tree).         const(tree).
a_afun(node40_15, AuxV).         const(AuxV).
m_form(node40_15, byly).         const(byly).
m_lemma(node40_15, byt).         const(byt).
m_tag(node40_15, VpTP___XR_AA___).         const(VpTP___XR_AA___).
w_token(node40_15, byly).         const(byly).
a_ord(node40_15, 5).         const(5).
a_parent_id(node40_15, a_plzensky71760_txt_001_p2s7W8).         const(a_plzensky71760_txt_001_p2s7W8).
hide(node40_15, hide).         const(hide).
%%%%%%%% node40_16 %%%%%%%%%%%%%%%%%%%
node(node40_16).
deepord(node40_16, x7_2).         const(x7_2).
a_ref_type(node40_16, tree).         const(tree).
a_afun(node40_16, Pred).         const(Pred).
m_form(node40_16, zraneny).         const(zraneny).
m_lemma(node40_16, zranit__W).         const(zranit__W).
m_tag(node40_16, VsTP___XX_AP___).         const(VsTP___XX_AP___).
w_token(node40_16, zraneny).         const(zraneny).
a_ord(node40_16, 8).         const(8).
a_parent_id(node40_16, a_plzensky71760_txt_001_p2s7W10).         const(a_plzensky71760_txt_001_p2s7W10).
hide(node40_16, hide).         const(hide).
%%%%%%%% node40_17 %%%%%%%%%%%%%%%%%%%
node(node40_17).
deepord(node40_17, 8).         const(8).
functor(node40_17, MANN).         const(MANN).
gram_sempos(node40_17, adj_denot).         const(adj_denot).
id(node40_17, T_plzensky71760_txt_001_p2s7a10).         const(T_plzensky71760_txt_001_p2s7a10).
nodetype(node40_17, complex).         const(complex).
t_lemma(node40_17, tezky).         const(tezky).
%%%%%%%% node40_18 %%%%%%%%%%%%%%%%%%%
node(node40_18).
deepord(node40_18, x8_1).         const(x8_1).
a_ref_type(node40_18, tree).         const(tree).
a_afun(node40_18, Adv).         const(Adv).
m_form(node40_18, tezce).         const(tezce).
m_lemma(node40_18, tezce).         const(tezce).
m_tag(node40_18, Dg_______1A____).         const(Dg_______1A____).
w_token(node40_18, tezce).         const(tezce).
a_ord(node40_18, 9).         const(9).
a_parent_id(node40_18, a_plzensky71760_txt_001_p2s7W8).         const(a_plzensky71760_txt_001_p2s7W8).
hide(node40_18, hide).         const(hide).
%%%%%%%% node40_19 %%%%%%%%%%%%%%%%%%%
node(node40_19).
deepord(node40_19, x9_1).         const(x9_1).
a_ref_type(node40_19, tree).         const(tree).
a_afun(node40_19, Coord).         const(Coord).
m_form(node40_19, a).         const(a).
m_lemma(node40_19, a_1).         const(a_1).
m_tag(node40_19, J______________).         const(J______________).
w_token(node40_19, a).         const(a).
a_ord(node40_19, 10).         const(10).
a_parent_id(node40_19, a_plzensky71760_txt_001_p2s7).         const(a_plzensky71760_txt_001_p2s7).
hide(node40_19, hide).         const(hide).
%%%%%%%% node40_20 %%%%%%%%%%%%%%%%%%%
node(node40_20).
deepord(node40_20, 10).         const(10).
functor(node40_20, RSTR).         const(RSTR).
gram_sempos(node40_20, adj_quant_def).         const(adj_quant_def).
id(node40_20, T_plzensky71760_txt_001_p2s7a11).         const(T_plzensky71760_txt_001_p2s7a11).
is_member(node40_20, 1).         const(1).
nodetype(node40_20, complex).         const(complex).
t_lemma(node40_20, tri).         const(tri).
%%%%%%%% node40_21 %%%%%%%%%%%%%%%%%%%
node(node40_21).
deepord(node40_21, x10_1).         const(x10_1).
a_ref_type(node40_21, tree).         const(tree).
a_afun(node40_21, ExD).         const(ExD).
m_form(node40_21, tri).         const(tri).
m_lemma(node40_21, tri_3).         const(tri_3).
m_tag(node40_21, ClXP1__________).         const(ClXP1__________).
w_token(node40_21, tri).         const(tri).
a_ord(node40_21, 11).         const(11).
a_parent_id(node40_21, a_plzensky71760_txt_001_p2s7W10).         const(a_plzensky71760_txt_001_p2s7W10).
hide(node40_21, hide).         const(hide).
%%%%%%%% node40_22 %%%%%%%%%%%%%%%%%%%
node(node40_22).
deepord(node40_22, 11).         const(11).
functor(node40_22, TWHEN).         const(TWHEN).
gram_sempos(node40_22, adj_denot).         const(adj_denot).
id(node40_22, T_plzensky71760_txt_001_p2s7a12).         const(T_plzensky71760_txt_001_p2s7a12).
is_member(node40_22, 1).         const(1).
nodetype(node40_22, complex).         const(complex).
subfunctor(node40_22, basic).         const(basic).
t_lemma(node40_22, lehky).         const(lehky).
%%%%%%%% node40_23 %%%%%%%%%%%%%%%%%%%
node(node40_23).
deepord(node40_23, x11_1).         const(x11_1).
a_ref_type(node40_23, tree).         const(tree).
a_afun(node40_23, ExD).         const(ExD).
m_form(node40_23, lehce).         const(lehce).
m_lemma(node40_23, lehce).         const(lehce).
m_tag(node40_23, Dg_______1A____).         const(Dg_______1A____).
w_token(node40_23, lehce).         const(lehce).
w_no_space_after(node40_23, 1).         const(1).
a_ord(node40_23, 12).         const(12).
a_parent_id(node40_23, a_plzensky71760_txt_001_p2s7W10).         const(a_plzensky71760_txt_001_p2s7W10).
hide(node40_23, hide).         const(hide).
edge(node40_0, node40_1).
edge(node40_1, node40_2).
edge(node40_2, node40_3).
edge(node40_2, node40_4).
edge(node40_4, node40_5).
edge(node40_5, node40_6).
edge(node40_4, node40_7).
edge(node40_7, node40_8).
edge(node40_4, node40_9).
edge(node40_4, node40_10).
edge(node40_2, node40_11).
edge(node40_11, node40_12).
edge(node40_12, node40_13).
edge(node40_11, node40_14).
edge(node40_2, node40_15).
edge(node40_2, node40_16).
edge(node40_2, node40_17).
edge(node40_17, node40_18).
edge(node40_1, node40_19).
edge(node40_1, node40_20).
edge(node40_20, node40_21).
edge(node40_1, node40_22).
edge(node40_22, node40_23).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Z peti zranenych osob byly dve osoby zraneny tezce a tri lehce. 
tree_root(node41_0).
valid_root(node41_0).
%%%%%%%% node41_0 %%%%%%%%%%%%%%%%%%%
node(node41_0).
atree_rf(node41_0, a_a_plzensky71760_txt_001_p2s7).         const(a_a_plzensky71760_txt_001_p2s7).
deepord(node41_0, 0).         const(0).
id(node41_0, T_plzensky71760_txt_001_p2s7).         const(T_plzensky71760_txt_001_p2s7).
nodetype(node41_0, root).         const(root).
sentence(node41_0, Z_peti_zranenych_osob_byly_dve_osoby_zraneny_tezce_a_tri_lehce__).         const(Z_peti_zranenych_osob_byly_dve_osoby_zraneny_tezce_a_tri_lehce__).
%%%%%%%% node41_1 %%%%%%%%%%%%%%%%%%%
node(node41_1).
deepord(node41_1, 9).         const(9).
functor(node41_1, CONJ).         const(CONJ).
id(node41_1, T_plzensky71760_txt_001_p2s7a1).         const(T_plzensky71760_txt_001_p2s7a1).
nodetype(node41_1, coap).         const(coap).
t_lemma(node41_1, a).         const(a).
%%%%%%%% node41_2 %%%%%%%%%%%%%%%%%%%
node(node41_2).
deepord(node41_2, 7).         const(7).
functor(node41_2, PRED).         const(PRED).
gram_sempos(node41_2, v).         const(v).
id(node41_2, T_plzensky71760_txt_001_p2s7a2).         const(T_plzensky71760_txt_001_p2s7a2).
is_member(node41_2, 1).         const(1).
nodetype(node41_2, complex).         const(complex).
t_lemma(node41_2, zranit).         const(zranit).
val_frame_rf(node41_2, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node41_3 %%%%%%%%%%%%%%%%%%%
node(node41_3).
deepord(node41_3, 1).         const(1).
functor(node41_3, ACT).         const(ACT).
id(node41_3, T_plzensky71760_txt_001_p2s7a13).         const(T_plzensky71760_txt_001_p2s7a13).
is_generated(node41_3, 1).         const(1).
nodetype(node41_3, qcomplex).         const(qcomplex).
t_lemma(node41_3, x_Gen).         const(x_Gen).
%%%%%%%% node41_4 %%%%%%%%%%%%%%%%%%%
node(node41_4).
deepord(node41_4, 4).         const(4).
functor(node41_4, DIR1).         const(DIR1).
gram_sempos(node41_4, n_denot).         const(n_denot).
id(node41_4, T_plzensky71760_txt_001_p2s7a4).         const(T_plzensky71760_txt_001_p2s7a4).
nodetype(node41_4, complex).         const(complex).
subfunctor(node41_4, basic).         const(basic).
t_lemma(node41_4, osoba).         const(osoba).
%%%%%%%% node41_5 %%%%%%%%%%%%%%%%%%%
node(node41_5).
deepord(node41_5, 2).         const(2).
functor(node41_5, RSTR).         const(RSTR).
gram_sempos(node41_5, adj_quant_def).         const(adj_quant_def).
id(node41_5, T_plzensky71760_txt_001_p2s7a5).         const(T_plzensky71760_txt_001_p2s7a5).
nodetype(node41_5, complex).         const(complex).
t_lemma(node41_5, pet).         const(pet).
%%%%%%%% node41_6 %%%%%%%%%%%%%%%%%%%
node(node41_6).
deepord(node41_6, x2_1).         const(x2_1).
a_ref_type(node41_6, tree).         const(tree).
a_afun(node41_6, Atr).         const(Atr).
m_form(node41_6, peti).         const(peti).
m_lemma(node41_6, pet_1_5).         const(pet_1_5).
m_tag(node41_6, Cn_P2__________).         const(Cn_P2__________).
w_token(node41_6, peti).         const(peti).
a_ord(node41_6, 2).         const(2).
a_parent_id(node41_6, a_plzensky71760_txt_001_p2s7W4).         const(a_plzensky71760_txt_001_p2s7W4).
hide(node41_6, hide).         const(hide).
%%%%%%%% node41_7 %%%%%%%%%%%%%%%%%%%
node(node41_7).
deepord(node41_7, 3).         const(3).
functor(node41_7, RSTR).         const(RSTR).
gram_sempos(node41_7, adj_denot).         const(adj_denot).
id(node41_7, T_plzensky71760_txt_001_p2s7a6).         const(T_plzensky71760_txt_001_p2s7a6).
nodetype(node41_7, complex).         const(complex).
t_lemma(node41_7, zraneny).         const(zraneny).
%%%%%%%% node41_8 %%%%%%%%%%%%%%%%%%%
node(node41_8).
deepord(node41_8, x3_1).         const(x3_1).
a_ref_type(node41_8, tree).         const(tree).
a_afun(node41_8, Atr).         const(Atr).
m_form(node41_8, zranenych).         const(zranenych).
m_lemma(node41_8, zraneny____3it_).         const(zraneny____3it_).
m_tag(node41_8, AAFP2____1A____).         const(AAFP2____1A____).
w_token(node41_8, zranenych).         const(zranenych).
a_ord(node41_8, 3).         const(3).
a_parent_id(node41_8, a_plzensky71760_txt_001_p2s7W4).         const(a_plzensky71760_txt_001_p2s7W4).
hide(node41_8, hide).         const(hide).
%%%%%%%% node41_9 %%%%%%%%%%%%%%%%%%%
node(node41_9).
deepord(node41_9, x4_1).         const(x4_1).
a_ref_type(node41_9, tree).         const(tree).
a_afun(node41_9, AuxP).         const(AuxP).
m_form(node41_9, Z).         const(Z).
m_lemma(node41_9, z_1).         const(z_1).
m_tag(node41_9, RR__2__________).         const(RR__2__________).
w_token(node41_9, Z).         const(Z).
a_ord(node41_9, 1).         const(1).
a_parent_id(node41_9, a_plzensky71760_txt_001_p2s7W8).         const(a_plzensky71760_txt_001_p2s7W8).
hide(node41_9, hide).         const(hide).
%%%%%%%% node41_10 %%%%%%%%%%%%%%%%%%%
node(node41_10).
deepord(node41_10, x4_2).         const(x4_2).
a_ref_type(node41_10, tree).         const(tree).
a_afun(node41_10, Adv).         const(Adv).
m_form(node41_10, osob).         const(osob).
m_lemma(node41_10, osoba).         const(osoba).
m_tag(node41_10, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node41_10, osob).         const(osob).
a_ord(node41_10, 4).         const(4).
a_parent_id(node41_10, a_plzensky71760_txt_001_p2s7W1).         const(a_plzensky71760_txt_001_p2s7W1).
hide(node41_10, hide).         const(hide).
%%%%%%%% node41_11 %%%%%%%%%%%%%%%%%%%
node(node41_11).
deepord(node41_11, 6).         const(6).
functor(node41_11, PAT).         const(PAT).
gram_sempos(node41_11, n_denot).         const(n_denot).
id(node41_11, T_plzensky71760_txt_001_p2s7a8).         const(T_plzensky71760_txt_001_p2s7a8).
nodetype(node41_11, complex).         const(complex).
t_lemma(node41_11, osoba).         const(osoba).
%%%%%%%% node41_12 %%%%%%%%%%%%%%%%%%%
node(node41_12).
deepord(node41_12, 5).         const(5).
functor(node41_12, RSTR).         const(RSTR).
gram_sempos(node41_12, adj_quant_def).         const(adj_quant_def).
id(node41_12, T_plzensky71760_txt_001_p2s7a9).         const(T_plzensky71760_txt_001_p2s7a9).
nodetype(node41_12, complex).         const(complex).
t_lemma(node41_12, dva).         const(dva).
%%%%%%%% node41_13 %%%%%%%%%%%%%%%%%%%
node(node41_13).
deepord(node41_13, x5_1).         const(x5_1).
a_ref_type(node41_13, tree).         const(tree).
a_afun(node41_13, Atr).         const(Atr).
m_form(node41_13, dve).         const(dve).
m_lemma(node41_13, dva_2).         const(dva_2).
m_tag(node41_13, ClHP1__________).         const(ClHP1__________).
w_token(node41_13, dve).         const(dve).
a_ord(node41_13, 6).         const(6).
a_parent_id(node41_13, a_plzensky71760_txt_001_p2s7W7).         const(a_plzensky71760_txt_001_p2s7W7).
hide(node41_13, hide).         const(hide).
%%%%%%%% node41_14 %%%%%%%%%%%%%%%%%%%
node(node41_14).
deepord(node41_14, x6_1).         const(x6_1).
a_ref_type(node41_14, tree).         const(tree).
a_afun(node41_14, Sb).         const(Sb).
m_form(node41_14, osoby).         const(osoby).
m_lemma(node41_14, osoba).         const(osoba).
m_tag(node41_14, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node41_14, osoby).         const(osoby).
a_ord(node41_14, 7).         const(7).
a_parent_id(node41_14, a_plzensky71760_txt_001_p2s7W8).         const(a_plzensky71760_txt_001_p2s7W8).
hide(node41_14, hide).         const(hide).
%%%%%%%% node41_15 %%%%%%%%%%%%%%%%%%%
node(node41_15).
deepord(node41_15, x7_1).         const(x7_1).
a_ref_type(node41_15, tree).         const(tree).
a_afun(node41_15, AuxV).         const(AuxV).
m_form(node41_15, byly).         const(byly).
m_lemma(node41_15, byt).         const(byt).
m_tag(node41_15, VpTP___XR_AA___).         const(VpTP___XR_AA___).
w_token(node41_15, byly).         const(byly).
a_ord(node41_15, 5).         const(5).
a_parent_id(node41_15, a_plzensky71760_txt_001_p2s7W8).         const(a_plzensky71760_txt_001_p2s7W8).
hide(node41_15, hide).         const(hide).
%%%%%%%% node41_16 %%%%%%%%%%%%%%%%%%%
node(node41_16).
deepord(node41_16, x7_2).         const(x7_2).
a_ref_type(node41_16, tree).         const(tree).
a_afun(node41_16, Pred).         const(Pred).
m_form(node41_16, zraneny).         const(zraneny).
m_lemma(node41_16, zranit__W).         const(zranit__W).
m_tag(node41_16, VsTP___XX_AP___).         const(VsTP___XX_AP___).
w_token(node41_16, zraneny).         const(zraneny).
a_ord(node41_16, 8).         const(8).
a_parent_id(node41_16, a_plzensky71760_txt_001_p2s7W10).         const(a_plzensky71760_txt_001_p2s7W10).
hide(node41_16, hide).         const(hide).
%%%%%%%% node41_17 %%%%%%%%%%%%%%%%%%%
node(node41_17).
deepord(node41_17, 8).         const(8).
functor(node41_17, MANN).         const(MANN).
gram_sempos(node41_17, adj_denot).         const(adj_denot).
id(node41_17, T_plzensky71760_txt_001_p2s7a10).         const(T_plzensky71760_txt_001_p2s7a10).
nodetype(node41_17, complex).         const(complex).
t_lemma(node41_17, tezky).         const(tezky).
%%%%%%%% node41_18 %%%%%%%%%%%%%%%%%%%
node(node41_18).
deepord(node41_18, x8_1).         const(x8_1).
a_ref_type(node41_18, tree).         const(tree).
a_afun(node41_18, Adv).         const(Adv).
m_form(node41_18, tezce).         const(tezce).
m_lemma(node41_18, tezce).         const(tezce).
m_tag(node41_18, Dg_______1A____).         const(Dg_______1A____).
w_token(node41_18, tezce).         const(tezce).
a_ord(node41_18, 9).         const(9).
a_parent_id(node41_18, a_plzensky71760_txt_001_p2s7W8).         const(a_plzensky71760_txt_001_p2s7W8).
hide(node41_18, hide).         const(hide).
%%%%%%%% node41_19 %%%%%%%%%%%%%%%%%%%
node(node41_19).
deepord(node41_19, x9_1).         const(x9_1).
a_ref_type(node41_19, tree).         const(tree).
a_afun(node41_19, Coord).         const(Coord).
m_form(node41_19, a).         const(a).
m_lemma(node41_19, a_1).         const(a_1).
m_tag(node41_19, J______________).         const(J______________).
w_token(node41_19, a).         const(a).
a_ord(node41_19, 10).         const(10).
a_parent_id(node41_19, a_plzensky71760_txt_001_p2s7).         const(a_plzensky71760_txt_001_p2s7).
hide(node41_19, hide).         const(hide).
%%%%%%%% node41_20 %%%%%%%%%%%%%%%%%%%
node(node41_20).
deepord(node41_20, 10).         const(10).
functor(node41_20, RSTR).         const(RSTR).
gram_sempos(node41_20, adj_quant_def).         const(adj_quant_def).
id(node41_20, T_plzensky71760_txt_001_p2s7a11).         const(T_plzensky71760_txt_001_p2s7a11).
is_member(node41_20, 1).         const(1).
nodetype(node41_20, complex).         const(complex).
t_lemma(node41_20, tri).         const(tri).
%%%%%%%% node41_21 %%%%%%%%%%%%%%%%%%%
node(node41_21).
deepord(node41_21, x10_1).         const(x10_1).
a_ref_type(node41_21, tree).         const(tree).
a_afun(node41_21, ExD).         const(ExD).
m_form(node41_21, tri).         const(tri).
m_lemma(node41_21, tri_3).         const(tri_3).
m_tag(node41_21, ClXP1__________).         const(ClXP1__________).
w_token(node41_21, tri).         const(tri).
a_ord(node41_21, 11).         const(11).
a_parent_id(node41_21, a_plzensky71760_txt_001_p2s7W10).         const(a_plzensky71760_txt_001_p2s7W10).
hide(node41_21, hide).         const(hide).
%%%%%%%% node41_22 %%%%%%%%%%%%%%%%%%%
node(node41_22).
deepord(node41_22, 11).         const(11).
functor(node41_22, TWHEN).         const(TWHEN).
gram_sempos(node41_22, adj_denot).         const(adj_denot).
id(node41_22, T_plzensky71760_txt_001_p2s7a12).         const(T_plzensky71760_txt_001_p2s7a12).
is_member(node41_22, 1).         const(1).
nodetype(node41_22, complex).         const(complex).
subfunctor(node41_22, basic).         const(basic).
t_lemma(node41_22, lehky).         const(lehky).
%%%%%%%% node41_23 %%%%%%%%%%%%%%%%%%%
node(node41_23).
deepord(node41_23, x11_1).         const(x11_1).
a_ref_type(node41_23, tree).         const(tree).
a_afun(node41_23, ExD).         const(ExD).
m_form(node41_23, lehce).         const(lehce).
m_lemma(node41_23, lehce).         const(lehce).
m_tag(node41_23, Dg_______1A____).         const(Dg_______1A____).
w_token(node41_23, lehce).         const(lehce).
w_no_space_after(node41_23, 1).         const(1).
a_ord(node41_23, 12).         const(12).
a_parent_id(node41_23, a_plzensky71760_txt_001_p2s7W10).         const(a_plzensky71760_txt_001_p2s7W10).
hide(node41_23, hide).         const(hide).
edge(node41_0, node41_1).
edge(node41_1, node41_2).
edge(node41_2, node41_3).
edge(node41_2, node41_4).
edge(node41_4, node41_5).
edge(node41_5, node41_6).
edge(node41_4, node41_7).
edge(node41_7, node41_8).
edge(node41_4, node41_9).
edge(node41_4, node41_10).
edge(node41_2, node41_11).
edge(node41_11, node41_12).
edge(node41_12, node41_13).
edge(node41_11, node41_14).
edge(node41_2, node41_15).
edge(node41_2, node41_16).
edge(node41_2, node41_17).
edge(node41_17, node41_18).
edge(node41_1, node41_19).
edge(node41_1, node41_20).
edge(node41_20, node41_21).
edge(node41_1, node41_22).
edge(node41_22, node41_23).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Z peti zranenych osob byly dve osoby zraneny tezce a tri lehce. 
tree_root(node42_0).
valid_root(node42_0).
%%%%%%%% node42_0 %%%%%%%%%%%%%%%%%%%
node(node42_0).
atree_rf(node42_0, a_a_plzensky71760_txt_001_p2s7).         const(a_a_plzensky71760_txt_001_p2s7).
deepord(node42_0, 0).         const(0).
id(node42_0, T_plzensky71760_txt_001_p2s7).         const(T_plzensky71760_txt_001_p2s7).
nodetype(node42_0, root).         const(root).
sentence(node42_0, Z_peti_zranenych_osob_byly_dve_osoby_zraneny_tezce_a_tri_lehce__).         const(Z_peti_zranenych_osob_byly_dve_osoby_zraneny_tezce_a_tri_lehce__).
%%%%%%%% node42_1 %%%%%%%%%%%%%%%%%%%
node(node42_1).
deepord(node42_1, 9).         const(9).
functor(node42_1, CONJ).         const(CONJ).
id(node42_1, T_plzensky71760_txt_001_p2s7a1).         const(T_plzensky71760_txt_001_p2s7a1).
nodetype(node42_1, coap).         const(coap).
t_lemma(node42_1, a).         const(a).
%%%%%%%% node42_2 %%%%%%%%%%%%%%%%%%%
node(node42_2).
deepord(node42_2, 7).         const(7).
functor(node42_2, PRED).         const(PRED).
gram_sempos(node42_2, v).         const(v).
id(node42_2, T_plzensky71760_txt_001_p2s7a2).         const(T_plzensky71760_txt_001_p2s7a2).
is_member(node42_2, 1).         const(1).
nodetype(node42_2, complex).         const(complex).
t_lemma(node42_2, zranit).         const(zranit).
val_frame_rf(node42_2, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node42_3 %%%%%%%%%%%%%%%%%%%
node(node42_3).
deepord(node42_3, 1).         const(1).
functor(node42_3, ACT).         const(ACT).
id(node42_3, T_plzensky71760_txt_001_p2s7a13).         const(T_plzensky71760_txt_001_p2s7a13).
is_generated(node42_3, 1).         const(1).
nodetype(node42_3, qcomplex).         const(qcomplex).
t_lemma(node42_3, x_Gen).         const(x_Gen).
%%%%%%%% node42_4 %%%%%%%%%%%%%%%%%%%
node(node42_4).
deepord(node42_4, 4).         const(4).
functor(node42_4, DIR1).         const(DIR1).
gram_sempos(node42_4, n_denot).         const(n_denot).
id(node42_4, T_plzensky71760_txt_001_p2s7a4).         const(T_plzensky71760_txt_001_p2s7a4).
nodetype(node42_4, complex).         const(complex).
subfunctor(node42_4, basic).         const(basic).
t_lemma(node42_4, osoba).         const(osoba).
%%%%%%%% node42_5 %%%%%%%%%%%%%%%%%%%
node(node42_5).
deepord(node42_5, 2).         const(2).
functor(node42_5, RSTR).         const(RSTR).
gram_sempos(node42_5, adj_quant_def).         const(adj_quant_def).
id(node42_5, T_plzensky71760_txt_001_p2s7a5).         const(T_plzensky71760_txt_001_p2s7a5).
nodetype(node42_5, complex).         const(complex).
t_lemma(node42_5, pet).         const(pet).
%%%%%%%% node42_6 %%%%%%%%%%%%%%%%%%%
node(node42_6).
deepord(node42_6, x2_1).         const(x2_1).
a_ref_type(node42_6, tree).         const(tree).
a_afun(node42_6, Atr).         const(Atr).
m_form(node42_6, peti).         const(peti).
m_lemma(node42_6, pet_1_5).         const(pet_1_5).
m_tag(node42_6, Cn_P2__________).         const(Cn_P2__________).
w_token(node42_6, peti).         const(peti).
a_ord(node42_6, 2).         const(2).
a_parent_id(node42_6, a_plzensky71760_txt_001_p2s7W4).         const(a_plzensky71760_txt_001_p2s7W4).
hide(node42_6, hide).         const(hide).
%%%%%%%% node42_7 %%%%%%%%%%%%%%%%%%%
node(node42_7).
deepord(node42_7, 3).         const(3).
functor(node42_7, RSTR).         const(RSTR).
gram_sempos(node42_7, adj_denot).         const(adj_denot).
id(node42_7, T_plzensky71760_txt_001_p2s7a6).         const(T_plzensky71760_txt_001_p2s7a6).
nodetype(node42_7, complex).         const(complex).
t_lemma(node42_7, zraneny).         const(zraneny).
%%%%%%%% node42_8 %%%%%%%%%%%%%%%%%%%
node(node42_8).
deepord(node42_8, x3_1).         const(x3_1).
a_ref_type(node42_8, tree).         const(tree).
a_afun(node42_8, Atr).         const(Atr).
m_form(node42_8, zranenych).         const(zranenych).
m_lemma(node42_8, zraneny____3it_).         const(zraneny____3it_).
m_tag(node42_8, AAFP2____1A____).         const(AAFP2____1A____).
w_token(node42_8, zranenych).         const(zranenych).
a_ord(node42_8, 3).         const(3).
a_parent_id(node42_8, a_plzensky71760_txt_001_p2s7W4).         const(a_plzensky71760_txt_001_p2s7W4).
hide(node42_8, hide).         const(hide).
%%%%%%%% node42_9 %%%%%%%%%%%%%%%%%%%
node(node42_9).
deepord(node42_9, x4_1).         const(x4_1).
a_ref_type(node42_9, tree).         const(tree).
a_afun(node42_9, AuxP).         const(AuxP).
m_form(node42_9, Z).         const(Z).
m_lemma(node42_9, z_1).         const(z_1).
m_tag(node42_9, RR__2__________).         const(RR__2__________).
w_token(node42_9, Z).         const(Z).
a_ord(node42_9, 1).         const(1).
a_parent_id(node42_9, a_plzensky71760_txt_001_p2s7W8).         const(a_plzensky71760_txt_001_p2s7W8).
hide(node42_9, hide).         const(hide).
%%%%%%%% node42_10 %%%%%%%%%%%%%%%%%%%
node(node42_10).
deepord(node42_10, x4_2).         const(x4_2).
a_ref_type(node42_10, tree).         const(tree).
a_afun(node42_10, Adv).         const(Adv).
m_form(node42_10, osob).         const(osob).
m_lemma(node42_10, osoba).         const(osoba).
m_tag(node42_10, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node42_10, osob).         const(osob).
a_ord(node42_10, 4).         const(4).
a_parent_id(node42_10, a_plzensky71760_txt_001_p2s7W1).         const(a_plzensky71760_txt_001_p2s7W1).
hide(node42_10, hide).         const(hide).
%%%%%%%% node42_11 %%%%%%%%%%%%%%%%%%%
node(node42_11).
deepord(node42_11, 6).         const(6).
functor(node42_11, PAT).         const(PAT).
gram_sempos(node42_11, n_denot).         const(n_denot).
id(node42_11, T_plzensky71760_txt_001_p2s7a8).         const(T_plzensky71760_txt_001_p2s7a8).
nodetype(node42_11, complex).         const(complex).
t_lemma(node42_11, osoba).         const(osoba).
%%%%%%%% node42_12 %%%%%%%%%%%%%%%%%%%
node(node42_12).
deepord(node42_12, 5).         const(5).
functor(node42_12, RSTR).         const(RSTR).
gram_sempos(node42_12, adj_quant_def).         const(adj_quant_def).
id(node42_12, T_plzensky71760_txt_001_p2s7a9).         const(T_plzensky71760_txt_001_p2s7a9).
nodetype(node42_12, complex).         const(complex).
t_lemma(node42_12, dva).         const(dva).
%%%%%%%% node42_13 %%%%%%%%%%%%%%%%%%%
node(node42_13).
deepord(node42_13, x5_1).         const(x5_1).
a_ref_type(node42_13, tree).         const(tree).
a_afun(node42_13, Atr).         const(Atr).
m_form(node42_13, dve).         const(dve).
m_lemma(node42_13, dva_2).         const(dva_2).
m_tag(node42_13, ClHP1__________).         const(ClHP1__________).
w_token(node42_13, dve).         const(dve).
a_ord(node42_13, 6).         const(6).
a_parent_id(node42_13, a_plzensky71760_txt_001_p2s7W7).         const(a_plzensky71760_txt_001_p2s7W7).
hide(node42_13, hide).         const(hide).
%%%%%%%% node42_14 %%%%%%%%%%%%%%%%%%%
node(node42_14).
deepord(node42_14, x6_1).         const(x6_1).
a_ref_type(node42_14, tree).         const(tree).
a_afun(node42_14, Sb).         const(Sb).
m_form(node42_14, osoby).         const(osoby).
m_lemma(node42_14, osoba).         const(osoba).
m_tag(node42_14, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node42_14, osoby).         const(osoby).
a_ord(node42_14, 7).         const(7).
a_parent_id(node42_14, a_plzensky71760_txt_001_p2s7W8).         const(a_plzensky71760_txt_001_p2s7W8).
hide(node42_14, hide).         const(hide).
%%%%%%%% node42_15 %%%%%%%%%%%%%%%%%%%
node(node42_15).
deepord(node42_15, x7_1).         const(x7_1).
a_ref_type(node42_15, tree).         const(tree).
a_afun(node42_15, AuxV).         const(AuxV).
m_form(node42_15, byly).         const(byly).
m_lemma(node42_15, byt).         const(byt).
m_tag(node42_15, VpTP___XR_AA___).         const(VpTP___XR_AA___).
w_token(node42_15, byly).         const(byly).
a_ord(node42_15, 5).         const(5).
a_parent_id(node42_15, a_plzensky71760_txt_001_p2s7W8).         const(a_plzensky71760_txt_001_p2s7W8).
hide(node42_15, hide).         const(hide).
%%%%%%%% node42_16 %%%%%%%%%%%%%%%%%%%
node(node42_16).
deepord(node42_16, x7_2).         const(x7_2).
a_ref_type(node42_16, tree).         const(tree).
a_afun(node42_16, Pred).         const(Pred).
m_form(node42_16, zraneny).         const(zraneny).
m_lemma(node42_16, zranit__W).         const(zranit__W).
m_tag(node42_16, VsTP___XX_AP___).         const(VsTP___XX_AP___).
w_token(node42_16, zraneny).         const(zraneny).
a_ord(node42_16, 8).         const(8).
a_parent_id(node42_16, a_plzensky71760_txt_001_p2s7W10).         const(a_plzensky71760_txt_001_p2s7W10).
hide(node42_16, hide).         const(hide).
%%%%%%%% node42_17 %%%%%%%%%%%%%%%%%%%
node(node42_17).
deepord(node42_17, 8).         const(8).
functor(node42_17, MANN).         const(MANN).
gram_sempos(node42_17, adj_denot).         const(adj_denot).
id(node42_17, T_plzensky71760_txt_001_p2s7a10).         const(T_plzensky71760_txt_001_p2s7a10).
nodetype(node42_17, complex).         const(complex).
t_lemma(node42_17, tezky).         const(tezky).
%%%%%%%% node42_18 %%%%%%%%%%%%%%%%%%%
node(node42_18).
deepord(node42_18, x8_1).         const(x8_1).
a_ref_type(node42_18, tree).         const(tree).
a_afun(node42_18, Adv).         const(Adv).
m_form(node42_18, tezce).         const(tezce).
m_lemma(node42_18, tezce).         const(tezce).
m_tag(node42_18, Dg_______1A____).         const(Dg_______1A____).
w_token(node42_18, tezce).         const(tezce).
a_ord(node42_18, 9).         const(9).
a_parent_id(node42_18, a_plzensky71760_txt_001_p2s7W8).         const(a_plzensky71760_txt_001_p2s7W8).
hide(node42_18, hide).         const(hide).
%%%%%%%% node42_19 %%%%%%%%%%%%%%%%%%%
node(node42_19).
deepord(node42_19, x9_1).         const(x9_1).
a_ref_type(node42_19, tree).         const(tree).
a_afun(node42_19, Coord).         const(Coord).
m_form(node42_19, a).         const(a).
m_lemma(node42_19, a_1).         const(a_1).
m_tag(node42_19, J______________).         const(J______________).
w_token(node42_19, a).         const(a).
a_ord(node42_19, 10).         const(10).
a_parent_id(node42_19, a_plzensky71760_txt_001_p2s7).         const(a_plzensky71760_txt_001_p2s7).
hide(node42_19, hide).         const(hide).
%%%%%%%% node42_20 %%%%%%%%%%%%%%%%%%%
node(node42_20).
deepord(node42_20, 10).         const(10).
functor(node42_20, RSTR).         const(RSTR).
gram_sempos(node42_20, adj_quant_def).         const(adj_quant_def).
id(node42_20, T_plzensky71760_txt_001_p2s7a11).         const(T_plzensky71760_txt_001_p2s7a11).
is_member(node42_20, 1).         const(1).
nodetype(node42_20, complex).         const(complex).
t_lemma(node42_20, tri).         const(tri).
%%%%%%%% node42_21 %%%%%%%%%%%%%%%%%%%
node(node42_21).
deepord(node42_21, x10_1).         const(x10_1).
a_ref_type(node42_21, tree).         const(tree).
a_afun(node42_21, ExD).         const(ExD).
m_form(node42_21, tri).         const(tri).
m_lemma(node42_21, tri_3).         const(tri_3).
m_tag(node42_21, ClXP1__________).         const(ClXP1__________).
w_token(node42_21, tri).         const(tri).
a_ord(node42_21, 11).         const(11).
a_parent_id(node42_21, a_plzensky71760_txt_001_p2s7W10).         const(a_plzensky71760_txt_001_p2s7W10).
hide(node42_21, hide).         const(hide).
%%%%%%%% node42_22 %%%%%%%%%%%%%%%%%%%
node(node42_22).
deepord(node42_22, 11).         const(11).
functor(node42_22, TWHEN).         const(TWHEN).
gram_sempos(node42_22, adj_denot).         const(adj_denot).
id(node42_22, T_plzensky71760_txt_001_p2s7a12).         const(T_plzensky71760_txt_001_p2s7a12).
is_member(node42_22, 1).         const(1).
nodetype(node42_22, complex).         const(complex).
subfunctor(node42_22, basic).         const(basic).
t_lemma(node42_22, lehky).         const(lehky).
%%%%%%%% node42_23 %%%%%%%%%%%%%%%%%%%
node(node42_23).
deepord(node42_23, x11_1).         const(x11_1).
a_ref_type(node42_23, tree).         const(tree).
a_afun(node42_23, ExD).         const(ExD).
m_form(node42_23, lehce).         const(lehce).
m_lemma(node42_23, lehce).         const(lehce).
m_tag(node42_23, Dg_______1A____).         const(Dg_______1A____).
w_token(node42_23, lehce).         const(lehce).
w_no_space_after(node42_23, 1).         const(1).
a_ord(node42_23, 12).         const(12).
a_parent_id(node42_23, a_plzensky71760_txt_001_p2s7W10).         const(a_plzensky71760_txt_001_p2s7W10).
hide(node42_23, hide).         const(hide).
edge(node42_0, node42_1).
edge(node42_1, node42_2).
edge(node42_2, node42_3).
edge(node42_2, node42_4).
edge(node42_4, node42_5).
edge(node42_5, node42_6).
edge(node42_4, node42_7).
edge(node42_7, node42_8).
edge(node42_4, node42_9).
edge(node42_4, node42_10).
edge(node42_2, node42_11).
edge(node42_11, node42_12).
edge(node42_12, node42_13).
edge(node42_11, node42_14).
edge(node42_2, node42_15).
edge(node42_2, node42_16).
edge(node42_2, node42_17).
edge(node42_17, node42_18).
edge(node42_1, node42_19).
edge(node42_1, node42_20).
edge(node42_20, node42_21).
edge(node42_1, node42_22).
edge(node42_22, node42_23).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri pozarech od pocatku roku byly dve osoby usmrceny a sestnact osob zraneno. 
tree_root(node43_0).
valid_root(node43_0).
%%%%%%%% node43_0 %%%%%%%%%%%%%%%%%%%
node(node43_0).
atree_rf(node43_0, a_a_plzensky48663_txt_001_p2s2).         const(a_a_plzensky48663_txt_001_p2s2).
deepord(node43_0, 0).         const(0).
id(node43_0, T_plzensky48663_txt_001_p2s2).         const(T_plzensky48663_txt_001_p2s2).
nodetype(node43_0, root).         const(root).
sentence(node43_0, Pri_pozarech_od_pocatku_roku_byly_dve_osoby_usmrceny_a_sestnact_osob_zraneno__).         const(Pri_pozarech_od_pocatku_roku_byly_dve_osoby_usmrceny_a_sestnact_osob_zraneno__).
%%%%%%%% node43_1 %%%%%%%%%%%%%%%%%%%
node(node43_1).
deepord(node43_1, 9).         const(9).
functor(node43_1, CONJ).         const(CONJ).
id(node43_1, T_plzensky48663_txt_001_p2s2a1).         const(T_plzensky48663_txt_001_p2s2a1).
nodetype(node43_1, coap).         const(coap).
t_lemma(node43_1, a).         const(a).
%%%%%%%% node43_2 %%%%%%%%%%%%%%%%%%%
node(node43_2).
deepord(node43_2, 1).         const(1).
functor(node43_2, TWHEN).         const(TWHEN).
gram_sempos(node43_2, n_denot).         const(n_denot).
id(node43_2, T_plzensky48663_txt_001_p2s2a3).         const(T_plzensky48663_txt_001_p2s2a3).
nodetype(node43_2, complex).         const(complex).
subfunctor(node43_2, basic).         const(basic).
t_lemma(node43_2, pozar).         const(pozar).
%%%%%%%% node43_3 %%%%%%%%%%%%%%%%%%%
node(node43_3).
deepord(node43_3, x1_1).         const(x1_1).
a_ref_type(node43_3, tree).         const(tree).
a_afun(node43_3, AuxP).         const(AuxP).
m_form(node43_3, Pri).         const(Pri).
m_lemma(node43_3, pri_1).         const(pri_1).
m_tag(node43_3, RR__6__________).         const(RR__6__________).
w_token(node43_3, Pri).         const(Pri).
a_ord(node43_3, 1).         const(1).
a_parent_id(node43_3, a_plzensky48663_txt_001_p2s2W10).         const(a_plzensky48663_txt_001_p2s2W10).
hide(node43_3, hide).         const(hide).
%%%%%%%% node43_4 %%%%%%%%%%%%%%%%%%%
node(node43_4).
deepord(node43_4, x1_2).         const(x1_2).
a_ref_type(node43_4, tree).         const(tree).
a_afun(node43_4, ExD).         const(ExD).
m_form(node43_4, pozarech).         const(pozarech).
m_lemma(node43_4, pozar).         const(pozar).
m_tag(node43_4, NNIP6_____A____).         const(NNIP6_____A____).
w_token(node43_4, pozarech).         const(pozarech).
a_ord(node43_4, 2).         const(2).
a_parent_id(node43_4, a_plzensky48663_txt_001_p2s2W1).         const(a_plzensky48663_txt_001_p2s2W1).
hide(node43_4, hide).         const(hide).
%%%%%%%% node43_5 %%%%%%%%%%%%%%%%%%%
node(node43_5).
deepord(node43_5, 2).         const(2).
functor(node43_5, TSIN).         const(TSIN).
gram_sempos(node43_5, n_denot).         const(n_denot).
id(node43_5, T_plzensky48663_txt_001_p2s2a5).         const(T_plzensky48663_txt_001_p2s2a5).
nodetype(node43_5, complex).         const(complex).
t_lemma(node43_5, pocatek).         const(pocatek).
%%%%%%%% node43_6 %%%%%%%%%%%%%%%%%%%
node(node43_6).
deepord(node43_6, x2_1).         const(x2_1).
a_ref_type(node43_6, tree).         const(tree).
a_afun(node43_6, AuxP).         const(AuxP).
m_form(node43_6, od).         const(od).
m_lemma(node43_6, od_1).         const(od_1).
m_tag(node43_6, RR__2__________).         const(RR__2__________).
w_token(node43_6, od).         const(od).
a_ord(node43_6, 3).         const(3).
a_parent_id(node43_6, a_plzensky48663_txt_001_p2s2W10).         const(a_plzensky48663_txt_001_p2s2W10).
hide(node43_6, hide).         const(hide).
%%%%%%%% node43_7 %%%%%%%%%%%%%%%%%%%
node(node43_7).
deepord(node43_7, x2_2).         const(x2_2).
a_ref_type(node43_7, tree).         const(tree).
a_afun(node43_7, ExD).         const(ExD).
m_form(node43_7, pocatku).         const(pocatku).
m_lemma(node43_7, pocatek).         const(pocatek).
m_tag(node43_7, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node43_7, pocatku).         const(pocatku).
a_ord(node43_7, 4).         const(4).
a_parent_id(node43_7, a_plzensky48663_txt_001_p2s2W3).         const(a_plzensky48663_txt_001_p2s2W3).
hide(node43_7, hide).         const(hide).
%%%%%%%% node43_8 %%%%%%%%%%%%%%%%%%%
node(node43_8).
deepord(node43_8, 3).         const(3).
functor(node43_8, APP).         const(APP).
gram_sempos(node43_8, n_denot).         const(n_denot).
id(node43_8, T_plzensky48663_txt_001_p2s2a6).         const(T_plzensky48663_txt_001_p2s2a6).
nodetype(node43_8, complex).         const(complex).
t_lemma(node43_8, rok).         const(rok).
%%%%%%%% node43_9 %%%%%%%%%%%%%%%%%%%
node(node43_9).
deepord(node43_9, x3_1).         const(x3_1).
a_ref_type(node43_9, tree).         const(tree).
a_afun(node43_9, Atr).         const(Atr).
m_form(node43_9, roku).         const(roku).
m_lemma(node43_9, rok).         const(rok).
m_tag(node43_9, NNIS2_____A___1).         const(NNIS2_____A___1).
w_token(node43_9, roku).         const(roku).
a_ord(node43_9, 5).         const(5).
a_parent_id(node43_9, a_plzensky48663_txt_001_p2s2W4).         const(a_plzensky48663_txt_001_p2s2W4).
hide(node43_9, hide).         const(hide).
%%%%%%%% node43_10 %%%%%%%%%%%%%%%%%%%
node(node43_10).
deepord(node43_10, 4).         const(4).
functor(node43_10, PRED).         const(PRED).
gram_sempos(node43_10, v).         const(v).
id(node43_10, T_plzensky48663_txt_001_p2s2a7).         const(T_plzensky48663_txt_001_p2s2a7).
is_member(node43_10, 1).         const(1).
nodetype(node43_10, complex).         const(complex).
t_lemma(node43_10, byt).         const(byt).
val_frame_rf(node43_10, v_v_w243f1).         const(v_v_w243f1).
%%%%%%%% node43_11 %%%%%%%%%%%%%%%%%%%
node(node43_11).
deepord(node43_11, x4_1).         const(x4_1).
a_ref_type(node43_11, tree).         const(tree).
a_afun(node43_11, Pred).         const(Pred).
m_form(node43_11, byly).         const(byly).
m_lemma(node43_11, byt).         const(byt).
m_tag(node43_11, VpTP___XR_AA___).         const(VpTP___XR_AA___).
w_token(node43_11, byly).         const(byly).
a_ord(node43_11, 6).         const(6).
a_parent_id(node43_11, a_plzensky48663_txt_001_p2s2W10).         const(a_plzensky48663_txt_001_p2s2W10).
hide(node43_11, hide).         const(hide).
%%%%%%%% node43_12 %%%%%%%%%%%%%%%%%%%
node(node43_12).
deepord(node43_12, 6).         const(6).
functor(node43_12, ACT).         const(ACT).
gram_sempos(node43_12, n_denot).         const(n_denot).
id(node43_12, T_plzensky48663_txt_001_p2s2a8).         const(T_plzensky48663_txt_001_p2s2a8).
nodetype(node43_12, complex).         const(complex).
t_lemma(node43_12, osoba).         const(osoba).
%%%%%%%% node43_13 %%%%%%%%%%%%%%%%%%%
node(node43_13).
deepord(node43_13, 5).         const(5).
functor(node43_13, RSTR).         const(RSTR).
gram_sempos(node43_13, adj_quant_def).         const(adj_quant_def).
id(node43_13, T_plzensky48663_txt_001_p2s2a9).         const(T_plzensky48663_txt_001_p2s2a9).
nodetype(node43_13, complex).         const(complex).
t_lemma(node43_13, dva).         const(dva).
%%%%%%%% node43_14 %%%%%%%%%%%%%%%%%%%
node(node43_14).
deepord(node43_14, x5_1).         const(x5_1).
a_ref_type(node43_14, tree).         const(tree).
a_afun(node43_14, Atr).         const(Atr).
m_form(node43_14, dve).         const(dve).
m_lemma(node43_14, dva_2).         const(dva_2).
m_tag(node43_14, ClHP1__________).         const(ClHP1__________).
w_token(node43_14, dve).         const(dve).
a_ord(node43_14, 7).         const(7).
a_parent_id(node43_14, a_plzensky48663_txt_001_p2s2W8).         const(a_plzensky48663_txt_001_p2s2W8).
hide(node43_14, hide).         const(hide).
%%%%%%%% node43_15 %%%%%%%%%%%%%%%%%%%
node(node43_15).
deepord(node43_15, x6_1).         const(x6_1).
a_ref_type(node43_15, tree).         const(tree).
a_afun(node43_15, Sb).         const(Sb).
m_form(node43_15, osoby).         const(osoby).
m_lemma(node43_15, osoba).         const(osoba).
m_tag(node43_15, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node43_15, osoby).         const(osoby).
a_ord(node43_15, 8).         const(8).
a_parent_id(node43_15, a_plzensky48663_txt_001_p2s2W10).         const(a_plzensky48663_txt_001_p2s2W10).
hide(node43_15, hide).         const(hide).
%%%%%%%% node43_16 %%%%%%%%%%%%%%%%%%%
node(node43_16).
deepord(node43_16, 8).         const(8).
functor(node43_16, PRED).         const(PRED).
gram_sempos(node43_16, v).         const(v).
id(node43_16, T_plzensky48663_txt_001_p2s2a10).         const(T_plzensky48663_txt_001_p2s2a10).
is_member(node43_16, 1).         const(1).
nodetype(node43_16, complex).         const(complex).
t_lemma(node43_16, usmrtit).         const(usmrtit).
%%%%%%%% node43_17 %%%%%%%%%%%%%%%%%%%
node(node43_17).
deepord(node43_17, 7).         const(7).
functor(node43_17, PAT).         const(PAT).
gram_sempos(node43_17, n_pron_def_pers).         const(n_pron_def_pers).
id(node43_17, T_plzensky48663_txt_001_p2s2a14).         const(T_plzensky48663_txt_001_p2s2a14).
is_generated(node43_17, 1).         const(1).
nodetype(node43_17, complex).         const(complex).
t_lemma(node43_17, x_Cor).         const(x_Cor).
%%%%%%%% node43_18 %%%%%%%%%%%%%%%%%%%
node(node43_18).
deepord(node43_18, x8_1).         const(x8_1).
a_ref_type(node43_18, tree).         const(tree).
a_afun(node43_18, Pred).         const(Pred).
m_form(node43_18, usmrceny).         const(usmrceny).
m_lemma(node43_18, usmrtit__W).         const(usmrtit__W).
m_tag(node43_18, VsTP___XX_AP___).         const(VsTP___XX_AP___).
w_token(node43_18, usmrceny).         const(usmrceny).
a_ord(node43_18, 9).         const(9).
a_parent_id(node43_18, a_plzensky48663_txt_001_p2s2W10).         const(a_plzensky48663_txt_001_p2s2W10).
hide(node43_18, hide).         const(hide).
%%%%%%%% node43_19 %%%%%%%%%%%%%%%%%%%
node(node43_19).
deepord(node43_19, x9_1).         const(x9_1).
a_ref_type(node43_19, tree).         const(tree).
a_afun(node43_19, Coord).         const(Coord).
m_form(node43_19, a).         const(a).
m_lemma(node43_19, a_1).         const(a_1).
m_tag(node43_19, J______________).         const(J______________).
w_token(node43_19, a).         const(a).
a_ord(node43_19, 10).         const(10).
a_parent_id(node43_19, a_plzensky48663_txt_001_p2s2).         const(a_plzensky48663_txt_001_p2s2).
hide(node43_19, hide).         const(hide).
%%%%%%%% node43_20 %%%%%%%%%%%%%%%%%%%
node(node43_20).
deepord(node43_20, 12).         const(12).
functor(node43_20, PRED).         const(PRED).
gram_sempos(node43_20, v).         const(v).
id(node43_20, T_plzensky48663_txt_001_p2s2a11).         const(T_plzensky48663_txt_001_p2s2a11).
is_member(node43_20, 1).         const(1).
nodetype(node43_20, complex).         const(complex).
t_lemma(node43_20, zranit).         const(zranit).
val_frame_rf(node43_20, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node43_21 %%%%%%%%%%%%%%%%%%%
node(node43_21).
deepord(node43_21, 10).         const(10).
functor(node43_21, PAT).         const(PAT).
gram_sempos(node43_21, adj_quant_def).         const(adj_quant_def).
id(node43_21, T_plzensky48663_txt_001_p2s2a12).         const(T_plzensky48663_txt_001_p2s2a12).
nodetype(node43_21, complex).         const(complex).
t_lemma(node43_21, sestnact).         const(sestnact).
%%%%%%%% node43_22 %%%%%%%%%%%%%%%%%%%
node(node43_22).
deepord(node43_22, x10_1).         const(x10_1).
a_ref_type(node43_22, tree).         const(tree).
a_afun(node43_22, Sb).         const(Sb).
m_form(node43_22, sestnact).         const(sestnact).
m_lemma(node43_22, sestnact_16).         const(sestnact_16).
m_tag(node43_22, Cn_S1__________).         const(Cn_S1__________).
w_token(node43_22, sestnact).         const(sestnact).
a_ord(node43_22, 11).         const(11).
a_parent_id(node43_22, a_plzensky48663_txt_001_p2s2W13).         const(a_plzensky48663_txt_001_p2s2W13).
hide(node43_22, hide).         const(hide).
%%%%%%%% node43_23 %%%%%%%%%%%%%%%%%%%
node(node43_23).
deepord(node43_23, 11).         const(11).
functor(node43_23, ACT).         const(ACT).
gram_sempos(node43_23, n_denot).         const(n_denot).
id(node43_23, T_plzensky48663_txt_001_p2s2a13).         const(T_plzensky48663_txt_001_p2s2a13).
nodetype(node43_23, complex).         const(complex).
t_lemma(node43_23, osoba).         const(osoba).
%%%%%%%% node43_24 %%%%%%%%%%%%%%%%%%%
node(node43_24).
deepord(node43_24, x11_1).         const(x11_1).
a_ref_type(node43_24, tree).         const(tree).
a_afun(node43_24, Atr).         const(Atr).
m_form(node43_24, osob).         const(osob).
m_lemma(node43_24, osoba).         const(osoba).
m_tag(node43_24, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node43_24, osob).         const(osob).
a_ord(node43_24, 12).         const(12).
a_parent_id(node43_24, a_plzensky48663_txt_001_p2s2W11).         const(a_plzensky48663_txt_001_p2s2W11).
hide(node43_24, hide).         const(hide).
%%%%%%%% node43_25 %%%%%%%%%%%%%%%%%%%
node(node43_25).
deepord(node43_25, x12_1).         const(x12_1).
a_ref_type(node43_25, tree).         const(tree).
a_afun(node43_25, Pred).         const(Pred).
m_form(node43_25, zraneno).         const(zraneno).
m_lemma(node43_25, zranit__W).         const(zranit__W).
m_tag(node43_25, VsNS___XX_AP___).         const(VsNS___XX_AP___).
w_token(node43_25, zraneno).         const(zraneno).
w_no_space_after(node43_25, 1).         const(1).
a_ord(node43_25, 13).         const(13).
a_parent_id(node43_25, a_plzensky48663_txt_001_p2s2W10).         const(a_plzensky48663_txt_001_p2s2W10).
hide(node43_25, hide).         const(hide).
edge(node43_0, node43_1).
edge(node43_1, node43_2).
edge(node43_2, node43_3).
edge(node43_2, node43_4).
edge(node43_1, node43_5).
edge(node43_5, node43_6).
edge(node43_5, node43_7).
edge(node43_5, node43_8).
edge(node43_8, node43_9).
edge(node43_1, node43_10).
edge(node43_10, node43_11).
edge(node43_1, node43_12).
edge(node43_12, node43_13).
edge(node43_13, node43_14).
edge(node43_12, node43_15).
edge(node43_1, node43_16).
edge(node43_16, node43_17).
edge(node43_16, node43_18).
edge(node43_1, node43_19).
edge(node43_1, node43_20).
edge(node43_20, node43_21).
edge(node43_21, node43_22).
edge(node43_21, node43_23).
edge(node43_23, node43_24).
edge(node43_20, node43_25).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri dopravnich nehodach, u kterych hasici zasahovali, bylo usmrceno 333 osob a 4988 osob bylo zraneno. 
tree_root(node44_0).
valid_root(node44_0).
%%%%%%%% node44_0 %%%%%%%%%%%%%%%%%%%
node(node44_0).
atree_rf(node44_0, a_a_plzensky61718_txt_001_p3s3).         const(a_a_plzensky61718_txt_001_p3s3).
deepord(node44_0, 1).         const(1).
id(node44_0, T_plzensky61718_txt_001_p3s3).         const(T_plzensky61718_txt_001_p3s3).
nodetype(node44_0, root).         const(root).
sentence(node44_0, Pri_dopravnich_nehodach__u_kterych_hasici_zasahovali__bylo_usmrceno_333_osob_a_4988_osob_bylo_zraneno__).         const(Pri_dopravnich_nehodach__u_kterych_hasici_zasahovali__bylo_usmrceno_333_osob_a_4988_osob_bylo_zraneno__).
%%%%%%%% node44_1 %%%%%%%%%%%%%%%%%%%
node(node44_1).
deepord(node44_1, 11).         const(11).
functor(node44_1, CONJ).         const(CONJ).
id(node44_1, T_plzensky61718_txt_001_p3s3a1).         const(T_plzensky61718_txt_001_p3s3a1).
nodetype(node44_1, coap).         const(coap).
t_lemma(node44_1, a).         const(a).
%%%%%%%% node44_2 %%%%%%%%%%%%%%%%%%%
node(node44_2).
deepord(node44_2, 0).         const(0).
functor(node44_2, PAT).         const(PAT).
gram_sempos(node44_2, n_pron_def_pers).         const(n_pron_def_pers).
id(node44_2, T_plzensky61718_txt_001_p3s3a20).         const(T_plzensky61718_txt_001_p3s3a20).
is_generated(node44_2, 1).         const(1).
nodetype(node44_2, complex).         const(complex).
t_lemma(node44_2, x_PersPron).         const(x_PersPron).
%%%%%%%% node44_3 %%%%%%%%%%%%%%%%%%%
node(node44_3).
deepord(node44_3, 8).         const(8).
functor(node44_3, PRED).         const(PRED).
gram_sempos(node44_3, v).         const(v).
id(node44_3, T_plzensky61718_txt_001_p3s3a2).         const(T_plzensky61718_txt_001_p3s3a2).
is_member(node44_3, 1).         const(1).
nodetype(node44_3, complex).         const(complex).
t_lemma(node44_3, usmrtit).         const(usmrtit).
val_frame_rf(node44_3, v_v_w7307f1).         const(v_v_w7307f1).
%%%%%%%% node44_4 %%%%%%%%%%%%%%%%%%%
node(node44_4).
deepord(node44_4, 3).         const(3).
functor(node44_4, TWHEN).         const(TWHEN).
gram_sempos(node44_4, n_denot).         const(n_denot).
id(node44_4, T_plzensky61718_txt_001_p3s3a4).         const(T_plzensky61718_txt_001_p3s3a4).
nodetype(node44_4, complex).         const(complex).
subfunctor(node44_4, basic).         const(basic).
t_lemma(node44_4, nehoda).         const(nehoda).
%%%%%%%% node44_5 %%%%%%%%%%%%%%%%%%%
node(node44_5).
deepord(node44_5, 2).         const(2).
functor(node44_5, RSTR).         const(RSTR).
gram_sempos(node44_5, adj_denot).         const(adj_denot).
id(node44_5, T_plzensky61718_txt_001_p3s3a5).         const(T_plzensky61718_txt_001_p3s3a5).
nodetype(node44_5, complex).         const(complex).
t_lemma(node44_5, dopravni).         const(dopravni).
%%%%%%%% node44_6 %%%%%%%%%%%%%%%%%%%
node(node44_6).
deepord(node44_6, x2_1).         const(x2_1).
a_ref_type(node44_6, tree).         const(tree).
a_afun(node44_6, Atr).         const(Atr).
m_form(node44_6, dopravnich).         const(dopravnich).
m_lemma(node44_6, dopravni).         const(dopravni).
m_tag(node44_6, AAFP6____1A____).         const(AAFP6____1A____).
w_token(node44_6, dopravnich).         const(dopravnich).
a_ord(node44_6, 2).         const(2).
a_parent_id(node44_6, a_plzensky61718_txt_001_p3s3W3).         const(a_plzensky61718_txt_001_p3s3W3).
hide(node44_6, hide).         const(hide).
%%%%%%%% node44_7 %%%%%%%%%%%%%%%%%%%
node(node44_7).
deepord(node44_7, x3_1).         const(x3_1).
a_ref_type(node44_7, tree).         const(tree).
a_afun(node44_7, AuxP).         const(AuxP).
m_form(node44_7, Pri).         const(Pri).
m_lemma(node44_7, pri_1).         const(pri_1).
m_tag(node44_7, RR__6__________).         const(RR__6__________).
w_token(node44_7, Pri).         const(Pri).
a_ord(node44_7, 1).         const(1).
a_parent_id(node44_7, a_plzensky61718_txt_001_p3s3W11).         const(a_plzensky61718_txt_001_p3s3W11).
hide(node44_7, hide).         const(hide).
%%%%%%%% node44_8 %%%%%%%%%%%%%%%%%%%
node(node44_8).
deepord(node44_8, x3_2).         const(x3_2).
a_ref_type(node44_8, tree).         const(tree).
a_afun(node44_8, Adv).         const(Adv).
m_form(node44_8, nehodach).         const(nehodach).
m_lemma(node44_8, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node44_8, NNFP6_____A____).         const(NNFP6_____A____).
w_token(node44_8, nehodach).         const(nehodach).
w_no_space_after(node44_8, 1).         const(1).
a_ord(node44_8, 3).         const(3).
a_parent_id(node44_8, a_plzensky61718_txt_001_p3s3W1).         const(a_plzensky61718_txt_001_p3s3W1).
hide(node44_8, hide).         const(hide).
%%%%%%%% node44_9 %%%%%%%%%%%%%%%%%%%
node(node44_9).
deepord(node44_9, 7).         const(7).
functor(node44_9, RSTR).         const(RSTR).
gram_sempos(node44_9, v).         const(v).
id(node44_9, T_plzensky61718_txt_001_p3s3a6).         const(T_plzensky61718_txt_001_p3s3a6).
nodetype(node44_9, complex).         const(complex).
t_lemma(node44_9, zasahovat).         const(zasahovat).
val_frame_rf(node44_9, v_v_w9118f1).         const(v_v_w9118f1).
%%%%%%%% node44_10 %%%%%%%%%%%%%%%%%%%
node(node44_10).
deepord(node44_10, 4).         const(4).
functor(node44_10, PAT).         const(PAT).
id(node44_10, T_plzensky61718_txt_001_p3s3a19).         const(T_plzensky61718_txt_001_p3s3a19).
is_generated(node44_10, 1).         const(1).
nodetype(node44_10, qcomplex).         const(qcomplex).
t_lemma(node44_10, x_Gen).         const(x_Gen).
%%%%%%%% node44_11 %%%%%%%%%%%%%%%%%%%
node(node44_11).
deepord(node44_11, 5).         const(5).
functor(node44_11, LOC).         const(LOC).
gram_sempos(node44_11, n_pron_indef).         const(n_pron_indef).
id(node44_11, T_plzensky61718_txt_001_p3s3a9).         const(T_plzensky61718_txt_001_p3s3a9).
nodetype(node44_11, complex).         const(complex).
subfunctor(node44_11, near).         const(near).
t_lemma(node44_11, ktery).         const(ktery).
%%%%%%%% node44_12 %%%%%%%%%%%%%%%%%%%
node(node44_12).
deepord(node44_12, x5_1).         const(x5_1).
a_ref_type(node44_12, tree).         const(tree).
a_afun(node44_12, AuxP).         const(AuxP).
m_form(node44_12, u).         const(u).
m_lemma(node44_12, u_1).         const(u_1).
m_tag(node44_12, RR__2__________).         const(RR__2__________).
w_token(node44_12, u).         const(u).
a_ord(node44_12, 5).         const(5).
a_parent_id(node44_12, a_plzensky61718_txt_001_p3s3W8).         const(a_plzensky61718_txt_001_p3s3W8).
hide(node44_12, hide).         const(hide).
%%%%%%%% node44_13 %%%%%%%%%%%%%%%%%%%
node(node44_13).
deepord(node44_13, x5_2).         const(x5_2).
a_ref_type(node44_13, tree).         const(tree).
a_afun(node44_13, Adv).         const(Adv).
m_form(node44_13, kterych).         const(kterych).
m_lemma(node44_13, ktery).         const(ktery).
m_tag(node44_13, P4XP2__________).         const(P4XP2__________).
w_token(node44_13, kterych).         const(kterych).
a_ord(node44_13, 6).         const(6).
a_parent_id(node44_13, a_plzensky61718_txt_001_p3s3W5).         const(a_plzensky61718_txt_001_p3s3W5).
hide(node44_13, hide).         const(hide).
%%%%%%%% node44_14 %%%%%%%%%%%%%%%%%%%
node(node44_14).
deepord(node44_14, 6).         const(6).
functor(node44_14, ACT).         const(ACT).
gram_sempos(node44_14, n_denot).         const(n_denot).
id(node44_14, T_plzensky61718_txt_001_p3s3a10).         const(T_plzensky61718_txt_001_p3s3a10).
nodetype(node44_14, complex).         const(complex).
t_lemma(node44_14, hasic).         const(hasic).
%%%%%%%% node44_15 %%%%%%%%%%%%%%%%%%%
node(node44_15).
deepord(node44_15, x6_1).         const(x6_1).
a_ref_type(node44_15, tree).         const(tree).
a_afun(node44_15, Sb).         const(Sb).
m_form(node44_15, hasici).         const(hasici).
m_lemma(node44_15, hasic).         const(hasic).
m_tag(node44_15, NNMP1_____A____).         const(NNMP1_____A____).
w_token(node44_15, hasici).         const(hasici).
a_ord(node44_15, 7).         const(7).
a_parent_id(node44_15, a_plzensky61718_txt_001_p3s3W8).         const(a_plzensky61718_txt_001_p3s3W8).
hide(node44_15, hide).         const(hide).
%%%%%%%% node44_16 %%%%%%%%%%%%%%%%%%%
node(node44_16).
deepord(node44_16, x7_1).         const(x7_1).
a_ref_type(node44_16, tree).         const(tree).
a_afun(node44_16, Atr).         const(Atr).
m_form(node44_16, zasahovali).         const(zasahovali).
m_lemma(node44_16, zasahovat__T).         const(zasahovat__T).
m_tag(node44_16, VpMP___XR_AA___).         const(VpMP___XR_AA___).
w_token(node44_16, zasahovali).         const(zasahovali).
w_no_space_after(node44_16, 1).         const(1).
a_ord(node44_16, 8).         const(8).
a_parent_id(node44_16, a_plzensky61718_txt_001_p3s3W3).         const(a_plzensky61718_txt_001_p3s3W3).
hide(node44_16, hide).         const(hide).
%%%%%%%% node44_17 %%%%%%%%%%%%%%%%%%%
node(node44_17).
deepord(node44_17, x8_1).         const(x8_1).
a_ref_type(node44_17, tree).         const(tree).
a_afun(node44_17, AuxV).         const(AuxV).
m_form(node44_17, bylo).         const(bylo).
m_lemma(node44_17, byt).         const(byt).
m_tag(node44_17, VpNS___XR_AA___).         const(VpNS___XR_AA___).
w_token(node44_17, bylo).         const(bylo).
a_ord(node44_17, 10).         const(10).
a_parent_id(node44_17, a_plzensky61718_txt_001_p3s3W11).         const(a_plzensky61718_txt_001_p3s3W11).
hide(node44_17, hide).         const(hide).
%%%%%%%% node44_18 %%%%%%%%%%%%%%%%%%%
node(node44_18).
deepord(node44_18, x8_2).         const(x8_2).
a_ref_type(node44_18, tree).         const(tree).
a_afun(node44_18, Pred).         const(Pred).
m_form(node44_18, usmrceno).         const(usmrceno).
m_lemma(node44_18, usmrtit__W).         const(usmrtit__W).
m_tag(node44_18, VsNS___XX_AP___).         const(VsNS___XX_AP___).
w_token(node44_18, usmrceno).         const(usmrceno).
a_ord(node44_18, 11).         const(11).
a_parent_id(node44_18, a_plzensky61718_txt_001_p3s3W14).         const(a_plzensky61718_txt_001_p3s3W14).
hide(node44_18, hide).         const(hide).
%%%%%%%% node44_19 %%%%%%%%%%%%%%%%%%%
node(node44_19).
deepord(node44_19, 10).         const(10).
functor(node44_19, ACT).         const(ACT).
gram_sempos(node44_19, n_denot).         const(n_denot).
id(node44_19, T_plzensky61718_txt_001_p3s3a14).         const(T_plzensky61718_txt_001_p3s3a14).
nodetype(node44_19, complex).         const(complex).
t_lemma(node44_19, osoba).         const(osoba).
%%%%%%%% node44_20 %%%%%%%%%%%%%%%%%%%
node(node44_20).
deepord(node44_20, 9).         const(9).
functor(node44_20, RSTR).         const(RSTR).
gram_sempos(node44_20, adj_quant_def).         const(adj_quant_def).
id(node44_20, T_plzensky61718_txt_001_p3s3a13).         const(T_plzensky61718_txt_001_p3s3a13).
nodetype(node44_20, complex).         const(complex).
t_lemma(node44_20, 333).         const(333).
%%%%%%%% node44_21 %%%%%%%%%%%%%%%%%%%
node(node44_21).
deepord(node44_21, x9_1).         const(x9_1).
a_ref_type(node44_21, tree).         const(tree).
a_afun(node44_21, Sb).         const(Sb).
m_form(node44_21, 333).         const(333).
m_lemma(node44_21, 333).         const(333).
m_tag(node44_21, C=_____________).         const(C=_____________).
w_token(node44_21, 333).         const(333).
a_ord(node44_21, 12).         const(12).
a_parent_id(node44_21, a_plzensky61718_txt_001_p3s3W11).         const(a_plzensky61718_txt_001_p3s3W11).
hide(node44_21, hide).         const(hide).
%%%%%%%% node44_22 %%%%%%%%%%%%%%%%%%%
node(node44_22).
deepord(node44_22, x10_1).         const(x10_1).
a_ref_type(node44_22, tree).         const(tree).
a_afun(node44_22, Atr).         const(Atr).
m_form(node44_22, osob).         const(osob).
m_lemma(node44_22, osoba).         const(osoba).
m_tag(node44_22, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node44_22, osob).         const(osob).
a_ord(node44_22, 13).         const(13).
a_parent_id(node44_22, a_plzensky61718_txt_001_p3s3W12).         const(a_plzensky61718_txt_001_p3s3W12).
hide(node44_22, hide).         const(hide).
%%%%%%%% node44_23 %%%%%%%%%%%%%%%%%%%
node(node44_23).
deepord(node44_23, x11_1).         const(x11_1).
a_ref_type(node44_23, tree).         const(tree).
a_afun(node44_23, Coord).         const(Coord).
m_form(node44_23, a).         const(a).
m_lemma(node44_23, a_1).         const(a_1).
m_tag(node44_23, J______________).         const(J______________).
w_token(node44_23, a).         const(a).
a_ord(node44_23, 14).         const(14).
a_parent_id(node44_23, a_plzensky61718_txt_001_p3s3).         const(a_plzensky61718_txt_001_p3s3).
hide(node44_23, hide).         const(hide).
%%%%%%%% node44_24 %%%%%%%%%%%%%%%%%%%
node(node44_24).
deepord(node44_24, 14).         const(14).
functor(node44_24, PRED).         const(PRED).
gram_sempos(node44_24, v).         const(v).
id(node44_24, T_plzensky61718_txt_001_p3s3a15).         const(T_plzensky61718_txt_001_p3s3a15).
is_member(node44_24, 1).         const(1).
nodetype(node44_24, complex).         const(complex).
t_lemma(node44_24, zranit).         const(zranit).
val_frame_rf(node44_24, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node44_25 %%%%%%%%%%%%%%%%%%%
node(node44_25).
deepord(node44_25, 13).         const(13).
functor(node44_25, ACT).         const(ACT).
gram_sempos(node44_25, n_denot).         const(n_denot).
id(node44_25, T_plzensky61718_txt_001_p3s3a17).         const(T_plzensky61718_txt_001_p3s3a17).
nodetype(node44_25, complex).         const(complex).
t_lemma(node44_25, osoba).         const(osoba).
%%%%%%%% node44_26 %%%%%%%%%%%%%%%%%%%
node(node44_26).
deepord(node44_26, 12).         const(12).
functor(node44_26, RSTR).         const(RSTR).
gram_sempos(node44_26, adj_quant_def).         const(adj_quant_def).
id(node44_26, T_plzensky61718_txt_001_p3s3a16).         const(T_plzensky61718_txt_001_p3s3a16).
nodetype(node44_26, complex).         const(complex).
t_lemma(node44_26, 4988).         const(4988).
%%%%%%%% node44_27 %%%%%%%%%%%%%%%%%%%
node(node44_27).
deepord(node44_27, x12_1).         const(x12_1).
a_ref_type(node44_27, tree).         const(tree).
a_afun(node44_27, Sb).         const(Sb).
m_form(node44_27, 4988).         const(4988).
m_lemma(node44_27, 4988).         const(4988).
m_tag(node44_27, C=_____________).         const(C=_____________).
w_token(node44_27, x4_988).         const(x4_988).
a_ord(node44_27, 15).         const(15).
a_parent_id(node44_27, a_plzensky61718_txt_001_p3s3W18).         const(a_plzensky61718_txt_001_p3s3W18).
hide(node44_27, hide).         const(hide).
%%%%%%%% node44_28 %%%%%%%%%%%%%%%%%%%
node(node44_28).
deepord(node44_28, x13_1).         const(x13_1).
a_ref_type(node44_28, tree).         const(tree).
a_afun(node44_28, Atr).         const(Atr).
m_form(node44_28, osob).         const(osob).
m_lemma(node44_28, osoba).         const(osoba).
m_tag(node44_28, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node44_28, osob).         const(osob).
a_ord(node44_28, 16).         const(16).
a_parent_id(node44_28, a_plzensky61718_txt_001_p3s3W15).         const(a_plzensky61718_txt_001_p3s3W15).
hide(node44_28, hide).         const(hide).
%%%%%%%% node44_29 %%%%%%%%%%%%%%%%%%%
node(node44_29).
deepord(node44_29, x14_1).         const(x14_1).
a_ref_type(node44_29, tree).         const(tree).
a_afun(node44_29, AuxV).         const(AuxV).
m_form(node44_29, bylo).         const(bylo).
m_lemma(node44_29, byt).         const(byt).
m_tag(node44_29, VpNS___XR_AA___).         const(VpNS___XR_AA___).
w_token(node44_29, bylo).         const(bylo).
a_ord(node44_29, 17).         const(17).
a_parent_id(node44_29, a_plzensky61718_txt_001_p3s3W18).         const(a_plzensky61718_txt_001_p3s3W18).
hide(node44_29, hide).         const(hide).
%%%%%%%% node44_30 %%%%%%%%%%%%%%%%%%%
node(node44_30).
deepord(node44_30, x14_2).         const(x14_2).
a_ref_type(node44_30, tree).         const(tree).
a_afun(node44_30, Pred).         const(Pred).
m_form(node44_30, zraneno).         const(zraneno).
m_lemma(node44_30, zranit__W).         const(zranit__W).
m_tag(node44_30, VsNS___XX_AP___).         const(VsNS___XX_AP___).
w_token(node44_30, zraneno).         const(zraneno).
w_no_space_after(node44_30, 1).         const(1).
a_ord(node44_30, 18).         const(18).
a_parent_id(node44_30, a_plzensky61718_txt_001_p3s3W14).         const(a_plzensky61718_txt_001_p3s3W14).
hide(node44_30, hide).         const(hide).
edge(node44_0, node44_1).
edge(node44_1, node44_2).
edge(node44_1, node44_3).
edge(node44_3, node44_4).
edge(node44_4, node44_5).
edge(node44_5, node44_6).
edge(node44_4, node44_7).
edge(node44_4, node44_8).
edge(node44_4, node44_9).
edge(node44_9, node44_10).
edge(node44_9, node44_11).
edge(node44_11, node44_12).
edge(node44_11, node44_13).
edge(node44_9, node44_14).
edge(node44_14, node44_15).
edge(node44_9, node44_16).
edge(node44_3, node44_17).
edge(node44_3, node44_18).
edge(node44_3, node44_19).
edge(node44_19, node44_20).
edge(node44_20, node44_21).
edge(node44_19, node44_22).
edge(node44_1, node44_23).
edge(node44_1, node44_24).
edge(node44_24, node44_25).
edge(node44_25, node44_26).
edge(node44_26, node44_27).
edge(node44_25, node44_28).
edge(node44_24, node44_29).
edge(node44_24, node44_30).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri dopravnich nehodach, u kterych hasici zasahovali, bylo usmrceno 333 osob a 4988 osob bylo zraneno. 
tree_root(node45_0).
valid_root(node45_0).
%%%%%%%% node45_0 %%%%%%%%%%%%%%%%%%%
node(node45_0).
atree_rf(node45_0, a_a_plzensky61718_txt_001_p3s3).         const(a_a_plzensky61718_txt_001_p3s3).
deepord(node45_0, 1).         const(1).
id(node45_0, T_plzensky61718_txt_001_p3s3).         const(T_plzensky61718_txt_001_p3s3).
nodetype(node45_0, root).         const(root).
sentence(node45_0, Pri_dopravnich_nehodach__u_kterych_hasici_zasahovali__bylo_usmrceno_333_osob_a_4988_osob_bylo_zraneno__).         const(Pri_dopravnich_nehodach__u_kterych_hasici_zasahovali__bylo_usmrceno_333_osob_a_4988_osob_bylo_zraneno__).
%%%%%%%% node45_1 %%%%%%%%%%%%%%%%%%%
node(node45_1).
deepord(node45_1, 11).         const(11).
functor(node45_1, CONJ).         const(CONJ).
id(node45_1, T_plzensky61718_txt_001_p3s3a1).         const(T_plzensky61718_txt_001_p3s3a1).
nodetype(node45_1, coap).         const(coap).
t_lemma(node45_1, a).         const(a).
%%%%%%%% node45_2 %%%%%%%%%%%%%%%%%%%
node(node45_2).
deepord(node45_2, 0).         const(0).
functor(node45_2, PAT).         const(PAT).
gram_sempos(node45_2, n_pron_def_pers).         const(n_pron_def_pers).
id(node45_2, T_plzensky61718_txt_001_p3s3a20).         const(T_plzensky61718_txt_001_p3s3a20).
is_generated(node45_2, 1).         const(1).
nodetype(node45_2, complex).         const(complex).
t_lemma(node45_2, x_PersPron).         const(x_PersPron).
%%%%%%%% node45_3 %%%%%%%%%%%%%%%%%%%
node(node45_3).
deepord(node45_3, 8).         const(8).
functor(node45_3, PRED).         const(PRED).
gram_sempos(node45_3, v).         const(v).
id(node45_3, T_plzensky61718_txt_001_p3s3a2).         const(T_plzensky61718_txt_001_p3s3a2).
is_member(node45_3, 1).         const(1).
nodetype(node45_3, complex).         const(complex).
t_lemma(node45_3, usmrtit).         const(usmrtit).
val_frame_rf(node45_3, v_v_w7307f1).         const(v_v_w7307f1).
%%%%%%%% node45_4 %%%%%%%%%%%%%%%%%%%
node(node45_4).
deepord(node45_4, 3).         const(3).
functor(node45_4, TWHEN).         const(TWHEN).
gram_sempos(node45_4, n_denot).         const(n_denot).
id(node45_4, T_plzensky61718_txt_001_p3s3a4).         const(T_plzensky61718_txt_001_p3s3a4).
nodetype(node45_4, complex).         const(complex).
subfunctor(node45_4, basic).         const(basic).
t_lemma(node45_4, nehoda).         const(nehoda).
%%%%%%%% node45_5 %%%%%%%%%%%%%%%%%%%
node(node45_5).
deepord(node45_5, 2).         const(2).
functor(node45_5, RSTR).         const(RSTR).
gram_sempos(node45_5, adj_denot).         const(adj_denot).
id(node45_5, T_plzensky61718_txt_001_p3s3a5).         const(T_plzensky61718_txt_001_p3s3a5).
nodetype(node45_5, complex).         const(complex).
t_lemma(node45_5, dopravni).         const(dopravni).
%%%%%%%% node45_6 %%%%%%%%%%%%%%%%%%%
node(node45_6).
deepord(node45_6, x2_1).         const(x2_1).
a_ref_type(node45_6, tree).         const(tree).
a_afun(node45_6, Atr).         const(Atr).
m_form(node45_6, dopravnich).         const(dopravnich).
m_lemma(node45_6, dopravni).         const(dopravni).
m_tag(node45_6, AAFP6____1A____).         const(AAFP6____1A____).
w_token(node45_6, dopravnich).         const(dopravnich).
a_ord(node45_6, 2).         const(2).
a_parent_id(node45_6, a_plzensky61718_txt_001_p3s3W3).         const(a_plzensky61718_txt_001_p3s3W3).
hide(node45_6, hide).         const(hide).
%%%%%%%% node45_7 %%%%%%%%%%%%%%%%%%%
node(node45_7).
deepord(node45_7, x3_1).         const(x3_1).
a_ref_type(node45_7, tree).         const(tree).
a_afun(node45_7, AuxP).         const(AuxP).
m_form(node45_7, Pri).         const(Pri).
m_lemma(node45_7, pri_1).         const(pri_1).
m_tag(node45_7, RR__6__________).         const(RR__6__________).
w_token(node45_7, Pri).         const(Pri).
a_ord(node45_7, 1).         const(1).
a_parent_id(node45_7, a_plzensky61718_txt_001_p3s3W11).         const(a_plzensky61718_txt_001_p3s3W11).
hide(node45_7, hide).         const(hide).
%%%%%%%% node45_8 %%%%%%%%%%%%%%%%%%%
node(node45_8).
deepord(node45_8, x3_2).         const(x3_2).
a_ref_type(node45_8, tree).         const(tree).
a_afun(node45_8, Adv).         const(Adv).
m_form(node45_8, nehodach).         const(nehodach).
m_lemma(node45_8, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node45_8, NNFP6_____A____).         const(NNFP6_____A____).
w_token(node45_8, nehodach).         const(nehodach).
w_no_space_after(node45_8, 1).         const(1).
a_ord(node45_8, 3).         const(3).
a_parent_id(node45_8, a_plzensky61718_txt_001_p3s3W1).         const(a_plzensky61718_txt_001_p3s3W1).
hide(node45_8, hide).         const(hide).
%%%%%%%% node45_9 %%%%%%%%%%%%%%%%%%%
node(node45_9).
deepord(node45_9, 7).         const(7).
functor(node45_9, RSTR).         const(RSTR).
gram_sempos(node45_9, v).         const(v).
id(node45_9, T_plzensky61718_txt_001_p3s3a6).         const(T_plzensky61718_txt_001_p3s3a6).
nodetype(node45_9, complex).         const(complex).
t_lemma(node45_9, zasahovat).         const(zasahovat).
val_frame_rf(node45_9, v_v_w9118f1).         const(v_v_w9118f1).
%%%%%%%% node45_10 %%%%%%%%%%%%%%%%%%%
node(node45_10).
deepord(node45_10, 4).         const(4).
functor(node45_10, PAT).         const(PAT).
id(node45_10, T_plzensky61718_txt_001_p3s3a19).         const(T_plzensky61718_txt_001_p3s3a19).
is_generated(node45_10, 1).         const(1).
nodetype(node45_10, qcomplex).         const(qcomplex).
t_lemma(node45_10, x_Gen).         const(x_Gen).
%%%%%%%% node45_11 %%%%%%%%%%%%%%%%%%%
node(node45_11).
deepord(node45_11, 5).         const(5).
functor(node45_11, LOC).         const(LOC).
gram_sempos(node45_11, n_pron_indef).         const(n_pron_indef).
id(node45_11, T_plzensky61718_txt_001_p3s3a9).         const(T_plzensky61718_txt_001_p3s3a9).
nodetype(node45_11, complex).         const(complex).
subfunctor(node45_11, near).         const(near).
t_lemma(node45_11, ktery).         const(ktery).
%%%%%%%% node45_12 %%%%%%%%%%%%%%%%%%%
node(node45_12).
deepord(node45_12, x5_1).         const(x5_1).
a_ref_type(node45_12, tree).         const(tree).
a_afun(node45_12, AuxP).         const(AuxP).
m_form(node45_12, u).         const(u).
m_lemma(node45_12, u_1).         const(u_1).
m_tag(node45_12, RR__2__________).         const(RR__2__________).
w_token(node45_12, u).         const(u).
a_ord(node45_12, 5).         const(5).
a_parent_id(node45_12, a_plzensky61718_txt_001_p3s3W8).         const(a_plzensky61718_txt_001_p3s3W8).
hide(node45_12, hide).         const(hide).
%%%%%%%% node45_13 %%%%%%%%%%%%%%%%%%%
node(node45_13).
deepord(node45_13, x5_2).         const(x5_2).
a_ref_type(node45_13, tree).         const(tree).
a_afun(node45_13, Adv).         const(Adv).
m_form(node45_13, kterych).         const(kterych).
m_lemma(node45_13, ktery).         const(ktery).
m_tag(node45_13, P4XP2__________).         const(P4XP2__________).
w_token(node45_13, kterych).         const(kterych).
a_ord(node45_13, 6).         const(6).
a_parent_id(node45_13, a_plzensky61718_txt_001_p3s3W5).         const(a_plzensky61718_txt_001_p3s3W5).
hide(node45_13, hide).         const(hide).
%%%%%%%% node45_14 %%%%%%%%%%%%%%%%%%%
node(node45_14).
deepord(node45_14, 6).         const(6).
functor(node45_14, ACT).         const(ACT).
gram_sempos(node45_14, n_denot).         const(n_denot).
id(node45_14, T_plzensky61718_txt_001_p3s3a10).         const(T_plzensky61718_txt_001_p3s3a10).
nodetype(node45_14, complex).         const(complex).
t_lemma(node45_14, hasic).         const(hasic).
%%%%%%%% node45_15 %%%%%%%%%%%%%%%%%%%
node(node45_15).
deepord(node45_15, x6_1).         const(x6_1).
a_ref_type(node45_15, tree).         const(tree).
a_afun(node45_15, Sb).         const(Sb).
m_form(node45_15, hasici).         const(hasici).
m_lemma(node45_15, hasic).         const(hasic).
m_tag(node45_15, NNMP1_____A____).         const(NNMP1_____A____).
w_token(node45_15, hasici).         const(hasici).
a_ord(node45_15, 7).         const(7).
a_parent_id(node45_15, a_plzensky61718_txt_001_p3s3W8).         const(a_plzensky61718_txt_001_p3s3W8).
hide(node45_15, hide).         const(hide).
%%%%%%%% node45_16 %%%%%%%%%%%%%%%%%%%
node(node45_16).
deepord(node45_16, x7_1).         const(x7_1).
a_ref_type(node45_16, tree).         const(tree).
a_afun(node45_16, Atr).         const(Atr).
m_form(node45_16, zasahovali).         const(zasahovali).
m_lemma(node45_16, zasahovat__T).         const(zasahovat__T).
m_tag(node45_16, VpMP___XR_AA___).         const(VpMP___XR_AA___).
w_token(node45_16, zasahovali).         const(zasahovali).
w_no_space_after(node45_16, 1).         const(1).
a_ord(node45_16, 8).         const(8).
a_parent_id(node45_16, a_plzensky61718_txt_001_p3s3W3).         const(a_plzensky61718_txt_001_p3s3W3).
hide(node45_16, hide).         const(hide).
%%%%%%%% node45_17 %%%%%%%%%%%%%%%%%%%
node(node45_17).
deepord(node45_17, x8_1).         const(x8_1).
a_ref_type(node45_17, tree).         const(tree).
a_afun(node45_17, AuxV).         const(AuxV).
m_form(node45_17, bylo).         const(bylo).
m_lemma(node45_17, byt).         const(byt).
m_tag(node45_17, VpNS___XR_AA___).         const(VpNS___XR_AA___).
w_token(node45_17, bylo).         const(bylo).
a_ord(node45_17, 10).         const(10).
a_parent_id(node45_17, a_plzensky61718_txt_001_p3s3W11).         const(a_plzensky61718_txt_001_p3s3W11).
hide(node45_17, hide).         const(hide).
%%%%%%%% node45_18 %%%%%%%%%%%%%%%%%%%
node(node45_18).
deepord(node45_18, x8_2).         const(x8_2).
a_ref_type(node45_18, tree).         const(tree).
a_afun(node45_18, Pred).         const(Pred).
m_form(node45_18, usmrceno).         const(usmrceno).
m_lemma(node45_18, usmrtit__W).         const(usmrtit__W).
m_tag(node45_18, VsNS___XX_AP___).         const(VsNS___XX_AP___).
w_token(node45_18, usmrceno).         const(usmrceno).
a_ord(node45_18, 11).         const(11).
a_parent_id(node45_18, a_plzensky61718_txt_001_p3s3W14).         const(a_plzensky61718_txt_001_p3s3W14).
hide(node45_18, hide).         const(hide).
%%%%%%%% node45_19 %%%%%%%%%%%%%%%%%%%
node(node45_19).
deepord(node45_19, 10).         const(10).
functor(node45_19, ACT).         const(ACT).
gram_sempos(node45_19, n_denot).         const(n_denot).
id(node45_19, T_plzensky61718_txt_001_p3s3a14).         const(T_plzensky61718_txt_001_p3s3a14).
nodetype(node45_19, complex).         const(complex).
t_lemma(node45_19, osoba).         const(osoba).
%%%%%%%% node45_20 %%%%%%%%%%%%%%%%%%%
node(node45_20).
deepord(node45_20, 9).         const(9).
functor(node45_20, RSTR).         const(RSTR).
gram_sempos(node45_20, adj_quant_def).         const(adj_quant_def).
id(node45_20, T_plzensky61718_txt_001_p3s3a13).         const(T_plzensky61718_txt_001_p3s3a13).
nodetype(node45_20, complex).         const(complex).
t_lemma(node45_20, 333).         const(333).
%%%%%%%% node45_21 %%%%%%%%%%%%%%%%%%%
node(node45_21).
deepord(node45_21, x9_1).         const(x9_1).
a_ref_type(node45_21, tree).         const(tree).
a_afun(node45_21, Sb).         const(Sb).
m_form(node45_21, 333).         const(333).
m_lemma(node45_21, 333).         const(333).
m_tag(node45_21, C=_____________).         const(C=_____________).
w_token(node45_21, 333).         const(333).
a_ord(node45_21, 12).         const(12).
a_parent_id(node45_21, a_plzensky61718_txt_001_p3s3W11).         const(a_plzensky61718_txt_001_p3s3W11).
hide(node45_21, hide).         const(hide).
%%%%%%%% node45_22 %%%%%%%%%%%%%%%%%%%
node(node45_22).
deepord(node45_22, x10_1).         const(x10_1).
a_ref_type(node45_22, tree).         const(tree).
a_afun(node45_22, Atr).         const(Atr).
m_form(node45_22, osob).         const(osob).
m_lemma(node45_22, osoba).         const(osoba).
m_tag(node45_22, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node45_22, osob).         const(osob).
a_ord(node45_22, 13).         const(13).
a_parent_id(node45_22, a_plzensky61718_txt_001_p3s3W12).         const(a_plzensky61718_txt_001_p3s3W12).
hide(node45_22, hide).         const(hide).
%%%%%%%% node45_23 %%%%%%%%%%%%%%%%%%%
node(node45_23).
deepord(node45_23, x11_1).         const(x11_1).
a_ref_type(node45_23, tree).         const(tree).
a_afun(node45_23, Coord).         const(Coord).
m_form(node45_23, a).         const(a).
m_lemma(node45_23, a_1).         const(a_1).
m_tag(node45_23, J______________).         const(J______________).
w_token(node45_23, a).         const(a).
a_ord(node45_23, 14).         const(14).
a_parent_id(node45_23, a_plzensky61718_txt_001_p3s3).         const(a_plzensky61718_txt_001_p3s3).
hide(node45_23, hide).         const(hide).
%%%%%%%% node45_24 %%%%%%%%%%%%%%%%%%%
node(node45_24).
deepord(node45_24, 14).         const(14).
functor(node45_24, PRED).         const(PRED).
gram_sempos(node45_24, v).         const(v).
id(node45_24, T_plzensky61718_txt_001_p3s3a15).         const(T_plzensky61718_txt_001_p3s3a15).
is_member(node45_24, 1).         const(1).
nodetype(node45_24, complex).         const(complex).
t_lemma(node45_24, zranit).         const(zranit).
val_frame_rf(node45_24, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node45_25 %%%%%%%%%%%%%%%%%%%
node(node45_25).
deepord(node45_25, 13).         const(13).
functor(node45_25, ACT).         const(ACT).
gram_sempos(node45_25, n_denot).         const(n_denot).
id(node45_25, T_plzensky61718_txt_001_p3s3a17).         const(T_plzensky61718_txt_001_p3s3a17).
nodetype(node45_25, complex).         const(complex).
t_lemma(node45_25, osoba).         const(osoba).
%%%%%%%% node45_26 %%%%%%%%%%%%%%%%%%%
node(node45_26).
deepord(node45_26, 12).         const(12).
functor(node45_26, RSTR).         const(RSTR).
gram_sempos(node45_26, adj_quant_def).         const(adj_quant_def).
id(node45_26, T_plzensky61718_txt_001_p3s3a16).         const(T_plzensky61718_txt_001_p3s3a16).
nodetype(node45_26, complex).         const(complex).
t_lemma(node45_26, 4988).         const(4988).
%%%%%%%% node45_27 %%%%%%%%%%%%%%%%%%%
node(node45_27).
deepord(node45_27, x12_1).         const(x12_1).
a_ref_type(node45_27, tree).         const(tree).
a_afun(node45_27, Sb).         const(Sb).
m_form(node45_27, 4988).         const(4988).
m_lemma(node45_27, 4988).         const(4988).
m_tag(node45_27, C=_____________).         const(C=_____________).
w_token(node45_27, x4_988).         const(x4_988).
a_ord(node45_27, 15).         const(15).
a_parent_id(node45_27, a_plzensky61718_txt_001_p3s3W18).         const(a_plzensky61718_txt_001_p3s3W18).
hide(node45_27, hide).         const(hide).
%%%%%%%% node45_28 %%%%%%%%%%%%%%%%%%%
node(node45_28).
deepord(node45_28, x13_1).         const(x13_1).
a_ref_type(node45_28, tree).         const(tree).
a_afun(node45_28, Atr).         const(Atr).
m_form(node45_28, osob).         const(osob).
m_lemma(node45_28, osoba).         const(osoba).
m_tag(node45_28, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node45_28, osob).         const(osob).
a_ord(node45_28, 16).         const(16).
a_parent_id(node45_28, a_plzensky61718_txt_001_p3s3W15).         const(a_plzensky61718_txt_001_p3s3W15).
hide(node45_28, hide).         const(hide).
%%%%%%%% node45_29 %%%%%%%%%%%%%%%%%%%
node(node45_29).
deepord(node45_29, x14_1).         const(x14_1).
a_ref_type(node45_29, tree).         const(tree).
a_afun(node45_29, AuxV).         const(AuxV).
m_form(node45_29, bylo).         const(bylo).
m_lemma(node45_29, byt).         const(byt).
m_tag(node45_29, VpNS___XR_AA___).         const(VpNS___XR_AA___).
w_token(node45_29, bylo).         const(bylo).
a_ord(node45_29, 17).         const(17).
a_parent_id(node45_29, a_plzensky61718_txt_001_p3s3W18).         const(a_plzensky61718_txt_001_p3s3W18).
hide(node45_29, hide).         const(hide).
%%%%%%%% node45_30 %%%%%%%%%%%%%%%%%%%
node(node45_30).
deepord(node45_30, x14_2).         const(x14_2).
a_ref_type(node45_30, tree).         const(tree).
a_afun(node45_30, Pred).         const(Pred).
m_form(node45_30, zraneno).         const(zraneno).
m_lemma(node45_30, zranit__W).         const(zranit__W).
m_tag(node45_30, VsNS___XX_AP___).         const(VsNS___XX_AP___).
w_token(node45_30, zraneno).         const(zraneno).
w_no_space_after(node45_30, 1).         const(1).
a_ord(node45_30, 18).         const(18).
a_parent_id(node45_30, a_plzensky61718_txt_001_p3s3W14).         const(a_plzensky61718_txt_001_p3s3W14).
hide(node45_30, hide).         const(hide).
edge(node45_0, node45_1).
edge(node45_1, node45_2).
edge(node45_1, node45_3).
edge(node45_3, node45_4).
edge(node45_4, node45_5).
edge(node45_5, node45_6).
edge(node45_4, node45_7).
edge(node45_4, node45_8).
edge(node45_4, node45_9).
edge(node45_9, node45_10).
edge(node45_9, node45_11).
edge(node45_11, node45_12).
edge(node45_11, node45_13).
edge(node45_9, node45_14).
edge(node45_14, node45_15).
edge(node45_9, node45_16).
edge(node45_3, node45_17).
edge(node45_3, node45_18).
edge(node45_3, node45_19).
edge(node45_19, node45_20).
edge(node45_20, node45_21).
edge(node45_19, node45_22).
edge(node45_1, node45_23).
edge(node45_1, node45_24).
edge(node45_24, node45_25).
edge(node45_25, node45_26).
edge(node45_26, node45_27).
edge(node45_25, node45_28).
edge(node45_24, node45_29).
edge(node45_24, node45_30).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri dopravnich nehodach, u kterych hasici zasahovali, bylo usmrceno 333 osob a 4988 osob bylo zraneno. 
tree_root(node46_0).
valid_root(node46_0).
%%%%%%%% node46_0 %%%%%%%%%%%%%%%%%%%
node(node46_0).
atree_rf(node46_0, a_a_plzensky61718_txt_001_p3s3).         const(a_a_plzensky61718_txt_001_p3s3).
deepord(node46_0, 1).         const(1).
id(node46_0, T_plzensky61718_txt_001_p3s3).         const(T_plzensky61718_txt_001_p3s3).
nodetype(node46_0, root).         const(root).
sentence(node46_0, Pri_dopravnich_nehodach__u_kterych_hasici_zasahovali__bylo_usmrceno_333_osob_a_4988_osob_bylo_zraneno__).         const(Pri_dopravnich_nehodach__u_kterych_hasici_zasahovali__bylo_usmrceno_333_osob_a_4988_osob_bylo_zraneno__).
%%%%%%%% node46_1 %%%%%%%%%%%%%%%%%%%
node(node46_1).
deepord(node46_1, 11).         const(11).
functor(node46_1, CONJ).         const(CONJ).
id(node46_1, T_plzensky61718_txt_001_p3s3a1).         const(T_plzensky61718_txt_001_p3s3a1).
nodetype(node46_1, coap).         const(coap).
t_lemma(node46_1, a).         const(a).
%%%%%%%% node46_2 %%%%%%%%%%%%%%%%%%%
node(node46_2).
deepord(node46_2, 0).         const(0).
functor(node46_2, PAT).         const(PAT).
gram_sempos(node46_2, n_pron_def_pers).         const(n_pron_def_pers).
id(node46_2, T_plzensky61718_txt_001_p3s3a20).         const(T_plzensky61718_txt_001_p3s3a20).
is_generated(node46_2, 1).         const(1).
nodetype(node46_2, complex).         const(complex).
t_lemma(node46_2, x_PersPron).         const(x_PersPron).
%%%%%%%% node46_3 %%%%%%%%%%%%%%%%%%%
node(node46_3).
deepord(node46_3, 8).         const(8).
functor(node46_3, PRED).         const(PRED).
gram_sempos(node46_3, v).         const(v).
id(node46_3, T_plzensky61718_txt_001_p3s3a2).         const(T_plzensky61718_txt_001_p3s3a2).
is_member(node46_3, 1).         const(1).
nodetype(node46_3, complex).         const(complex).
t_lemma(node46_3, usmrtit).         const(usmrtit).
val_frame_rf(node46_3, v_v_w7307f1).         const(v_v_w7307f1).
%%%%%%%% node46_4 %%%%%%%%%%%%%%%%%%%
node(node46_4).
deepord(node46_4, 3).         const(3).
functor(node46_4, TWHEN).         const(TWHEN).
gram_sempos(node46_4, n_denot).         const(n_denot).
id(node46_4, T_plzensky61718_txt_001_p3s3a4).         const(T_plzensky61718_txt_001_p3s3a4).
nodetype(node46_4, complex).         const(complex).
subfunctor(node46_4, basic).         const(basic).
t_lemma(node46_4, nehoda).         const(nehoda).
%%%%%%%% node46_5 %%%%%%%%%%%%%%%%%%%
node(node46_5).
deepord(node46_5, 2).         const(2).
functor(node46_5, RSTR).         const(RSTR).
gram_sempos(node46_5, adj_denot).         const(adj_denot).
id(node46_5, T_plzensky61718_txt_001_p3s3a5).         const(T_plzensky61718_txt_001_p3s3a5).
nodetype(node46_5, complex).         const(complex).
t_lemma(node46_5, dopravni).         const(dopravni).
%%%%%%%% node46_6 %%%%%%%%%%%%%%%%%%%
node(node46_6).
deepord(node46_6, x2_1).         const(x2_1).
a_ref_type(node46_6, tree).         const(tree).
a_afun(node46_6, Atr).         const(Atr).
m_form(node46_6, dopravnich).         const(dopravnich).
m_lemma(node46_6, dopravni).         const(dopravni).
m_tag(node46_6, AAFP6____1A____).         const(AAFP6____1A____).
w_token(node46_6, dopravnich).         const(dopravnich).
a_ord(node46_6, 2).         const(2).
a_parent_id(node46_6, a_plzensky61718_txt_001_p3s3W3).         const(a_plzensky61718_txt_001_p3s3W3).
hide(node46_6, hide).         const(hide).
%%%%%%%% node46_7 %%%%%%%%%%%%%%%%%%%
node(node46_7).
deepord(node46_7, x3_1).         const(x3_1).
a_ref_type(node46_7, tree).         const(tree).
a_afun(node46_7, AuxP).         const(AuxP).
m_form(node46_7, Pri).         const(Pri).
m_lemma(node46_7, pri_1).         const(pri_1).
m_tag(node46_7, RR__6__________).         const(RR__6__________).
w_token(node46_7, Pri).         const(Pri).
a_ord(node46_7, 1).         const(1).
a_parent_id(node46_7, a_plzensky61718_txt_001_p3s3W11).         const(a_plzensky61718_txt_001_p3s3W11).
hide(node46_7, hide).         const(hide).
%%%%%%%% node46_8 %%%%%%%%%%%%%%%%%%%
node(node46_8).
deepord(node46_8, x3_2).         const(x3_2).
a_ref_type(node46_8, tree).         const(tree).
a_afun(node46_8, Adv).         const(Adv).
m_form(node46_8, nehodach).         const(nehodach).
m_lemma(node46_8, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node46_8, NNFP6_____A____).         const(NNFP6_____A____).
w_token(node46_8, nehodach).         const(nehodach).
w_no_space_after(node46_8, 1).         const(1).
a_ord(node46_8, 3).         const(3).
a_parent_id(node46_8, a_plzensky61718_txt_001_p3s3W1).         const(a_plzensky61718_txt_001_p3s3W1).
hide(node46_8, hide).         const(hide).
%%%%%%%% node46_9 %%%%%%%%%%%%%%%%%%%
node(node46_9).
deepord(node46_9, 7).         const(7).
functor(node46_9, RSTR).         const(RSTR).
gram_sempos(node46_9, v).         const(v).
id(node46_9, T_plzensky61718_txt_001_p3s3a6).         const(T_plzensky61718_txt_001_p3s3a6).
nodetype(node46_9, complex).         const(complex).
t_lemma(node46_9, zasahovat).         const(zasahovat).
val_frame_rf(node46_9, v_v_w9118f1).         const(v_v_w9118f1).
%%%%%%%% node46_10 %%%%%%%%%%%%%%%%%%%
node(node46_10).
deepord(node46_10, 4).         const(4).
functor(node46_10, PAT).         const(PAT).
id(node46_10, T_plzensky61718_txt_001_p3s3a19).         const(T_plzensky61718_txt_001_p3s3a19).
is_generated(node46_10, 1).         const(1).
nodetype(node46_10, qcomplex).         const(qcomplex).
t_lemma(node46_10, x_Gen).         const(x_Gen).
%%%%%%%% node46_11 %%%%%%%%%%%%%%%%%%%
node(node46_11).
deepord(node46_11, 5).         const(5).
functor(node46_11, LOC).         const(LOC).
gram_sempos(node46_11, n_pron_indef).         const(n_pron_indef).
id(node46_11, T_plzensky61718_txt_001_p3s3a9).         const(T_plzensky61718_txt_001_p3s3a9).
nodetype(node46_11, complex).         const(complex).
subfunctor(node46_11, near).         const(near).
t_lemma(node46_11, ktery).         const(ktery).
%%%%%%%% node46_12 %%%%%%%%%%%%%%%%%%%
node(node46_12).
deepord(node46_12, x5_1).         const(x5_1).
a_ref_type(node46_12, tree).         const(tree).
a_afun(node46_12, AuxP).         const(AuxP).
m_form(node46_12, u).         const(u).
m_lemma(node46_12, u_1).         const(u_1).
m_tag(node46_12, RR__2__________).         const(RR__2__________).
w_token(node46_12, u).         const(u).
a_ord(node46_12, 5).         const(5).
a_parent_id(node46_12, a_plzensky61718_txt_001_p3s3W8).         const(a_plzensky61718_txt_001_p3s3W8).
hide(node46_12, hide).         const(hide).
%%%%%%%% node46_13 %%%%%%%%%%%%%%%%%%%
node(node46_13).
deepord(node46_13, x5_2).         const(x5_2).
a_ref_type(node46_13, tree).         const(tree).
a_afun(node46_13, Adv).         const(Adv).
m_form(node46_13, kterych).         const(kterych).
m_lemma(node46_13, ktery).         const(ktery).
m_tag(node46_13, P4XP2__________).         const(P4XP2__________).
w_token(node46_13, kterych).         const(kterych).
a_ord(node46_13, 6).         const(6).
a_parent_id(node46_13, a_plzensky61718_txt_001_p3s3W5).         const(a_plzensky61718_txt_001_p3s3W5).
hide(node46_13, hide).         const(hide).
%%%%%%%% node46_14 %%%%%%%%%%%%%%%%%%%
node(node46_14).
deepord(node46_14, 6).         const(6).
functor(node46_14, ACT).         const(ACT).
gram_sempos(node46_14, n_denot).         const(n_denot).
id(node46_14, T_plzensky61718_txt_001_p3s3a10).         const(T_plzensky61718_txt_001_p3s3a10).
nodetype(node46_14, complex).         const(complex).
t_lemma(node46_14, hasic).         const(hasic).
%%%%%%%% node46_15 %%%%%%%%%%%%%%%%%%%
node(node46_15).
deepord(node46_15, x6_1).         const(x6_1).
a_ref_type(node46_15, tree).         const(tree).
a_afun(node46_15, Sb).         const(Sb).
m_form(node46_15, hasici).         const(hasici).
m_lemma(node46_15, hasic).         const(hasic).
m_tag(node46_15, NNMP1_____A____).         const(NNMP1_____A____).
w_token(node46_15, hasici).         const(hasici).
a_ord(node46_15, 7).         const(7).
a_parent_id(node46_15, a_plzensky61718_txt_001_p3s3W8).         const(a_plzensky61718_txt_001_p3s3W8).
hide(node46_15, hide).         const(hide).
%%%%%%%% node46_16 %%%%%%%%%%%%%%%%%%%
node(node46_16).
deepord(node46_16, x7_1).         const(x7_1).
a_ref_type(node46_16, tree).         const(tree).
a_afun(node46_16, Atr).         const(Atr).
m_form(node46_16, zasahovali).         const(zasahovali).
m_lemma(node46_16, zasahovat__T).         const(zasahovat__T).
m_tag(node46_16, VpMP___XR_AA___).         const(VpMP___XR_AA___).
w_token(node46_16, zasahovali).         const(zasahovali).
w_no_space_after(node46_16, 1).         const(1).
a_ord(node46_16, 8).         const(8).
a_parent_id(node46_16, a_plzensky61718_txt_001_p3s3W3).         const(a_plzensky61718_txt_001_p3s3W3).
hide(node46_16, hide).         const(hide).
%%%%%%%% node46_17 %%%%%%%%%%%%%%%%%%%
node(node46_17).
deepord(node46_17, x8_1).         const(x8_1).
a_ref_type(node46_17, tree).         const(tree).
a_afun(node46_17, AuxV).         const(AuxV).
m_form(node46_17, bylo).         const(bylo).
m_lemma(node46_17, byt).         const(byt).
m_tag(node46_17, VpNS___XR_AA___).         const(VpNS___XR_AA___).
w_token(node46_17, bylo).         const(bylo).
a_ord(node46_17, 10).         const(10).
a_parent_id(node46_17, a_plzensky61718_txt_001_p3s3W11).         const(a_plzensky61718_txt_001_p3s3W11).
hide(node46_17, hide).         const(hide).
%%%%%%%% node46_18 %%%%%%%%%%%%%%%%%%%
node(node46_18).
deepord(node46_18, x8_2).         const(x8_2).
a_ref_type(node46_18, tree).         const(tree).
a_afun(node46_18, Pred).         const(Pred).
m_form(node46_18, usmrceno).         const(usmrceno).
m_lemma(node46_18, usmrtit__W).         const(usmrtit__W).
m_tag(node46_18, VsNS___XX_AP___).         const(VsNS___XX_AP___).
w_token(node46_18, usmrceno).         const(usmrceno).
a_ord(node46_18, 11).         const(11).
a_parent_id(node46_18, a_plzensky61718_txt_001_p3s3W14).         const(a_plzensky61718_txt_001_p3s3W14).
hide(node46_18, hide).         const(hide).
%%%%%%%% node46_19 %%%%%%%%%%%%%%%%%%%
node(node46_19).
deepord(node46_19, 10).         const(10).
functor(node46_19, ACT).         const(ACT).
gram_sempos(node46_19, n_denot).         const(n_denot).
id(node46_19, T_plzensky61718_txt_001_p3s3a14).         const(T_plzensky61718_txt_001_p3s3a14).
nodetype(node46_19, complex).         const(complex).
t_lemma(node46_19, osoba).         const(osoba).
%%%%%%%% node46_20 %%%%%%%%%%%%%%%%%%%
node(node46_20).
deepord(node46_20, 9).         const(9).
functor(node46_20, RSTR).         const(RSTR).
gram_sempos(node46_20, adj_quant_def).         const(adj_quant_def).
id(node46_20, T_plzensky61718_txt_001_p3s3a13).         const(T_plzensky61718_txt_001_p3s3a13).
nodetype(node46_20, complex).         const(complex).
t_lemma(node46_20, 333).         const(333).
%%%%%%%% node46_21 %%%%%%%%%%%%%%%%%%%
node(node46_21).
deepord(node46_21, x9_1).         const(x9_1).
a_ref_type(node46_21, tree).         const(tree).
a_afun(node46_21, Sb).         const(Sb).
m_form(node46_21, 333).         const(333).
m_lemma(node46_21, 333).         const(333).
m_tag(node46_21, C=_____________).         const(C=_____________).
w_token(node46_21, 333).         const(333).
a_ord(node46_21, 12).         const(12).
a_parent_id(node46_21, a_plzensky61718_txt_001_p3s3W11).         const(a_plzensky61718_txt_001_p3s3W11).
hide(node46_21, hide).         const(hide).
%%%%%%%% node46_22 %%%%%%%%%%%%%%%%%%%
node(node46_22).
deepord(node46_22, x10_1).         const(x10_1).
a_ref_type(node46_22, tree).         const(tree).
a_afun(node46_22, Atr).         const(Atr).
m_form(node46_22, osob).         const(osob).
m_lemma(node46_22, osoba).         const(osoba).
m_tag(node46_22, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node46_22, osob).         const(osob).
a_ord(node46_22, 13).         const(13).
a_parent_id(node46_22, a_plzensky61718_txt_001_p3s3W12).         const(a_plzensky61718_txt_001_p3s3W12).
hide(node46_22, hide).         const(hide).
%%%%%%%% node46_23 %%%%%%%%%%%%%%%%%%%
node(node46_23).
deepord(node46_23, x11_1).         const(x11_1).
a_ref_type(node46_23, tree).         const(tree).
a_afun(node46_23, Coord).         const(Coord).
m_form(node46_23, a).         const(a).
m_lemma(node46_23, a_1).         const(a_1).
m_tag(node46_23, J______________).         const(J______________).
w_token(node46_23, a).         const(a).
a_ord(node46_23, 14).         const(14).
a_parent_id(node46_23, a_plzensky61718_txt_001_p3s3).         const(a_plzensky61718_txt_001_p3s3).
hide(node46_23, hide).         const(hide).
%%%%%%%% node46_24 %%%%%%%%%%%%%%%%%%%
node(node46_24).
deepord(node46_24, 14).         const(14).
functor(node46_24, PRED).         const(PRED).
gram_sempos(node46_24, v).         const(v).
id(node46_24, T_plzensky61718_txt_001_p3s3a15).         const(T_plzensky61718_txt_001_p3s3a15).
is_member(node46_24, 1).         const(1).
nodetype(node46_24, complex).         const(complex).
t_lemma(node46_24, zranit).         const(zranit).
val_frame_rf(node46_24, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node46_25 %%%%%%%%%%%%%%%%%%%
node(node46_25).
deepord(node46_25, 13).         const(13).
functor(node46_25, ACT).         const(ACT).
gram_sempos(node46_25, n_denot).         const(n_denot).
id(node46_25, T_plzensky61718_txt_001_p3s3a17).         const(T_plzensky61718_txt_001_p3s3a17).
nodetype(node46_25, complex).         const(complex).
t_lemma(node46_25, osoba).         const(osoba).
%%%%%%%% node46_26 %%%%%%%%%%%%%%%%%%%
node(node46_26).
deepord(node46_26, 12).         const(12).
functor(node46_26, RSTR).         const(RSTR).
gram_sempos(node46_26, adj_quant_def).         const(adj_quant_def).
id(node46_26, T_plzensky61718_txt_001_p3s3a16).         const(T_plzensky61718_txt_001_p3s3a16).
nodetype(node46_26, complex).         const(complex).
t_lemma(node46_26, 4988).         const(4988).
%%%%%%%% node46_27 %%%%%%%%%%%%%%%%%%%
node(node46_27).
deepord(node46_27, x12_1).         const(x12_1).
a_ref_type(node46_27, tree).         const(tree).
a_afun(node46_27, Sb).         const(Sb).
m_form(node46_27, 4988).         const(4988).
m_lemma(node46_27, 4988).         const(4988).
m_tag(node46_27, C=_____________).         const(C=_____________).
w_token(node46_27, x4_988).         const(x4_988).
a_ord(node46_27, 15).         const(15).
a_parent_id(node46_27, a_plzensky61718_txt_001_p3s3W18).         const(a_plzensky61718_txt_001_p3s3W18).
hide(node46_27, hide).         const(hide).
%%%%%%%% node46_28 %%%%%%%%%%%%%%%%%%%
node(node46_28).
deepord(node46_28, x13_1).         const(x13_1).
a_ref_type(node46_28, tree).         const(tree).
a_afun(node46_28, Atr).         const(Atr).
m_form(node46_28, osob).         const(osob).
m_lemma(node46_28, osoba).         const(osoba).
m_tag(node46_28, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node46_28, osob).         const(osob).
a_ord(node46_28, 16).         const(16).
a_parent_id(node46_28, a_plzensky61718_txt_001_p3s3W15).         const(a_plzensky61718_txt_001_p3s3W15).
hide(node46_28, hide).         const(hide).
%%%%%%%% node46_29 %%%%%%%%%%%%%%%%%%%
node(node46_29).
deepord(node46_29, x14_1).         const(x14_1).
a_ref_type(node46_29, tree).         const(tree).
a_afun(node46_29, AuxV).         const(AuxV).
m_form(node46_29, bylo).         const(bylo).
m_lemma(node46_29, byt).         const(byt).
m_tag(node46_29, VpNS___XR_AA___).         const(VpNS___XR_AA___).
w_token(node46_29, bylo).         const(bylo).
a_ord(node46_29, 17).         const(17).
a_parent_id(node46_29, a_plzensky61718_txt_001_p3s3W18).         const(a_plzensky61718_txt_001_p3s3W18).
hide(node46_29, hide).         const(hide).
%%%%%%%% node46_30 %%%%%%%%%%%%%%%%%%%
node(node46_30).
deepord(node46_30, x14_2).         const(x14_2).
a_ref_type(node46_30, tree).         const(tree).
a_afun(node46_30, Pred).         const(Pred).
m_form(node46_30, zraneno).         const(zraneno).
m_lemma(node46_30, zranit__W).         const(zranit__W).
m_tag(node46_30, VsNS___XX_AP___).         const(VsNS___XX_AP___).
w_token(node46_30, zraneno).         const(zraneno).
w_no_space_after(node46_30, 1).         const(1).
a_ord(node46_30, 18).         const(18).
a_parent_id(node46_30, a_plzensky61718_txt_001_p3s3W14).         const(a_plzensky61718_txt_001_p3s3W14).
hide(node46_30, hide).         const(hide).
edge(node46_0, node46_1).
edge(node46_1, node46_2).
edge(node46_1, node46_3).
edge(node46_3, node46_4).
edge(node46_4, node46_5).
edge(node46_5, node46_6).
edge(node46_4, node46_7).
edge(node46_4, node46_8).
edge(node46_4, node46_9).
edge(node46_9, node46_10).
edge(node46_9, node46_11).
edge(node46_11, node46_12).
edge(node46_11, node46_13).
edge(node46_9, node46_14).
edge(node46_14, node46_15).
edge(node46_9, node46_16).
edge(node46_3, node46_17).
edge(node46_3, node46_18).
edge(node46_3, node46_19).
edge(node46_19, node46_20).
edge(node46_20, node46_21).
edge(node46_19, node46_22).
edge(node46_1, node46_23).
edge(node46_1, node46_24).
edge(node46_24, node46_25).
edge(node46_25, node46_26).
edge(node46_26, node46_27).
edge(node46_25, node46_28).
edge(node46_24, node46_29).
edge(node46_24, node46_30).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri dopravnich nehodach, u kterych hasici zasahovali, bylo usmrceno 333 osob a 4988 osob bylo zraneno. 
tree_root(node47_0).
valid_root(node47_0).
%%%%%%%% node47_0 %%%%%%%%%%%%%%%%%%%
node(node47_0).
atree_rf(node47_0, a_a_plzensky61718_txt_001_p3s3).         const(a_a_plzensky61718_txt_001_p3s3).
deepord(node47_0, 1).         const(1).
id(node47_0, T_plzensky61718_txt_001_p3s3).         const(T_plzensky61718_txt_001_p3s3).
nodetype(node47_0, root).         const(root).
sentence(node47_0, Pri_dopravnich_nehodach__u_kterych_hasici_zasahovali__bylo_usmrceno_333_osob_a_4988_osob_bylo_zraneno__).         const(Pri_dopravnich_nehodach__u_kterych_hasici_zasahovali__bylo_usmrceno_333_osob_a_4988_osob_bylo_zraneno__).
%%%%%%%% node47_1 %%%%%%%%%%%%%%%%%%%
node(node47_1).
deepord(node47_1, 11).         const(11).
functor(node47_1, CONJ).         const(CONJ).
id(node47_1, T_plzensky61718_txt_001_p3s3a1).         const(T_plzensky61718_txt_001_p3s3a1).
nodetype(node47_1, coap).         const(coap).
t_lemma(node47_1, a).         const(a).
%%%%%%%% node47_2 %%%%%%%%%%%%%%%%%%%
node(node47_2).
deepord(node47_2, 0).         const(0).
functor(node47_2, PAT).         const(PAT).
gram_sempos(node47_2, n_pron_def_pers).         const(n_pron_def_pers).
id(node47_2, T_plzensky61718_txt_001_p3s3a20).         const(T_plzensky61718_txt_001_p3s3a20).
is_generated(node47_2, 1).         const(1).
nodetype(node47_2, complex).         const(complex).
t_lemma(node47_2, x_PersPron).         const(x_PersPron).
%%%%%%%% node47_3 %%%%%%%%%%%%%%%%%%%
node(node47_3).
deepord(node47_3, 8).         const(8).
functor(node47_3, PRED).         const(PRED).
gram_sempos(node47_3, v).         const(v).
id(node47_3, T_plzensky61718_txt_001_p3s3a2).         const(T_plzensky61718_txt_001_p3s3a2).
is_member(node47_3, 1).         const(1).
nodetype(node47_3, complex).         const(complex).
t_lemma(node47_3, usmrtit).         const(usmrtit).
val_frame_rf(node47_3, v_v_w7307f1).         const(v_v_w7307f1).
%%%%%%%% node47_4 %%%%%%%%%%%%%%%%%%%
node(node47_4).
deepord(node47_4, 3).         const(3).
functor(node47_4, TWHEN).         const(TWHEN).
gram_sempos(node47_4, n_denot).         const(n_denot).
id(node47_4, T_plzensky61718_txt_001_p3s3a4).         const(T_plzensky61718_txt_001_p3s3a4).
nodetype(node47_4, complex).         const(complex).
subfunctor(node47_4, basic).         const(basic).
t_lemma(node47_4, nehoda).         const(nehoda).
%%%%%%%% node47_5 %%%%%%%%%%%%%%%%%%%
node(node47_5).
deepord(node47_5, 2).         const(2).
functor(node47_5, RSTR).         const(RSTR).
gram_sempos(node47_5, adj_denot).         const(adj_denot).
id(node47_5, T_plzensky61718_txt_001_p3s3a5).         const(T_plzensky61718_txt_001_p3s3a5).
nodetype(node47_5, complex).         const(complex).
t_lemma(node47_5, dopravni).         const(dopravni).
%%%%%%%% node47_6 %%%%%%%%%%%%%%%%%%%
node(node47_6).
deepord(node47_6, x2_1).         const(x2_1).
a_ref_type(node47_6, tree).         const(tree).
a_afun(node47_6, Atr).         const(Atr).
m_form(node47_6, dopravnich).         const(dopravnich).
m_lemma(node47_6, dopravni).         const(dopravni).
m_tag(node47_6, AAFP6____1A____).         const(AAFP6____1A____).
w_token(node47_6, dopravnich).         const(dopravnich).
a_ord(node47_6, 2).         const(2).
a_parent_id(node47_6, a_plzensky61718_txt_001_p3s3W3).         const(a_plzensky61718_txt_001_p3s3W3).
hide(node47_6, hide).         const(hide).
%%%%%%%% node47_7 %%%%%%%%%%%%%%%%%%%
node(node47_7).
deepord(node47_7, x3_1).         const(x3_1).
a_ref_type(node47_7, tree).         const(tree).
a_afun(node47_7, AuxP).         const(AuxP).
m_form(node47_7, Pri).         const(Pri).
m_lemma(node47_7, pri_1).         const(pri_1).
m_tag(node47_7, RR__6__________).         const(RR__6__________).
w_token(node47_7, Pri).         const(Pri).
a_ord(node47_7, 1).         const(1).
a_parent_id(node47_7, a_plzensky61718_txt_001_p3s3W11).         const(a_plzensky61718_txt_001_p3s3W11).
hide(node47_7, hide).         const(hide).
%%%%%%%% node47_8 %%%%%%%%%%%%%%%%%%%
node(node47_8).
deepord(node47_8, x3_2).         const(x3_2).
a_ref_type(node47_8, tree).         const(tree).
a_afun(node47_8, Adv).         const(Adv).
m_form(node47_8, nehodach).         const(nehodach).
m_lemma(node47_8, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node47_8, NNFP6_____A____).         const(NNFP6_____A____).
w_token(node47_8, nehodach).         const(nehodach).
w_no_space_after(node47_8, 1).         const(1).
a_ord(node47_8, 3).         const(3).
a_parent_id(node47_8, a_plzensky61718_txt_001_p3s3W1).         const(a_plzensky61718_txt_001_p3s3W1).
hide(node47_8, hide).         const(hide).
%%%%%%%% node47_9 %%%%%%%%%%%%%%%%%%%
node(node47_9).
deepord(node47_9, 7).         const(7).
functor(node47_9, RSTR).         const(RSTR).
gram_sempos(node47_9, v).         const(v).
id(node47_9, T_plzensky61718_txt_001_p3s3a6).         const(T_plzensky61718_txt_001_p3s3a6).
nodetype(node47_9, complex).         const(complex).
t_lemma(node47_9, zasahovat).         const(zasahovat).
val_frame_rf(node47_9, v_v_w9118f1).         const(v_v_w9118f1).
%%%%%%%% node47_10 %%%%%%%%%%%%%%%%%%%
node(node47_10).
deepord(node47_10, 4).         const(4).
functor(node47_10, PAT).         const(PAT).
id(node47_10, T_plzensky61718_txt_001_p3s3a19).         const(T_plzensky61718_txt_001_p3s3a19).
is_generated(node47_10, 1).         const(1).
nodetype(node47_10, qcomplex).         const(qcomplex).
t_lemma(node47_10, x_Gen).         const(x_Gen).
%%%%%%%% node47_11 %%%%%%%%%%%%%%%%%%%
node(node47_11).
deepord(node47_11, 5).         const(5).
functor(node47_11, LOC).         const(LOC).
gram_sempos(node47_11, n_pron_indef).         const(n_pron_indef).
id(node47_11, T_plzensky61718_txt_001_p3s3a9).         const(T_plzensky61718_txt_001_p3s3a9).
nodetype(node47_11, complex).         const(complex).
subfunctor(node47_11, near).         const(near).
t_lemma(node47_11, ktery).         const(ktery).
%%%%%%%% node47_12 %%%%%%%%%%%%%%%%%%%
node(node47_12).
deepord(node47_12, x5_1).         const(x5_1).
a_ref_type(node47_12, tree).         const(tree).
a_afun(node47_12, AuxP).         const(AuxP).
m_form(node47_12, u).         const(u).
m_lemma(node47_12, u_1).         const(u_1).
m_tag(node47_12, RR__2__________).         const(RR__2__________).
w_token(node47_12, u).         const(u).
a_ord(node47_12, 5).         const(5).
a_parent_id(node47_12, a_plzensky61718_txt_001_p3s3W8).         const(a_plzensky61718_txt_001_p3s3W8).
hide(node47_12, hide).         const(hide).
%%%%%%%% node47_13 %%%%%%%%%%%%%%%%%%%
node(node47_13).
deepord(node47_13, x5_2).         const(x5_2).
a_ref_type(node47_13, tree).         const(tree).
a_afun(node47_13, Adv).         const(Adv).
m_form(node47_13, kterych).         const(kterych).
m_lemma(node47_13, ktery).         const(ktery).
m_tag(node47_13, P4XP2__________).         const(P4XP2__________).
w_token(node47_13, kterych).         const(kterych).
a_ord(node47_13, 6).         const(6).
a_parent_id(node47_13, a_plzensky61718_txt_001_p3s3W5).         const(a_plzensky61718_txt_001_p3s3W5).
hide(node47_13, hide).         const(hide).
%%%%%%%% node47_14 %%%%%%%%%%%%%%%%%%%
node(node47_14).
deepord(node47_14, 6).         const(6).
functor(node47_14, ACT).         const(ACT).
gram_sempos(node47_14, n_denot).         const(n_denot).
id(node47_14, T_plzensky61718_txt_001_p3s3a10).         const(T_plzensky61718_txt_001_p3s3a10).
nodetype(node47_14, complex).         const(complex).
t_lemma(node47_14, hasic).         const(hasic).
%%%%%%%% node47_15 %%%%%%%%%%%%%%%%%%%
node(node47_15).
deepord(node47_15, x6_1).         const(x6_1).
a_ref_type(node47_15, tree).         const(tree).
a_afun(node47_15, Sb).         const(Sb).
m_form(node47_15, hasici).         const(hasici).
m_lemma(node47_15, hasic).         const(hasic).
m_tag(node47_15, NNMP1_____A____).         const(NNMP1_____A____).
w_token(node47_15, hasici).         const(hasici).
a_ord(node47_15, 7).         const(7).
a_parent_id(node47_15, a_plzensky61718_txt_001_p3s3W8).         const(a_plzensky61718_txt_001_p3s3W8).
hide(node47_15, hide).         const(hide).
%%%%%%%% node47_16 %%%%%%%%%%%%%%%%%%%
node(node47_16).
deepord(node47_16, x7_1).         const(x7_1).
a_ref_type(node47_16, tree).         const(tree).
a_afun(node47_16, Atr).         const(Atr).
m_form(node47_16, zasahovali).         const(zasahovali).
m_lemma(node47_16, zasahovat__T).         const(zasahovat__T).
m_tag(node47_16, VpMP___XR_AA___).         const(VpMP___XR_AA___).
w_token(node47_16, zasahovali).         const(zasahovali).
w_no_space_after(node47_16, 1).         const(1).
a_ord(node47_16, 8).         const(8).
a_parent_id(node47_16, a_plzensky61718_txt_001_p3s3W3).         const(a_plzensky61718_txt_001_p3s3W3).
hide(node47_16, hide).         const(hide).
%%%%%%%% node47_17 %%%%%%%%%%%%%%%%%%%
node(node47_17).
deepord(node47_17, x8_1).         const(x8_1).
a_ref_type(node47_17, tree).         const(tree).
a_afun(node47_17, AuxV).         const(AuxV).
m_form(node47_17, bylo).         const(bylo).
m_lemma(node47_17, byt).         const(byt).
m_tag(node47_17, VpNS___XR_AA___).         const(VpNS___XR_AA___).
w_token(node47_17, bylo).         const(bylo).
a_ord(node47_17, 10).         const(10).
a_parent_id(node47_17, a_plzensky61718_txt_001_p3s3W11).         const(a_plzensky61718_txt_001_p3s3W11).
hide(node47_17, hide).         const(hide).
%%%%%%%% node47_18 %%%%%%%%%%%%%%%%%%%
node(node47_18).
deepord(node47_18, x8_2).         const(x8_2).
a_ref_type(node47_18, tree).         const(tree).
a_afun(node47_18, Pred).         const(Pred).
m_form(node47_18, usmrceno).         const(usmrceno).
m_lemma(node47_18, usmrtit__W).         const(usmrtit__W).
m_tag(node47_18, VsNS___XX_AP___).         const(VsNS___XX_AP___).
w_token(node47_18, usmrceno).         const(usmrceno).
a_ord(node47_18, 11).         const(11).
a_parent_id(node47_18, a_plzensky61718_txt_001_p3s3W14).         const(a_plzensky61718_txt_001_p3s3W14).
hide(node47_18, hide).         const(hide).
%%%%%%%% node47_19 %%%%%%%%%%%%%%%%%%%
node(node47_19).
deepord(node47_19, 10).         const(10).
functor(node47_19, ACT).         const(ACT).
gram_sempos(node47_19, n_denot).         const(n_denot).
id(node47_19, T_plzensky61718_txt_001_p3s3a14).         const(T_plzensky61718_txt_001_p3s3a14).
nodetype(node47_19, complex).         const(complex).
t_lemma(node47_19, osoba).         const(osoba).
%%%%%%%% node47_20 %%%%%%%%%%%%%%%%%%%
node(node47_20).
deepord(node47_20, 9).         const(9).
functor(node47_20, RSTR).         const(RSTR).
gram_sempos(node47_20, adj_quant_def).         const(adj_quant_def).
id(node47_20, T_plzensky61718_txt_001_p3s3a13).         const(T_plzensky61718_txt_001_p3s3a13).
nodetype(node47_20, complex).         const(complex).
t_lemma(node47_20, 333).         const(333).
%%%%%%%% node47_21 %%%%%%%%%%%%%%%%%%%
node(node47_21).
deepord(node47_21, x9_1).         const(x9_1).
a_ref_type(node47_21, tree).         const(tree).
a_afun(node47_21, Sb).         const(Sb).
m_form(node47_21, 333).         const(333).
m_lemma(node47_21, 333).         const(333).
m_tag(node47_21, C=_____________).         const(C=_____________).
w_token(node47_21, 333).         const(333).
a_ord(node47_21, 12).         const(12).
a_parent_id(node47_21, a_plzensky61718_txt_001_p3s3W11).         const(a_plzensky61718_txt_001_p3s3W11).
hide(node47_21, hide).         const(hide).
%%%%%%%% node47_22 %%%%%%%%%%%%%%%%%%%
node(node47_22).
deepord(node47_22, x10_1).         const(x10_1).
a_ref_type(node47_22, tree).         const(tree).
a_afun(node47_22, Atr).         const(Atr).
m_form(node47_22, osob).         const(osob).
m_lemma(node47_22, osoba).         const(osoba).
m_tag(node47_22, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node47_22, osob).         const(osob).
a_ord(node47_22, 13).         const(13).
a_parent_id(node47_22, a_plzensky61718_txt_001_p3s3W12).         const(a_plzensky61718_txt_001_p3s3W12).
hide(node47_22, hide).         const(hide).
%%%%%%%% node47_23 %%%%%%%%%%%%%%%%%%%
node(node47_23).
deepord(node47_23, x11_1).         const(x11_1).
a_ref_type(node47_23, tree).         const(tree).
a_afun(node47_23, Coord).         const(Coord).
m_form(node47_23, a).         const(a).
m_lemma(node47_23, a_1).         const(a_1).
m_tag(node47_23, J______________).         const(J______________).
w_token(node47_23, a).         const(a).
a_ord(node47_23, 14).         const(14).
a_parent_id(node47_23, a_plzensky61718_txt_001_p3s3).         const(a_plzensky61718_txt_001_p3s3).
hide(node47_23, hide).         const(hide).
%%%%%%%% node47_24 %%%%%%%%%%%%%%%%%%%
node(node47_24).
deepord(node47_24, 14).         const(14).
functor(node47_24, PRED).         const(PRED).
gram_sempos(node47_24, v).         const(v).
id(node47_24, T_plzensky61718_txt_001_p3s3a15).         const(T_plzensky61718_txt_001_p3s3a15).
is_member(node47_24, 1).         const(1).
nodetype(node47_24, complex).         const(complex).
t_lemma(node47_24, zranit).         const(zranit).
val_frame_rf(node47_24, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node47_25 %%%%%%%%%%%%%%%%%%%
node(node47_25).
deepord(node47_25, 13).         const(13).
functor(node47_25, ACT).         const(ACT).
gram_sempos(node47_25, n_denot).         const(n_denot).
id(node47_25, T_plzensky61718_txt_001_p3s3a17).         const(T_plzensky61718_txt_001_p3s3a17).
nodetype(node47_25, complex).         const(complex).
t_lemma(node47_25, osoba).         const(osoba).
%%%%%%%% node47_26 %%%%%%%%%%%%%%%%%%%
node(node47_26).
deepord(node47_26, 12).         const(12).
functor(node47_26, RSTR).         const(RSTR).
gram_sempos(node47_26, adj_quant_def).         const(adj_quant_def).
id(node47_26, T_plzensky61718_txt_001_p3s3a16).         const(T_plzensky61718_txt_001_p3s3a16).
nodetype(node47_26, complex).         const(complex).
t_lemma(node47_26, 4988).         const(4988).
%%%%%%%% node47_27 %%%%%%%%%%%%%%%%%%%
node(node47_27).
deepord(node47_27, x12_1).         const(x12_1).
a_ref_type(node47_27, tree).         const(tree).
a_afun(node47_27, Sb).         const(Sb).
m_form(node47_27, 4988).         const(4988).
m_lemma(node47_27, 4988).         const(4988).
m_tag(node47_27, C=_____________).         const(C=_____________).
w_token(node47_27, x4_988).         const(x4_988).
a_ord(node47_27, 15).         const(15).
a_parent_id(node47_27, a_plzensky61718_txt_001_p3s3W18).         const(a_plzensky61718_txt_001_p3s3W18).
hide(node47_27, hide).         const(hide).
%%%%%%%% node47_28 %%%%%%%%%%%%%%%%%%%
node(node47_28).
deepord(node47_28, x13_1).         const(x13_1).
a_ref_type(node47_28, tree).         const(tree).
a_afun(node47_28, Atr).         const(Atr).
m_form(node47_28, osob).         const(osob).
m_lemma(node47_28, osoba).         const(osoba).
m_tag(node47_28, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node47_28, osob).         const(osob).
a_ord(node47_28, 16).         const(16).
a_parent_id(node47_28, a_plzensky61718_txt_001_p3s3W15).         const(a_plzensky61718_txt_001_p3s3W15).
hide(node47_28, hide).         const(hide).
%%%%%%%% node47_29 %%%%%%%%%%%%%%%%%%%
node(node47_29).
deepord(node47_29, x14_1).         const(x14_1).
a_ref_type(node47_29, tree).         const(tree).
a_afun(node47_29, AuxV).         const(AuxV).
m_form(node47_29, bylo).         const(bylo).
m_lemma(node47_29, byt).         const(byt).
m_tag(node47_29, VpNS___XR_AA___).         const(VpNS___XR_AA___).
w_token(node47_29, bylo).         const(bylo).
a_ord(node47_29, 17).         const(17).
a_parent_id(node47_29, a_plzensky61718_txt_001_p3s3W18).         const(a_plzensky61718_txt_001_p3s3W18).
hide(node47_29, hide).         const(hide).
%%%%%%%% node47_30 %%%%%%%%%%%%%%%%%%%
node(node47_30).
deepord(node47_30, x14_2).         const(x14_2).
a_ref_type(node47_30, tree).         const(tree).
a_afun(node47_30, Pred).         const(Pred).
m_form(node47_30, zraneno).         const(zraneno).
m_lemma(node47_30, zranit__W).         const(zranit__W).
m_tag(node47_30, VsNS___XX_AP___).         const(VsNS___XX_AP___).
w_token(node47_30, zraneno).         const(zraneno).
w_no_space_after(node47_30, 1).         const(1).
a_ord(node47_30, 18).         const(18).
a_parent_id(node47_30, a_plzensky61718_txt_001_p3s3W14).         const(a_plzensky61718_txt_001_p3s3W14).
hide(node47_30, hide).         const(hide).
edge(node47_0, node47_1).
edge(node47_1, node47_2).
edge(node47_1, node47_3).
edge(node47_3, node47_4).
edge(node47_4, node47_5).
edge(node47_5, node47_6).
edge(node47_4, node47_7).
edge(node47_4, node47_8).
edge(node47_4, node47_9).
edge(node47_9, node47_10).
edge(node47_9, node47_11).
edge(node47_11, node47_12).
edge(node47_11, node47_13).
edge(node47_9, node47_14).
edge(node47_14, node47_15).
edge(node47_9, node47_16).
edge(node47_3, node47_17).
edge(node47_3, node47_18).
edge(node47_3, node47_19).
edge(node47_19, node47_20).
edge(node47_20, node47_21).
edge(node47_19, node47_22).
edge(node47_1, node47_23).
edge(node47_1, node47_24).
edge(node47_24, node47_25).
edge(node47_25, node47_26).
edge(node47_26, node47_27).
edge(node47_25, node47_28).
edge(node47_24, node47_29).
edge(node47_24, node47_30).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode byly zraneny dve dospele osoby a dve deti z automobilu. 
tree_root(node48_0).
valid_root(node48_0).
%%%%%%%% node48_0 %%%%%%%%%%%%%%%%%%%
node(node48_0).
atree_rf(node48_0, a_a_plzensky56858_txt_001_p3s3).         const(a_a_plzensky56858_txt_001_p3s3).
deepord(node48_0, 0).         const(0).
id(node48_0, T_plzensky56858_txt_001_p3s3).         const(T_plzensky56858_txt_001_p3s3).
nodetype(node48_0, root).         const(root).
sentence(node48_0, Pri_nehode_byly_zraneny_dve_dospele_osoby_a_dve_deti_z_automobilu__).         const(Pri_nehode_byly_zraneny_dve_dospele_osoby_a_dve_deti_z_automobilu__).
%%%%%%%% node48_1 %%%%%%%%%%%%%%%%%%%
node(node48_1).
deepord(node48_1, 3).         const(3).
functor(node48_1, PRED).         const(PRED).
gram_sempos(node48_1, v).         const(v).
id(node48_1, T_plzensky56858_txt_001_p3s3a1).         const(T_plzensky56858_txt_001_p3s3a1).
nodetype(node48_1, complex).         const(complex).
t_lemma(node48_1, zranit).         const(zranit).
val_frame_rf(node48_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node48_2 %%%%%%%%%%%%%%%%%%%
node(node48_2).
deepord(node48_2, 1).         const(1).
functor(node48_2, ACT).         const(ACT).
id(node48_2, T_plzensky56858_txt_001_p3s3a13).         const(T_plzensky56858_txt_001_p3s3a13).
is_generated(node48_2, 1).         const(1).
nodetype(node48_2, qcomplex).         const(qcomplex).
t_lemma(node48_2, x_Gen).         const(x_Gen).
%%%%%%%% node48_3 %%%%%%%%%%%%%%%%%%%
node(node48_3).
deepord(node48_3, 2).         const(2).
functor(node48_3, TWHEN).         const(TWHEN).
gram_sempos(node48_3, n_denot).         const(n_denot).
id(node48_3, T_plzensky56858_txt_001_p3s3a3).         const(T_plzensky56858_txt_001_p3s3a3).
nodetype(node48_3, complex).         const(complex).
subfunctor(node48_3, basic).         const(basic).
t_lemma(node48_3, nehoda).         const(nehoda).
%%%%%%%% node48_4 %%%%%%%%%%%%%%%%%%%
node(node48_4).
deepord(node48_4, x2_1).         const(x2_1).
a_ref_type(node48_4, tree).         const(tree).
a_afun(node48_4, AuxP).         const(AuxP).
m_form(node48_4, Pri).         const(Pri).
m_lemma(node48_4, pri_1).         const(pri_1).
m_tag(node48_4, RR__6__________).         const(RR__6__________).
w_token(node48_4, Pri).         const(Pri).
a_ord(node48_4, 1).         const(1).
a_parent_id(node48_4, a_plzensky56858_txt_001_p3s3W4).         const(a_plzensky56858_txt_001_p3s3W4).
hide(node48_4, hide).         const(hide).
%%%%%%%% node48_5 %%%%%%%%%%%%%%%%%%%
node(node48_5).
deepord(node48_5, x2_2).         const(x2_2).
a_ref_type(node48_5, tree).         const(tree).
a_afun(node48_5, Adv).         const(Adv).
m_form(node48_5, nehode).         const(nehode).
m_lemma(node48_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node48_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node48_5, nehode).         const(nehode).
a_ord(node48_5, 2).         const(2).
a_parent_id(node48_5, a_plzensky56858_txt_001_p3s3W1).         const(a_plzensky56858_txt_001_p3s3W1).
hide(node48_5, hide).         const(hide).
%%%%%%%% node48_6 %%%%%%%%%%%%%%%%%%%
node(node48_6).
deepord(node48_6, x3_1).         const(x3_1).
a_ref_type(node48_6, tree).         const(tree).
a_afun(node48_6, AuxV).         const(AuxV).
m_form(node48_6, byly).         const(byly).
m_lemma(node48_6, byt).         const(byt).
m_tag(node48_6, VpTP___XR_AA___).         const(VpTP___XR_AA___).
w_token(node48_6, byly).         const(byly).
a_ord(node48_6, 3).         const(3).
a_parent_id(node48_6, a_plzensky56858_txt_001_p3s3W4).         const(a_plzensky56858_txt_001_p3s3W4).
hide(node48_6, hide).         const(hide).
%%%%%%%% node48_7 %%%%%%%%%%%%%%%%%%%
node(node48_7).
deepord(node48_7, x3_2).         const(x3_2).
a_ref_type(node48_7, tree).         const(tree).
a_afun(node48_7, Pred).         const(Pred).
m_form(node48_7, zraneny).         const(zraneny).
m_lemma(node48_7, zranit__W).         const(zranit__W).
m_tag(node48_7, VsTP___XX_AP___).         const(VsTP___XX_AP___).
w_token(node48_7, zraneny).         const(zraneny).
a_ord(node48_7, 4).         const(4).
a_parent_id(node48_7, a_plzensky56858_txt_001_p3s3).         const(a_plzensky56858_txt_001_p3s3).
hide(node48_7, hide).         const(hide).
%%%%%%%% node48_8 %%%%%%%%%%%%%%%%%%%
node(node48_8).
deepord(node48_8, 7).         const(7).
functor(node48_8, CONJ).         const(CONJ).
id(node48_8, T_plzensky56858_txt_001_p3s3a5).         const(T_plzensky56858_txt_001_p3s3a5).
nodetype(node48_8, coap).         const(coap).
t_lemma(node48_8, a).         const(a).
%%%%%%%% node48_9 %%%%%%%%%%%%%%%%%%%
node(node48_9).
deepord(node48_9, 6).         const(6).
functor(node48_9, PAT).         const(PAT).
gram_sempos(node48_9, n_denot).         const(n_denot).
id(node48_9, T_plzensky56858_txt_001_p3s3a6).         const(T_plzensky56858_txt_001_p3s3a6).
is_member(node48_9, 1).         const(1).
nodetype(node48_9, complex).         const(complex).
t_lemma(node48_9, osoba).         const(osoba).
%%%%%%%% node48_10 %%%%%%%%%%%%%%%%%%%
node(node48_10).
deepord(node48_10, 4).         const(4).
functor(node48_10, RSTR).         const(RSTR).
gram_sempos(node48_10, adj_quant_def).         const(adj_quant_def).
id(node48_10, T_plzensky56858_txt_001_p3s3a7).         const(T_plzensky56858_txt_001_p3s3a7).
nodetype(node48_10, complex).         const(complex).
t_lemma(node48_10, dva).         const(dva).
%%%%%%%% node48_11 %%%%%%%%%%%%%%%%%%%
node(node48_11).
deepord(node48_11, x4_1).         const(x4_1).
a_ref_type(node48_11, tree).         const(tree).
a_afun(node48_11, Atr).         const(Atr).
m_form(node48_11, dve).         const(dve).
m_lemma(node48_11, dva_2).         const(dva_2).
m_tag(node48_11, ClHP1__________).         const(ClHP1__________).
w_token(node48_11, dve).         const(dve).
a_ord(node48_11, 5).         const(5).
a_parent_id(node48_11, a_plzensky56858_txt_001_p3s3W7).         const(a_plzensky56858_txt_001_p3s3W7).
hide(node48_11, hide).         const(hide).
%%%%%%%% node48_12 %%%%%%%%%%%%%%%%%%%
node(node48_12).
deepord(node48_12, 5).         const(5).
functor(node48_12, RSTR).         const(RSTR).
gram_sempos(node48_12, adj_denot).         const(adj_denot).
id(node48_12, T_plzensky56858_txt_001_p3s3a8).         const(T_plzensky56858_txt_001_p3s3a8).
nodetype(node48_12, complex).         const(complex).
t_lemma(node48_12, dospely).         const(dospely).
%%%%%%%% node48_13 %%%%%%%%%%%%%%%%%%%
node(node48_13).
deepord(node48_13, x5_1).         const(x5_1).
a_ref_type(node48_13, tree).         const(tree).
a_afun(node48_13, Atr).         const(Atr).
m_form(node48_13, dospele).         const(dospele).
m_lemma(node48_13, dospely_1).         const(dospely_1).
m_tag(node48_13, AAFP1____1A____).         const(AAFP1____1A____).
w_token(node48_13, dospele).         const(dospele).
a_ord(node48_13, 6).         const(6).
a_parent_id(node48_13, a_plzensky56858_txt_001_p3s3W7).         const(a_plzensky56858_txt_001_p3s3W7).
hide(node48_13, hide).         const(hide).
%%%%%%%% node48_14 %%%%%%%%%%%%%%%%%%%
node(node48_14).
deepord(node48_14, x6_1).         const(x6_1).
a_ref_type(node48_14, tree).         const(tree).
a_afun(node48_14, Sb).         const(Sb).
m_form(node48_14, osoby).         const(osoby).
m_lemma(node48_14, osoba).         const(osoba).
m_tag(node48_14, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node48_14, osoby).         const(osoby).
a_ord(node48_14, 7).         const(7).
a_parent_id(node48_14, a_plzensky56858_txt_001_p3s3W8).         const(a_plzensky56858_txt_001_p3s3W8).
hide(node48_14, hide).         const(hide).
%%%%%%%% node48_15 %%%%%%%%%%%%%%%%%%%
node(node48_15).
deepord(node48_15, x7_1).         const(x7_1).
a_ref_type(node48_15, tree).         const(tree).
a_afun(node48_15, Coord).         const(Coord).
m_form(node48_15, a).         const(a).
m_lemma(node48_15, a_1).         const(a_1).
m_tag(node48_15, J______________).         const(J______________).
w_token(node48_15, a).         const(a).
a_ord(node48_15, 8).         const(8).
a_parent_id(node48_15, a_plzensky56858_txt_001_p3s3W4).         const(a_plzensky56858_txt_001_p3s3W4).
hide(node48_15, hide).         const(hide).
%%%%%%%% node48_16 %%%%%%%%%%%%%%%%%%%
node(node48_16).
deepord(node48_16, 9).         const(9).
functor(node48_16, PAT).         const(PAT).
gram_sempos(node48_16, n_denot).         const(n_denot).
id(node48_16, T_plzensky56858_txt_001_p3s3a9).         const(T_plzensky56858_txt_001_p3s3a9).
is_member(node48_16, 1).         const(1).
nodetype(node48_16, complex).         const(complex).
t_lemma(node48_16, dite).         const(dite).
%%%%%%%% node48_17 %%%%%%%%%%%%%%%%%%%
node(node48_17).
deepord(node48_17, 8).         const(8).
functor(node48_17, RSTR).         const(RSTR).
gram_sempos(node48_17, adj_quant_def).         const(adj_quant_def).
id(node48_17, T_plzensky56858_txt_001_p3s3a10).         const(T_plzensky56858_txt_001_p3s3a10).
nodetype(node48_17, complex).         const(complex).
t_lemma(node48_17, dva).         const(dva).
%%%%%%%% node48_18 %%%%%%%%%%%%%%%%%%%
node(node48_18).
deepord(node48_18, x8_1).         const(x8_1).
a_ref_type(node48_18, tree).         const(tree).
a_afun(node48_18, Atr).         const(Atr).
m_form(node48_18, dve).         const(dve).
m_lemma(node48_18, dva_2).         const(dva_2).
m_tag(node48_18, ClHP1__________).         const(ClHP1__________).
w_token(node48_18, dve).         const(dve).
a_ord(node48_18, 9).         const(9).
a_parent_id(node48_18, a_plzensky56858_txt_001_p3s3W10).         const(a_plzensky56858_txt_001_p3s3W10).
hide(node48_18, hide).         const(hide).
%%%%%%%% node48_19 %%%%%%%%%%%%%%%%%%%
node(node48_19).
deepord(node48_19, x9_1).         const(x9_1).
a_ref_type(node48_19, tree).         const(tree).
a_afun(node48_19, Sb).         const(Sb).
m_form(node48_19, deti).         const(deti).
m_lemma(node48_19, dite).         const(dite).
m_tag(node48_19, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node48_19, deti).         const(deti).
a_ord(node48_19, 10).         const(10).
a_parent_id(node48_19, a_plzensky56858_txt_001_p3s3W8).         const(a_plzensky56858_txt_001_p3s3W8).
hide(node48_19, hide).         const(hide).
%%%%%%%% node48_20 %%%%%%%%%%%%%%%%%%%
node(node48_20).
deepord(node48_20, 10).         const(10).
functor(node48_20, DIR1).         const(DIR1).
gram_sempos(node48_20, n_denot).         const(n_denot).
id(node48_20, T_plzensky56858_txt_001_p3s3a12).         const(T_plzensky56858_txt_001_p3s3a12).
nodetype(node48_20, complex).         const(complex).
subfunctor(node48_20, basic).         const(basic).
t_lemma(node48_20, automobil).         const(automobil).
%%%%%%%% node48_21 %%%%%%%%%%%%%%%%%%%
node(node48_21).
deepord(node48_21, x10_1).         const(x10_1).
a_ref_type(node48_21, tree).         const(tree).
a_afun(node48_21, AuxP).         const(AuxP).
m_form(node48_21, z).         const(z).
m_lemma(node48_21, z_1).         const(z_1).
m_tag(node48_21, RR__2__________).         const(RR__2__________).
w_token(node48_21, z).         const(z).
a_ord(node48_21, 11).         const(11).
a_parent_id(node48_21, a_plzensky56858_txt_001_p3s3W10).         const(a_plzensky56858_txt_001_p3s3W10).
hide(node48_21, hide).         const(hide).
%%%%%%%% node48_22 %%%%%%%%%%%%%%%%%%%
node(node48_22).
deepord(node48_22, x10_2).         const(x10_2).
a_ref_type(node48_22, tree).         const(tree).
a_afun(node48_22, Atr).         const(Atr).
m_form(node48_22, automobilu).         const(automobilu).
m_lemma(node48_22, automobil).         const(automobil).
m_tag(node48_22, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node48_22, automobilu).         const(automobilu).
w_no_space_after(node48_22, 1).         const(1).
a_ord(node48_22, 12).         const(12).
a_parent_id(node48_22, a_plzensky56858_txt_001_p3s3W11).         const(a_plzensky56858_txt_001_p3s3W11).
hide(node48_22, hide).         const(hide).
edge(node48_0, node48_1).
edge(node48_1, node48_2).
edge(node48_1, node48_3).
edge(node48_3, node48_4).
edge(node48_3, node48_5).
edge(node48_1, node48_6).
edge(node48_1, node48_7).
edge(node48_1, node48_8).
edge(node48_8, node48_9).
edge(node48_9, node48_10).
edge(node48_10, node48_11).
edge(node48_9, node48_12).
edge(node48_12, node48_13).
edge(node48_9, node48_14).
edge(node48_8, node48_15).
edge(node48_8, node48_16).
edge(node48_16, node48_17).
edge(node48_17, node48_18).
edge(node48_16, node48_19).
edge(node48_16, node48_20).
edge(node48_20, node48_21).
edge(node48_20, node48_22).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode byly zraneny dve dospele osoby a dve deti z automobilu. 
tree_root(node49_0).
valid_root(node49_0).
%%%%%%%% node49_0 %%%%%%%%%%%%%%%%%%%
node(node49_0).
atree_rf(node49_0, a_a_plzensky56858_txt_001_p3s3).         const(a_a_plzensky56858_txt_001_p3s3).
deepord(node49_0, 0).         const(0).
id(node49_0, T_plzensky56858_txt_001_p3s3).         const(T_plzensky56858_txt_001_p3s3).
nodetype(node49_0, root).         const(root).
sentence(node49_0, Pri_nehode_byly_zraneny_dve_dospele_osoby_a_dve_deti_z_automobilu__).         const(Pri_nehode_byly_zraneny_dve_dospele_osoby_a_dve_deti_z_automobilu__).
%%%%%%%% node49_1 %%%%%%%%%%%%%%%%%%%
node(node49_1).
deepord(node49_1, 3).         const(3).
functor(node49_1, PRED).         const(PRED).
gram_sempos(node49_1, v).         const(v).
id(node49_1, T_plzensky56858_txt_001_p3s3a1).         const(T_plzensky56858_txt_001_p3s3a1).
nodetype(node49_1, complex).         const(complex).
t_lemma(node49_1, zranit).         const(zranit).
val_frame_rf(node49_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node49_2 %%%%%%%%%%%%%%%%%%%
node(node49_2).
deepord(node49_2, 1).         const(1).
functor(node49_2, ACT).         const(ACT).
id(node49_2, T_plzensky56858_txt_001_p3s3a13).         const(T_plzensky56858_txt_001_p3s3a13).
is_generated(node49_2, 1).         const(1).
nodetype(node49_2, qcomplex).         const(qcomplex).
t_lemma(node49_2, x_Gen).         const(x_Gen).
%%%%%%%% node49_3 %%%%%%%%%%%%%%%%%%%
node(node49_3).
deepord(node49_3, 2).         const(2).
functor(node49_3, TWHEN).         const(TWHEN).
gram_sempos(node49_3, n_denot).         const(n_denot).
id(node49_3, T_plzensky56858_txt_001_p3s3a3).         const(T_plzensky56858_txt_001_p3s3a3).
nodetype(node49_3, complex).         const(complex).
subfunctor(node49_3, basic).         const(basic).
t_lemma(node49_3, nehoda).         const(nehoda).
%%%%%%%% node49_4 %%%%%%%%%%%%%%%%%%%
node(node49_4).
deepord(node49_4, x2_1).         const(x2_1).
a_ref_type(node49_4, tree).         const(tree).
a_afun(node49_4, AuxP).         const(AuxP).
m_form(node49_4, Pri).         const(Pri).
m_lemma(node49_4, pri_1).         const(pri_1).
m_tag(node49_4, RR__6__________).         const(RR__6__________).
w_token(node49_4, Pri).         const(Pri).
a_ord(node49_4, 1).         const(1).
a_parent_id(node49_4, a_plzensky56858_txt_001_p3s3W4).         const(a_plzensky56858_txt_001_p3s3W4).
hide(node49_4, hide).         const(hide).
%%%%%%%% node49_5 %%%%%%%%%%%%%%%%%%%
node(node49_5).
deepord(node49_5, x2_2).         const(x2_2).
a_ref_type(node49_5, tree).         const(tree).
a_afun(node49_5, Adv).         const(Adv).
m_form(node49_5, nehode).         const(nehode).
m_lemma(node49_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node49_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node49_5, nehode).         const(nehode).
a_ord(node49_5, 2).         const(2).
a_parent_id(node49_5, a_plzensky56858_txt_001_p3s3W1).         const(a_plzensky56858_txt_001_p3s3W1).
hide(node49_5, hide).         const(hide).
%%%%%%%% node49_6 %%%%%%%%%%%%%%%%%%%
node(node49_6).
deepord(node49_6, x3_1).         const(x3_1).
a_ref_type(node49_6, tree).         const(tree).
a_afun(node49_6, AuxV).         const(AuxV).
m_form(node49_6, byly).         const(byly).
m_lemma(node49_6, byt).         const(byt).
m_tag(node49_6, VpTP___XR_AA___).         const(VpTP___XR_AA___).
w_token(node49_6, byly).         const(byly).
a_ord(node49_6, 3).         const(3).
a_parent_id(node49_6, a_plzensky56858_txt_001_p3s3W4).         const(a_plzensky56858_txt_001_p3s3W4).
hide(node49_6, hide).         const(hide).
%%%%%%%% node49_7 %%%%%%%%%%%%%%%%%%%
node(node49_7).
deepord(node49_7, x3_2).         const(x3_2).
a_ref_type(node49_7, tree).         const(tree).
a_afun(node49_7, Pred).         const(Pred).
m_form(node49_7, zraneny).         const(zraneny).
m_lemma(node49_7, zranit__W).         const(zranit__W).
m_tag(node49_7, VsTP___XX_AP___).         const(VsTP___XX_AP___).
w_token(node49_7, zraneny).         const(zraneny).
a_ord(node49_7, 4).         const(4).
a_parent_id(node49_7, a_plzensky56858_txt_001_p3s3).         const(a_plzensky56858_txt_001_p3s3).
hide(node49_7, hide).         const(hide).
%%%%%%%% node49_8 %%%%%%%%%%%%%%%%%%%
node(node49_8).
deepord(node49_8, 7).         const(7).
functor(node49_8, CONJ).         const(CONJ).
id(node49_8, T_plzensky56858_txt_001_p3s3a5).         const(T_plzensky56858_txt_001_p3s3a5).
nodetype(node49_8, coap).         const(coap).
t_lemma(node49_8, a).         const(a).
%%%%%%%% node49_9 %%%%%%%%%%%%%%%%%%%
node(node49_9).
deepord(node49_9, 6).         const(6).
functor(node49_9, PAT).         const(PAT).
gram_sempos(node49_9, n_denot).         const(n_denot).
id(node49_9, T_plzensky56858_txt_001_p3s3a6).         const(T_plzensky56858_txt_001_p3s3a6).
is_member(node49_9, 1).         const(1).
nodetype(node49_9, complex).         const(complex).
t_lemma(node49_9, osoba).         const(osoba).
%%%%%%%% node49_10 %%%%%%%%%%%%%%%%%%%
node(node49_10).
deepord(node49_10, 4).         const(4).
functor(node49_10, RSTR).         const(RSTR).
gram_sempos(node49_10, adj_quant_def).         const(adj_quant_def).
id(node49_10, T_plzensky56858_txt_001_p3s3a7).         const(T_plzensky56858_txt_001_p3s3a7).
nodetype(node49_10, complex).         const(complex).
t_lemma(node49_10, dva).         const(dva).
%%%%%%%% node49_11 %%%%%%%%%%%%%%%%%%%
node(node49_11).
deepord(node49_11, x4_1).         const(x4_1).
a_ref_type(node49_11, tree).         const(tree).
a_afun(node49_11, Atr).         const(Atr).
m_form(node49_11, dve).         const(dve).
m_lemma(node49_11, dva_2).         const(dva_2).
m_tag(node49_11, ClHP1__________).         const(ClHP1__________).
w_token(node49_11, dve).         const(dve).
a_ord(node49_11, 5).         const(5).
a_parent_id(node49_11, a_plzensky56858_txt_001_p3s3W7).         const(a_plzensky56858_txt_001_p3s3W7).
hide(node49_11, hide).         const(hide).
%%%%%%%% node49_12 %%%%%%%%%%%%%%%%%%%
node(node49_12).
deepord(node49_12, 5).         const(5).
functor(node49_12, RSTR).         const(RSTR).
gram_sempos(node49_12, adj_denot).         const(adj_denot).
id(node49_12, T_plzensky56858_txt_001_p3s3a8).         const(T_plzensky56858_txt_001_p3s3a8).
nodetype(node49_12, complex).         const(complex).
t_lemma(node49_12, dospely).         const(dospely).
%%%%%%%% node49_13 %%%%%%%%%%%%%%%%%%%
node(node49_13).
deepord(node49_13, x5_1).         const(x5_1).
a_ref_type(node49_13, tree).         const(tree).
a_afun(node49_13, Atr).         const(Atr).
m_form(node49_13, dospele).         const(dospele).
m_lemma(node49_13, dospely_1).         const(dospely_1).
m_tag(node49_13, AAFP1____1A____).         const(AAFP1____1A____).
w_token(node49_13, dospele).         const(dospele).
a_ord(node49_13, 6).         const(6).
a_parent_id(node49_13, a_plzensky56858_txt_001_p3s3W7).         const(a_plzensky56858_txt_001_p3s3W7).
hide(node49_13, hide).         const(hide).
%%%%%%%% node49_14 %%%%%%%%%%%%%%%%%%%
node(node49_14).
deepord(node49_14, x6_1).         const(x6_1).
a_ref_type(node49_14, tree).         const(tree).
a_afun(node49_14, Sb).         const(Sb).
m_form(node49_14, osoby).         const(osoby).
m_lemma(node49_14, osoba).         const(osoba).
m_tag(node49_14, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node49_14, osoby).         const(osoby).
a_ord(node49_14, 7).         const(7).
a_parent_id(node49_14, a_plzensky56858_txt_001_p3s3W8).         const(a_plzensky56858_txt_001_p3s3W8).
hide(node49_14, hide).         const(hide).
%%%%%%%% node49_15 %%%%%%%%%%%%%%%%%%%
node(node49_15).
deepord(node49_15, x7_1).         const(x7_1).
a_ref_type(node49_15, tree).         const(tree).
a_afun(node49_15, Coord).         const(Coord).
m_form(node49_15, a).         const(a).
m_lemma(node49_15, a_1).         const(a_1).
m_tag(node49_15, J______________).         const(J______________).
w_token(node49_15, a).         const(a).
a_ord(node49_15, 8).         const(8).
a_parent_id(node49_15, a_plzensky56858_txt_001_p3s3W4).         const(a_plzensky56858_txt_001_p3s3W4).
hide(node49_15, hide).         const(hide).
%%%%%%%% node49_16 %%%%%%%%%%%%%%%%%%%
node(node49_16).
deepord(node49_16, 9).         const(9).
functor(node49_16, PAT).         const(PAT).
gram_sempos(node49_16, n_denot).         const(n_denot).
id(node49_16, T_plzensky56858_txt_001_p3s3a9).         const(T_plzensky56858_txt_001_p3s3a9).
is_member(node49_16, 1).         const(1).
nodetype(node49_16, complex).         const(complex).
t_lemma(node49_16, dite).         const(dite).
%%%%%%%% node49_17 %%%%%%%%%%%%%%%%%%%
node(node49_17).
deepord(node49_17, 8).         const(8).
functor(node49_17, RSTR).         const(RSTR).
gram_sempos(node49_17, adj_quant_def).         const(adj_quant_def).
id(node49_17, T_plzensky56858_txt_001_p3s3a10).         const(T_plzensky56858_txt_001_p3s3a10).
nodetype(node49_17, complex).         const(complex).
t_lemma(node49_17, dva).         const(dva).
%%%%%%%% node49_18 %%%%%%%%%%%%%%%%%%%
node(node49_18).
deepord(node49_18, x8_1).         const(x8_1).
a_ref_type(node49_18, tree).         const(tree).
a_afun(node49_18, Atr).         const(Atr).
m_form(node49_18, dve).         const(dve).
m_lemma(node49_18, dva_2).         const(dva_2).
m_tag(node49_18, ClHP1__________).         const(ClHP1__________).
w_token(node49_18, dve).         const(dve).
a_ord(node49_18, 9).         const(9).
a_parent_id(node49_18, a_plzensky56858_txt_001_p3s3W10).         const(a_plzensky56858_txt_001_p3s3W10).
hide(node49_18, hide).         const(hide).
%%%%%%%% node49_19 %%%%%%%%%%%%%%%%%%%
node(node49_19).
deepord(node49_19, x9_1).         const(x9_1).
a_ref_type(node49_19, tree).         const(tree).
a_afun(node49_19, Sb).         const(Sb).
m_form(node49_19, deti).         const(deti).
m_lemma(node49_19, dite).         const(dite).
m_tag(node49_19, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node49_19, deti).         const(deti).
a_ord(node49_19, 10).         const(10).
a_parent_id(node49_19, a_plzensky56858_txt_001_p3s3W8).         const(a_plzensky56858_txt_001_p3s3W8).
hide(node49_19, hide).         const(hide).
%%%%%%%% node49_20 %%%%%%%%%%%%%%%%%%%
node(node49_20).
deepord(node49_20, 10).         const(10).
functor(node49_20, DIR1).         const(DIR1).
gram_sempos(node49_20, n_denot).         const(n_denot).
id(node49_20, T_plzensky56858_txt_001_p3s3a12).         const(T_plzensky56858_txt_001_p3s3a12).
nodetype(node49_20, complex).         const(complex).
subfunctor(node49_20, basic).         const(basic).
t_lemma(node49_20, automobil).         const(automobil).
%%%%%%%% node49_21 %%%%%%%%%%%%%%%%%%%
node(node49_21).
deepord(node49_21, x10_1).         const(x10_1).
a_ref_type(node49_21, tree).         const(tree).
a_afun(node49_21, AuxP).         const(AuxP).
m_form(node49_21, z).         const(z).
m_lemma(node49_21, z_1).         const(z_1).
m_tag(node49_21, RR__2__________).         const(RR__2__________).
w_token(node49_21, z).         const(z).
a_ord(node49_21, 11).         const(11).
a_parent_id(node49_21, a_plzensky56858_txt_001_p3s3W10).         const(a_plzensky56858_txt_001_p3s3W10).
hide(node49_21, hide).         const(hide).
%%%%%%%% node49_22 %%%%%%%%%%%%%%%%%%%
node(node49_22).
deepord(node49_22, x10_2).         const(x10_2).
a_ref_type(node49_22, tree).         const(tree).
a_afun(node49_22, Atr).         const(Atr).
m_form(node49_22, automobilu).         const(automobilu).
m_lemma(node49_22, automobil).         const(automobil).
m_tag(node49_22, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node49_22, automobilu).         const(automobilu).
w_no_space_after(node49_22, 1).         const(1).
a_ord(node49_22, 12).         const(12).
a_parent_id(node49_22, a_plzensky56858_txt_001_p3s3W11).         const(a_plzensky56858_txt_001_p3s3W11).
hide(node49_22, hide).         const(hide).
edge(node49_0, node49_1).
edge(node49_1, node49_2).
edge(node49_1, node49_3).
edge(node49_3, node49_4).
edge(node49_3, node49_5).
edge(node49_1, node49_6).
edge(node49_1, node49_7).
edge(node49_1, node49_8).
edge(node49_8, node49_9).
edge(node49_9, node49_10).
edge(node49_10, node49_11).
edge(node49_9, node49_12).
edge(node49_12, node49_13).
edge(node49_9, node49_14).
edge(node49_8, node49_15).
edge(node49_8, node49_16).
edge(node49_16, node49_17).
edge(node49_17, node49_18).
edge(node49_16, node49_19).
edge(node49_16, node49_20).
edge(node49_20, node49_21).
edge(node49_20, node49_22).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pri nehode byly zraneny dve dospele osoby a dve deti z automobilu. 
tree_root(node50_0).
valid_root(node50_0).
%%%%%%%% node50_0 %%%%%%%%%%%%%%%%%%%
node(node50_0).
atree_rf(node50_0, a_a_plzensky56858_txt_001_p3s3).         const(a_a_plzensky56858_txt_001_p3s3).
deepord(node50_0, 0).         const(0).
id(node50_0, T_plzensky56858_txt_001_p3s3).         const(T_plzensky56858_txt_001_p3s3).
nodetype(node50_0, root).         const(root).
sentence(node50_0, Pri_nehode_byly_zraneny_dve_dospele_osoby_a_dve_deti_z_automobilu__).         const(Pri_nehode_byly_zraneny_dve_dospele_osoby_a_dve_deti_z_automobilu__).
%%%%%%%% node50_1 %%%%%%%%%%%%%%%%%%%
node(node50_1).
deepord(node50_1, 3).         const(3).
functor(node50_1, PRED).         const(PRED).
gram_sempos(node50_1, v).         const(v).
id(node50_1, T_plzensky56858_txt_001_p3s3a1).         const(T_plzensky56858_txt_001_p3s3a1).
nodetype(node50_1, complex).         const(complex).
t_lemma(node50_1, zranit).         const(zranit).
val_frame_rf(node50_1, v_v_w9860f1).         const(v_v_w9860f1).
%%%%%%%% node50_2 %%%%%%%%%%%%%%%%%%%
node(node50_2).
deepord(node50_2, 1).         const(1).
functor(node50_2, ACT).         const(ACT).
id(node50_2, T_plzensky56858_txt_001_p3s3a13).         const(T_plzensky56858_txt_001_p3s3a13).
is_generated(node50_2, 1).         const(1).
nodetype(node50_2, qcomplex).         const(qcomplex).
t_lemma(node50_2, x_Gen).         const(x_Gen).
%%%%%%%% node50_3 %%%%%%%%%%%%%%%%%%%
node(node50_3).
deepord(node50_3, 2).         const(2).
functor(node50_3, TWHEN).         const(TWHEN).
gram_sempos(node50_3, n_denot).         const(n_denot).
id(node50_3, T_plzensky56858_txt_001_p3s3a3).         const(T_plzensky56858_txt_001_p3s3a3).
nodetype(node50_3, complex).         const(complex).
subfunctor(node50_3, basic).         const(basic).
t_lemma(node50_3, nehoda).         const(nehoda).
%%%%%%%% node50_4 %%%%%%%%%%%%%%%%%%%
node(node50_4).
deepord(node50_4, x2_1).         const(x2_1).
a_ref_type(node50_4, tree).         const(tree).
a_afun(node50_4, AuxP).         const(AuxP).
m_form(node50_4, Pri).         const(Pri).
m_lemma(node50_4, pri_1).         const(pri_1).
m_tag(node50_4, RR__6__________).         const(RR__6__________).
w_token(node50_4, Pri).         const(Pri).
a_ord(node50_4, 1).         const(1).
a_parent_id(node50_4, a_plzensky56858_txt_001_p3s3W4).         const(a_plzensky56858_txt_001_p3s3W4).
hide(node50_4, hide).         const(hide).
%%%%%%%% node50_5 %%%%%%%%%%%%%%%%%%%
node(node50_5).
deepord(node50_5, x2_2).         const(x2_2).
a_ref_type(node50_5, tree).         const(tree).
a_afun(node50_5, Adv).         const(Adv).
m_form(node50_5, nehode).         const(nehode).
m_lemma(node50_5, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node50_5, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node50_5, nehode).         const(nehode).
a_ord(node50_5, 2).         const(2).
a_parent_id(node50_5, a_plzensky56858_txt_001_p3s3W1).         const(a_plzensky56858_txt_001_p3s3W1).
hide(node50_5, hide).         const(hide).
%%%%%%%% node50_6 %%%%%%%%%%%%%%%%%%%
node(node50_6).
deepord(node50_6, x3_1).         const(x3_1).
a_ref_type(node50_6, tree).         const(tree).
a_afun(node50_6, AuxV).         const(AuxV).
m_form(node50_6, byly).         const(byly).
m_lemma(node50_6, byt).         const(byt).
m_tag(node50_6, VpTP___XR_AA___).         const(VpTP___XR_AA___).
w_token(node50_6, byly).         const(byly).
a_ord(node50_6, 3).         const(3).
a_parent_id(node50_6, a_plzensky56858_txt_001_p3s3W4).         const(a_plzensky56858_txt_001_p3s3W4).
hide(node50_6, hide).         const(hide).
%%%%%%%% node50_7 %%%%%%%%%%%%%%%%%%%
node(node50_7).
deepord(node50_7, x3_2).         const(x3_2).
a_ref_type(node50_7, tree).         const(tree).
a_afun(node50_7, Pred).         const(Pred).
m_form(node50_7, zraneny).         const(zraneny).
m_lemma(node50_7, zranit__W).         const(zranit__W).
m_tag(node50_7, VsTP___XX_AP___).         const(VsTP___XX_AP___).
w_token(node50_7, zraneny).         const(zraneny).
a_ord(node50_7, 4).         const(4).
a_parent_id(node50_7, a_plzensky56858_txt_001_p3s3).         const(a_plzensky56858_txt_001_p3s3).
hide(node50_7, hide).         const(hide).
%%%%%%%% node50_8 %%%%%%%%%%%%%%%%%%%
node(node50_8).
deepord(node50_8, 7).         const(7).
functor(node50_8, CONJ).         const(CONJ).
id(node50_8, T_plzensky56858_txt_001_p3s3a5).         const(T_plzensky56858_txt_001_p3s3a5).
nodetype(node50_8, coap).         const(coap).
t_lemma(node50_8, a).         const(a).
%%%%%%%% node50_9 %%%%%%%%%%%%%%%%%%%
node(node50_9).
deepord(node50_9, 6).         const(6).
functor(node50_9, PAT).         const(PAT).
gram_sempos(node50_9, n_denot).         const(n_denot).
id(node50_9, T_plzensky56858_txt_001_p3s3a6).         const(T_plzensky56858_txt_001_p3s3a6).
is_member(node50_9, 1).         const(1).
nodetype(node50_9, complex).         const(complex).
t_lemma(node50_9, osoba).         const(osoba).
%%%%%%%% node50_10 %%%%%%%%%%%%%%%%%%%
node(node50_10).
deepord(node50_10, 4).         const(4).
functor(node50_10, RSTR).         const(RSTR).
gram_sempos(node50_10, adj_quant_def).         const(adj_quant_def).
id(node50_10, T_plzensky56858_txt_001_p3s3a7).         const(T_plzensky56858_txt_001_p3s3a7).
nodetype(node50_10, complex).         const(complex).
t_lemma(node50_10, dva).         const(dva).
%%%%%%%% node50_11 %%%%%%%%%%%%%%%%%%%
node(node50_11).
deepord(node50_11, x4_1).         const(x4_1).
a_ref_type(node50_11, tree).         const(tree).
a_afun(node50_11, Atr).         const(Atr).
m_form(node50_11, dve).         const(dve).
m_lemma(node50_11, dva_2).         const(dva_2).
m_tag(node50_11, ClHP1__________).         const(ClHP1__________).
w_token(node50_11, dve).         const(dve).
a_ord(node50_11, 5).         const(5).
a_parent_id(node50_11, a_plzensky56858_txt_001_p3s3W7).         const(a_plzensky56858_txt_001_p3s3W7).
hide(node50_11, hide).         const(hide).
%%%%%%%% node50_12 %%%%%%%%%%%%%%%%%%%
node(node50_12).
deepord(node50_12, 5).         const(5).
functor(node50_12, RSTR).         const(RSTR).
gram_sempos(node50_12, adj_denot).         const(adj_denot).
id(node50_12, T_plzensky56858_txt_001_p3s3a8).         const(T_plzensky56858_txt_001_p3s3a8).
nodetype(node50_12, complex).         const(complex).
t_lemma(node50_12, dospely).         const(dospely).
%%%%%%%% node50_13 %%%%%%%%%%%%%%%%%%%
node(node50_13).
deepord(node50_13, x5_1).         const(x5_1).
a_ref_type(node50_13, tree).         const(tree).
a_afun(node50_13, Atr).         const(Atr).
m_form(node50_13, dospele).         const(dospele).
m_lemma(node50_13, dospely_1).         const(dospely_1).
m_tag(node50_13, AAFP1____1A____).         const(AAFP1____1A____).
w_token(node50_13, dospele).         const(dospele).
a_ord(node50_13, 6).         const(6).
a_parent_id(node50_13, a_plzensky56858_txt_001_p3s3W7).         const(a_plzensky56858_txt_001_p3s3W7).
hide(node50_13, hide).         const(hide).
%%%%%%%% node50_14 %%%%%%%%%%%%%%%%%%%
node(node50_14).
deepord(node50_14, x6_1).         const(x6_1).
a_ref_type(node50_14, tree).         const(tree).
a_afun(node50_14, Sb).         const(Sb).
m_form(node50_14, osoby).         const(osoby).
m_lemma(node50_14, osoba).         const(osoba).
m_tag(node50_14, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node50_14, osoby).         const(osoby).
a_ord(node50_14, 7).         const(7).
a_parent_id(node50_14, a_plzensky56858_txt_001_p3s3W8).         const(a_plzensky56858_txt_001_p3s3W8).
hide(node50_14, hide).         const(hide).
%%%%%%%% node50_15 %%%%%%%%%%%%%%%%%%%
node(node50_15).
deepord(node50_15, x7_1).         const(x7_1).
a_ref_type(node50_15, tree).         const(tree).
a_afun(node50_15, Coord).         const(Coord).
m_form(node50_15, a).         const(a).
m_lemma(node50_15, a_1).         const(a_1).
m_tag(node50_15, J______________).         const(J______________).
w_token(node50_15, a).         const(a).
a_ord(node50_15, 8).         const(8).
a_parent_id(node50_15, a_plzensky56858_txt_001_p3s3W4).         const(a_plzensky56858_txt_001_p3s3W4).
hide(node50_15, hide).         const(hide).
%%%%%%%% node50_16 %%%%%%%%%%%%%%%%%%%
node(node50_16).
deepord(node50_16, 9).         const(9).
functor(node50_16, PAT).         const(PAT).
gram_sempos(node50_16, n_denot).         const(n_denot).
id(node50_16, T_plzensky56858_txt_001_p3s3a9).         const(T_plzensky56858_txt_001_p3s3a9).
is_member(node50_16, 1).         const(1).
nodetype(node50_16, complex).         const(complex).
t_lemma(node50_16, dite).         const(dite).
%%%%%%%% node50_17 %%%%%%%%%%%%%%%%%%%
node(node50_17).
deepord(node50_17, 8).         const(8).
functor(node50_17, RSTR).         const(RSTR).
gram_sempos(node50_17, adj_quant_def).         const(adj_quant_def).
id(node50_17, T_plzensky56858_txt_001_p3s3a10).         const(T_plzensky56858_txt_001_p3s3a10).
nodetype(node50_17, complex).         const(complex).
t_lemma(node50_17, dva).         const(dva).
%%%%%%%% node50_18 %%%%%%%%%%%%%%%%%%%
node(node50_18).
deepord(node50_18, x8_1).         const(x8_1).
a_ref_type(node50_18, tree).         const(tree).
a_afun(node50_18, Atr).         const(Atr).
m_form(node50_18, dve).         const(dve).
m_lemma(node50_18, dva_2).         const(dva_2).
m_tag(node50_18, ClHP1__________).         const(ClHP1__________).
w_token(node50_18, dve).         const(dve).
a_ord(node50_18, 9).         const(9).
a_parent_id(node50_18, a_plzensky56858_txt_001_p3s3W10).         const(a_plzensky56858_txt_001_p3s3W10).
hide(node50_18, hide).         const(hide).
%%%%%%%% node50_19 %%%%%%%%%%%%%%%%%%%
node(node50_19).
deepord(node50_19, x9_1).         const(x9_1).
a_ref_type(node50_19, tree).         const(tree).
a_afun(node50_19, Sb).         const(Sb).
m_form(node50_19, deti).         const(deti).
m_lemma(node50_19, dite).         const(dite).
m_tag(node50_19, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node50_19, deti).         const(deti).
a_ord(node50_19, 10).         const(10).
a_parent_id(node50_19, a_plzensky56858_txt_001_p3s3W8).         const(a_plzensky56858_txt_001_p3s3W8).
hide(node50_19, hide).         const(hide).
%%%%%%%% node50_20 %%%%%%%%%%%%%%%%%%%
node(node50_20).
deepord(node50_20, 10).         const(10).
functor(node50_20, DIR1).         const(DIR1).
gram_sempos(node50_20, n_denot).         const(n_denot).
id(node50_20, T_plzensky56858_txt_001_p3s3a12).         const(T_plzensky56858_txt_001_p3s3a12).
nodetype(node50_20, complex).         const(complex).
subfunctor(node50_20, basic).         const(basic).
t_lemma(node50_20, automobil).         const(automobil).
%%%%%%%% node50_21 %%%%%%%%%%%%%%%%%%%
node(node50_21).
deepord(node50_21, x10_1).         const(x10_1).
a_ref_type(node50_21, tree).         const(tree).
a_afun(node50_21, AuxP).         const(AuxP).
m_form(node50_21, z).         const(z).
m_lemma(node50_21, z_1).         const(z_1).
m_tag(node50_21, RR__2__________).         const(RR__2__________).
w_token(node50_21, z).         const(z).
a_ord(node50_21, 11).         const(11).
a_parent_id(node50_21, a_plzensky56858_txt_001_p3s3W10).         const(a_plzensky56858_txt_001_p3s3W10).
hide(node50_21, hide).         const(hide).
%%%%%%%% node50_22 %%%%%%%%%%%%%%%%%%%
node(node50_22).
deepord(node50_22, x10_2).         const(x10_2).
a_ref_type(node50_22, tree).         const(tree).
a_afun(node50_22, Atr).         const(Atr).
m_form(node50_22, automobilu).         const(automobilu).
m_lemma(node50_22, automobil).         const(automobil).
m_tag(node50_22, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node50_22, automobilu).         const(automobilu).
w_no_space_after(node50_22, 1).         const(1).
a_ord(node50_22, 12).         const(12).
a_parent_id(node50_22, a_plzensky56858_txt_001_p3s3W11).         const(a_plzensky56858_txt_001_p3s3W11).
hide(node50_22, hide).         const(hide).
edge(node50_0, node50_1).
edge(node50_1, node50_2).
edge(node50_1, node50_3).
edge(node50_3, node50_4).
edge(node50_3, node50_5).
edge(node50_1, node50_6).
edge(node50_1, node50_7).
edge(node50_1, node50_8).
edge(node50_8, node50_9).
edge(node50_9, node50_10).
edge(node50_10, node50_11).
edge(node50_9, node50_12).
edge(node50_12, node50_13).
edge(node50_9, node50_14).
edge(node50_8, node50_15).
edge(node50_8, node50_16).
edge(node50_16, node50_17).
edge(node50_17, node50_18).
edge(node50_16, node50_19).
edge(node50_16, node50_20).
edge(node50_20, node50_21).
edge(node50_20, node50_22).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% N E G A T I V E      E X A M P L E S

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Osobni automobily Skoda Octavia a VW Golf po celnim stretu zustaly na vozovce, treti vozidlo skoncilo na kolech v prikopu. 
tree_root(node0_0).
:- valid_root(node0_0).
%%%%%%%% node0_0 %%%%%%%%%%%%%%%%%%%
node(node0_0).
atree_rf(node0_0, a_a_plzensky70827_txt_001_p1s1).         const(a_a_plzensky70827_txt_001_p1s1).
deepord(node0_0, 0).         const(0).
id(node0_0, T_plzensky70827_txt_001_p1s1).         const(T_plzensky70827_txt_001_p1s1).
nodetype(node0_0, root).         const(root).
sentence(node0_0, Osobni_automobily_Skoda_Octavia_a_VW_Golf_po_celnim_stretu_zustaly_na_vozovce__treti_vozidlo_skoncilo_na_kolech_v_prikopu__).         const(Osobni_automobily_Skoda_Octavia_a_VW_Golf_po_celnim_stretu_zustaly_na_vozovce__treti_vozidlo_skoncilo_na_kolech_v_prikopu__).
%%%%%%%% node0_1 %%%%%%%%%%%%%%%%%%%
node(node0_1).
deepord(node0_1, 12).         const(12).
functor(node0_1, CONJ).         const(CONJ).
id(node0_1, T_plzensky70827_txt_001_p1s1a1).         const(T_plzensky70827_txt_001_p1s1a1).
nodetype(node0_1, coap).         const(coap).
t_lemma(node0_1, x_Comma).         const(x_Comma).
%%%%%%%% node0_2 %%%%%%%%%%%%%%%%%%%
node(node0_2).
deepord(node0_2, 10).         const(10).
functor(node0_2, PRED).         const(PRED).
gram_sempos(node0_2, v).         const(v).
id(node0_2, T_plzensky70827_txt_001_p1s1a2).         const(T_plzensky70827_txt_001_p1s1a2).
is_member(node0_2, 1).         const(1).
nodetype(node0_2, complex).         const(complex).
t_lemma(node0_2, zustat).         const(zustat).
val_frame_rf(node0_2, v_v_w9938f1).         const(v_v_w9938f1).
%%%%%%%% node0_3 %%%%%%%%%%%%%%%%%%%
node(node0_3).
deepord(node0_3, 5).         const(5).
functor(node0_3, CONJ).         const(CONJ).
id(node0_3, T_plzensky70827_txt_001_p1s1a3).         const(T_plzensky70827_txt_001_p1s1a3).
nodetype(node0_3, coap).         const(coap).
t_lemma(node0_3, a).         const(a).
%%%%%%%% node0_4 %%%%%%%%%%%%%%%%%%%
node(node0_4).
deepord(node0_4, 2).         const(2).
functor(node0_4, ACT).         const(ACT).
gram_sempos(node0_4, n_denot).         const(n_denot).
id(node0_4, T_plzensky70827_txt_001_p1s1a4).         const(T_plzensky70827_txt_001_p1s1a4).
is_member(node0_4, 1).         const(1).
nodetype(node0_4, complex).         const(complex).
t_lemma(node0_4, automobil).         const(automobil).
%%%%%%%% node0_5 %%%%%%%%%%%%%%%%%%%
node(node0_5).
deepord(node0_5, 1).         const(1).
functor(node0_5, RSTR).         const(RSTR).
gram_sempos(node0_5, adj_denot).         const(adj_denot).
id(node0_5, T_plzensky70827_txt_001_p1s1a5).         const(T_plzensky70827_txt_001_p1s1a5).
nodetype(node0_5, complex).         const(complex).
t_lemma(node0_5, osobni).         const(osobni).
%%%%%%%% node0_6 %%%%%%%%%%%%%%%%%%%
node(node0_6).
deepord(node0_6, x1_1).         const(x1_1).
a_ref_type(node0_6, tree).         const(tree).
a_afun(node0_6, Atr).         const(Atr).
m_form(node0_6, Osobni).         const(Osobni).
m_lemma(node0_6, osobni).         const(osobni).
m_tag(node0_6, AAIP1____1A____).         const(AAIP1____1A____).
w_token(node0_6, Osobni).         const(Osobni).
a_ord(node0_6, 1).         const(1).
a_parent_id(node0_6, a_plzensky70827_txt_001_p1s1W2).         const(a_plzensky70827_txt_001_p1s1W2).
hide(node0_6, hide).         const(hide).
%%%%%%%% node0_7 %%%%%%%%%%%%%%%%%%%
node(node0_7).
deepord(node0_7, x2_1).         const(x2_1).
a_ref_type(node0_7, tree).         const(tree).
a_afun(node0_7, Sb).         const(Sb).
m_form(node0_7, automobily).         const(automobily).
m_lemma(node0_7, automobil).         const(automobil).
m_tag(node0_7, NNIP1_____A____).         const(NNIP1_____A____).
w_token(node0_7, automobily).         const(automobily).
a_ord(node0_7, 2).         const(2).
a_parent_id(node0_7, a_plzensky70827_txt_001_p1s1W5).         const(a_plzensky70827_txt_001_p1s1W5).
hide(node0_7, hide).         const(hide).
%%%%%%%% node0_8 %%%%%%%%%%%%%%%%%%%
node(node0_8).
deepord(node0_8, 3).         const(3).
functor(node0_8, ID).         const(ID).
gram_sempos(node0_8, n_denot).         const(n_denot).
id(node0_8, T_plzensky70827_txt_001_p1s1a6).         const(T_plzensky70827_txt_001_p1s1a6).
nodetype(node0_8, complex).         const(complex).
t_lemma(node0_8, Skoda).         const(Skoda).
%%%%%%%% node0_9 %%%%%%%%%%%%%%%%%%%
node(node0_9).
deepord(node0_9, x3_1).         const(x3_1).
a_ref_type(node0_9, tree).         const(tree).
a_afun(node0_9, Atr).         const(Atr).
m_form(node0_9, Skoda).         const(Skoda).
m_lemma(node0_9, Skoda_1__K).         const(Skoda_1__K).
m_tag(node0_9, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node0_9, Skoda).         const(Skoda).
a_ord(node0_9, 3).         const(3).
a_parent_id(node0_9, a_plzensky70827_txt_001_p1s1W2).         const(a_plzensky70827_txt_001_p1s1W2).
hide(node0_9, hide).         const(hide).
%%%%%%%% node0_10 %%%%%%%%%%%%%%%%%%%
node(node0_10).
deepord(node0_10, 4).         const(4).
functor(node0_10, PAT).         const(PAT).
gram_sempos(node0_10, n_denot).         const(n_denot).
id(node0_10, T_plzensky70827_txt_001_p1s1a7).         const(T_plzensky70827_txt_001_p1s1a7).
nodetype(node0_10, complex).         const(complex).
t_lemma(node0_10, Octavius).         const(Octavius).
%%%%%%%% node0_11 %%%%%%%%%%%%%%%%%%%
node(node0_11).
deepord(node0_11, x4_1).         const(x4_1).
a_ref_type(node0_11, tree).         const(tree).
a_afun(node0_11, Adv).         const(Adv).
m_form(node0_11, Octavia).         const(Octavia).
m_lemma(node0_11, Octavius__S).         const(Octavius__S).
m_tag(node0_11, NNMS2_____A____).         const(NNMS2_____A____).
w_token(node0_11, Octavia).         const(Octavia).
a_ord(node0_11, 4).         const(4).
a_parent_id(node0_11, a_plzensky70827_txt_001_p1s1W5).         const(a_plzensky70827_txt_001_p1s1W5).
hide(node0_11, hide).         const(hide).
%%%%%%%% node0_12 %%%%%%%%%%%%%%%%%%%
node(node0_12).
deepord(node0_12, x5_1).         const(x5_1).
a_ref_type(node0_12, tree).         const(tree).
a_afun(node0_12, Coord).         const(Coord).
m_form(node0_12, a).         const(a).
m_lemma(node0_12, a_1).         const(a_1).
m_tag(node0_12, J______________).         const(J______________).
w_token(node0_12, a).         const(a).
a_ord(node0_12, 5).         const(5).
a_parent_id(node0_12, a_plzensky70827_txt_001_p1s1W11).         const(a_plzensky70827_txt_001_p1s1W11).
hide(node0_12, hide).         const(hide).
%%%%%%%% node0_13 %%%%%%%%%%%%%%%%%%%
node(node0_13).
deepord(node0_13, 7).         const(7).
functor(node0_13, ACT).         const(ACT).
gram_sempos(node0_13, n_denot).         const(n_denot).
id(node0_13, T_plzensky70827_txt_001_p1s1a8).         const(T_plzensky70827_txt_001_p1s1a8).
is_member(node0_13, 1).         const(1).
nodetype(node0_13, complex).         const(complex).
t_lemma(node0_13, Golf).         const(Golf).
%%%%%%%% node0_14 %%%%%%%%%%%%%%%%%%%
node(node0_14).
deepord(node0_14, 6).         const(6).
functor(node0_14, ID).         const(ID).
gram_sempos(node0_14, n_denot).         const(n_denot).
id(node0_14, T_plzensky70827_txt_001_p1s1a9).         const(T_plzensky70827_txt_001_p1s1a9).
nodetype(node0_14, complex).         const(complex).
t_lemma(node0_14, VW).         const(VW).
%%%%%%%% node0_15 %%%%%%%%%%%%%%%%%%%
node(node0_15).
deepord(node0_15, x6_1).         const(x6_1).
a_ref_type(node0_15, tree).         const(tree).
a_afun(node0_15, Atr).         const(Atr).
m_form(node0_15, VW).         const(VW).
m_lemma(node0_15, VW_1__B__R__t___automobil_znacky_Volkswagen_).         const(VW_1__B__R__t___automobil_znacky_Volkswagen_).
m_tag(node0_15, NNIXX_____A____).         const(NNIXX_____A____).
w_token(node0_15, VW).         const(VW).
a_ord(node0_15, 6).         const(6).
a_parent_id(node0_15, a_plzensky70827_txt_001_p1s1W7).         const(a_plzensky70827_txt_001_p1s1W7).
hide(node0_15, hide).         const(hide).
%%%%%%%% node0_16 %%%%%%%%%%%%%%%%%%%
node(node0_16).
deepord(node0_16, x7_1).         const(x7_1).
a_ref_type(node0_16, tree).         const(tree).
a_afun(node0_16, Sb).         const(Sb).
m_form(node0_16, Golf).         const(Golf).
m_lemma(node0_16, Golf_2__R___vozidlo_).         const(Golf_2__R___vozidlo_).
m_tag(node0_16, NNIS1_____A____).         const(NNIS1_____A____).
w_token(node0_16, Golf).         const(Golf).
a_ord(node0_16, 7).         const(7).
a_parent_id(node0_16, a_plzensky70827_txt_001_p1s1W5).         const(a_plzensky70827_txt_001_p1s1W5).
hide(node0_16, hide).         const(hide).
%%%%%%%% node0_17 %%%%%%%%%%%%%%%%%%%
node(node0_17).
deepord(node0_17, 9).         const(9).
functor(node0_17, TWHEN).         const(TWHEN).
gram_sempos(node0_17, n_denot).         const(n_denot).
id(node0_17, T_plzensky70827_txt_001_p1s1a11).         const(T_plzensky70827_txt_001_p1s1a11).
nodetype(node0_17, complex).         const(complex).
subfunctor(node0_17, after).         const(after).
t_lemma(node0_17, stret).         const(stret).
%%%%%%%% node0_18 %%%%%%%%%%%%%%%%%%%
node(node0_18).
deepord(node0_18, 8).         const(8).
functor(node0_18, RSTR).         const(RSTR).
gram_sempos(node0_18, adj_denot).         const(adj_denot).
id(node0_18, T_plzensky70827_txt_001_p1s1a12).         const(T_plzensky70827_txt_001_p1s1a12).
nodetype(node0_18, complex).         const(complex).
t_lemma(node0_18, celni).         const(celni).
%%%%%%%% node0_19 %%%%%%%%%%%%%%%%%%%
node(node0_19).
deepord(node0_19, x8_1).         const(x8_1).
a_ref_type(node0_19, tree).         const(tree).
a_afun(node0_19, Atr).         const(Atr).
m_form(node0_19, celnim).         const(celnim).
m_lemma(node0_19, celni).         const(celni).
m_tag(node0_19, AAIS6____1A____).         const(AAIS6____1A____).
w_token(node0_19, celnim).         const(celnim).
a_ord(node0_19, 9).         const(9).
a_parent_id(node0_19, a_plzensky70827_txt_001_p1s1W10).         const(a_plzensky70827_txt_001_p1s1W10).
hide(node0_19, hide).         const(hide).
%%%%%%%% node0_20 %%%%%%%%%%%%%%%%%%%
node(node0_20).
deepord(node0_20, x9_1).         const(x9_1).
a_ref_type(node0_20, tree).         const(tree).
a_afun(node0_20, AuxP).         const(AuxP).
m_form(node0_20, po).         const(po).
m_lemma(node0_20, po_1).         const(po_1).
m_tag(node0_20, RR__6__________).         const(RR__6__________).
w_token(node0_20, po).         const(po).
a_ord(node0_20, 8).         const(8).
a_parent_id(node0_20, a_plzensky70827_txt_001_p1s1W7).         const(a_plzensky70827_txt_001_p1s1W7).
hide(node0_20, hide).         const(hide).
%%%%%%%% node0_21 %%%%%%%%%%%%%%%%%%%
node(node0_21).
deepord(node0_21, x9_2).         const(x9_2).
a_ref_type(node0_21, tree).         const(tree).
a_afun(node0_21, Atr).         const(Atr).
m_form(node0_21, stretu).         const(stretu).
m_lemma(node0_21, stret).         const(stret).
m_tag(node0_21, NNIS6_____A____).         const(NNIS6_____A____).
w_token(node0_21, stretu).         const(stretu).
a_ord(node0_21, 10).         const(10).
a_parent_id(node0_21, a_plzensky70827_txt_001_p1s1W8).         const(a_plzensky70827_txt_001_p1s1W8).
hide(node0_21, hide).         const(hide).
%%%%%%%% node0_22 %%%%%%%%%%%%%%%%%%%
node(node0_22).
deepord(node0_22, x10_1).         const(x10_1).
a_ref_type(node0_22, tree).         const(tree).
a_afun(node0_22, Pred).         const(Pred).
m_form(node0_22, zustaly).         const(zustaly).
m_lemma(node0_22, zustat).         const(zustat).
m_tag(node0_22, VpTP___XR_AA___).         const(VpTP___XR_AA___).
w_token(node0_22, zustaly).         const(zustaly).
a_ord(node0_22, 11).         const(11).
a_parent_id(node0_22, a_plzensky70827_txt_001_p1s1W14).         const(a_plzensky70827_txt_001_p1s1W14).
hide(node0_22, hide).         const(hide).
%%%%%%%% node0_23 %%%%%%%%%%%%%%%%%%%
node(node0_23).
deepord(node0_23, 11).         const(11).
functor(node0_23, LOC).         const(LOC).
gram_sempos(node0_23, n_denot).         const(n_denot).
id(node0_23, T_plzensky70827_txt_001_p1s1a14).         const(T_plzensky70827_txt_001_p1s1a14).
nodetype(node0_23, complex).         const(complex).
subfunctor(node0_23, basic).         const(basic).
t_lemma(node0_23, vozovka).         const(vozovka).
%%%%%%%% node0_24 %%%%%%%%%%%%%%%%%%%
node(node0_24).
deepord(node0_24, x11_1).         const(x11_1).
a_ref_type(node0_24, tree).         const(tree).
a_afun(node0_24, AuxP).         const(AuxP).
m_form(node0_24, na).         const(na).
m_lemma(node0_24, na_1).         const(na_1).
m_tag(node0_24, RR__6__________).         const(RR__6__________).
w_token(node0_24, na).         const(na).
a_ord(node0_24, 12).         const(12).
a_parent_id(node0_24, a_plzensky70827_txt_001_p1s1W11).         const(a_plzensky70827_txt_001_p1s1W11).
hide(node0_24, hide).         const(hide).
%%%%%%%% node0_25 %%%%%%%%%%%%%%%%%%%
node(node0_25).
deepord(node0_25, x11_2).         const(x11_2).
a_ref_type(node0_25, tree).         const(tree).
a_afun(node0_25, Adv).         const(Adv).
m_form(node0_25, vozovce).         const(vozovce).
m_lemma(node0_25, vozovka).         const(vozovka).
m_tag(node0_25, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node0_25, vozovce).         const(vozovce).
w_no_space_after(node0_25, 1).         const(1).
a_ord(node0_25, 13).         const(13).
a_parent_id(node0_25, a_plzensky70827_txt_001_p1s1W12).         const(a_plzensky70827_txt_001_p1s1W12).
hide(node0_25, hide).         const(hide).
%%%%%%%% node0_26 %%%%%%%%%%%%%%%%%%%
node(node0_26).
deepord(node0_26, x12_1).         const(x12_1).
a_ref_type(node0_26, tree).         const(tree).
a_afun(node0_26, Coord).         const(Coord).
m_form(node0_26, x_).         const(x_).
m_lemma(node0_26, x_).         const(x_).
m_tag(node0_26, Z______________).         const(Z______________).
w_token(node0_26, x_).         const(x_).
a_ord(node0_26, 14).         const(14).
a_parent_id(node0_26, a_plzensky70827_txt_001_p1s1).         const(a_plzensky70827_txt_001_p1s1).
hide(node0_26, hide).         const(hide).
%%%%%%%% node0_27 %%%%%%%%%%%%%%%%%%%
node(node0_27).
deepord(node0_27, 15).         const(15).
functor(node0_27, PRED).         const(PRED).
gram_sempos(node0_27, v).         const(v).
id(node0_27, T_plzensky70827_txt_001_p1s1a15).         const(T_plzensky70827_txt_001_p1s1a15).
is_member(node0_27, 1).         const(1).
nodetype(node0_27, complex).         const(complex).
t_lemma(node0_27, skoncit).         const(skoncit).
val_frame_rf(node0_27, v_v_w6123f2).         const(v_v_w6123f2).
%%%%%%%% node0_28 %%%%%%%%%%%%%%%%%%%
node(node0_28).
deepord(node0_28, 14).         const(14).
functor(node0_28, ACT).         const(ACT).
gram_sempos(node0_28, n_denot).         const(n_denot).
id(node0_28, T_plzensky70827_txt_001_p1s1a16).         const(T_plzensky70827_txt_001_p1s1a16).
nodetype(node0_28, complex).         const(complex).
t_lemma(node0_28, vozidlo).         const(vozidlo).
%%%%%%%% node0_29 %%%%%%%%%%%%%%%%%%%
node(node0_29).
deepord(node0_29, 13).         const(13).
functor(node0_29, RSTR).         const(RSTR).
gram_sempos(node0_29, adj_quant_def).         const(adj_quant_def).
id(node0_29, T_plzensky70827_txt_001_p1s1a17).         const(T_plzensky70827_txt_001_p1s1a17).
nodetype(node0_29, complex).         const(complex).
t_lemma(node0_29, tri).         const(tri).
%%%%%%%% node0_30 %%%%%%%%%%%%%%%%%%%
node(node0_30).
deepord(node0_30, x13_1).         const(x13_1).
a_ref_type(node0_30, tree).         const(tree).
a_afun(node0_30, Atr).         const(Atr).
m_form(node0_30, treti).         const(treti).
m_lemma(node0_30, treti).         const(treti).
m_tag(node0_30, CrNS1__________).         const(CrNS1__________).
w_token(node0_30, treti).         const(treti).
a_ord(node0_30, 15).         const(15).
a_parent_id(node0_30, a_plzensky70827_txt_001_p1s1W16).         const(a_plzensky70827_txt_001_p1s1W16).
hide(node0_30, hide).         const(hide).
%%%%%%%% node0_31 %%%%%%%%%%%%%%%%%%%
node(node0_31).
deepord(node0_31, x14_1).         const(x14_1).
a_ref_type(node0_31, tree).         const(tree).
a_afun(node0_31, Sb).         const(Sb).
m_form(node0_31, vozidlo).         const(vozidlo).
m_lemma(node0_31, vozidlo).         const(vozidlo).
m_tag(node0_31, NNNS1_____A____).         const(NNNS1_____A____).
w_token(node0_31, vozidlo).         const(vozidlo).
a_ord(node0_31, 16).         const(16).
a_parent_id(node0_31, a_plzensky70827_txt_001_p1s1W17).         const(a_plzensky70827_txt_001_p1s1W17).
hide(node0_31, hide).         const(hide).
%%%%%%%% node0_32 %%%%%%%%%%%%%%%%%%%
node(node0_32).
deepord(node0_32, x15_1).         const(x15_1).
a_ref_type(node0_32, tree).         const(tree).
a_afun(node0_32, Pred).         const(Pred).
m_form(node0_32, skoncilo).         const(skoncilo).
m_lemma(node0_32, skoncit__W).         const(skoncit__W).
m_tag(node0_32, VpNS___XR_AA___).         const(VpNS___XR_AA___).
w_token(node0_32, skoncilo).         const(skoncilo).
a_ord(node0_32, 17).         const(17).
a_parent_id(node0_32, a_plzensky70827_txt_001_p1s1W14).         const(a_plzensky70827_txt_001_p1s1W14).
hide(node0_32, hide).         const(hide).
%%%%%%%% node0_33 %%%%%%%%%%%%%%%%%%%
node(node0_33).
deepord(node0_33, 16).         const(16).
functor(node0_33, LOC).         const(LOC).
gram_sempos(node0_33, n_denot).         const(n_denot).
id(node0_33, T_plzensky70827_txt_001_p1s1a19).         const(T_plzensky70827_txt_001_p1s1a19).
nodetype(node0_33, complex).         const(complex).
subfunctor(node0_33, basic).         const(basic).
t_lemma(node0_33, kolo).         const(kolo).
%%%%%%%% node0_34 %%%%%%%%%%%%%%%%%%%
node(node0_34).
deepord(node0_34, x16_1).         const(x16_1).
a_ref_type(node0_34, tree).         const(tree).
a_afun(node0_34, AuxP).         const(AuxP).
m_form(node0_34, na).         const(na).
m_lemma(node0_34, na_1).         const(na_1).
m_tag(node0_34, RR__6__________).         const(RR__6__________).
w_token(node0_34, na).         const(na).
a_ord(node0_34, 18).         const(18).
a_parent_id(node0_34, a_plzensky70827_txt_001_p1s1W17).         const(a_plzensky70827_txt_001_p1s1W17).
hide(node0_34, hide).         const(hide).
%%%%%%%% node0_35 %%%%%%%%%%%%%%%%%%%
node(node0_35).
deepord(node0_35, x16_2).         const(x16_2).
a_ref_type(node0_35, tree).         const(tree).
a_afun(node0_35, Adv).         const(Adv).
m_form(node0_35, kolech).         const(kolech).
m_lemma(node0_35, kolo).         const(kolo).
m_tag(node0_35, NNNP6_____A____).         const(NNNP6_____A____).
w_token(node0_35, kolech).         const(kolech).
a_ord(node0_35, 19).         const(19).
a_parent_id(node0_35, a_plzensky70827_txt_001_p1s1W18).         const(a_plzensky70827_txt_001_p1s1W18).
hide(node0_35, hide).         const(hide).
%%%%%%%% node0_36 %%%%%%%%%%%%%%%%%%%
node(node0_36).
deepord(node0_36, 17).         const(17).
functor(node0_36, LOC).         const(LOC).
gram_sempos(node0_36, n_denot).         const(n_denot).
id(node0_36, T_plzensky70827_txt_001_p1s1a21).         const(T_plzensky70827_txt_001_p1s1a21).
nodetype(node0_36, complex).         const(complex).
subfunctor(node0_36, basic).         const(basic).
t_lemma(node0_36, prikop).         const(prikop).
%%%%%%%% node0_37 %%%%%%%%%%%%%%%%%%%
node(node0_37).
deepord(node0_37, x17_1).         const(x17_1).
a_ref_type(node0_37, tree).         const(tree).
a_afun(node0_37, AuxP).         const(AuxP).
m_form(node0_37, v).         const(v).
m_lemma(node0_37, v_1).         const(v_1).
m_tag(node0_37, RR__6__________).         const(RR__6__________).
w_token(node0_37, v).         const(v).
a_ord(node0_37, 20).         const(20).
a_parent_id(node0_37, a_plzensky70827_txt_001_p1s1W17).         const(a_plzensky70827_txt_001_p1s1W17).
hide(node0_37, hide).         const(hide).
%%%%%%%% node0_38 %%%%%%%%%%%%%%%%%%%
node(node0_38).
deepord(node0_38, x17_2).         const(x17_2).
a_ref_type(node0_38, tree).         const(tree).
a_afun(node0_38, Adv).         const(Adv).
m_form(node0_38, prikopu).         const(prikopu).
m_lemma(node0_38, prikop).         const(prikop).
m_tag(node0_38, NNIS6_____A___1).         const(NNIS6_____A___1).
w_token(node0_38, prikopu).         const(prikopu).
w_no_space_after(node0_38, 1).         const(1).
a_ord(node0_38, 21).         const(21).
a_parent_id(node0_38, a_plzensky70827_txt_001_p1s1W20).         const(a_plzensky70827_txt_001_p1s1W20).
hide(node0_38, hide).         const(hide).
edge(node0_0, node0_1).
edge(node0_1, node0_2).
edge(node0_2, node0_3).
edge(node0_3, node0_4).
edge(node0_4, node0_5).
edge(node0_5, node0_6).
edge(node0_4, node0_7).
edge(node0_4, node0_8).
edge(node0_8, node0_9).
edge(node0_3, node0_10).
edge(node0_10, node0_11).
edge(node0_3, node0_12).
edge(node0_3, node0_13).
edge(node0_13, node0_14).
edge(node0_14, node0_15).
edge(node0_13, node0_16).
edge(node0_13, node0_17).
edge(node0_17, node0_18).
edge(node0_18, node0_19).
edge(node0_17, node0_20).
edge(node0_17, node0_21).
edge(node0_2, node0_22).
edge(node0_2, node0_23).
edge(node0_23, node0_24).
edge(node0_23, node0_25).
edge(node0_1, node0_26).
edge(node0_1, node0_27).
edge(node0_27, node0_28).
edge(node0_28, node0_29).
edge(node0_29, node0_30).
edge(node0_28, node0_31).
edge(node0_27, node0_32).
edge(node0_27, node0_33).
edge(node0_33, node0_34).
edge(node0_33, node0_35).
edge(node0_27, node0_36).
edge(node0_36, node0_37).
edge(node0_36, node0_38).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Z osobnich automobilu na vozovce po narazu unikly provozni kapaliny, ktere hasici zlikvidovali pomoci sorbentu. 
tree_root(node1_0).
:- valid_root(node1_0).
%%%%%%%% node1_0 %%%%%%%%%%%%%%%%%%%
node(node1_0).
atree_rf(node1_0, a_a_plzensky70827_txt_001_p1s2).         const(a_a_plzensky70827_txt_001_p1s2).
deepord(node1_0, 0).         const(0).
id(node1_0, T_plzensky70827_txt_001_p1s2).         const(T_plzensky70827_txt_001_p1s2).
nodetype(node1_0, root).         const(root).
sentence(node1_0, Z_osobnich_automobilu_na_vozovce_po_narazu_unikly_provozni_kapaliny__ktere_hasici_zlikvidovali_pomoci_sorbentu__).         const(Z_osobnich_automobilu_na_vozovce_po_narazu_unikly_provozni_kapaliny__ktere_hasici_zlikvidovali_pomoci_sorbentu__).
%%%%%%%% node1_1 %%%%%%%%%%%%%%%%%%%
node(node1_1).
deepord(node1_1, 5).         const(5).
functor(node1_1, PRED).         const(PRED).
gram_sempos(node1_1, v).         const(v).
id(node1_1, T_plzensky70827_txt_001_p1s2a1).         const(T_plzensky70827_txt_001_p1s2a1).
nodetype(node1_1, complex).         const(complex).
t_lemma(node1_1, uniknout).         const(uniknout).
val_frame_rf(node1_1, v_v_w7186f1).         const(v_v_w7186f1).
%%%%%%%% node1_2 %%%%%%%%%%%%%%%%%%%
node(node1_2).
deepord(node1_2, 2).         const(2).
functor(node1_2, DIR1).         const(DIR1).
gram_sempos(node1_2, n_denot).         const(n_denot).
id(node1_2, T_plzensky70827_txt_001_p1s2a3).         const(T_plzensky70827_txt_001_p1s2a3).
nodetype(node1_2, complex).         const(complex).
subfunctor(node1_2, basic).         const(basic).
t_lemma(node1_2, automobil).         const(automobil).
%%%%%%%% node1_3 %%%%%%%%%%%%%%%%%%%
node(node1_3).
deepord(node1_3, 1).         const(1).
functor(node1_3, RSTR).         const(RSTR).
gram_sempos(node1_3, adj_denot).         const(adj_denot).
id(node1_3, T_plzensky70827_txt_001_p1s2a4).         const(T_plzensky70827_txt_001_p1s2a4).
nodetype(node1_3, complex).         const(complex).
t_lemma(node1_3, osobni).         const(osobni).
%%%%%%%% node1_4 %%%%%%%%%%%%%%%%%%%
node(node1_4).
deepord(node1_4, x1_1).         const(x1_1).
a_ref_type(node1_4, tree).         const(tree).
a_afun(node1_4, Atr).         const(Atr).
m_form(node1_4, osobnich).         const(osobnich).
m_lemma(node1_4, osobni).         const(osobni).
m_tag(node1_4, AAIP2____1A____).         const(AAIP2____1A____).
w_token(node1_4, osobnich).         const(osobnich).
a_ord(node1_4, 2).         const(2).
a_parent_id(node1_4, a_plzensky70827_txt_001_p1s2W3).         const(a_plzensky70827_txt_001_p1s2W3).
hide(node1_4, hide).         const(hide).
%%%%%%%% node1_5 %%%%%%%%%%%%%%%%%%%
node(node1_5).
deepord(node1_5, x2_1).         const(x2_1).
a_ref_type(node1_5, tree).         const(tree).
a_afun(node1_5, AuxP).         const(AuxP).
m_form(node1_5, Z).         const(Z).
m_lemma(node1_5, z_1).         const(z_1).
m_tag(node1_5, RR__2__________).         const(RR__2__________).
w_token(node1_5, Z).         const(Z).
a_ord(node1_5, 1).         const(1).
a_parent_id(node1_5, a_plzensky70827_txt_001_p1s2W8).         const(a_plzensky70827_txt_001_p1s2W8).
hide(node1_5, hide).         const(hide).
%%%%%%%% node1_6 %%%%%%%%%%%%%%%%%%%
node(node1_6).
deepord(node1_6, x2_2).         const(x2_2).
a_ref_type(node1_6, tree).         const(tree).
a_afun(node1_6, Adv).         const(Adv).
m_form(node1_6, automobilu).         const(automobilu).
m_lemma(node1_6, automobil).         const(automobil).
m_tag(node1_6, NNIP2_____A____).         const(NNIP2_____A____).
w_token(node1_6, automobilu).         const(automobilu).
a_ord(node1_6, 3).         const(3).
a_parent_id(node1_6, a_plzensky70827_txt_001_p1s2W1).         const(a_plzensky70827_txt_001_p1s2W1).
hide(node1_6, hide).         const(hide).
%%%%%%%% node1_7 %%%%%%%%%%%%%%%%%%%
node(node1_7).
deepord(node1_7, 3).         const(3).
functor(node1_7, LOC).         const(LOC).
gram_sempos(node1_7, n_denot).         const(n_denot).
id(node1_7, T_plzensky70827_txt_001_p1s2a6).         const(T_plzensky70827_txt_001_p1s2a6).
nodetype(node1_7, complex).         const(complex).
subfunctor(node1_7, basic).         const(basic).
t_lemma(node1_7, vozovka).         const(vozovka).
%%%%%%%% node1_8 %%%%%%%%%%%%%%%%%%%
node(node1_8).
deepord(node1_8, x3_1).         const(x3_1).
a_ref_type(node1_8, tree).         const(tree).
a_afun(node1_8, AuxP).         const(AuxP).
m_form(node1_8, na).         const(na).
m_lemma(node1_8, na_1).         const(na_1).
m_tag(node1_8, RR__6__________).         const(RR__6__________).
w_token(node1_8, na).         const(na).
a_ord(node1_8, 4).         const(4).
a_parent_id(node1_8, a_plzensky70827_txt_001_p1s2W3).         const(a_plzensky70827_txt_001_p1s2W3).
hide(node1_8, hide).         const(hide).
%%%%%%%% node1_9 %%%%%%%%%%%%%%%%%%%
node(node1_9).
deepord(node1_9, x3_2).         const(x3_2).
a_ref_type(node1_9, tree).         const(tree).
a_afun(node1_9, Atr).         const(Atr).
m_form(node1_9, vozovce).         const(vozovce).
m_lemma(node1_9, vozovka).         const(vozovka).
m_tag(node1_9, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node1_9, vozovce).         const(vozovce).
a_ord(node1_9, 5).         const(5).
a_parent_id(node1_9, a_plzensky70827_txt_001_p1s2W4).         const(a_plzensky70827_txt_001_p1s2W4).
hide(node1_9, hide).         const(hide).
%%%%%%%% node1_10 %%%%%%%%%%%%%%%%%%%
node(node1_10).
deepord(node1_10, 4).         const(4).
functor(node1_10, TWHEN).         const(TWHEN).
gram_sempos(node1_10, n_denot).         const(n_denot).
id(node1_10, T_plzensky70827_txt_001_p1s2a8).         const(T_plzensky70827_txt_001_p1s2a8).
nodetype(node1_10, complex).         const(complex).
subfunctor(node1_10, after).         const(after).
t_lemma(node1_10, naraz).         const(naraz).
%%%%%%%% node1_11 %%%%%%%%%%%%%%%%%%%
node(node1_11).
deepord(node1_11, x4_1).         const(x4_1).
a_ref_type(node1_11, tree).         const(tree).
a_afun(node1_11, AuxP).         const(AuxP).
m_form(node1_11, po).         const(po).
m_lemma(node1_11, po_1).         const(po_1).
m_tag(node1_11, RR__6__________).         const(RR__6__________).
w_token(node1_11, po).         const(po).
a_ord(node1_11, 6).         const(6).
a_parent_id(node1_11, a_plzensky70827_txt_001_p1s2W8).         const(a_plzensky70827_txt_001_p1s2W8).
hide(node1_11, hide).         const(hide).
%%%%%%%% node1_12 %%%%%%%%%%%%%%%%%%%
node(node1_12).
deepord(node1_12, x4_2).         const(x4_2).
a_ref_type(node1_12, tree).         const(tree).
a_afun(node1_12, Adv).         const(Adv).
m_form(node1_12, narazu).         const(narazu).
m_lemma(node1_12, naraz).         const(naraz).
m_tag(node1_12, NNIS6_____A___1).         const(NNIS6_____A___1).
w_token(node1_12, narazu).         const(narazu).
a_ord(node1_12, 7).         const(7).
a_parent_id(node1_12, a_plzensky70827_txt_001_p1s2W6).         const(a_plzensky70827_txt_001_p1s2W6).
hide(node1_12, hide).         const(hide).
%%%%%%%% node1_13 %%%%%%%%%%%%%%%%%%%
node(node1_13).
deepord(node1_13, x5_1).         const(x5_1).
a_ref_type(node1_13, tree).         const(tree).
a_afun(node1_13, Pred).         const(Pred).
m_form(node1_13, unikly).         const(unikly).
m_lemma(node1_13, uniknout__W).         const(uniknout__W).
m_tag(node1_13, VpTP___XR_AA__1).         const(VpTP___XR_AA__1).
w_token(node1_13, unikly).         const(unikly).
a_ord(node1_13, 8).         const(8).
a_parent_id(node1_13, a_plzensky70827_txt_001_p1s2).         const(a_plzensky70827_txt_001_p1s2).
hide(node1_13, hide).         const(hide).
%%%%%%%% node1_14 %%%%%%%%%%%%%%%%%%%
node(node1_14).
deepord(node1_14, 7).         const(7).
functor(node1_14, ACT).         const(ACT).
gram_sempos(node1_14, n_denot).         const(n_denot).
id(node1_14, T_plzensky70827_txt_001_p1s2a9).         const(T_plzensky70827_txt_001_p1s2a9).
nodetype(node1_14, complex).         const(complex).
t_lemma(node1_14, kapalina).         const(kapalina).
%%%%%%%% node1_15 %%%%%%%%%%%%%%%%%%%
node(node1_15).
deepord(node1_15, 6).         const(6).
functor(node1_15, RSTR).         const(RSTR).
gram_sempos(node1_15, adj_denot).         const(adj_denot).
id(node1_15, T_plzensky70827_txt_001_p1s2a10).         const(T_plzensky70827_txt_001_p1s2a10).
nodetype(node1_15, complex).         const(complex).
t_lemma(node1_15, provozni).         const(provozni).
%%%%%%%% node1_16 %%%%%%%%%%%%%%%%%%%
node(node1_16).
deepord(node1_16, x6_1).         const(x6_1).
a_ref_type(node1_16, tree).         const(tree).
a_afun(node1_16, Atr).         const(Atr).
m_form(node1_16, provozni).         const(provozni).
m_lemma(node1_16, provozni).         const(provozni).
m_tag(node1_16, AAFP1____1A____).         const(AAFP1____1A____).
w_token(node1_16, provozni).         const(provozni).
a_ord(node1_16, 9).         const(9).
a_parent_id(node1_16, a_plzensky70827_txt_001_p1s2W10).         const(a_plzensky70827_txt_001_p1s2W10).
hide(node1_16, hide).         const(hide).
%%%%%%%% node1_17 %%%%%%%%%%%%%%%%%%%
node(node1_17).
deepord(node1_17, x7_1).         const(x7_1).
a_ref_type(node1_17, tree).         const(tree).
a_afun(node1_17, Sb).         const(Sb).
m_form(node1_17, kapaliny).         const(kapaliny).
m_lemma(node1_17, kapalina).         const(kapalina).
m_tag(node1_17, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node1_17, kapaliny).         const(kapaliny).
w_no_space_after(node1_17, 1).         const(1).
a_ord(node1_17, 10).         const(10).
a_parent_id(node1_17, a_plzensky70827_txt_001_p1s2W8).         const(a_plzensky70827_txt_001_p1s2W8).
hide(node1_17, hide).         const(hide).
%%%%%%%% node1_18 %%%%%%%%%%%%%%%%%%%
node(node1_18).
deepord(node1_18, 10).         const(10).
functor(node1_18, RSTR).         const(RSTR).
gram_sempos(node1_18, v).         const(v).
id(node1_18, T_plzensky70827_txt_001_p1s2a11).         const(T_plzensky70827_txt_001_p1s2a11).
nodetype(node1_18, complex).         const(complex).
t_lemma(node1_18, zlikvidovat).         const(zlikvidovat).
val_frame_rf(node1_18, v_v_w9584f1).         const(v_v_w9584f1).
%%%%%%%% node1_19 %%%%%%%%%%%%%%%%%%%
node(node1_19).
deepord(node1_19, 8).         const(8).
functor(node1_19, PAT).         const(PAT).
gram_sempos(node1_19, n_pron_indef).         const(n_pron_indef).
id(node1_19, T_plzensky70827_txt_001_p1s2a13).         const(T_plzensky70827_txt_001_p1s2a13).
nodetype(node1_19, complex).         const(complex).
t_lemma(node1_19, ktery).         const(ktery).
%%%%%%%% node1_20 %%%%%%%%%%%%%%%%%%%
node(node1_20).
deepord(node1_20, x8_1).         const(x8_1).
a_ref_type(node1_20, tree).         const(tree).
a_afun(node1_20, Obj).         const(Obj).
m_form(node1_20, ktere).         const(ktere).
m_lemma(node1_20, ktery).         const(ktery).
m_tag(node1_20, P4FP4__________).         const(P4FP4__________).
w_token(node1_20, ktere).         const(ktere).
a_ord(node1_20, 12).         const(12).
a_parent_id(node1_20, a_plzensky70827_txt_001_p1s2W14).         const(a_plzensky70827_txt_001_p1s2W14).
hide(node1_20, hide).         const(hide).
%%%%%%%% node1_21 %%%%%%%%%%%%%%%%%%%
node(node1_21).
deepord(node1_21, 9).         const(9).
functor(node1_21, ACT).         const(ACT).
gram_sempos(node1_21, n_denot).         const(n_denot).
id(node1_21, T_plzensky70827_txt_001_p1s2a14).         const(T_plzensky70827_txt_001_p1s2a14).
nodetype(node1_21, complex).         const(complex).
t_lemma(node1_21, hasic).         const(hasic).
%%%%%%%% node1_22 %%%%%%%%%%%%%%%%%%%
node(node1_22).
deepord(node1_22, x9_1).         const(x9_1).
a_ref_type(node1_22, tree).         const(tree).
a_afun(node1_22, Sb).         const(Sb).
m_form(node1_22, hasici).         const(hasici).
m_lemma(node1_22, hasic).         const(hasic).
m_tag(node1_22, NNMP1_____A____).         const(NNMP1_____A____).
w_token(node1_22, hasici).         const(hasici).
a_ord(node1_22, 13).         const(13).
a_parent_id(node1_22, a_plzensky70827_txt_001_p1s2W14).         const(a_plzensky70827_txt_001_p1s2W14).
hide(node1_22, hide).         const(hide).
%%%%%%%% node1_23 %%%%%%%%%%%%%%%%%%%
node(node1_23).
deepord(node1_23, x10_1).         const(x10_1).
a_ref_type(node1_23, tree).         const(tree).
a_afun(node1_23, Atr).         const(Atr).
m_form(node1_23, zlikvidovali).         const(zlikvidovali).
m_lemma(node1_23, zlikvidovat__W).         const(zlikvidovat__W).
m_tag(node1_23, VpMP___XR_AA___).         const(VpMP___XR_AA___).
w_token(node1_23, zlikvidovali).         const(zlikvidovali).
a_ord(node1_23, 14).         const(14).
a_parent_id(node1_23, a_plzensky70827_txt_001_p1s2W10).         const(a_plzensky70827_txt_001_p1s2W10).
hide(node1_23, hide).         const(hide).
%%%%%%%% node1_24 %%%%%%%%%%%%%%%%%%%
node(node1_24).
deepord(node1_24, 11).         const(11).
functor(node1_24, MEANS).         const(MEANS).
gram_sempos(node1_24, n_denot).         const(n_denot).
id(node1_24, T_plzensky70827_txt_001_p1s2a16).         const(T_plzensky70827_txt_001_p1s2a16).
nodetype(node1_24, complex).         const(complex).
t_lemma(node1_24, sorbent).         const(sorbent).
%%%%%%%% node1_25 %%%%%%%%%%%%%%%%%%%
node(node1_25).
deepord(node1_25, x11_1).         const(x11_1).
a_ref_type(node1_25, tree).         const(tree).
a_afun(node1_25, AuxP).         const(AuxP).
m_form(node1_25, pomoci).         const(pomoci).
m_lemma(node1_25, pomoci).         const(pomoci).
m_tag(node1_25, RR__2__________).         const(RR__2__________).
w_token(node1_25, pomoci).         const(pomoci).
a_ord(node1_25, 15).         const(15).
a_parent_id(node1_25, a_plzensky70827_txt_001_p1s2W14).         const(a_plzensky70827_txt_001_p1s2W14).
hide(node1_25, hide).         const(hide).
%%%%%%%% node1_26 %%%%%%%%%%%%%%%%%%%
node(node1_26).
deepord(node1_26, x11_2).         const(x11_2).
a_ref_type(node1_26, tree).         const(tree).
a_afun(node1_26, Adv).         const(Adv).
m_form(node1_26, sorbentu).         const(sorbentu).
m_lemma(node1_26, sorbent).         const(sorbent).
m_tag(node1_26, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node1_26, sorbentu).         const(sorbentu).
w_no_space_after(node1_26, 1).         const(1).
a_ord(node1_26, 16).         const(16).
a_parent_id(node1_26, a_plzensky70827_txt_001_p1s2W15).         const(a_plzensky70827_txt_001_p1s2W15).
hide(node1_26, hide).         const(hide).
edge(node1_0, node1_1).
edge(node1_1, node1_2).
edge(node1_2, node1_3).
edge(node1_3, node1_4).
edge(node1_2, node1_5).
edge(node1_2, node1_6).
edge(node1_2, node1_7).
edge(node1_7, node1_8).
edge(node1_7, node1_9).
edge(node1_1, node1_10).
edge(node1_10, node1_11).
edge(node1_10, node1_12).
edge(node1_1, node1_13).
edge(node1_1, node1_14).
edge(node1_14, node1_15).
edge(node1_15, node1_16).
edge(node1_14, node1_17).
edge(node1_14, node1_18).
edge(node1_18, node1_19).
edge(node1_19, node1_20).
edge(node1_18, node1_21).
edge(node1_21, node1_22).
edge(node1_18, node1_23).
edge(node1_18, node1_24).
edge(node1_24, node1_25).
edge(node1_24, node1_26).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% V dobe prijezdu hasicu byla zranena zena ze skodovky v peci ZZS. 
tree_root(node2_0).
:- valid_root(node2_0).
%%%%%%%% node2_0 %%%%%%%%%%%%%%%%%%%
node(node2_0).
atree_rf(node2_0, a_a_plzensky70827_txt_001_p1s4).         const(a_a_plzensky70827_txt_001_p1s4).
deepord(node2_0, 0).         const(0).
id(node2_0, T_plzensky70827_txt_001_p1s4).         const(T_plzensky70827_txt_001_p1s4).
nodetype(node2_0, root).         const(root).
sentence(node2_0, V_dobe_prijezdu_hasicu_byla_zranena_zena_ze_skodovky_v_peci_ZZS__).         const(V_dobe_prijezdu_hasicu_byla_zranena_zena_ze_skodovky_v_peci_ZZS__).
%%%%%%%% node2_1 %%%%%%%%%%%%%%%%%%%
node(node2_1).
deepord(node2_1, 3).         const(3).
functor(node2_1, PRED).         const(PRED).
gram_sempos(node2_1, v).         const(v).
id(node2_1, T_plzensky70827_txt_001_p1s4a1).         const(T_plzensky70827_txt_001_p1s4a1).
nodetype(node2_1, complex).         const(complex).
t_lemma(node2_1, byt).         const(byt).
val_frame_rf(node2_1, v_v_w243f2).         const(v_v_w243f2).
%%%%%%%% node2_2 %%%%%%%%%%%%%%%%%%%
node(node2_2).
deepord(node2_2, 1).         const(1).
functor(node2_2, TWHEN).         const(TWHEN).
gram_sempos(node2_2, n_denot).         const(n_denot).
id(node2_2, T_plzensky70827_txt_001_p1s4a4).         const(T_plzensky70827_txt_001_p1s4a4).
nodetype(node2_2, complex).         const(complex).
subfunctor(node2_2, basic).         const(basic).
t_lemma(node2_2, prijezd).         const(prijezd).
%%%%%%%% node2_3 %%%%%%%%%%%%%%%%%%%
node(node2_3).
deepord(node2_3, x1_1).         const(x1_1).
a_ref_type(node2_3, tree).         const(tree).
a_afun(node2_3, AuxP).         const(AuxP).
m_form(node2_3, V).         const(V).
m_lemma(node2_3, v_1).         const(v_1).
m_tag(node2_3, RR__6__________).         const(RR__6__________).
w_token(node2_3, V).         const(V).
a_ord(node2_3, 1).         const(1).
a_parent_id(node2_3, a_plzensky70827_txt_001_p1s4W5).         const(a_plzensky70827_txt_001_p1s4W5).
hide(node2_3, hide).         const(hide).
%%%%%%%% node2_4 %%%%%%%%%%%%%%%%%%%
node(node2_4).
deepord(node2_4, x1_2).         const(x1_2).
a_ref_type(node2_4, tree).         const(tree).
a_afun(node2_4, Adv).         const(Adv).
m_form(node2_4, dobe).         const(dobe).
m_lemma(node2_4, doba).         const(doba).
m_tag(node2_4, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node2_4, dobe).         const(dobe).
a_ord(node2_4, 2).         const(2).
a_parent_id(node2_4, a_plzensky70827_txt_001_p1s4W1).         const(a_plzensky70827_txt_001_p1s4W1).
hide(node2_4, hide).         const(hide).
%%%%%%%% node2_5 %%%%%%%%%%%%%%%%%%%
node(node2_5).
deepord(node2_5, x1_3).         const(x1_3).
a_ref_type(node2_5, tree).         const(tree).
a_afun(node2_5, Atr).         const(Atr).
m_form(node2_5, prijezdu).         const(prijezdu).
m_lemma(node2_5, prijezd).         const(prijezd).
m_tag(node2_5, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node2_5, prijezdu).         const(prijezdu).
a_ord(node2_5, 3).         const(3).
a_parent_id(node2_5, a_plzensky70827_txt_001_p1s4W2).         const(a_plzensky70827_txt_001_p1s4W2).
hide(node2_5, hide).         const(hide).
%%%%%%%% node2_6 %%%%%%%%%%%%%%%%%%%
node(node2_6).
deepord(node2_6, 2).         const(2).
functor(node2_6, ACT).         const(ACT).
gram_sempos(node2_6, n_denot).         const(n_denot).
id(node2_6, T_plzensky70827_txt_001_p1s4a5).         const(T_plzensky70827_txt_001_p1s4a5).
nodetype(node2_6, complex).         const(complex).
t_lemma(node2_6, hasic).         const(hasic).
%%%%%%%% node2_7 %%%%%%%%%%%%%%%%%%%
node(node2_7).
deepord(node2_7, x2_1).         const(x2_1).
a_ref_type(node2_7, tree).         const(tree).
a_afun(node2_7, Atr).         const(Atr).
m_form(node2_7, hasicu).         const(hasicu).
m_lemma(node2_7, hasic).         const(hasic).
m_tag(node2_7, NNMP2_____A____).         const(NNMP2_____A____).
w_token(node2_7, hasicu).         const(hasicu).
a_ord(node2_7, 4).         const(4).
a_parent_id(node2_7, a_plzensky70827_txt_001_p1s4W3).         const(a_plzensky70827_txt_001_p1s4W3).
hide(node2_7, hide).         const(hide).
%%%%%%%% node2_8 %%%%%%%%%%%%%%%%%%%
node(node2_8).
deepord(node2_8, x3_1).         const(x3_1).
a_ref_type(node2_8, tree).         const(tree).
a_afun(node2_8, Pred).         const(Pred).
m_form(node2_8, byla).         const(byla).
m_lemma(node2_8, byt).         const(byt).
m_tag(node2_8, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node2_8, byla).         const(byla).
a_ord(node2_8, 5).         const(5).
a_parent_id(node2_8, a_plzensky70827_txt_001_p1s4).         const(a_plzensky70827_txt_001_p1s4).
hide(node2_8, hide).         const(hide).
%%%%%%%% node2_9 %%%%%%%%%%%%%%%%%%%
node(node2_9).
deepord(node2_9, 5).         const(5).
functor(node2_9, ACT).         const(ACT).
gram_sempos(node2_9, n_denot).         const(n_denot).
id(node2_9, T_plzensky70827_txt_001_p1s4a6).         const(T_plzensky70827_txt_001_p1s4a6).
nodetype(node2_9, complex).         const(complex).
t_lemma(node2_9, zena).         const(zena).
%%%%%%%% node2_10 %%%%%%%%%%%%%%%%%%%
node(node2_10).
deepord(node2_10, 4).         const(4).
functor(node2_10, RSTR).         const(RSTR).
gram_sempos(node2_10, adj_denot).         const(adj_denot).
id(node2_10, T_plzensky70827_txt_001_p1s4a7).         const(T_plzensky70827_txt_001_p1s4a7).
nodetype(node2_10, complex).         const(complex).
t_lemma(node2_10, zraneny).         const(zraneny).
%%%%%%%% node2_11 %%%%%%%%%%%%%%%%%%%
node(node2_11).
deepord(node2_11, x4_1).         const(x4_1).
a_ref_type(node2_11, tree).         const(tree).
a_afun(node2_11, Atr).         const(Atr).
m_form(node2_11, zranena).         const(zranena).
m_lemma(node2_11, zraneny____3it_).         const(zraneny____3it_).
m_tag(node2_11, AAFS1____1A____).         const(AAFS1____1A____).
w_token(node2_11, zranena).         const(zranena).
a_ord(node2_11, 6).         const(6).
a_parent_id(node2_11, a_plzensky70827_txt_001_p1s4W7).         const(a_plzensky70827_txt_001_p1s4W7).
hide(node2_11, hide).         const(hide).
%%%%%%%% node2_12 %%%%%%%%%%%%%%%%%%%
node(node2_12).
deepord(node2_12, x5_1).         const(x5_1).
a_ref_type(node2_12, tree).         const(tree).
a_afun(node2_12, Sb).         const(Sb).
m_form(node2_12, zena).         const(zena).
m_lemma(node2_12, zena).         const(zena).
m_tag(node2_12, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node2_12, zena).         const(zena).
a_ord(node2_12, 7).         const(7).
a_parent_id(node2_12, a_plzensky70827_txt_001_p1s4W5).         const(a_plzensky70827_txt_001_p1s4W5).
hide(node2_12, hide).         const(hide).
%%%%%%%% node2_13 %%%%%%%%%%%%%%%%%%%
node(node2_13).
deepord(node2_13, 6).         const(6).
functor(node2_13, DIR1).         const(DIR1).
gram_sempos(node2_13, n_denot).         const(n_denot).
id(node2_13, T_plzensky70827_txt_001_p1s4a9).         const(T_plzensky70827_txt_001_p1s4a9).
nodetype(node2_13, complex).         const(complex).
subfunctor(node2_13, basic).         const(basic).
t_lemma(node2_13, skodovka).         const(skodovka).
%%%%%%%% node2_14 %%%%%%%%%%%%%%%%%%%
node(node2_14).
deepord(node2_14, x6_1).         const(x6_1).
a_ref_type(node2_14, tree).         const(tree).
a_afun(node2_14, AuxP).         const(AuxP).
m_form(node2_14, ze).         const(ze).
m_lemma(node2_14, z_1).         const(z_1).
m_tag(node2_14, RV__2__________).         const(RV__2__________).
w_token(node2_14, ze).         const(ze).
a_ord(node2_14, 8).         const(8).
a_parent_id(node2_14, a_plzensky70827_txt_001_p1s4W7).         const(a_plzensky70827_txt_001_p1s4W7).
hide(node2_14, hide).         const(hide).
%%%%%%%% node2_15 %%%%%%%%%%%%%%%%%%%
node(node2_15).
deepord(node2_15, x6_2).         const(x6_2).
a_ref_type(node2_15, tree).         const(tree).
a_afun(node2_15, Atr).         const(Atr).
m_form(node2_15, skodovky).         const(skodovky).
m_lemma(node2_15, skodovka).         const(skodovka).
m_tag(node2_15, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node2_15, skodovky).         const(skodovky).
a_ord(node2_15, 9).         const(9).
a_parent_id(node2_15, a_plzensky70827_txt_001_p1s4W8).         const(a_plzensky70827_txt_001_p1s4W8).
hide(node2_15, hide).         const(hide).
%%%%%%%% node2_16 %%%%%%%%%%%%%%%%%%%
node(node2_16).
deepord(node2_16, 7).         const(7).
functor(node2_16, LOC).         const(LOC).
gram_sempos(node2_16, n_denot).         const(n_denot).
id(node2_16, T_plzensky70827_txt_001_p1s4a11).         const(T_plzensky70827_txt_001_p1s4a11).
nodetype(node2_16, complex).         const(complex).
subfunctor(node2_16, basic).         const(basic).
t_lemma(node2_16, pece).         const(pece).
%%%%%%%% node2_17 %%%%%%%%%%%%%%%%%%%
node(node2_17).
deepord(node2_17, x7_1).         const(x7_1).
a_ref_type(node2_17, tree).         const(tree).
a_afun(node2_17, AuxP).         const(AuxP).
m_form(node2_17, v).         const(v).
m_lemma(node2_17, v_1).         const(v_1).
m_tag(node2_17, RR__6__________).         const(RR__6__________).
w_token(node2_17, v).         const(v).
a_ord(node2_17, 10).         const(10).
a_parent_id(node2_17, a_plzensky70827_txt_001_p1s4W5).         const(a_plzensky70827_txt_001_p1s4W5).
hide(node2_17, hide).         const(hide).
%%%%%%%% node2_18 %%%%%%%%%%%%%%%%%%%
node(node2_18).
deepord(node2_18, x7_2).         const(x7_2).
a_ref_type(node2_18, tree).         const(tree).
a_afun(node2_18, Adv).         const(Adv).
m_form(node2_18, peci).         const(peci).
m_lemma(node2_18, pece).         const(pece).
m_tag(node2_18, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node2_18, peci).         const(peci).
a_ord(node2_18, 11).         const(11).
a_parent_id(node2_18, a_plzensky70827_txt_001_p1s4W10).         const(a_plzensky70827_txt_001_p1s4W10).
hide(node2_18, hide).         const(hide).
%%%%%%%% node2_19 %%%%%%%%%%%%%%%%%%%
node(node2_19).
deepord(node2_19, 8).         const(8).
functor(node2_19, ACT).         const(ACT).
gram_sempos(node2_19, n_denot).         const(n_denot).
id(node2_19, T_plzensky70827_txt_001_p1s4a12).         const(T_plzensky70827_txt_001_p1s4a12).
nodetype(node2_19, complex).         const(complex).
t_lemma(node2_19, Zzs).         const(Zzs).
%%%%%%%% node2_20 %%%%%%%%%%%%%%%%%%%
node(node2_20).
deepord(node2_20, x8_1).         const(x8_1).
a_ref_type(node2_20, tree).         const(tree).
a_afun(node2_20, Atr).         const(Atr).
m_form(node2_20, ZZS).         const(ZZS).
m_lemma(node2_20, Zzs).         const(Zzs).
m_tag(node2_20, NNFSX_____A____).         const(NNFSX_____A____).
w_token(node2_20, ZZS).         const(ZZS).
w_no_space_after(node2_20, 1).         const(1).
a_ord(node2_20, 12).         const(12).
a_parent_id(node2_20, a_plzensky70827_txt_001_p1s4W11).         const(a_plzensky70827_txt_001_p1s4W11).
hide(node2_20, hide).         const(hide).
edge(node2_0, node2_1).
edge(node2_1, node2_2).
edge(node2_2, node2_3).
edge(node2_2, node2_4).
edge(node2_2, node2_5).
edge(node2_2, node2_6).
edge(node2_6, node2_7).
edge(node2_1, node2_8).
edge(node2_1, node2_9).
edge(node2_9, node2_10).
edge(node2_10, node2_11).
edge(node2_9, node2_12).
edge(node2_9, node2_13).
edge(node2_13, node2_14).
edge(node2_13, node2_15).
edge(node2_1, node2_16).
edge(node2_16, node2_17).
edge(node2_16, node2_18).
edge(node2_16, node2_19).
edge(node2_19, node2_20).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Zraneneho muze z vozidla VW Golf museli hasici vyprostovat, jelikoz nesly otevrit dvere. 
tree_root(node3_0).
:- valid_root(node3_0).
%%%%%%%% node3_0 %%%%%%%%%%%%%%%%%%%
node(node3_0).
atree_rf(node3_0, a_a_plzensky70827_txt_001_p1s5).         const(a_a_plzensky70827_txt_001_p1s5).
deepord(node3_0, 0).         const(0).
id(node3_0, T_plzensky70827_txt_001_p1s5).         const(T_plzensky70827_txt_001_p1s5).
nodetype(node3_0, root).         const(root).
sentence(node3_0, Zraneneho_muze_z_vozidla_VW_Golf_museli_hasici_vyprostovat__jelikoz_nesly_otevrit_dvere__).         const(Zraneneho_muze_z_vozidla_VW_Golf_museli_hasici_vyprostovat__jelikoz_nesly_otevrit_dvere__).
%%%%%%%% node3_1 %%%%%%%%%%%%%%%%%%%
node(node3_1).
deepord(node3_1, 7).         const(7).
functor(node3_1, PRED).         const(PRED).
gram_sempos(node3_1, v).         const(v).
id(node3_1, T_plzensky70827_txt_001_p1s5a9).         const(T_plzensky70827_txt_001_p1s5a9).
nodetype(node3_1, complex).         const(complex).
t_lemma(node3_1, vyprostovat).         const(vyprostovat).
%%%%%%%% node3_2 %%%%%%%%%%%%%%%%%%%
node(node3_2).
deepord(node3_2, 2).         const(2).
functor(node3_2, TWHEN).         const(TWHEN).
gram_sempos(node3_2, n_denot).         const(n_denot).
id(node3_2, T_plzensky70827_txt_001_p1s5a2).         const(T_plzensky70827_txt_001_p1s5a2).
nodetype(node3_2, complex).         const(complex).
subfunctor(node3_2, basic).         const(basic).
t_lemma(node3_2, muz).         const(muz).
%%%%%%%% node3_3 %%%%%%%%%%%%%%%%%%%
node(node3_3).
deepord(node3_3, 1).         const(1).
functor(node3_3, RSTR).         const(RSTR).
gram_sempos(node3_3, adj_denot).         const(adj_denot).
id(node3_3, T_plzensky70827_txt_001_p1s5a3).         const(T_plzensky70827_txt_001_p1s5a3).
nodetype(node3_3, complex).         const(complex).
t_lemma(node3_3, zraneny).         const(zraneny).
%%%%%%%% node3_4 %%%%%%%%%%%%%%%%%%%
node(node3_4).
deepord(node3_4, x1_1).         const(x1_1).
a_ref_type(node3_4, tree).         const(tree).
a_afun(node3_4, Atr).         const(Atr).
m_form(node3_4, Zraneneho).         const(Zraneneho).
m_lemma(node3_4, zraneny____3it_).         const(zraneny____3it_).
m_tag(node3_4, AAMS2____1A____).         const(AAMS2____1A____).
w_token(node3_4, Zraneneho).         const(Zraneneho).
a_ord(node3_4, 1).         const(1).
a_parent_id(node3_4, a_plzensky70827_txt_001_p1s5W2).         const(a_plzensky70827_txt_001_p1s5W2).
hide(node3_4, hide).         const(hide).
%%%%%%%% node3_5 %%%%%%%%%%%%%%%%%%%
node(node3_5).
deepord(node3_5, x2_1).         const(x2_1).
a_ref_type(node3_5, tree).         const(tree).
a_afun(node3_5, Adv).         const(Adv).
m_form(node3_5, muze).         const(muze).
m_lemma(node3_5, muz).         const(muz).
m_tag(node3_5, NNMS2_____A____).         const(NNMS2_____A____).
w_token(node3_5, muze).         const(muze).
a_ord(node3_5, 2).         const(2).
a_parent_id(node3_5, a_plzensky70827_txt_001_p1s5W7).         const(a_plzensky70827_txt_001_p1s5W7).
hide(node3_5, hide).         const(hide).
%%%%%%%% node3_6 %%%%%%%%%%%%%%%%%%%
node(node3_6).
deepord(node3_6, 3).         const(3).
functor(node3_6, DIR1).         const(DIR1).
gram_sempos(node3_6, n_denot).         const(n_denot).
id(node3_6, T_plzensky70827_txt_001_p1s5a5).         const(T_plzensky70827_txt_001_p1s5a5).
nodetype(node3_6, complex).         const(complex).
subfunctor(node3_6, basic).         const(basic).
t_lemma(node3_6, vozidlo).         const(vozidlo).
%%%%%%%% node3_7 %%%%%%%%%%%%%%%%%%%
node(node3_7).
deepord(node3_7, x3_1).         const(x3_1).
a_ref_type(node3_7, tree).         const(tree).
a_afun(node3_7, AuxP).         const(AuxP).
m_form(node3_7, z).         const(z).
m_lemma(node3_7, z_1).         const(z_1).
m_tag(node3_7, RR__2__________).         const(RR__2__________).
w_token(node3_7, z).         const(z).
a_ord(node3_7, 3).         const(3).
a_parent_id(node3_7, a_plzensky70827_txt_001_p1s5W2).         const(a_plzensky70827_txt_001_p1s5W2).
hide(node3_7, hide).         const(hide).
%%%%%%%% node3_8 %%%%%%%%%%%%%%%%%%%
node(node3_8).
deepord(node3_8, x3_2).         const(x3_2).
a_ref_type(node3_8, tree).         const(tree).
a_afun(node3_8, Atr).         const(Atr).
m_form(node3_8, vozidla).         const(vozidla).
m_lemma(node3_8, vozidlo).         const(vozidlo).
m_tag(node3_8, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node3_8, vozidla).         const(vozidla).
a_ord(node3_8, 4).         const(4).
a_parent_id(node3_8, a_plzensky70827_txt_001_p1s5W3).         const(a_plzensky70827_txt_001_p1s5W3).
hide(node3_8, hide).         const(hide).
%%%%%%%% node3_9 %%%%%%%%%%%%%%%%%%%
node(node3_9).
deepord(node3_9, 4).         const(4).
functor(node3_9, RSTR).         const(RSTR).
gram_sempos(node3_9, n_denot).         const(n_denot).
id(node3_9, T_plzensky70827_txt_001_p1s5a6).         const(T_plzensky70827_txt_001_p1s5a6).
nodetype(node3_9, complex).         const(complex).
t_lemma(node3_9, VW).         const(VW).
%%%%%%%% node3_10 %%%%%%%%%%%%%%%%%%%
node(node3_10).
deepord(node3_10, x4_1).         const(x4_1).
a_ref_type(node3_10, tree).         const(tree).
a_afun(node3_10, Atr).         const(Atr).
m_form(node3_10, VW).         const(VW).
m_lemma(node3_10, VW_1__B__R__t___automobil_znacky_Volkswagen_).         const(VW_1__B__R__t___automobil_znacky_Volkswagen_).
m_tag(node3_10, NNIXX_____A____).         const(NNIXX_____A____).
w_token(node3_10, VW).         const(VW).
a_ord(node3_10, 5).         const(5).
a_parent_id(node3_10, a_plzensky70827_txt_001_p1s5W4).         const(a_plzensky70827_txt_001_p1s5W4).
hide(node3_10, hide).         const(hide).
%%%%%%%% node3_11 %%%%%%%%%%%%%%%%%%%
node(node3_11).
deepord(node3_11, 5).         const(5).
functor(node3_11, RSTR).         const(RSTR).
gram_sempos(node3_11, n_denot).         const(n_denot).
id(node3_11, T_plzensky70827_txt_001_p1s5a7).         const(T_plzensky70827_txt_001_p1s5a7).
nodetype(node3_11, complex).         const(complex).
t_lemma(node3_11, Golf).         const(Golf).
%%%%%%%% node3_12 %%%%%%%%%%%%%%%%%%%
node(node3_12).
deepord(node3_12, x5_1).         const(x5_1).
a_ref_type(node3_12, tree).         const(tree).
a_afun(node3_12, Atr).         const(Atr).
m_form(node3_12, Golf).         const(Golf).
m_lemma(node3_12, Golf_2__R___vozidlo_).         const(Golf_2__R___vozidlo_).
m_tag(node3_12, NNIS4_____A____).         const(NNIS4_____A____).
w_token(node3_12, Golf).         const(Golf).
a_ord(node3_12, 6).         const(6).
a_parent_id(node3_12, a_plzensky70827_txt_001_p1s5W5).         const(a_plzensky70827_txt_001_p1s5W5).
hide(node3_12, hide).         const(hide).
%%%%%%%% node3_13 %%%%%%%%%%%%%%%%%%%
node(node3_13).
deepord(node3_13, 6).         const(6).
functor(node3_13, ACT).         const(ACT).
gram_sempos(node3_13, n_denot).         const(n_denot).
id(node3_13, T_plzensky70827_txt_001_p1s5a8).         const(T_plzensky70827_txt_001_p1s5a8).
nodetype(node3_13, complex).         const(complex).
t_lemma(node3_13, hasic).         const(hasic).
%%%%%%%% node3_14 %%%%%%%%%%%%%%%%%%%
node(node3_14).
deepord(node3_14, x6_1).         const(x6_1).
a_ref_type(node3_14, tree).         const(tree).
a_afun(node3_14, Sb).         const(Sb).
m_form(node3_14, hasici).         const(hasici).
m_lemma(node3_14, hasic).         const(hasic).
m_tag(node3_14, NNMP1_____A____).         const(NNMP1_____A____).
w_token(node3_14, hasici).         const(hasici).
a_ord(node3_14, 8).         const(8).
a_parent_id(node3_14, a_plzensky70827_txt_001_p1s5W7).         const(a_plzensky70827_txt_001_p1s5W7).
hide(node3_14, hide).         const(hide).
%%%%%%%% node3_15 %%%%%%%%%%%%%%%%%%%
node(node3_15).
deepord(node3_15, x7_1).         const(x7_1).
a_ref_type(node3_15, tree).         const(tree).
a_afun(node3_15, Pred).         const(Pred).
m_form(node3_15, museli).         const(museli).
m_lemma(node3_15, muset).         const(muset).
m_tag(node3_15, VpMP___XR_AA___).         const(VpMP___XR_AA___).
w_token(node3_15, museli).         const(museli).
a_ord(node3_15, 7).         const(7).
a_parent_id(node3_15, a_plzensky70827_txt_001_p1s5).         const(a_plzensky70827_txt_001_p1s5).
hide(node3_15, hide).         const(hide).
%%%%%%%% node3_16 %%%%%%%%%%%%%%%%%%%
node(node3_16).
deepord(node3_16, x7_2).         const(x7_2).
a_ref_type(node3_16, tree).         const(tree).
a_afun(node3_16, Obj).         const(Obj).
m_form(node3_16, vyprostovat).         const(vyprostovat).
m_lemma(node3_16, vyprostovat__T).         const(vyprostovat__T).
m_tag(node3_16, Vf________A____).         const(Vf________A____).
w_token(node3_16, vyprostovat).         const(vyprostovat).
w_no_space_after(node3_16, 1).         const(1).
a_ord(node3_16, 9).         const(9).
a_parent_id(node3_16, a_plzensky70827_txt_001_p1s5W7).         const(a_plzensky70827_txt_001_p1s5W7).
hide(node3_16, hide).         const(hide).
%%%%%%%% node3_17 %%%%%%%%%%%%%%%%%%%
node(node3_17).
deepord(node3_17, 10).         const(10).
functor(node3_17, CAUS).         const(CAUS).
gram_sempos(node3_17, v).         const(v).
id(node3_17, T_plzensky70827_txt_001_p1s5a12).         const(T_plzensky70827_txt_001_p1s5a12).
nodetype(node3_17, complex).         const(complex).
t_lemma(node3_17, jit).         const(jit).
val_frame_rf(node3_17, v_v_w1339f3).         const(v_v_w1339f3).
%%%%%%%% node3_18 %%%%%%%%%%%%%%%%%%%
node(node3_18).
deepord(node3_18, 8).         const(8).
functor(node3_18, RHEM).         const(RHEM).
id(node3_18, T_plzensky70827_txt_001_p1s5a16).         const(T_plzensky70827_txt_001_p1s5a16).
is_generated(node3_18, 1).         const(1).
nodetype(node3_18, atom).         const(atom).
t_lemma(node3_18, x_Neg).         const(x_Neg).
%%%%%%%% node3_19 %%%%%%%%%%%%%%%%%%%
node(node3_19).
deepord(node3_19, 9).         const(9).
functor(node3_19, ACT).         const(ACT).
gram_sempos(node3_19, n_pron_def_pers).         const(n_pron_def_pers).
id(node3_19, T_plzensky70827_txt_001_p1s5a15).         const(T_plzensky70827_txt_001_p1s5a15).
is_generated(node3_19, 1).         const(1).
nodetype(node3_19, complex).         const(complex).
t_lemma(node3_19, x_PersPron).         const(x_PersPron).
%%%%%%%% node3_20 %%%%%%%%%%%%%%%%%%%
node(node3_20).
deepord(node3_20, x10_1).         const(x10_1).
a_ref_type(node3_20, tree).         const(tree).
a_afun(node3_20, AuxC).         const(AuxC).
m_form(node3_20, jelikoz).         const(jelikoz).
m_lemma(node3_20, jelikoz).         const(jelikoz).
m_tag(node3_20, J______________).         const(J______________).
w_token(node3_20, jelikoz).         const(jelikoz).
a_ord(node3_20, 11).         const(11).
a_parent_id(node3_20, a_plzensky70827_txt_001_p1s5W9).         const(a_plzensky70827_txt_001_p1s5W9).
hide(node3_20, hide).         const(hide).
%%%%%%%% node3_21 %%%%%%%%%%%%%%%%%%%
node(node3_21).
deepord(node3_21, x10_2).         const(x10_2).
a_ref_type(node3_21, tree).         const(tree).
a_afun(node3_21, Adv).         const(Adv).
m_form(node3_21, nesly).         const(nesly).
m_lemma(node3_21, jit).         const(jit).
m_tag(node3_21, VpTP___XR_NA___).         const(VpTP___XR_NA___).
w_token(node3_21, nesly).         const(nesly).
a_ord(node3_21, 12).         const(12).
a_parent_id(node3_21, a_plzensky70827_txt_001_p1s5W11).         const(a_plzensky70827_txt_001_p1s5W11).
hide(node3_21, hide).         const(hide).
%%%%%%%% node3_22 %%%%%%%%%%%%%%%%%%%
node(node3_22).
deepord(node3_22, 12).         const(12).
functor(node3_22, INTT).         const(INTT).
gram_sempos(node3_22, v).         const(v).
id(node3_22, T_plzensky70827_txt_001_p1s5a13).         const(T_plzensky70827_txt_001_p1s5a13).
nodetype(node3_22, complex).         const(complex).
t_lemma(node3_22, otevrit).         const(otevrit).
val_frame_rf(node3_22, v_v_w3265f2).         const(v_v_w3265f2).
%%%%%%%% node3_23 %%%%%%%%%%%%%%%%%%%
node(node3_23).
deepord(node3_23, 11).         const(11).
functor(node3_23, ACT).         const(ACT).
id(node3_23, T_plzensky70827_txt_001_p1s5a17).         const(T_plzensky70827_txt_001_p1s5a17).
is_generated(node3_23, 1).         const(1).
nodetype(node3_23, qcomplex).         const(qcomplex).
t_lemma(node3_23, x_Cor).         const(x_Cor).
%%%%%%%% node3_24 %%%%%%%%%%%%%%%%%%%
node(node3_24).
deepord(node3_24, x12_1).         const(x12_1).
a_ref_type(node3_24, tree).         const(tree).
a_afun(node3_24, Adv).         const(Adv).
m_form(node3_24, otevrit).         const(otevrit).
m_lemma(node3_24, otevrit).         const(otevrit).
m_tag(node3_24, Vf________A____).         const(Vf________A____).
w_token(node3_24, otevrit).         const(otevrit).
a_ord(node3_24, 13).         const(13).
a_parent_id(node3_24, a_plzensky70827_txt_001_p1s5W12).         const(a_plzensky70827_txt_001_p1s5W12).
hide(node3_24, hide).         const(hide).
%%%%%%%% node3_25 %%%%%%%%%%%%%%%%%%%
node(node3_25).
deepord(node3_25, 13).         const(13).
functor(node3_25, PAT).         const(PAT).
gram_sempos(node3_25, n_denot).         const(n_denot).
id(node3_25, T_plzensky70827_txt_001_p1s5a14).         const(T_plzensky70827_txt_001_p1s5a14).
nodetype(node3_25, complex).         const(complex).
t_lemma(node3_25, dvere).         const(dvere).
%%%%%%%% node3_26 %%%%%%%%%%%%%%%%%%%
node(node3_26).
deepord(node3_26, x13_1).         const(x13_1).
a_ref_type(node3_26, tree).         const(tree).
a_afun(node3_26, Obj).         const(Obj).
m_form(node3_26, dvere).         const(dvere).
m_lemma(node3_26, dvere).         const(dvere).
m_tag(node3_26, NNFP4_____A____).         const(NNFP4_____A____).
w_token(node3_26, dvere).         const(dvere).
w_no_space_after(node3_26, 1).         const(1).
a_ord(node3_26, 14).         const(14).
a_parent_id(node3_26, a_plzensky70827_txt_001_p1s5W13).         const(a_plzensky70827_txt_001_p1s5W13).
hide(node3_26, hide).         const(hide).
edge(node3_0, node3_1).
edge(node3_1, node3_2).
edge(node3_2, node3_3).
edge(node3_3, node3_4).
edge(node3_2, node3_5).
edge(node3_2, node3_6).
edge(node3_6, node3_7).
edge(node3_6, node3_8).
edge(node3_6, node3_9).
edge(node3_9, node3_10).
edge(node3_9, node3_11).
edge(node3_11, node3_12).
edge(node3_1, node3_13).
edge(node3_13, node3_14).
edge(node3_1, node3_15).
edge(node3_1, node3_16).
edge(node3_1, node3_17).
edge(node3_17, node3_18).
edge(node3_17, node3_19).
edge(node3_17, node3_20).
edge(node3_17, node3_21).
edge(node3_17, node3_22).
edge(node3_22, node3_23).
edge(node3_22, node3_24).
edge(node3_22, node3_25).
edge(node3_25, node3_26).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Muz utrpel otevrenou zlomeninu nohy a trzne rany. 
tree_root(node4_0).
:- valid_root(node4_0).
%%%%%%%% node4_0 %%%%%%%%%%%%%%%%%%%
node(node4_0).
atree_rf(node4_0, a_a_plzensky70827_txt_001_p1s6).         const(a_a_plzensky70827_txt_001_p1s6).
deepord(node4_0, 0).         const(0).
id(node4_0, T_plzensky70827_txt_001_p1s6).         const(T_plzensky70827_txt_001_p1s6).
nodetype(node4_0, root).         const(root).
sentence(node4_0, Muz_utrpel_otevrenou_zlomeninu_nohy_a_trzne_rany__).         const(Muz_utrpel_otevrenou_zlomeninu_nohy_a_trzne_rany__).
%%%%%%%% node4_1 %%%%%%%%%%%%%%%%%%%
node(node4_1).
deepord(node4_1, 3).         const(3).
functor(node4_1, PRED).         const(PRED).
gram_sempos(node4_1, v).         const(v).
id(node4_1, T_plzensky70827_txt_001_p1s6a1).         const(T_plzensky70827_txt_001_p1s6a1).
nodetype(node4_1, complex).         const(complex).
t_lemma(node4_1, utrpet).         const(utrpet).
val_frame_rf(node4_1, v_v_w7406f1).         const(v_v_w7406f1).
%%%%%%%% node4_2 %%%%%%%%%%%%%%%%%%%
node(node4_2).
deepord(node4_2, 1).         const(1).
functor(node4_2, PAT).         const(PAT).
id(node4_2, T_plzensky70827_txt_001_p1s6a9).         const(T_plzensky70827_txt_001_p1s6a9).
is_generated(node4_2, 1).         const(1).
nodetype(node4_2, qcomplex).         const(qcomplex).
t_lemma(node4_2, x_Gen).         const(x_Gen).
%%%%%%%% node4_3 %%%%%%%%%%%%%%%%%%%
node(node4_3).
deepord(node4_3, 2).         const(2).
functor(node4_3, ACT).         const(ACT).
gram_sempos(node4_3, n_denot).         const(n_denot).
id(node4_3, T_plzensky70827_txt_001_p1s6a2).         const(T_plzensky70827_txt_001_p1s6a2).
nodetype(node4_3, complex).         const(complex).
t_lemma(node4_3, muz).         const(muz).
%%%%%%%% node4_4 %%%%%%%%%%%%%%%%%%%
node(node4_4).
deepord(node4_4, x2_1).         const(x2_1).
a_ref_type(node4_4, tree).         const(tree).
a_afun(node4_4, Sb).         const(Sb).
m_form(node4_4, Muz).         const(Muz).
m_lemma(node4_4, muz).         const(muz).
m_tag(node4_4, NNMS1_____A____).         const(NNMS1_____A____).
w_token(node4_4, Muz).         const(Muz).
a_ord(node4_4, 1).         const(1).
a_parent_id(node4_4, a_plzensky70827_txt_001_p1s6W2).         const(a_plzensky70827_txt_001_p1s6W2).
hide(node4_4, hide).         const(hide).
%%%%%%%% node4_5 %%%%%%%%%%%%%%%%%%%
node(node4_5).
deepord(node4_5, x3_1).         const(x3_1).
a_ref_type(node4_5, tree).         const(tree).
a_afun(node4_5, Pred).         const(Pred).
m_form(node4_5, utrpel).         const(utrpel).
m_lemma(node4_5, utrpet).         const(utrpet).
m_tag(node4_5, VpYS___XR_AA___).         const(VpYS___XR_AA___).
w_token(node4_5, utrpel).         const(utrpel).
a_ord(node4_5, 2).         const(2).
a_parent_id(node4_5, a_plzensky70827_txt_001_p1s6).         const(a_plzensky70827_txt_001_p1s6).
hide(node4_5, hide).         const(hide).
%%%%%%%% node4_6 %%%%%%%%%%%%%%%%%%%
node(node4_6).
deepord(node4_6, 7).         const(7).
functor(node4_6, CONJ).         const(CONJ).
id(node4_6, T_plzensky70827_txt_001_p1s6a3).         const(T_plzensky70827_txt_001_p1s6a3).
nodetype(node4_6, coap).         const(coap).
t_lemma(node4_6, a).         const(a).
%%%%%%%% node4_7 %%%%%%%%%%%%%%%%%%%
node(node4_7).
deepord(node4_7, 5).         const(5).
functor(node4_7, RSTR).         const(RSTR).
gram_sempos(node4_7, n_denot).         const(n_denot).
id(node4_7, T_plzensky70827_txt_001_p1s6a4).         const(T_plzensky70827_txt_001_p1s6a4).
is_member(node4_7, 1).         const(1).
nodetype(node4_7, complex).         const(complex).
t_lemma(node4_7, zlomenina).         const(zlomenina).
%%%%%%%% node4_8 %%%%%%%%%%%%%%%%%%%
node(node4_8).
deepord(node4_8, 4).         const(4).
functor(node4_8, RSTR).         const(RSTR).
gram_sempos(node4_8, adj_denot).         const(adj_denot).
id(node4_8, T_plzensky70827_txt_001_p1s6a5).         const(T_plzensky70827_txt_001_p1s6a5).
nodetype(node4_8, complex).         const(complex).
t_lemma(node4_8, otevreny).         const(otevreny).
%%%%%%%% node4_9 %%%%%%%%%%%%%%%%%%%
node(node4_9).
deepord(node4_9, x4_1).         const(x4_1).
a_ref_type(node4_9, tree).         const(tree).
a_afun(node4_9, Atr).         const(Atr).
m_form(node4_9, otevrenou).         const(otevrenou).
m_lemma(node4_9, otevreny____3it_).         const(otevreny____3it_).
m_tag(node4_9, AAFS4____1A____).         const(AAFS4____1A____).
w_token(node4_9, otevrenou).         const(otevrenou).
a_ord(node4_9, 3).         const(3).
a_parent_id(node4_9, a_plzensky70827_txt_001_p1s6W4).         const(a_plzensky70827_txt_001_p1s6W4).
hide(node4_9, hide).         const(hide).
%%%%%%%% node4_10 %%%%%%%%%%%%%%%%%%%
node(node4_10).
deepord(node4_10, x5_1).         const(x5_1).
a_ref_type(node4_10, tree).         const(tree).
a_afun(node4_10, Obj).         const(Obj).
m_form(node4_10, zlomeninu).         const(zlomeninu).
m_lemma(node4_10, zlomenina).         const(zlomenina).
m_tag(node4_10, NNFS4_____A____).         const(NNFS4_____A____).
w_token(node4_10, zlomeninu).         const(zlomeninu).
a_ord(node4_10, 4).         const(4).
a_parent_id(node4_10, a_plzensky70827_txt_001_p1s6W6).         const(a_plzensky70827_txt_001_p1s6W6).
hide(node4_10, hide).         const(hide).
%%%%%%%% node4_11 %%%%%%%%%%%%%%%%%%%
node(node4_11).
deepord(node4_11, 6).         const(6).
functor(node4_11, APP).         const(APP).
gram_sempos(node4_11, n_denot).         const(n_denot).
id(node4_11, T_plzensky70827_txt_001_p1s6a6).         const(T_plzensky70827_txt_001_p1s6a6).
nodetype(node4_11, complex).         const(complex).
t_lemma(node4_11, noha).         const(noha).
%%%%%%%% node4_12 %%%%%%%%%%%%%%%%%%%
node(node4_12).
deepord(node4_12, x6_1).         const(x6_1).
a_ref_type(node4_12, tree).         const(tree).
a_afun(node4_12, Atr).         const(Atr).
m_form(node4_12, nohy).         const(nohy).
m_lemma(node4_12, noha).         const(noha).
m_tag(node4_12, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node4_12, nohy).         const(nohy).
a_ord(node4_12, 5).         const(5).
a_parent_id(node4_12, a_plzensky70827_txt_001_p1s6W4).         const(a_plzensky70827_txt_001_p1s6W4).
hide(node4_12, hide).         const(hide).
%%%%%%%% node4_13 %%%%%%%%%%%%%%%%%%%
node(node4_13).
deepord(node4_13, x7_1).         const(x7_1).
a_ref_type(node4_13, tree).         const(tree).
a_afun(node4_13, Coord).         const(Coord).
m_form(node4_13, a).         const(a).
m_lemma(node4_13, a_1).         const(a_1).
m_tag(node4_13, J______________).         const(J______________).
w_token(node4_13, a).         const(a).
a_ord(node4_13, 6).         const(6).
a_parent_id(node4_13, a_plzensky70827_txt_001_p1s6W2).         const(a_plzensky70827_txt_001_p1s6W2).
hide(node4_13, hide).         const(hide).
%%%%%%%% node4_14 %%%%%%%%%%%%%%%%%%%
node(node4_14).
deepord(node4_14, 9).         const(9).
functor(node4_14, RSTR).         const(RSTR).
gram_sempos(node4_14, n_denot).         const(n_denot).
id(node4_14, T_plzensky70827_txt_001_p1s6a7).         const(T_plzensky70827_txt_001_p1s6a7).
is_member(node4_14, 1).         const(1).
nodetype(node4_14, complex).         const(complex).
t_lemma(node4_14, rana).         const(rana).
%%%%%%%% node4_15 %%%%%%%%%%%%%%%%%%%
node(node4_15).
deepord(node4_15, 8).         const(8).
functor(node4_15, RSTR).         const(RSTR).
gram_sempos(node4_15, adj_denot).         const(adj_denot).
id(node4_15, T_plzensky70827_txt_001_p1s6a8).         const(T_plzensky70827_txt_001_p1s6a8).
nodetype(node4_15, complex).         const(complex).
t_lemma(node4_15, trzny).         const(trzny).
%%%%%%%% node4_16 %%%%%%%%%%%%%%%%%%%
node(node4_16).
deepord(node4_16, x8_1).         const(x8_1).
a_ref_type(node4_16, tree).         const(tree).
a_afun(node4_16, Atr).         const(Atr).
m_form(node4_16, trzne).         const(trzne).
m_lemma(node4_16, trzny).         const(trzny).
m_tag(node4_16, AAFP4____1A____).         const(AAFP4____1A____).
w_token(node4_16, trzne).         const(trzne).
a_ord(node4_16, 7).         const(7).
a_parent_id(node4_16, a_plzensky70827_txt_001_p1s6W8).         const(a_plzensky70827_txt_001_p1s6W8).
hide(node4_16, hide).         const(hide).
%%%%%%%% node4_17 %%%%%%%%%%%%%%%%%%%
node(node4_17).
deepord(node4_17, x9_1).         const(x9_1).
a_ref_type(node4_17, tree).         const(tree).
a_afun(node4_17, Obj).         const(Obj).
m_form(node4_17, rany).         const(rany).
m_lemma(node4_17, rana).         const(rana).
m_tag(node4_17, NNFP4_____A____).         const(NNFP4_____A____).
w_token(node4_17, rany).         const(rany).
w_no_space_after(node4_17, 1).         const(1).
a_ord(node4_17, 8).         const(8).
a_parent_id(node4_17, a_plzensky70827_txt_001_p1s6W6).         const(a_plzensky70827_txt_001_p1s6W6).
hide(node4_17, hide).         const(hide).
edge(node4_0, node4_1).
edge(node4_1, node4_2).
edge(node4_1, node4_3).
edge(node4_3, node4_4).
edge(node4_1, node4_5).
edge(node4_1, node4_6).
edge(node4_6, node4_7).
edge(node4_7, node4_8).
edge(node4_8, node4_9).
edge(node4_7, node4_10).
edge(node4_7, node4_11).
edge(node4_11, node4_12).
edge(node4_6, node4_13).
edge(node4_6, node4_14).
edge(node4_14, node4_15).
edge(node4_15, node4_16).
edge(node4_14, node4_17).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Krome sanitek ZZS priletel na misto i vrtulnik LZS. 
tree_root(node5_0).
:- valid_root(node5_0).
%%%%%%%% node5_0 %%%%%%%%%%%%%%%%%%%
node(node5_0).
atree_rf(node5_0, a_a_plzensky70827_txt_001_p1s7).         const(a_a_plzensky70827_txt_001_p1s7).
deepord(node5_0, 0).         const(0).
id(node5_0, T_plzensky70827_txt_001_p1s7).         const(T_plzensky70827_txt_001_p1s7).
nodetype(node5_0, root).         const(root).
sentence(node5_0, Krome_sanitek_ZZS_priletel_na_misto_i_vrtulnik_LZS__).         const(Krome_sanitek_ZZS_priletel_na_misto_i_vrtulnik_LZS__).
%%%%%%%% node5_1 %%%%%%%%%%%%%%%%%%%
node(node5_1).
deepord(node5_1, 4).         const(4).
functor(node5_1, PRED).         const(PRED).
gram_sempos(node5_1, v).         const(v).
id(node5_1, T_plzensky70827_txt_001_p1s7a1).         const(T_plzensky70827_txt_001_p1s7a1).
nodetype(node5_1, complex).         const(complex).
t_lemma(node5_1, priletet).         const(priletet).
val_frame_rf(node5_1, v_v_w5180f1).         const(v_v_w5180f1).
%%%%%%%% node5_2 %%%%%%%%%%%%%%%%%%%
node(node5_2).
deepord(node5_2, 1).         const(1).
functor(node5_2, DIR3).         const(DIR3).
id(node5_2, T_plzensky70827_txt_001_p1s7a10).         const(T_plzensky70827_txt_001_p1s7a10).
is_generated(node5_2, 1).         const(1).
nodetype(node5_2, qcomplex).         const(qcomplex).
subfunctor(node5_2, basic).         const(basic).
t_lemma(node5_2, x_Oblfm).         const(x_Oblfm).
%%%%%%%% node5_3 %%%%%%%%%%%%%%%%%%%
node(node5_3).
deepord(node5_3, 2).         const(2).
functor(node5_3, RESTR).         const(RESTR).
gram_sempos(node5_3, n_denot).         const(n_denot).
id(node5_3, T_plzensky70827_txt_001_p1s7a3).         const(T_plzensky70827_txt_001_p1s7a3).
nodetype(node5_3, complex).         const(complex).
t_lemma(node5_3, sanitka).         const(sanitka).
%%%%%%%% node5_4 %%%%%%%%%%%%%%%%%%%
node(node5_4).
deepord(node5_4, x2_1).         const(x2_1).
a_ref_type(node5_4, tree).         const(tree).
a_afun(node5_4, AuxP).         const(AuxP).
m_form(node5_4, Krome).         const(Krome).
m_lemma(node5_4, krome).         const(krome).
m_tag(node5_4, RR__2__________).         const(RR__2__________).
w_token(node5_4, Krome).         const(Krome).
a_ord(node5_4, 1).         const(1).
a_parent_id(node5_4, a_plzensky70827_txt_001_p1s7W4).         const(a_plzensky70827_txt_001_p1s7W4).
hide(node5_4, hide).         const(hide).
%%%%%%%% node5_5 %%%%%%%%%%%%%%%%%%%
node(node5_5).
deepord(node5_5, x2_2).         const(x2_2).
a_ref_type(node5_5, tree).         const(tree).
a_afun(node5_5, Adv).         const(Adv).
m_form(node5_5, sanitek).         const(sanitek).
m_lemma(node5_5, sanitka).         const(sanitka).
m_tag(node5_5, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node5_5, sanitek).         const(sanitek).
a_ord(node5_5, 2).         const(2).
a_parent_id(node5_5, a_plzensky70827_txt_001_p1s7W1).         const(a_plzensky70827_txt_001_p1s7W1).
hide(node5_5, hide).         const(hide).
%%%%%%%% node5_6 %%%%%%%%%%%%%%%%%%%
node(node5_6).
deepord(node5_6, 3).         const(3).
functor(node5_6, APP).         const(APP).
gram_sempos(node5_6, n_denot).         const(n_denot).
id(node5_6, T_plzensky70827_txt_001_p1s7a4).         const(T_plzensky70827_txt_001_p1s7a4).
nodetype(node5_6, complex).         const(complex).
t_lemma(node5_6, Zzs).         const(Zzs).
%%%%%%%% node5_7 %%%%%%%%%%%%%%%%%%%
node(node5_7).
deepord(node5_7, x3_1).         const(x3_1).
a_ref_type(node5_7, tree).         const(tree).
a_afun(node5_7, Atr).         const(Atr).
m_form(node5_7, ZZS).         const(ZZS).
m_lemma(node5_7, Zzs).         const(Zzs).
m_tag(node5_7, NNNXX_____A____).         const(NNNXX_____A____).
w_token(node5_7, ZZS).         const(ZZS).
a_ord(node5_7, 3).         const(3).
a_parent_id(node5_7, a_plzensky70827_txt_001_p1s7W2).         const(a_plzensky70827_txt_001_p1s7W2).
hide(node5_7, hide).         const(hide).
%%%%%%%% node5_8 %%%%%%%%%%%%%%%%%%%
node(node5_8).
deepord(node5_8, x4_1).         const(x4_1).
a_ref_type(node5_8, tree).         const(tree).
a_afun(node5_8, Pred).         const(Pred).
m_form(node5_8, priletel).         const(priletel).
m_lemma(node5_8, priletet).         const(priletet).
m_tag(node5_8, VpYS___XR_AA___).         const(VpYS___XR_AA___).
w_token(node5_8, priletel).         const(priletel).
a_ord(node5_8, 4).         const(4).
a_parent_id(node5_8, a_plzensky70827_txt_001_p1s7).         const(a_plzensky70827_txt_001_p1s7).
hide(node5_8, hide).         const(hide).
%%%%%%%% node5_9 %%%%%%%%%%%%%%%%%%%
node(node5_9).
deepord(node5_9, 6).         const(6).
functor(node5_9, CONJ).         const(CONJ).
id(node5_9, T_plzensky70827_txt_001_p1s7a6).         const(T_plzensky70827_txt_001_p1s7a6).
nodetype(node5_9, coap).         const(coap).
t_lemma(node5_9, i).         const(i).
%%%%%%%% node5_10 %%%%%%%%%%%%%%%%%%%
node(node5_10).
deepord(node5_10, 5).         const(5).
functor(node5_10, RSTR).         const(RSTR).
gram_sempos(node5_10, n_denot).         const(n_denot).
id(node5_10, T_plzensky70827_txt_001_p1s7a7).         const(T_plzensky70827_txt_001_p1s7a7).
is_member(node5_10, 1).         const(1).
nodetype(node5_10, complex).         const(complex).
t_lemma(node5_10, misto).         const(misto).
%%%%%%%% node5_11 %%%%%%%%%%%%%%%%%%%
node(node5_11).
deepord(node5_11, x5_1).         const(x5_1).
a_ref_type(node5_11, tree).         const(tree).
a_afun(node5_11, Obj).         const(Obj).
m_form(node5_11, misto).         const(misto).
m_lemma(node5_11, misto_1___fyzicke_umisteni_).         const(misto_1___fyzicke_umisteni_).
m_tag(node5_11, NNNS4_____A____).         const(NNNS4_____A____).
w_token(node5_11, misto).         const(misto).
a_ord(node5_11, 6).         const(6).
a_parent_id(node5_11, a_plzensky70827_txt_001_p1s7W7).         const(a_plzensky70827_txt_001_p1s7W7).
hide(node5_11, hide).         const(hide).
%%%%%%%% node5_12 %%%%%%%%%%%%%%%%%%%
node(node5_12).
deepord(node5_12, x6_1).         const(x6_1).
a_ref_type(node5_12, tree).         const(tree).
a_afun(node5_12, Coord).         const(Coord).
m_form(node5_12, i).         const(i).
m_lemma(node5_12, i_1).         const(i_1).
m_tag(node5_12, J______________).         const(J______________).
w_token(node5_12, i).         const(i).
a_ord(node5_12, 7).         const(7).
a_parent_id(node5_12, a_plzensky70827_txt_001_p1s7W5).         const(a_plzensky70827_txt_001_p1s7W5).
hide(node5_12, hide).         const(hide).
%%%%%%%% node5_13 %%%%%%%%%%%%%%%%%%%
node(node5_13).
deepord(node5_13, 7).         const(7).
functor(node5_13, RSTR).         const(RSTR).
gram_sempos(node5_13, n_denot).         const(n_denot).
id(node5_13, T_plzensky70827_txt_001_p1s7a8).         const(T_plzensky70827_txt_001_p1s7a8).
is_member(node5_13, 1).         const(1).
nodetype(node5_13, complex).         const(complex).
t_lemma(node5_13, vrtulnik).         const(vrtulnik).
%%%%%%%% node5_14 %%%%%%%%%%%%%%%%%%%
node(node5_14).
deepord(node5_14, x7_1).         const(x7_1).
a_ref_type(node5_14, tree).         const(tree).
a_afun(node5_14, Obj).         const(Obj).
m_form(node5_14, vrtulnik).         const(vrtulnik).
m_lemma(node5_14, vrtulnik).         const(vrtulnik).
m_tag(node5_14, NNIS4_____A____).         const(NNIS4_____A____).
w_token(node5_14, vrtulnik).         const(vrtulnik).
a_ord(node5_14, 8).         const(8).
a_parent_id(node5_14, a_plzensky70827_txt_001_p1s7W7).         const(a_plzensky70827_txt_001_p1s7W7).
hide(node5_14, hide).         const(hide).
%%%%%%%% node5_15 %%%%%%%%%%%%%%%%%%%
node(node5_15).
deepord(node5_15, 8).         const(8).
functor(node5_15, ACT).         const(ACT).
gram_sempos(node5_15, n_denot).         const(n_denot).
id(node5_15, T_plzensky70827_txt_001_p1s7a9).         const(T_plzensky70827_txt_001_p1s7a9).
nodetype(node5_15, complex).         const(complex).
t_lemma(node5_15, Lzs).         const(Lzs).
%%%%%%%% node5_16 %%%%%%%%%%%%%%%%%%%
node(node5_16).
deepord(node5_16, x8_1).         const(x8_1).
a_ref_type(node5_16, tree).         const(tree).
a_afun(node5_16, Sb).         const(Sb).
m_form(node5_16, LZS).         const(LZS).
m_lemma(node5_16, Lzs).         const(Lzs).
m_tag(node5_16, NNMS1_____A____).         const(NNMS1_____A____).
w_token(node5_16, LZS).         const(LZS).
w_no_space_after(node5_16, 1).         const(1).
a_ord(node5_16, 9).         const(9).
a_parent_id(node5_16, a_plzensky70827_txt_001_p1s7W4).         const(a_plzensky70827_txt_001_p1s7W4).
hide(node5_16, hide).         const(hide).
edge(node5_0, node5_1).
edge(node5_1, node5_2).
edge(node5_1, node5_3).
edge(node5_3, node5_4).
edge(node5_3, node5_5).
edge(node5_3, node5_6).
edge(node5_6, node5_7).
edge(node5_1, node5_8).
edge(node5_1, node5_9).
edge(node5_9, node5_10).
edge(node5_10, node5_11).
edge(node5_9, node5_12).
edge(node5_9, node5_13).
edge(node5_13, node5_14).
edge(node5_1, node5_15).
edge(node5_15, node5_16).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Hasici dale zajistili misto nehody, odpojili u vozidel akumulatory, pripravili pristavaci plochu pro vrtulnik LZS a pomohli s nalozenim zraneneho. 
tree_root(node6_0).
:- valid_root(node6_0).
%%%%%%%% node6_0 %%%%%%%%%%%%%%%%%%%
node(node6_0).
atree_rf(node6_0, a_a_plzensky70827_txt_001_p1s8).         const(a_a_plzensky70827_txt_001_p1s8).
deepord(node6_0, 0).         const(0).
id(node6_0, T_plzensky70827_txt_001_p1s8).         const(T_plzensky70827_txt_001_p1s8).
nodetype(node6_0, root).         const(root).
sentence(node6_0, Hasici_dale_zajistili_misto_nehody__odpojili_u_vozidel_akumulatory__pripravili_pristavaci_plochu_pro_vrtulnik_LZS_a_pomohli_s_nalozenim_zraneneho__).         const(Hasici_dale_zajistili_misto_nehody__odpojili_u_vozidel_akumulatory__pripravili_pristavaci_plochu_pro_vrtulnik_LZS_a_pomohli_s_nalozenim_zraneneho__).
%%%%%%%% node6_1 %%%%%%%%%%%%%%%%%%%
node(node6_1).
deepord(node6_1, 6).         const(6).
functor(node6_1, CONJ).         const(CONJ).
id(node6_1, T_plzensky70827_txt_001_p1s8a1).         const(T_plzensky70827_txt_001_p1s8a1).
nodetype(node6_1, coap).         const(coap).
t_lemma(node6_1, x_Comma).         const(x_Comma).
%%%%%%%% node6_2 %%%%%%%%%%%%%%%%%%%
node(node6_2).
deepord(node6_2, 3).         const(3).
functor(node6_2, PRED).         const(PRED).
gram_sempos(node6_2, v).         const(v).
id(node6_2, T_plzensky70827_txt_001_p1s8a2).         const(T_plzensky70827_txt_001_p1s8a2).
is_member(node6_2, 1).         const(1).
nodetype(node6_2, complex).         const(complex).
t_lemma(node6_2, zajistit).         const(zajistit).
val_frame_rf(node6_2, v_v_w8845f1).         const(v_v_w8845f1).
%%%%%%%% node6_3 %%%%%%%%%%%%%%%%%%%
node(node6_3).
deepord(node6_3, 1).         const(1).
functor(node6_3, ACT).         const(ACT).
gram_sempos(node6_3, n_denot).         const(n_denot).
id(node6_3, T_plzensky70827_txt_001_p1s8a3).         const(T_plzensky70827_txt_001_p1s8a3).
nodetype(node6_3, complex).         const(complex).
t_lemma(node6_3, hasic).         const(hasic).
%%%%%%%% node6_4 %%%%%%%%%%%%%%%%%%%
node(node6_4).
deepord(node6_4, x1_1).         const(x1_1).
a_ref_type(node6_4, tree).         const(tree).
a_afun(node6_4, Sb).         const(Sb).
m_form(node6_4, Hasici).         const(Hasici).
m_lemma(node6_4, hasic).         const(hasic).
m_tag(node6_4, NNMP1_____A____).         const(NNMP1_____A____).
w_token(node6_4, Hasici).         const(Hasici).
a_ord(node6_4, 1).         const(1).
a_parent_id(node6_4, a_plzensky70827_txt_001_p1s8W3).         const(a_plzensky70827_txt_001_p1s8W3).
hide(node6_4, hide).         const(hide).
%%%%%%%% node6_5 %%%%%%%%%%%%%%%%%%%
node(node6_5).
deepord(node6_5, 2).         const(2).
functor(node6_5, THL).         const(THL).
gram_sempos(node6_5, adv_denot_grad_neg).         const(adv_denot_grad_neg).
id(node6_5, T_plzensky70827_txt_001_p1s8a4).         const(T_plzensky70827_txt_001_p1s8a4).
nodetype(node6_5, complex).         const(complex).
t_lemma(node6_5, dale).         const(dale).
%%%%%%%% node6_6 %%%%%%%%%%%%%%%%%%%
node(node6_6).
deepord(node6_6, x2_1).         const(x2_1).
a_ref_type(node6_6, tree).         const(tree).
a_afun(node6_6, Adv).         const(Adv).
m_form(node6_6, dale).         const(dale).
m_lemma(node6_6, dale_3___take__za_dalsi__poporade__cas__i_mist___nestupnuje_se_).         const(dale_3___take__za_dalsi__poporade__cas__i_mist___nestupnuje_se_).
m_tag(node6_6, Db____________1).         const(Db____________1).
w_token(node6_6, dale).         const(dale).
a_ord(node6_6, 2).         const(2).
a_parent_id(node6_6, a_plzensky70827_txt_001_p1s8W3).         const(a_plzensky70827_txt_001_p1s8W3).
hide(node6_6, hide).         const(hide).
%%%%%%%% node6_7 %%%%%%%%%%%%%%%%%%%
node(node6_7).
deepord(node6_7, x3_1).         const(x3_1).
a_ref_type(node6_7, tree).         const(tree).
a_afun(node6_7, Pred).         const(Pred).
m_form(node6_7, zajistili).         const(zajistili).
m_lemma(node6_7, zajistit__W).         const(zajistit__W).
m_tag(node6_7, VpMP___XR_AA___).         const(VpMP___XR_AA___).
w_token(node6_7, zajistili).         const(zajistili).
a_ord(node6_7, 3).         const(3).
a_parent_id(node6_7, a_plzensky70827_txt_001_p1s8W6).         const(a_plzensky70827_txt_001_p1s8W6).
hide(node6_7, hide).         const(hide).
%%%%%%%% node6_8 %%%%%%%%%%%%%%%%%%%
node(node6_8).
deepord(node6_8, 4).         const(4).
functor(node6_8, PAT).         const(PAT).
gram_sempos(node6_8, n_denot).         const(n_denot).
id(node6_8, T_plzensky70827_txt_001_p1s8a5).         const(T_plzensky70827_txt_001_p1s8a5).
nodetype(node6_8, complex).         const(complex).
t_lemma(node6_8, misto).         const(misto).
%%%%%%%% node6_9 %%%%%%%%%%%%%%%%%%%
node(node6_9).
deepord(node6_9, x4_1).         const(x4_1).
a_ref_type(node6_9, tree).         const(tree).
a_afun(node6_9, Obj).         const(Obj).
m_form(node6_9, misto).         const(misto).
m_lemma(node6_9, misto_1___fyzicke_umisteni_).         const(misto_1___fyzicke_umisteni_).
m_tag(node6_9, NNNS4_____A____).         const(NNNS4_____A____).
w_token(node6_9, misto).         const(misto).
a_ord(node6_9, 4).         const(4).
a_parent_id(node6_9, a_plzensky70827_txt_001_p1s8W3).         const(a_plzensky70827_txt_001_p1s8W3).
hide(node6_9, hide).         const(hide).
%%%%%%%% node6_10 %%%%%%%%%%%%%%%%%%%
node(node6_10).
deepord(node6_10, 5).         const(5).
functor(node6_10, APP).         const(APP).
gram_sempos(node6_10, n_denot).         const(n_denot).
id(node6_10, T_plzensky70827_txt_001_p1s8a6).         const(T_plzensky70827_txt_001_p1s8a6).
nodetype(node6_10, complex).         const(complex).
t_lemma(node6_10, nehoda).         const(nehoda).
%%%%%%%% node6_11 %%%%%%%%%%%%%%%%%%%
node(node6_11).
deepord(node6_11, x5_1).         const(x5_1).
a_ref_type(node6_11, tree).         const(tree).
a_afun(node6_11, Atr).         const(Atr).
m_form(node6_11, nehody).         const(nehody).
m_lemma(node6_11, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node6_11, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node6_11, nehody).         const(nehody).
w_no_space_after(node6_11, 1).         const(1).
a_ord(node6_11, 5).         const(5).
a_parent_id(node6_11, a_plzensky70827_txt_001_p1s8W4).         const(a_plzensky70827_txt_001_p1s8W4).
hide(node6_11, hide).         const(hide).
%%%%%%%% node6_12 %%%%%%%%%%%%%%%%%%%
node(node6_12).
deepord(node6_12, x6_1).         const(x6_1).
a_ref_type(node6_12, tree).         const(tree).
a_afun(node6_12, Coord).         const(Coord).
m_form(node6_12, x_).         const(x_).
m_lemma(node6_12, x_).         const(x_).
m_tag(node6_12, Z______________).         const(Z______________).
w_token(node6_12, x_).         const(x_).
a_ord(node6_12, 6).         const(6).
a_parent_id(node6_12, a_plzensky70827_txt_001_p1s8).         const(a_plzensky70827_txt_001_p1s8).
hide(node6_12, hide).         const(hide).
%%%%%%%% node6_13 %%%%%%%%%%%%%%%%%%%
node(node6_13).
deepord(node6_13, 8).         const(8).
functor(node6_13, PRED).         const(PRED).
gram_sempos(node6_13, v).         const(v).
id(node6_13, T_plzensky70827_txt_001_p1s8a7).         const(T_plzensky70827_txt_001_p1s8a7).
is_member(node6_13, 1).         const(1).
nodetype(node6_13, complex).         const(complex).
t_lemma(node6_13, odpojit).         const(odpojit).
%%%%%%%% node6_14 %%%%%%%%%%%%%%%%%%%
node(node6_14).
deepord(node6_14, 7).         const(7).
functor(node6_14, ACT).         const(ACT).
gram_sempos(node6_14, n_pron_def_pers).         const(n_pron_def_pers).
id(node6_14, T_plzensky70827_txt_001_p1s8a23).         const(T_plzensky70827_txt_001_p1s8a23).
is_generated(node6_14, 1).         const(1).
nodetype(node6_14, complex).         const(complex).
t_lemma(node6_14, x_PersPron).         const(x_PersPron).
%%%%%%%% node6_15 %%%%%%%%%%%%%%%%%%%
node(node6_15).
deepord(node6_15, x8_1).         const(x8_1).
a_ref_type(node6_15, tree).         const(tree).
a_afun(node6_15, Pred).         const(Pred).
m_form(node6_15, odpojili).         const(odpojili).
m_lemma(node6_15, odpojit__W).         const(odpojit__W).
m_tag(node6_15, VpMP___XR_AA___).         const(VpMP___XR_AA___).
w_token(node6_15, odpojili).         const(odpojili).
a_ord(node6_15, 7).         const(7).
a_parent_id(node6_15, a_plzensky70827_txt_001_p1s8W6).         const(a_plzensky70827_txt_001_p1s8W6).
hide(node6_15, hide).         const(hide).
%%%%%%%% node6_16 %%%%%%%%%%%%%%%%%%%
node(node6_16).
deepord(node6_16, 9).         const(9).
functor(node6_16, LOC).         const(LOC).
gram_sempos(node6_16, n_denot).         const(n_denot).
id(node6_16, T_plzensky70827_txt_001_p1s8a9).         const(T_plzensky70827_txt_001_p1s8a9).
nodetype(node6_16, complex).         const(complex).
subfunctor(node6_16, near).         const(near).
t_lemma(node6_16, vozidlo).         const(vozidlo).
%%%%%%%% node6_17 %%%%%%%%%%%%%%%%%%%
node(node6_17).
deepord(node6_17, x9_1).         const(x9_1).
a_ref_type(node6_17, tree).         const(tree).
a_afun(node6_17, AuxP).         const(AuxP).
m_form(node6_17, u).         const(u).
m_lemma(node6_17, u_1).         const(u_1).
m_tag(node6_17, RR__2__________).         const(RR__2__________).
w_token(node6_17, u).         const(u).
a_ord(node6_17, 8).         const(8).
a_parent_id(node6_17, a_plzensky70827_txt_001_p1s8W7).         const(a_plzensky70827_txt_001_p1s8W7).
hide(node6_17, hide).         const(hide).
%%%%%%%% node6_18 %%%%%%%%%%%%%%%%%%%
node(node6_18).
deepord(node6_18, x9_2).         const(x9_2).
a_ref_type(node6_18, tree).         const(tree).
a_afun(node6_18, Adv).         const(Adv).
m_form(node6_18, vozidel).         const(vozidel).
m_lemma(node6_18, vozidlo).         const(vozidlo).
m_tag(node6_18, NNNP2_____A____).         const(NNNP2_____A____).
w_token(node6_18, vozidel).         const(vozidel).
a_ord(node6_18, 9).         const(9).
a_parent_id(node6_18, a_plzensky70827_txt_001_p1s8W8).         const(a_plzensky70827_txt_001_p1s8W8).
hide(node6_18, hide).         const(hide).
%%%%%%%% node6_19 %%%%%%%%%%%%%%%%%%%
node(node6_19).
deepord(node6_19, 11).         const(11).
functor(node6_19, PAT).         const(PAT).
gram_sempos(node6_19, n_denot).         const(n_denot).
id(node6_19, T_plzensky70827_txt_001_p1s8a10).         const(T_plzensky70827_txt_001_p1s8a10).
nodetype(node6_19, complex).         const(complex).
t_lemma(node6_19, akumulator).         const(akumulator).
%%%%%%%% node6_20 %%%%%%%%%%%%%%%%%%%
node(node6_20).
deepord(node6_20, x11_1).         const(x11_1).
a_ref_type(node6_20, tree).         const(tree).
a_afun(node6_20, Obj).         const(Obj).
m_form(node6_20, akumulatory).         const(akumulatory).
m_lemma(node6_20, akumulator).         const(akumulator).
m_tag(node6_20, NNIP4_____A____).         const(NNIP4_____A____).
w_token(node6_20, akumulatory).         const(akumulatory).
w_no_space_after(node6_20, 1).         const(1).
a_ord(node6_20, 10).         const(10).
a_parent_id(node6_20, a_plzensky70827_txt_001_p1s8W7).         const(a_plzensky70827_txt_001_p1s8W7).
hide(node6_20, hide).         const(hide).
%%%%%%%% node6_21 %%%%%%%%%%%%%%%%%%%
node(node6_21).
deepord(node6_21, 17).         const(17).
functor(node6_21, CONJ).         const(CONJ).
id(node6_21, T_plzensky70827_txt_001_p1s8a11).         const(T_plzensky70827_txt_001_p1s8a11).
nodetype(node6_21, coap).         const(coap).
t_lemma(node6_21, a).         const(a).
%%%%%%%% node6_22 %%%%%%%%%%%%%%%%%%%
node(node6_22).
deepord(node6_22, 10).         const(10).
functor(node6_22, ACT).         const(ACT).
gram_sempos(node6_22, n_pron_def_pers).         const(n_pron_def_pers).
id(node6_22, T_plzensky70827_txt_001_p1s8a27).         const(T_plzensky70827_txt_001_p1s8a27).
is_generated(node6_22, 1).         const(1).
nodetype(node6_22, complex).         const(complex).
t_lemma(node6_22, x_PersPron).         const(x_PersPron).
%%%%%%%% node6_23 %%%%%%%%%%%%%%%%%%%
node(node6_23).
deepord(node6_23, 12).         const(12).
functor(node6_23, RSTR).         const(RSTR).
gram_sempos(node6_23, v).         const(v).
id(node6_23, T_plzensky70827_txt_001_p1s8a13).         const(T_plzensky70827_txt_001_p1s8a13).
is_member(node6_23, 1).         const(1).
nodetype(node6_23, complex).         const(complex).
t_lemma(node6_23, pripravit).         const(pripravit).
val_frame_rf(node6_23, v_v_w5238f1).         const(v_v_w5238f1).
%%%%%%%% node6_24 %%%%%%%%%%%%%%%%%%%
node(node6_24).
deepord(node6_24, x12_1).         const(x12_1).
a_ref_type(node6_24, tree).         const(tree).
a_afun(node6_24, Atr).         const(Atr).
m_form(node6_24, pripravili).         const(pripravili).
m_lemma(node6_24, pripravit__W).         const(pripravit__W).
m_tag(node6_24, VpMP___XR_AA___).         const(VpMP___XR_AA___).
w_token(node6_24, pripravili).         const(pripravili).
a_ord(node6_24, 12).         const(12).
a_parent_id(node6_24, a_plzensky70827_txt_001_p1s8W18).         const(a_plzensky70827_txt_001_p1s8W18).
hide(node6_24, hide).         const(hide).
%%%%%%%% node6_25 %%%%%%%%%%%%%%%%%%%
node(node6_25).
deepord(node6_25, 13).         const(13).
functor(node6_25, PAT).         const(PAT).
gram_sempos(node6_25, adj_denot).         const(adj_denot).
id(node6_25, T_plzensky70827_txt_001_p1s8a14).         const(T_plzensky70827_txt_001_p1s8a14).
nodetype(node6_25, complex).         const(complex).
t_lemma(node6_25, pristavaci).         const(pristavaci).
%%%%%%%% node6_26 %%%%%%%%%%%%%%%%%%%
node(node6_26).
deepord(node6_26, x13_1).         const(x13_1).
a_ref_type(node6_26, tree).         const(tree).
a_afun(node6_26, Obj).         const(Obj).
m_form(node6_26, pristavaci).         const(pristavaci).
m_lemma(node6_26, pristavaci____IC__pristat_).         const(pristavaci____IC__pristat_).
m_tag(node6_26, AAFS4____1A____).         const(AAFS4____1A____).
w_token(node6_26, pristavaci).         const(pristavaci).
a_ord(node6_26, 13).         const(13).
a_parent_id(node6_26, a_plzensky70827_txt_001_p1s8W12).         const(a_plzensky70827_txt_001_p1s8W12).
hide(node6_26, hide).         const(hide).
%%%%%%%% node6_27 %%%%%%%%%%%%%%%%%%%
node(node6_27).
deepord(node6_27, 14).         const(14).
functor(node6_27, PAT).         const(PAT).
gram_sempos(node6_27, n_denot).         const(n_denot).
id(node6_27, T_plzensky70827_txt_001_p1s8a15).         const(T_plzensky70827_txt_001_p1s8a15).
nodetype(node6_27, complex).         const(complex).
t_lemma(node6_27, plocha).         const(plocha).
%%%%%%%% node6_28 %%%%%%%%%%%%%%%%%%%
node(node6_28).
deepord(node6_28, x14_1).         const(x14_1).
a_ref_type(node6_28, tree).         const(tree).
a_afun(node6_28, Obj).         const(Obj).
m_form(node6_28, plochu).         const(plochu).
m_lemma(node6_28, plocha).         const(plocha).
m_tag(node6_28, NNFS4_____A____).         const(NNFS4_____A____).
w_token(node6_28, plochu).         const(plochu).
a_ord(node6_28, 14).         const(14).
a_parent_id(node6_28, a_plzensky70827_txt_001_p1s8W12).         const(a_plzensky70827_txt_001_p1s8W12).
hide(node6_28, hide).         const(hide).
%%%%%%%% node6_29 %%%%%%%%%%%%%%%%%%%
node(node6_29).
deepord(node6_29, 15).         const(15).
functor(node6_29, BEN).         const(BEN).
gram_sempos(node6_29, n_denot).         const(n_denot).
id(node6_29, T_plzensky70827_txt_001_p1s8a17).         const(T_plzensky70827_txt_001_p1s8a17).
nodetype(node6_29, complex).         const(complex).
subfunctor(node6_29, basic).         const(basic).
t_lemma(node6_29, vrtulnik).         const(vrtulnik).
%%%%%%%% node6_30 %%%%%%%%%%%%%%%%%%%
node(node6_30).
deepord(node6_30, x15_1).         const(x15_1).
a_ref_type(node6_30, tree).         const(tree).
a_afun(node6_30, AuxP).         const(AuxP).
m_form(node6_30, pro).         const(pro).
m_lemma(node6_30, pro_1).         const(pro_1).
m_tag(node6_30, RR__4__________).         const(RR__4__________).
w_token(node6_30, pro).         const(pro).
a_ord(node6_30, 15).         const(15).
a_parent_id(node6_30, a_plzensky70827_txt_001_p1s8W14).         const(a_plzensky70827_txt_001_p1s8W14).
hide(node6_30, hide).         const(hide).
%%%%%%%% node6_31 %%%%%%%%%%%%%%%%%%%
node(node6_31).
deepord(node6_31, x15_2).         const(x15_2).
a_ref_type(node6_31, tree).         const(tree).
a_afun(node6_31, Atr).         const(Atr).
m_form(node6_31, vrtulnik).         const(vrtulnik).
m_lemma(node6_31, vrtulnik).         const(vrtulnik).
m_tag(node6_31, NNIS4_____A____).         const(NNIS4_____A____).
w_token(node6_31, vrtulnik).         const(vrtulnik).
a_ord(node6_31, 16).         const(16).
a_parent_id(node6_31, a_plzensky70827_txt_001_p1s8W15).         const(a_plzensky70827_txt_001_p1s8W15).
hide(node6_31, hide).         const(hide).
%%%%%%%% node6_32 %%%%%%%%%%%%%%%%%%%
node(node6_32).
deepord(node6_32, 16).         const(16).
functor(node6_32, RSTR).         const(RSTR).
gram_sempos(node6_32, n_denot).         const(n_denot).
id(node6_32, T_plzensky70827_txt_001_p1s8a18).         const(T_plzensky70827_txt_001_p1s8a18).
nodetype(node6_32, complex).         const(complex).
t_lemma(node6_32, LZS).         const(LZS).
%%%%%%%% node6_33 %%%%%%%%%%%%%%%%%%%
node(node6_33).
deepord(node6_33, x16_1).         const(x16_1).
a_ref_type(node6_33, tree).         const(tree).
a_afun(node6_33, Atr).         const(Atr).
m_form(node6_33, LZS).         const(LZS).
m_lemma(node6_33, LZS).         const(LZS).
m_tag(node6_33, NNXXX_____A____).         const(NNXXX_____A____).
w_token(node6_33, LZS).         const(LZS).
a_ord(node6_33, 17).         const(17).
a_parent_id(node6_33, a_plzensky70827_txt_001_p1s8W16).         const(a_plzensky70827_txt_001_p1s8W16).
hide(node6_33, hide).         const(hide).
%%%%%%%% node6_34 %%%%%%%%%%%%%%%%%%%
node(node6_34).
deepord(node6_34, x17_1).         const(x17_1).
a_ref_type(node6_34, tree).         const(tree).
a_afun(node6_34, Coord).         const(Coord).
m_form(node6_34, a).         const(a).
m_lemma(node6_34, a_1).         const(a_1).
m_tag(node6_34, J______________).         const(J______________).
w_token(node6_34, a).         const(a).
a_ord(node6_34, 18).         const(18).
a_parent_id(node6_34, a_plzensky70827_txt_001_p1s8W10).         const(a_plzensky70827_txt_001_p1s8W10).
hide(node6_34, hide).         const(hide).
%%%%%%%% node6_35 %%%%%%%%%%%%%%%%%%%
node(node6_35).
deepord(node6_35, 18).         const(18).
functor(node6_35, RSTR).         const(RSTR).
gram_sempos(node6_35, v).         const(v).
id(node6_35, T_plzensky70827_txt_001_p1s8a19).         const(T_plzensky70827_txt_001_p1s8a19).
is_member(node6_35, 1).         const(1).
nodetype(node6_35, complex).         const(complex).
t_lemma(node6_35, pomoci).         const(pomoci).
val_frame_rf(node6_35, v_v_w3830f1).         const(v_v_w3830f1).
%%%%%%%% node6_36 %%%%%%%%%%%%%%%%%%%
node(node6_36).
deepord(node6_36, x18_1).         const(x18_1).
a_ref_type(node6_36, tree).         const(tree).
a_afun(node6_36, Atr).         const(Atr).
m_form(node6_36, pomohli).         const(pomohli).
m_lemma(node6_36, pomoci).         const(pomoci).
m_tag(node6_36, VpMP___XR_AA___).         const(VpMP___XR_AA___).
w_token(node6_36, pomohli).         const(pomohli).
a_ord(node6_36, 19).         const(19).
a_parent_id(node6_36, a_plzensky70827_txt_001_p1s8W18).         const(a_plzensky70827_txt_001_p1s8W18).
hide(node6_36, hide).         const(hide).
%%%%%%%% node6_37 %%%%%%%%%%%%%%%%%%%
node(node6_37).
deepord(node6_37, 19).         const(19).
functor(node6_37, ADDR).         const(ADDR).
id(node6_37, T_plzensky70827_txt_001_p1s8a26).         const(T_plzensky70827_txt_001_p1s8a26).
is_generated(node6_37, 1).         const(1).
nodetype(node6_37, qcomplex).         const(qcomplex).
t_lemma(node6_37, x_Gen).         const(x_Gen).
%%%%%%%% node6_38 %%%%%%%%%%%%%%%%%%%
node(node6_38).
deepord(node6_38, 20).         const(20).
functor(node6_38, ACMP).         const(ACMP).
gram_sempos(node6_38, n_denot).         const(n_denot).
id(node6_38, T_plzensky70827_txt_001_p1s8a21).         const(T_plzensky70827_txt_001_p1s8a21).
nodetype(node6_38, complex).         const(complex).
subfunctor(node6_38, basic).         const(basic).
t_lemma(node6_38, nalozeni).         const(nalozeni).
%%%%%%%% node6_39 %%%%%%%%%%%%%%%%%%%
node(node6_39).
deepord(node6_39, x20_1).         const(x20_1).
a_ref_type(node6_39, tree).         const(tree).
a_afun(node6_39, AuxP).         const(AuxP).
m_form(node6_39, s).         const(s).
m_lemma(node6_39, s_1).         const(s_1).
m_tag(node6_39, RR__7__________).         const(RR__7__________).
w_token(node6_39, s).         const(s).
a_ord(node6_39, 20).         const(20).
a_parent_id(node6_39, a_plzensky70827_txt_001_p1s8W19).         const(a_plzensky70827_txt_001_p1s8W19).
hide(node6_39, hide).         const(hide).
%%%%%%%% node6_40 %%%%%%%%%%%%%%%%%%%
node(node6_40).
deepord(node6_40, x20_2).         const(x20_2).
a_ref_type(node6_40, tree).         const(tree).
a_afun(node6_40, Adv).         const(Adv).
m_form(node6_40, nalozenim).         const(nalozenim).
m_lemma(node6_40, nalozeni____3it_).         const(nalozeni____3it_).
m_tag(node6_40, NNNS7_____A____).         const(NNNS7_____A____).
w_token(node6_40, nalozenim).         const(nalozenim).
a_ord(node6_40, 21).         const(21).
a_parent_id(node6_40, a_plzensky70827_txt_001_p1s8W20).         const(a_plzensky70827_txt_001_p1s8W20).
hide(node6_40, hide).         const(hide).
%%%%%%%% node6_41 %%%%%%%%%%%%%%%%%%%
node(node6_41).
deepord(node6_41, 21).         const(21).
functor(node6_41, RSTR).         const(RSTR).
gram_sempos(node6_41, adj_denot).         const(adj_denot).
id(node6_41, T_plzensky70827_txt_001_p1s8a22).         const(T_plzensky70827_txt_001_p1s8a22).
nodetype(node6_41, complex).         const(complex).
t_lemma(node6_41, zraneny).         const(zraneny).
%%%%%%%% node6_42 %%%%%%%%%%%%%%%%%%%
node(node6_42).
deepord(node6_42, x21_1).         const(x21_1).
a_ref_type(node6_42, tree).         const(tree).
a_afun(node6_42, ExD).         const(ExD).
m_form(node6_42, zraneneho).         const(zraneneho).
m_lemma(node6_42, zraneny____3it_).         const(zraneny____3it_).
m_tag(node6_42, AAIS2____1A____).         const(AAIS2____1A____).
w_token(node6_42, zraneneho).         const(zraneneho).
w_no_space_after(node6_42, 1).         const(1).
a_ord(node6_42, 22).         const(22).
a_parent_id(node6_42, a_plzensky70827_txt_001_p1s8W21).         const(a_plzensky70827_txt_001_p1s8W21).
hide(node6_42, hide).         const(hide).
edge(node6_0, node6_1).
edge(node6_1, node6_2).
edge(node6_2, node6_3).
edge(node6_3, node6_4).
edge(node6_2, node6_5).
edge(node6_5, node6_6).
edge(node6_2, node6_7).
edge(node6_2, node6_8).
edge(node6_8, node6_9).
edge(node6_8, node6_10).
edge(node6_10, node6_11).
edge(node6_1, node6_12).
edge(node6_1, node6_13).
edge(node6_13, node6_14).
edge(node6_13, node6_15).
edge(node6_13, node6_16).
edge(node6_16, node6_17).
edge(node6_16, node6_18).
edge(node6_13, node6_19).
edge(node6_19, node6_20).
edge(node6_19, node6_21).
edge(node6_21, node6_22).
edge(node6_21, node6_23).
edge(node6_23, node6_24).
edge(node6_23, node6_25).
edge(node6_25, node6_26).
edge(node6_23, node6_27).
edge(node6_27, node6_28).
edge(node6_27, node6_29).
edge(node6_29, node6_30).
edge(node6_29, node6_31).
edge(node6_29, node6_32).
edge(node6_32, node6_33).
edge(node6_21, node6_34).
edge(node6_21, node6_35).
edge(node6_35, node6_36).
edge(node6_35, node6_37).
edge(node6_35, node6_38).
edge(node6_38, node6_39).
edge(node6_38, node6_40).
edge(node6_38, node6_41).
edge(node6_41, node6_42).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Silnice v miste je uzavrena. 
tree_root(node7_0).
:- valid_root(node7_0).
%%%%%%%% node7_0 %%%%%%%%%%%%%%%%%%%
node(node7_0).
atree_rf(node7_0, a_a_plzensky70827_txt_001_p1s9).         const(a_a_plzensky70827_txt_001_p1s9).
deepord(node7_0, 0).         const(0).
id(node7_0, T_plzensky70827_txt_001_p1s9).         const(T_plzensky70827_txt_001_p1s9).
nodetype(node7_0, root).         const(root).
sentence(node7_0, Silnice_v_miste_je_uzavrena__).         const(Silnice_v_miste_je_uzavrena__).
%%%%%%%% node7_1 %%%%%%%%%%%%%%%%%%%
node(node7_1).
deepord(node7_1, 4).         const(4).
functor(node7_1, PRED).         const(PRED).
gram_sempos(node7_1, v).         const(v).
id(node7_1, T_plzensky70827_txt_001_p1s9a5).         const(T_plzensky70827_txt_001_p1s9a5).
nodetype(node7_1, complex).         const(complex).
t_lemma(node7_1, uzavrit).         const(uzavrit).
val_frame_rf(node7_1, v_v_w7476f1).         const(v_v_w7476f1).
%%%%%%%% node7_2 %%%%%%%%%%%%%%%%%%%
node(node7_2).
deepord(node7_2, 1).         const(1).
functor(node7_2, ACT).         const(ACT).
id(node7_2, T_plzensky70827_txt_001_p1s9a6).         const(T_plzensky70827_txt_001_p1s9a6).
is_generated(node7_2, 1).         const(1).
nodetype(node7_2, qcomplex).         const(qcomplex).
t_lemma(node7_2, x_Gen).         const(x_Gen).
%%%%%%%% node7_3 %%%%%%%%%%%%%%%%%%%
node(node7_3).
deepord(node7_3, 2).         const(2).
functor(node7_3, PAT).         const(PAT).
gram_sempos(node7_3, n_denot).         const(n_denot).
id(node7_3, T_plzensky70827_txt_001_p1s9a2).         const(T_plzensky70827_txt_001_p1s9a2).
nodetype(node7_3, complex).         const(complex).
t_lemma(node7_3, silnice).         const(silnice).
%%%%%%%% node7_4 %%%%%%%%%%%%%%%%%%%
node(node7_4).
deepord(node7_4, x2_1).         const(x2_1).
a_ref_type(node7_4, tree).         const(tree).
a_afun(node7_4, Sb).         const(Sb).
m_form(node7_4, Silnice).         const(Silnice).
m_lemma(node7_4, silnice).         const(silnice).
m_tag(node7_4, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node7_4, Silnice).         const(Silnice).
a_ord(node7_4, 1).         const(1).
a_parent_id(node7_4, a_plzensky70827_txt_001_p1s9W4).         const(a_plzensky70827_txt_001_p1s9W4).
hide(node7_4, hide).         const(hide).
%%%%%%%% node7_5 %%%%%%%%%%%%%%%%%%%
node(node7_5).
deepord(node7_5, 3).         const(3).
functor(node7_5, LOC).         const(LOC).
gram_sempos(node7_5, n_denot).         const(n_denot).
id(node7_5, T_plzensky70827_txt_001_p1s9a4).         const(T_plzensky70827_txt_001_p1s9a4).
nodetype(node7_5, complex).         const(complex).
subfunctor(node7_5, basic).         const(basic).
t_lemma(node7_5, misto).         const(misto).
%%%%%%%% node7_6 %%%%%%%%%%%%%%%%%%%
node(node7_6).
deepord(node7_6, x3_1).         const(x3_1).
a_ref_type(node7_6, tree).         const(tree).
a_afun(node7_6, AuxP).         const(AuxP).
m_form(node7_6, v).         const(v).
m_lemma(node7_6, v_1).         const(v_1).
m_tag(node7_6, RR__6__________).         const(RR__6__________).
w_token(node7_6, v).         const(v).
a_ord(node7_6, 2).         const(2).
a_parent_id(node7_6, a_plzensky70827_txt_001_p1s9W1).         const(a_plzensky70827_txt_001_p1s9W1).
hide(node7_6, hide).         const(hide).
%%%%%%%% node7_7 %%%%%%%%%%%%%%%%%%%
node(node7_7).
deepord(node7_7, x3_2).         const(x3_2).
a_ref_type(node7_7, tree).         const(tree).
a_afun(node7_7, Atr).         const(Atr).
m_form(node7_7, miste).         const(miste).
m_lemma(node7_7, misto_1___fyzicke_umisteni_).         const(misto_1___fyzicke_umisteni_).
m_tag(node7_7, NNNS6_____A____).         const(NNNS6_____A____).
w_token(node7_7, miste).         const(miste).
a_ord(node7_7, 3).         const(3).
a_parent_id(node7_7, a_plzensky70827_txt_001_p1s9W2).         const(a_plzensky70827_txt_001_p1s9W2).
hide(node7_7, hide).         const(hide).
%%%%%%%% node7_8 %%%%%%%%%%%%%%%%%%%
node(node7_8).
deepord(node7_8, x4_1).         const(x4_1).
a_ref_type(node7_8, tree).         const(tree).
a_afun(node7_8, Pred).         const(Pred).
m_form(node7_8, je).         const(je).
m_lemma(node7_8, byt).         const(byt).
m_tag(node7_8, VB_S___3P_AA___).         const(VB_S___3P_AA___).
w_token(node7_8, je).         const(je).
a_ord(node7_8, 4).         const(4).
a_parent_id(node7_8, a_plzensky70827_txt_001_p1s9).         const(a_plzensky70827_txt_001_p1s9).
hide(node7_8, hide).         const(hide).
%%%%%%%% node7_9 %%%%%%%%%%%%%%%%%%%
node(node7_9).
deepord(node7_9, x4_2).         const(x4_2).
a_ref_type(node7_9, tree).         const(tree).
a_afun(node7_9, Pnom).         const(Pnom).
m_form(node7_9, uzavrena).         const(uzavrena).
m_lemma(node7_9, uzavrit).         const(uzavrit).
m_tag(node7_9, VsQW___XX_AP___).         const(VsQW___XX_AP___).
w_token(node7_9, uzavrena).         const(uzavrena).
w_no_space_after(node7_9, 1).         const(1).
a_ord(node7_9, 5).         const(5).
a_parent_id(node7_9, a_plzensky70827_txt_001_p1s9W4).         const(a_plzensky70827_txt_001_p1s9W4).
hide(node7_9, hide).         const(hide).
edge(node7_0, node7_1).
edge(node7_1, node7_2).
edge(node7_1, node7_3).
edge(node7_3, node7_4).
edge(node7_3, node7_5).
edge(node7_5, node7_6).
edge(node7_5, node7_7).
edge(node7_1, node7_8).
edge(node7_1, node7_9).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Dle Policie CR, ktera se pred jedenactou hodinou rozhodla na misto povolat soudniho znalce, by silnice mohla byt uzavrena jeste ctyri hodiny. 
tree_root(node8_0).
:- valid_root(node8_0).
%%%%%%%% node8_0 %%%%%%%%%%%%%%%%%%%
node(node8_0).
atree_rf(node8_0, a_a_plzensky70827_txt_001_p1s10).         const(a_a_plzensky70827_txt_001_p1s10).
deepord(node8_0, 0).         const(0).
id(node8_0, T_plzensky70827_txt_001_p1s10).         const(T_plzensky70827_txt_001_p1s10).
nodetype(node8_0, root).         const(root).
sentence(node8_0, Dle_Policie_CR__ktera_se_pred_jedenactou_hodinou_rozhodla_na_misto_povolat_soudniho_znalce__by_silnice_mohla_byt_uzavrena_jeste_ctyri_hodiny__).         const(Dle_Policie_CR__ktera_se_pred_jedenactou_hodinou_rozhodla_na_misto_povolat_soudniho_znalce__by_silnice_mohla_byt_uzavrena_jeste_ctyri_hodiny__).
%%%%%%%% node8_1 %%%%%%%%%%%%%%%%%%%
node(node8_1).
deepord(node8_1, 14).         const(14).
functor(node8_1, PRED).         const(PRED).
gram_sempos(node8_1, v).         const(v).
id(node8_1, T_plzensky70827_txt_001_p1s10a20).         const(T_plzensky70827_txt_001_p1s10a20).
nodetype(node8_1, complex).         const(complex).
t_lemma(node8_1, uzavrit).         const(uzavrit).
val_frame_rf(node8_1, v_v_w7476f2).         const(v_v_w7476f2).
%%%%%%%% node8_2 %%%%%%%%%%%%%%%%%%%
node(node8_2).
deepord(node8_2, 1).         const(1).
functor(node8_2, ACT).         const(ACT).
id(node8_2, T_plzensky70827_txt_001_p1s10a25).         const(T_plzensky70827_txt_001_p1s10a25).
is_generated(node8_2, 1).         const(1).
nodetype(node8_2, qcomplex).         const(qcomplex).
t_lemma(node8_2, x_Gen).         const(x_Gen).
%%%%%%%% node8_3 %%%%%%%%%%%%%%%%%%%
node(node8_3).
deepord(node8_3, 2).         const(2).
functor(node8_3, CRIT).         const(CRIT).
gram_sempos(node8_3, n_denot).         const(n_denot).
id(node8_3, T_plzensky70827_txt_001_p1s10a3).         const(T_plzensky70827_txt_001_p1s10a3).
nodetype(node8_3, complex).         const(complex).
t_lemma(node8_3, policie).         const(policie).
%%%%%%%% node8_4 %%%%%%%%%%%%%%%%%%%
node(node8_4).
deepord(node8_4, x2_1).         const(x2_1).
a_ref_type(node8_4, tree).         const(tree).
a_afun(node8_4, AuxP).         const(AuxP).
m_form(node8_4, Dle).         const(Dle).
m_lemma(node8_4, dle).         const(dle).
m_tag(node8_4, RR__2__________).         const(RR__2__________).
w_token(node8_4, Dle).         const(Dle).
a_ord(node8_4, 1).         const(1).
a_parent_id(node8_4, a_plzensky70827_txt_001_p1s10W19).         const(a_plzensky70827_txt_001_p1s10W19).
hide(node8_4, hide).         const(hide).
%%%%%%%% node8_5 %%%%%%%%%%%%%%%%%%%
node(node8_5).
deepord(node8_5, x2_2).         const(x2_2).
a_ref_type(node8_5, tree).         const(tree).
a_afun(node8_5, Adv).         const(Adv).
m_form(node8_5, Policie).         const(Policie).
m_lemma(node8_5, policie).         const(policie).
m_tag(node8_5, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node8_5, Policie).         const(Policie).
a_ord(node8_5, 2).         const(2).
a_parent_id(node8_5, a_plzensky70827_txt_001_p1s10W1).         const(a_plzensky70827_txt_001_p1s10W1).
hide(node8_5, hide).         const(hide).
%%%%%%%% node8_6 %%%%%%%%%%%%%%%%%%%
node(node8_6).
deepord(node8_6, 3).         const(3).
functor(node8_6, APP).         const(APP).
gram_sempos(node8_6, n_denot).         const(n_denot).
id(node8_6, T_plzensky70827_txt_001_p1s10a4).         const(T_plzensky70827_txt_001_p1s10a4).
nodetype(node8_6, complex).         const(complex).
t_lemma(node8_6, CR).         const(CR).
%%%%%%%% node8_7 %%%%%%%%%%%%%%%%%%%
node(node8_7).
deepord(node8_7, x3_1).         const(x3_1).
a_ref_type(node8_7, tree).         const(tree).
a_afun(node8_7, Atr).         const(Atr).
m_form(node8_7, CR).         const(CR).
m_lemma(node8_7, CR_1__B__G___Ceska_republika_).         const(CR_1__B__G___Ceska_republika_).
m_tag(node8_7, NNFXX_____A___8).         const(NNFXX_____A___8).
w_token(node8_7, CR).         const(CR).
w_no_space_after(node8_7, 1).         const(1).
a_ord(node8_7, 3).         const(3).
a_parent_id(node8_7, a_plzensky70827_txt_001_p1s10W2).         const(a_plzensky70827_txt_001_p1s10W2).
hide(node8_7, hide).         const(hide).
%%%%%%%% node8_8 %%%%%%%%%%%%%%%%%%%
node(node8_8).
deepord(node8_8, 7).         const(7).
functor(node8_8, RSTR).         const(RSTR).
gram_sempos(node8_8, v).         const(v).
id(node8_8, T_plzensky70827_txt_001_p1s10a5).         const(T_plzensky70827_txt_001_p1s10a5).
nodetype(node8_8, complex).         const(complex).
t_lemma(node8_8, rozhodnout_se).         const(rozhodnout_se).
val_frame_rf(node8_8, v_v_w5635f1).         const(v_v_w5635f1).
%%%%%%%% node8_9 %%%%%%%%%%%%%%%%%%%
node(node8_9).
deepord(node8_9, 4).         const(4).
functor(node8_9, ACT).         const(ACT).
gram_sempos(node8_9, n_pron_indef).         const(n_pron_indef).
id(node8_9, T_plzensky70827_txt_001_p1s10a7).         const(T_plzensky70827_txt_001_p1s10a7).
nodetype(node8_9, complex).         const(complex).
t_lemma(node8_9, ktery).         const(ktery).
%%%%%%%% node8_10 %%%%%%%%%%%%%%%%%%%
node(node8_10).
deepord(node8_10, x4_1).         const(x4_1).
a_ref_type(node8_10, tree).         const(tree).
a_afun(node8_10, Sb).         const(Sb).
m_form(node8_10, ktera).         const(ktera).
m_lemma(node8_10, ktery).         const(ktery).
m_tag(node8_10, P4FS1__________).         const(P4FS1__________).
w_token(node8_10, ktera).         const(ktera).
a_ord(node8_10, 5).         const(5).
a_parent_id(node8_10, a_plzensky70827_txt_001_p1s10W10).         const(a_plzensky70827_txt_001_p1s10W10).
hide(node8_10, hide).         const(hide).
%%%%%%%% node8_11 %%%%%%%%%%%%%%%%%%%
node(node8_11).
deepord(node8_11, 6).         const(6).
functor(node8_11, TWHEN).         const(TWHEN).
gram_sempos(node8_11, n_denot).         const(n_denot).
id(node8_11, T_plzensky70827_txt_001_p1s10a10).         const(T_plzensky70827_txt_001_p1s10a10).
nodetype(node8_11, complex).         const(complex).
subfunctor(node8_11, before).         const(before).
t_lemma(node8_11, hodina).         const(hodina).
%%%%%%%% node8_12 %%%%%%%%%%%%%%%%%%%
node(node8_12).
deepord(node8_12, 5).         const(5).
functor(node8_12, RSTR).         const(RSTR).
gram_sempos(node8_12, adj_quant_def).         const(adj_quant_def).
id(node8_12, T_plzensky70827_txt_001_p1s10a11).         const(T_plzensky70827_txt_001_p1s10a11).
nodetype(node8_12, complex).         const(complex).
t_lemma(node8_12, jedenact).         const(jedenact).
%%%%%%%% node8_13 %%%%%%%%%%%%%%%%%%%
node(node8_13).
deepord(node8_13, x5_1).         const(x5_1).
a_ref_type(node8_13, tree).         const(tree).
a_afun(node8_13, Atr).         const(Atr).
m_form(node8_13, jedenactou).         const(jedenactou).
m_lemma(node8_13, jedenacty).         const(jedenacty).
m_tag(node8_13, CrFS7__________).         const(CrFS7__________).
w_token(node8_13, jedenactou).         const(jedenactou).
a_ord(node8_13, 8).         const(8).
a_parent_id(node8_13, a_plzensky70827_txt_001_p1s10W9).         const(a_plzensky70827_txt_001_p1s10W9).
hide(node8_13, hide).         const(hide).
%%%%%%%% node8_14 %%%%%%%%%%%%%%%%%%%
node(node8_14).
deepord(node8_14, x6_1).         const(x6_1).
a_ref_type(node8_14, tree).         const(tree).
a_afun(node8_14, AuxP).         const(AuxP).
m_form(node8_14, pred).         const(pred).
m_lemma(node8_14, pred_1).         const(pred_1).
m_tag(node8_14, RR__7__________).         const(RR__7__________).
w_token(node8_14, pred).         const(pred).
a_ord(node8_14, 7).         const(7).
a_parent_id(node8_14, a_plzensky70827_txt_001_p1s10W10).         const(a_plzensky70827_txt_001_p1s10W10).
hide(node8_14, hide).         const(hide).
%%%%%%%% node8_15 %%%%%%%%%%%%%%%%%%%
node(node8_15).
deepord(node8_15, x6_2).         const(x6_2).
a_ref_type(node8_15, tree).         const(tree).
a_afun(node8_15, Adv).         const(Adv).
m_form(node8_15, hodinou).         const(hodinou).
m_lemma(node8_15, hodina___jednotka_casu_).         const(hodina___jednotka_casu_).
m_tag(node8_15, NNFS7_____A____).         const(NNFS7_____A____).
w_token(node8_15, hodinou).         const(hodinou).
a_ord(node8_15, 9).         const(9).
a_parent_id(node8_15, a_plzensky70827_txt_001_p1s10W7).         const(a_plzensky70827_txt_001_p1s10W7).
hide(node8_15, hide).         const(hide).
%%%%%%%% node8_16 %%%%%%%%%%%%%%%%%%%
node(node8_16).
deepord(node8_16, x7_1).         const(x7_1).
a_ref_type(node8_16, tree).         const(tree).
a_afun(node8_16, AuxT).         const(AuxT).
m_form(node8_16, se).         const(se).
m_lemma(node8_16, se___zvr__zajmeno_castice_).         const(se___zvr__zajmeno_castice_).
m_tag(node8_16, P7_X4__________).         const(P7_X4__________).
w_token(node8_16, se).         const(se).
a_ord(node8_16, 6).         const(6).
a_parent_id(node8_16, a_plzensky70827_txt_001_p1s10W10).         const(a_plzensky70827_txt_001_p1s10W10).
hide(node8_16, hide).         const(hide).
%%%%%%%% node8_17 %%%%%%%%%%%%%%%%%%%
node(node8_17).
deepord(node8_17, x7_2).         const(x7_2).
a_ref_type(node8_17, tree).         const(tree).
a_afun(node8_17, Atr).         const(Atr).
m_form(node8_17, rozhodla).         const(rozhodla).
m_lemma(node8_17, rozhodnout__W).         const(rozhodnout__W).
m_tag(node8_17, VpQW___XR_AA__1).         const(VpQW___XR_AA__1).
w_token(node8_17, rozhodla).         const(rozhodla).
a_ord(node8_17, 10).         const(10).
a_parent_id(node8_17, a_plzensky70827_txt_001_p1s10W2).         const(a_plzensky70827_txt_001_p1s10W2).
hide(node8_17, hide).         const(hide).
%%%%%%%% node8_18 %%%%%%%%%%%%%%%%%%%
node(node8_18).
deepord(node8_18, 10).         const(10).
functor(node8_18, PAT).         const(PAT).
gram_sempos(node8_18, v).         const(v).
id(node8_18, T_plzensky70827_txt_001_p1s10a12).         const(T_plzensky70827_txt_001_p1s10a12).
nodetype(node8_18, complex).         const(complex).
t_lemma(node8_18, povolat).         const(povolat).
val_frame_rf(node8_18, v_v_w4163f1).         const(v_v_w4163f1).
%%%%%%%% node8_19 %%%%%%%%%%%%%%%%%%%
node(node8_19).
deepord(node8_19, 8).         const(8).
functor(node8_19, ACT).         const(ACT).
id(node8_19, T_plzensky70827_txt_001_p1s10a26).         const(T_plzensky70827_txt_001_p1s10a26).
is_generated(node8_19, 1).         const(1).
nodetype(node8_19, qcomplex).         const(qcomplex).
t_lemma(node8_19, x_Cor).         const(x_Cor).
%%%%%%%% node8_20 %%%%%%%%%%%%%%%%%%%
node(node8_20).
deepord(node8_20, 9).         const(9).
functor(node8_20, DIR3).         const(DIR3).
gram_sempos(node8_20, n_denot).         const(n_denot).
id(node8_20, T_plzensky70827_txt_001_p1s10a14).         const(T_plzensky70827_txt_001_p1s10a14).
nodetype(node8_20, complex).         const(complex).
subfunctor(node8_20, basic).         const(basic).
t_lemma(node8_20, misto).         const(misto).
%%%%%%%% node8_21 %%%%%%%%%%%%%%%%%%%
node(node8_21).
deepord(node8_21, x9_1).         const(x9_1).
a_ref_type(node8_21, tree).         const(tree).
a_afun(node8_21, AuxP).         const(AuxP).
m_form(node8_21, na).         const(na).
m_lemma(node8_21, na_1).         const(na_1).
m_tag(node8_21, RR__4__________).         const(RR__4__________).
w_token(node8_21, na).         const(na).
a_ord(node8_21, 11).         const(11).
a_parent_id(node8_21, a_plzensky70827_txt_001_p1s10W13).         const(a_plzensky70827_txt_001_p1s10W13).
hide(node8_21, hide).         const(hide).
%%%%%%%% node8_22 %%%%%%%%%%%%%%%%%%%
node(node8_22).
deepord(node8_22, x9_2).         const(x9_2).
a_ref_type(node8_22, tree).         const(tree).
a_afun(node8_22, Adv).         const(Adv).
m_form(node8_22, misto).         const(misto).
m_lemma(node8_22, misto_1___fyzicke_umisteni_).         const(misto_1___fyzicke_umisteni_).
m_tag(node8_22, NNNS4_____A____).         const(NNNS4_____A____).
w_token(node8_22, misto).         const(misto).
a_ord(node8_22, 12).         const(12).
a_parent_id(node8_22, a_plzensky70827_txt_001_p1s10W11).         const(a_plzensky70827_txt_001_p1s10W11).
hide(node8_22, hide).         const(hide).
%%%%%%%% node8_23 %%%%%%%%%%%%%%%%%%%
node(node8_23).
deepord(node8_23, x10_1).         const(x10_1).
a_ref_type(node8_23, tree).         const(tree).
a_afun(node8_23, Obj).         const(Obj).
m_form(node8_23, povolat).         const(povolat).
m_lemma(node8_23, povolat__W).         const(povolat__W).
m_tag(node8_23, Vf________A____).         const(Vf________A____).
w_token(node8_23, povolat).         const(povolat).
a_ord(node8_23, 13).         const(13).
a_parent_id(node8_23, a_plzensky70827_txt_001_p1s10W10).         const(a_plzensky70827_txt_001_p1s10W10).
hide(node8_23, hide).         const(hide).
%%%%%%%% node8_24 %%%%%%%%%%%%%%%%%%%
node(node8_24).
deepord(node8_24, 12).         const(12).
functor(node8_24, PAT).         const(PAT).
gram_sempos(node8_24, n_denot).         const(n_denot).
id(node8_24, T_plzensky70827_txt_001_p1s10a15).         const(T_plzensky70827_txt_001_p1s10a15).
nodetype(node8_24, complex).         const(complex).
t_lemma(node8_24, znalec).         const(znalec).
%%%%%%%% node8_25 %%%%%%%%%%%%%%%%%%%
node(node8_25).
deepord(node8_25, 11).         const(11).
functor(node8_25, RSTR).         const(RSTR).
gram_sempos(node8_25, adj_denot).         const(adj_denot).
id(node8_25, T_plzensky70827_txt_001_p1s10a16).         const(T_plzensky70827_txt_001_p1s10a16).
nodetype(node8_25, complex).         const(complex).
t_lemma(node8_25, soudni).         const(soudni).
%%%%%%%% node8_26 %%%%%%%%%%%%%%%%%%%
node(node8_26).
deepord(node8_26, x11_1).         const(x11_1).
a_ref_type(node8_26, tree).         const(tree).
a_afun(node8_26, Atr).         const(Atr).
m_form(node8_26, soudniho).         const(soudniho).
m_lemma(node8_26, soudni).         const(soudni).
m_tag(node8_26, AAMS4____1A____).         const(AAMS4____1A____).
w_token(node8_26, soudniho).         const(soudniho).
a_ord(node8_26, 14).         const(14).
a_parent_id(node8_26, a_plzensky70827_txt_001_p1s10W15).         const(a_plzensky70827_txt_001_p1s10W15).
hide(node8_26, hide).         const(hide).
%%%%%%%% node8_27 %%%%%%%%%%%%%%%%%%%
node(node8_27).
deepord(node8_27, x12_1).         const(x12_1).
a_ref_type(node8_27, tree).         const(tree).
a_afun(node8_27, Obj).         const(Obj).
m_form(node8_27, znalce).         const(znalce).
m_lemma(node8_27, znalec).         const(znalec).
m_tag(node8_27, NNMS4_____A____).         const(NNMS4_____A____).
w_token(node8_27, znalce).         const(znalce).
w_no_space_after(node8_27, 1).         const(1).
a_ord(node8_27, 15).         const(15).
a_parent_id(node8_27, a_plzensky70827_txt_001_p1s10W13).         const(a_plzensky70827_txt_001_p1s10W13).
hide(node8_27, hide).         const(hide).
%%%%%%%% node8_28 %%%%%%%%%%%%%%%%%%%
node(node8_28).
deepord(node8_28, 13).         const(13).
functor(node8_28, PAT).         const(PAT).
gram_sempos(node8_28, n_denot).         const(n_denot).
id(node8_28, T_plzensky70827_txt_001_p1s10a19).         const(T_plzensky70827_txt_001_p1s10a19).
nodetype(node8_28, complex).         const(complex).
t_lemma(node8_28, silnice).         const(silnice).
%%%%%%%% node8_29 %%%%%%%%%%%%%%%%%%%
node(node8_29).
deepord(node8_29, x13_1).         const(x13_1).
a_ref_type(node8_29, tree).         const(tree).
a_afun(node8_29, Obj).         const(Obj).
m_form(node8_29, silnice).         const(silnice).
m_lemma(node8_29, silnice).         const(silnice).
m_tag(node8_29, NNFP4_____A____).         const(NNFP4_____A____).
w_token(node8_29, silnice).         const(silnice).
a_ord(node8_29, 18).         const(18).
a_parent_id(node8_29, a_plzensky70827_txt_001_p1s10W19).         const(a_plzensky70827_txt_001_p1s10W19).
hide(node8_29, hide).         const(hide).
%%%%%%%% node8_30 %%%%%%%%%%%%%%%%%%%
node(node8_30).
deepord(node8_30, x14_1).         const(x14_1).
a_ref_type(node8_30, tree).         const(tree).
a_afun(node8_30, AuxV).         const(AuxV).
m_form(node8_30, by).         const(by).
m_lemma(node8_30, byt).         const(byt).
m_tag(node8_30, Vc_____________).         const(Vc_____________).
w_token(node8_30, by).         const(by).
a_ord(node8_30, 17).         const(17).
a_parent_id(node8_30, a_plzensky70827_txt_001_p1s10W19).         const(a_plzensky70827_txt_001_p1s10W19).
hide(node8_30, hide).         const(hide).
%%%%%%%% node8_31 %%%%%%%%%%%%%%%%%%%
node(node8_31).
deepord(node8_31, x14_2).         const(x14_2).
a_ref_type(node8_31, tree).         const(tree).
a_afun(node8_31, Pred).         const(Pred).
m_form(node8_31, mohla).         const(mohla).
m_lemma(node8_31, moci___mit_moznost__neco_delat__).         const(moci___mit_moznost__neco_delat__).
m_tag(node8_31, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node8_31, mohla).         const(mohla).
a_ord(node8_31, 19).         const(19).
a_parent_id(node8_31, a_plzensky70827_txt_001_p1s10).         const(a_plzensky70827_txt_001_p1s10).
hide(node8_31, hide).         const(hide).
%%%%%%%% node8_32 %%%%%%%%%%%%%%%%%%%
node(node8_32).
deepord(node8_32, x14_3).         const(x14_3).
a_ref_type(node8_32, tree).         const(tree).
a_afun(node8_32, AuxV).         const(AuxV).
m_form(node8_32, byt).         const(byt).
m_lemma(node8_32, byt).         const(byt).
m_tag(node8_32, Vf________A____).         const(Vf________A____).
w_token(node8_32, byt).         const(byt).
a_ord(node8_32, 20).         const(20).
a_parent_id(node8_32, a_plzensky70827_txt_001_p1s10W21).         const(a_plzensky70827_txt_001_p1s10W21).
hide(node8_32, hide).         const(hide).
%%%%%%%% node8_33 %%%%%%%%%%%%%%%%%%%
node(node8_33).
deepord(node8_33, x14_4).         const(x14_4).
a_ref_type(node8_33, tree).         const(tree).
a_afun(node8_33, Obj).         const(Obj).
m_form(node8_33, uzavrena).         const(uzavrena).
m_lemma(node8_33, uzavrit).         const(uzavrit).
m_tag(node8_33, VsQW___XX_AP___).         const(VsQW___XX_AP___).
w_token(node8_33, uzavrena).         const(uzavrena).
a_ord(node8_33, 21).         const(21).
a_parent_id(node8_33, a_plzensky70827_txt_001_p1s10W19).         const(a_plzensky70827_txt_001_p1s10W19).
hide(node8_33, hide).         const(hide).
%%%%%%%% node8_34 %%%%%%%%%%%%%%%%%%%
node(node8_34).
deepord(node8_34, 17).         const(17).
functor(node8_34, PAT).         const(PAT).
gram_sempos(node8_34, n_denot).         const(n_denot).
id(node8_34, T_plzensky70827_txt_001_p1s10a22).         const(T_plzensky70827_txt_001_p1s10a22).
nodetype(node8_34, complex).         const(complex).
t_lemma(node8_34, hodina).         const(hodina).
%%%%%%%% node8_35 %%%%%%%%%%%%%%%%%%%
node(node8_35).
deepord(node8_35, 15).         const(15).
functor(node8_35, RHEM).         const(RHEM).
id(node8_35, T_plzensky70827_txt_001_p1s10a23).         const(T_plzensky70827_txt_001_p1s10a23).
nodetype(node8_35, atom).         const(atom).
t_lemma(node8_35, jeste).         const(jeste).
%%%%%%%% node8_36 %%%%%%%%%%%%%%%%%%%
node(node8_36).
deepord(node8_36, x15_1).         const(x15_1).
a_ref_type(node8_36, tree).         const(tree).
a_afun(node8_36, AuxZ).         const(AuxZ).
m_form(node8_36, jeste).         const(jeste).
m_lemma(node8_36, jeste).         const(jeste).
m_tag(node8_36, Db_____________).         const(Db_____________).
w_token(node8_36, jeste).         const(jeste).
a_ord(node8_36, 22).         const(22).
a_parent_id(node8_36, a_plzensky70827_txt_001_p1s10W24).         const(a_plzensky70827_txt_001_p1s10W24).
hide(node8_36, hide).         const(hide).
%%%%%%%% node8_37 %%%%%%%%%%%%%%%%%%%
node(node8_37).
deepord(node8_37, 16).         const(16).
functor(node8_37, RSTR).         const(RSTR).
gram_sempos(node8_37, adj_quant_def).         const(adj_quant_def).
id(node8_37, T_plzensky70827_txt_001_p1s10a24).         const(T_plzensky70827_txt_001_p1s10a24).
nodetype(node8_37, complex).         const(complex).
t_lemma(node8_37, ctyri).         const(ctyri).
%%%%%%%% node8_38 %%%%%%%%%%%%%%%%%%%
node(node8_38).
deepord(node8_38, x16_1).         const(x16_1).
a_ref_type(node8_38, tree).         const(tree).
a_afun(node8_38, Atr).         const(Atr).
m_form(node8_38, ctyri).         const(ctyri).
m_lemma(node8_38, ctyri_4).         const(ctyri_4).
m_tag(node8_38, ClXP1__________).         const(ClXP1__________).
w_token(node8_38, ctyri).         const(ctyri).
a_ord(node8_38, 23).         const(23).
a_parent_id(node8_38, a_plzensky70827_txt_001_p1s10W24).         const(a_plzensky70827_txt_001_p1s10W24).
hide(node8_38, hide).         const(hide).
%%%%%%%% node8_39 %%%%%%%%%%%%%%%%%%%
node(node8_39).
deepord(node8_39, x17_1).         const(x17_1).
a_ref_type(node8_39, tree).         const(tree).
a_afun(node8_39, Sb).         const(Sb).
m_form(node8_39, hodiny).         const(hodiny).
m_lemma(node8_39, hodina___jednotka_casu_).         const(hodina___jednotka_casu_).
m_tag(node8_39, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node8_39, hodiny).         const(hodiny).
w_no_space_after(node8_39, 1).         const(1).
a_ord(node8_39, 24).         const(24).
a_parent_id(node8_39, a_plzensky70827_txt_001_p1s10W21).         const(a_plzensky70827_txt_001_p1s10W21).
hide(node8_39, hide).         const(hide).
edge(node8_0, node8_1).
edge(node8_1, node8_2).
edge(node8_1, node8_3).
edge(node8_3, node8_4).
edge(node8_3, node8_5).
edge(node8_3, node8_6).
edge(node8_6, node8_7).
edge(node8_3, node8_8).
edge(node8_8, node8_9).
edge(node8_9, node8_10).
edge(node8_8, node8_11).
edge(node8_11, node8_12).
edge(node8_12, node8_13).
edge(node8_11, node8_14).
edge(node8_11, node8_15).
edge(node8_8, node8_16).
edge(node8_8, node8_17).
edge(node8_8, node8_18).
edge(node8_18, node8_19).
edge(node8_18, node8_20).
edge(node8_20, node8_21).
edge(node8_20, node8_22).
edge(node8_18, node8_23).
edge(node8_18, node8_24).
edge(node8_24, node8_25).
edge(node8_25, node8_26).
edge(node8_24, node8_27).
edge(node8_1, node8_28).
edge(node8_28, node8_29).
edge(node8_1, node8_30).
edge(node8_1, node8_31).
edge(node8_1, node8_32).
edge(node8_1, node8_33).
edge(node8_1, node8_34).
edge(node8_34, node8_35).
edge(node8_35, node8_36).
edge(node8_34, node8_37).
edge(node8_37, node8_38).
edge(node8_34, node8_39).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Hasici se po domluve s PCR vratili na zakladnu a k udalosti se vrati po ukonceni prace Policie CR. 
tree_root(node9_0).
:- valid_root(node9_0).
%%%%%%%% node9_0 %%%%%%%%%%%%%%%%%%%
node(node9_0).
atree_rf(node9_0, a_a_plzensky70827_txt_001_p1s11).         const(a_a_plzensky70827_txt_001_p1s11).
deepord(node9_0, 0).         const(0).
id(node9_0, T_plzensky70827_txt_001_p1s11).         const(T_plzensky70827_txt_001_p1s11).
nodetype(node9_0, root).         const(root).
sentence(node9_0, Hasici_se_po_domluve_s_PCR_vratili_na_zakladnu_a_k_udalosti_se_vrati_po_ukonceni_prace_Policie_CR__).         const(Hasici_se_po_domluve_s_PCR_vratili_na_zakladnu_a_k_udalosti_se_vrati_po_ukonceni_prace_Policie_CR__).
%%%%%%%% node9_1 %%%%%%%%%%%%%%%%%%%
node(node9_1).
deepord(node9_1, 6).         const(6).
functor(node9_1, CONJ).         const(CONJ).
id(node9_1, T_plzensky70827_txt_001_p1s11a1).         const(T_plzensky70827_txt_001_p1s11a1).
nodetype(node9_1, coap).         const(coap).
t_lemma(node9_1, a).         const(a).
%%%%%%%% node9_2 %%%%%%%%%%%%%%%%%%%
node(node9_2).
deepord(node9_2, 1).         const(1).
functor(node9_2, ACT).         const(ACT).
gram_sempos(node9_2, n_denot).         const(n_denot).
id(node9_2, T_plzensky70827_txt_001_p1s11a2).         const(T_plzensky70827_txt_001_p1s11a2).
nodetype(node9_2, complex).         const(complex).
t_lemma(node9_2, hasic).         const(hasic).
%%%%%%%% node9_3 %%%%%%%%%%%%%%%%%%%
node(node9_3).
deepord(node9_3, x1_1).         const(x1_1).
a_ref_type(node9_3, tree).         const(tree).
a_afun(node9_3, Sb).         const(Sb).
m_form(node9_3, Hasici).         const(Hasici).
m_lemma(node9_3, hasic).         const(hasic).
m_tag(node9_3, NNMP1_____A____).         const(NNMP1_____A____).
w_token(node9_3, Hasici).         const(Hasici).
a_ord(node9_3, 1).         const(1).
a_parent_id(node9_3, a_plzensky70827_txt_001_p1s11W10).         const(a_plzensky70827_txt_001_p1s11W10).
hide(node9_3, hide).         const(hide).
%%%%%%%% node9_4 %%%%%%%%%%%%%%%%%%%
node(node9_4).
deepord(node9_4, 4).         const(4).
functor(node9_4, PRED).         const(PRED).
gram_sempos(node9_4, v).         const(v).
id(node9_4, T_plzensky70827_txt_001_p1s11a3).         const(T_plzensky70827_txt_001_p1s11a3).
is_member(node9_4, 1).         const(1).
nodetype(node9_4, complex).         const(complex).
t_lemma(node9_4, vratit_se).         const(vratit_se).
val_frame_rf(node9_4, v_v_w7706f1).         const(v_v_w7706f1).
%%%%%%%% node9_5 %%%%%%%%%%%%%%%%%%%
node(node9_5).
deepord(node9_5, 2).         const(2).
functor(node9_5, TWHEN).         const(TWHEN).
gram_sempos(node9_5, n_denot).         const(n_denot).
id(node9_5, T_plzensky70827_txt_001_p1s11a6).         const(T_plzensky70827_txt_001_p1s11a6).
nodetype(node9_5, complex).         const(complex).
subfunctor(node9_5, after).         const(after).
t_lemma(node9_5, domluva).         const(domluva).
%%%%%%%% node9_6 %%%%%%%%%%%%%%%%%%%
node(node9_6).
deepord(node9_6, x2_1).         const(x2_1).
a_ref_type(node9_6, tree).         const(tree).
a_afun(node9_6, AuxP).         const(AuxP).
m_form(node9_6, po).         const(po).
m_lemma(node9_6, po_1).         const(po_1).
m_tag(node9_6, RR__6__________).         const(RR__6__________).
w_token(node9_6, po).         const(po).
a_ord(node9_6, 3).         const(3).
a_parent_id(node9_6, a_plzensky70827_txt_001_p1s11W7).         const(a_plzensky70827_txt_001_p1s11W7).
hide(node9_6, hide).         const(hide).
%%%%%%%% node9_7 %%%%%%%%%%%%%%%%%%%
node(node9_7).
deepord(node9_7, x2_2).         const(x2_2).
a_ref_type(node9_7, tree).         const(tree).
a_afun(node9_7, Adv).         const(Adv).
m_form(node9_7, domluve).         const(domluve).
m_lemma(node9_7, domluva).         const(domluva).
m_tag(node9_7, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node9_7, domluve).         const(domluve).
a_ord(node9_7, 4).         const(4).
a_parent_id(node9_7, a_plzensky70827_txt_001_p1s11W3).         const(a_plzensky70827_txt_001_p1s11W3).
hide(node9_7, hide).         const(hide).
%%%%%%%% node9_8 %%%%%%%%%%%%%%%%%%%
node(node9_8).
deepord(node9_8, 3).         const(3).
functor(node9_8, PAT).         const(PAT).
id(node9_8, T_plzensky70827_txt_001_p1s11a8).         const(T_plzensky70827_txt_001_p1s11a8).
nodetype(node9_8, complex).         const(complex).
t_lemma(node9_8, PCR).         const(PCR).
%%%%%%%% node9_9 %%%%%%%%%%%%%%%%%%%
node(node9_9).
deepord(node9_9, x3_1).         const(x3_1).
a_ref_type(node9_9, tree).         const(tree).
a_afun(node9_9, AuxP).         const(AuxP).
m_form(node9_9, s).         const(s).
m_lemma(node9_9, s_1).         const(s_1).
m_tag(node9_9, RR__7__________).         const(RR__7__________).
w_token(node9_9, s).         const(s).
a_ord(node9_9, 5).         const(5).
a_parent_id(node9_9, a_plzensky70827_txt_001_p1s11W4).         const(a_plzensky70827_txt_001_p1s11W4).
hide(node9_9, hide).         const(hide).
%%%%%%%% node9_10 %%%%%%%%%%%%%%%%%%%
node(node9_10).
deepord(node9_10, x3_2).         const(x3_2).
a_ref_type(node9_10, tree).         const(tree).
a_afun(node9_10, Atr).         const(Atr).
m_form(node9_10, PCR).         const(PCR).
m_lemma(node9_10, PCR__B__K___Parlament_Ceske_republiky_).         const(PCR__B__K___Parlament_Ceske_republiky_).
m_tag(node9_10, Xx_____________).         const(Xx_____________).
w_token(node9_10, PCR).         const(PCR).
a_ord(node9_10, 6).         const(6).
a_parent_id(node9_10, a_plzensky70827_txt_001_p1s11W5).         const(a_plzensky70827_txt_001_p1s11W5).
hide(node9_10, hide).         const(hide).
%%%%%%%% node9_11 %%%%%%%%%%%%%%%%%%%
node(node9_11).
deepord(node9_11, x4_1).         const(x4_1).
a_ref_type(node9_11, tree).         const(tree).
a_afun(node9_11, AuxT).         const(AuxT).
m_form(node9_11, se).         const(se).
m_lemma(node9_11, se___zvr__zajmeno_castice_).         const(se___zvr__zajmeno_castice_).
m_tag(node9_11, P7_X4__________).         const(P7_X4__________).
w_token(node9_11, se).         const(se).
a_ord(node9_11, 2).         const(2).
a_parent_id(node9_11, a_plzensky70827_txt_001_p1s11W7).         const(a_plzensky70827_txt_001_p1s11W7).
hide(node9_11, hide).         const(hide).
%%%%%%%% node9_12 %%%%%%%%%%%%%%%%%%%
node(node9_12).
deepord(node9_12, x4_2).         const(x4_2).
a_ref_type(node9_12, tree).         const(tree).
a_afun(node9_12, Pred).         const(Pred).
m_form(node9_12, vratili).         const(vratili).
m_lemma(node9_12, vratit__W).         const(vratit__W).
m_tag(node9_12, VpMP___XR_AA___).         const(VpMP___XR_AA___).
w_token(node9_12, vratili).         const(vratili).
a_ord(node9_12, 7).         const(7).
a_parent_id(node9_12, a_plzensky70827_txt_001_p1s11W10).         const(a_plzensky70827_txt_001_p1s11W10).
hide(node9_12, hide).         const(hide).
%%%%%%%% node9_13 %%%%%%%%%%%%%%%%%%%
node(node9_13).
deepord(node9_13, 5).         const(5).
functor(node9_13, DIR3).         const(DIR3).
gram_sempos(node9_13, n_denot).         const(n_denot).
id(node9_13, T_plzensky70827_txt_001_p1s11a10).         const(T_plzensky70827_txt_001_p1s11a10).
nodetype(node9_13, complex).         const(complex).
subfunctor(node9_13, basic).         const(basic).
t_lemma(node9_13, zakladna).         const(zakladna).
%%%%%%%% node9_14 %%%%%%%%%%%%%%%%%%%
node(node9_14).
deepord(node9_14, x5_1).         const(x5_1).
a_ref_type(node9_14, tree).         const(tree).
a_afun(node9_14, AuxP).         const(AuxP).
m_form(node9_14, na).         const(na).
m_lemma(node9_14, na_1).         const(na_1).
m_tag(node9_14, RR__4__________).         const(RR__4__________).
w_token(node9_14, na).         const(na).
a_ord(node9_14, 8).         const(8).
a_parent_id(node9_14, a_plzensky70827_txt_001_p1s11W7).         const(a_plzensky70827_txt_001_p1s11W7).
hide(node9_14, hide).         const(hide).
%%%%%%%% node9_15 %%%%%%%%%%%%%%%%%%%
node(node9_15).
deepord(node9_15, x5_2).         const(x5_2).
a_ref_type(node9_15, tree).         const(tree).
a_afun(node9_15, Adv).         const(Adv).
m_form(node9_15, zakladnu).         const(zakladnu).
m_lemma(node9_15, zakladna).         const(zakladna).
m_tag(node9_15, NNFS4_____A____).         const(NNFS4_____A____).
w_token(node9_15, zakladnu).         const(zakladnu).
a_ord(node9_15, 9).         const(9).
a_parent_id(node9_15, a_plzensky70827_txt_001_p1s11W8).         const(a_plzensky70827_txt_001_p1s11W8).
hide(node9_15, hide).         const(hide).
%%%%%%%% node9_16 %%%%%%%%%%%%%%%%%%%
node(node9_16).
deepord(node9_16, x6_1).         const(x6_1).
a_ref_type(node9_16, tree).         const(tree).
a_afun(node9_16, Coord).         const(Coord).
m_form(node9_16, a).         const(a).
m_lemma(node9_16, a_1).         const(a_1).
m_tag(node9_16, J______________).         const(J______________).
w_token(node9_16, a).         const(a).
a_ord(node9_16, 10).         const(10).
a_parent_id(node9_16, a_plzensky70827_txt_001_p1s11).         const(a_plzensky70827_txt_001_p1s11).
hide(node9_16, hide).         const(hide).
%%%%%%%% node9_17 %%%%%%%%%%%%%%%%%%%
node(node9_17).
deepord(node9_17, 8).         const(8).
functor(node9_17, PRED).         const(PRED).
gram_sempos(node9_17, v).         const(v).
id(node9_17, T_plzensky70827_txt_001_p1s11a11).         const(T_plzensky70827_txt_001_p1s11a11).
is_member(node9_17, 1).         const(1).
nodetype(node9_17, complex).         const(complex).
t_lemma(node9_17, vratit_se).         const(vratit_se).
val_frame_rf(node9_17, v_v_w7706f1).         const(v_v_w7706f1).
%%%%%%%% node9_18 %%%%%%%%%%%%%%%%%%%
node(node9_18).
deepord(node9_18, 7).         const(7).
functor(node9_18, REG).         const(REG).
gram_sempos(node9_18, n_denot_neg).         const(n_denot_neg).
id(node9_18, T_plzensky70827_txt_001_p1s11a13).         const(T_plzensky70827_txt_001_p1s11a13).
nodetype(node9_18, complex).         const(complex).
t_lemma(node9_18, udalost).         const(udalost).
%%%%%%%% node9_19 %%%%%%%%%%%%%%%%%%%
node(node9_19).
deepord(node9_19, x7_1).         const(x7_1).
a_ref_type(node9_19, tree).         const(tree).
a_afun(node9_19, AuxP).         const(AuxP).
m_form(node9_19, k).         const(k).
m_lemma(node9_19, k_1).         const(k_1).
m_tag(node9_19, RR__3__________).         const(RR__3__________).
w_token(node9_19, k).         const(k).
a_ord(node9_19, 11).         const(11).
a_parent_id(node9_19, a_plzensky70827_txt_001_p1s11W14).         const(a_plzensky70827_txt_001_p1s11W14).
hide(node9_19, hide).         const(hide).
%%%%%%%% node9_20 %%%%%%%%%%%%%%%%%%%
node(node9_20).
deepord(node9_20, x7_2).         const(x7_2).
a_ref_type(node9_20, tree).         const(tree).
a_afun(node9_20, Adv).         const(Adv).
m_form(node9_20, udalosti).         const(udalosti).
m_lemma(node9_20, udalost__a____3y_).         const(udalost__a____3y_).
m_tag(node9_20, NNFS3_____A____).         const(NNFS3_____A____).
w_token(node9_20, udalosti).         const(udalosti).
a_ord(node9_20, 12).         const(12).
a_parent_id(node9_20, a_plzensky70827_txt_001_p1s11W11).         const(a_plzensky70827_txt_001_p1s11W11).
hide(node9_20, hide).         const(hide).
%%%%%%%% node9_21 %%%%%%%%%%%%%%%%%%%
node(node9_21).
deepord(node9_21, x8_1).         const(x8_1).
a_ref_type(node9_21, tree).         const(tree).
a_afun(node9_21, AuxT).         const(AuxT).
m_form(node9_21, se).         const(se).
m_lemma(node9_21, se___zvr__zajmeno_castice_).         const(se___zvr__zajmeno_castice_).
m_tag(node9_21, P7_X4__________).         const(P7_X4__________).
w_token(node9_21, se).         const(se).
a_ord(node9_21, 13).         const(13).
a_parent_id(node9_21, a_plzensky70827_txt_001_p1s11W14).         const(a_plzensky70827_txt_001_p1s11W14).
hide(node9_21, hide).         const(hide).
%%%%%%%% node9_22 %%%%%%%%%%%%%%%%%%%
node(node9_22).
deepord(node9_22, x8_2).         const(x8_2).
a_ref_type(node9_22, tree).         const(tree).
a_afun(node9_22, Pred).         const(Pred).
m_form(node9_22, vrati).         const(vrati).
m_lemma(node9_22, vratit__W).         const(vratit__W).
m_tag(node9_22, VB_S___3P_AA___).         const(VB_S___3P_AA___).
w_token(node9_22, vrati).         const(vrati).
a_ord(node9_22, 14).         const(14).
a_parent_id(node9_22, a_plzensky70827_txt_001_p1s11W10).         const(a_plzensky70827_txt_001_p1s11W10).
hide(node9_22, hide).         const(hide).
%%%%%%%% node9_23 %%%%%%%%%%%%%%%%%%%
node(node9_23).
deepord(node9_23, 10).         const(10).
functor(node9_23, TWHEN).         const(TWHEN).
gram_sempos(node9_23, n_denot_neg).         const(n_denot_neg).
id(node9_23, T_plzensky70827_txt_001_p1s11a16).         const(T_plzensky70827_txt_001_p1s11a16).
nodetype(node9_23, complex).         const(complex).
subfunctor(node9_23, after).         const(after).
t_lemma(node9_23, ukonceni).         const(ukonceni).
val_frame_rf(node9_23, v_v_w7115f1).         const(v_v_w7115f1).
%%%%%%%% node9_24 %%%%%%%%%%%%%%%%%%%
node(node9_24).
deepord(node9_24, 9).         const(9).
functor(node9_24, ACT).         const(ACT).
id(node9_24, T_plzensky70827_txt_001_p1s11a20).         const(T_plzensky70827_txt_001_p1s11a20).
is_generated(node9_24, 1).         const(1).
nodetype(node9_24, qcomplex).         const(qcomplex).
t_lemma(node9_24, x_Gen).         const(x_Gen).
%%%%%%%% node9_25 %%%%%%%%%%%%%%%%%%%
node(node9_25).
deepord(node9_25, x10_1).         const(x10_1).
a_ref_type(node9_25, tree).         const(tree).
a_afun(node9_25, AuxP).         const(AuxP).
m_form(node9_25, po).         const(po).
m_lemma(node9_25, po_1).         const(po_1).
m_tag(node9_25, RR__6__________).         const(RR__6__________).
w_token(node9_25, po).         const(po).
a_ord(node9_25, 15).         const(15).
a_parent_id(node9_25, a_plzensky70827_txt_001_p1s11W14).         const(a_plzensky70827_txt_001_p1s11W14).
hide(node9_25, hide).         const(hide).
%%%%%%%% node9_26 %%%%%%%%%%%%%%%%%%%
node(node9_26).
deepord(node9_26, x10_2).         const(x10_2).
a_ref_type(node9_26, tree).         const(tree).
a_afun(node9_26, Adv).         const(Adv).
m_form(node9_26, ukonceni).         const(ukonceni).
m_lemma(node9_26, ukonceni____3it_).         const(ukonceni____3it_).
m_tag(node9_26, NNNS6_____A____).         const(NNNS6_____A____).
w_token(node9_26, ukonceni).         const(ukonceni).
a_ord(node9_26, 16).         const(16).
a_parent_id(node9_26, a_plzensky70827_txt_001_p1s11W15).         const(a_plzensky70827_txt_001_p1s11W15).
hide(node9_26, hide).         const(hide).
%%%%%%%% node9_27 %%%%%%%%%%%%%%%%%%%
node(node9_27).
deepord(node9_27, 11).         const(11).
functor(node9_27, PAT).         const(PAT).
gram_sempos(node9_27, n_denot).         const(n_denot).
id(node9_27, T_plzensky70827_txt_001_p1s11a17).         const(T_plzensky70827_txt_001_p1s11a17).
nodetype(node9_27, complex).         const(complex).
t_lemma(node9_27, prace).         const(prace).
%%%%%%%% node9_28 %%%%%%%%%%%%%%%%%%%
node(node9_28).
deepord(node9_28, x11_1).         const(x11_1).
a_ref_type(node9_28, tree).         const(tree).
a_afun(node9_28, Atr).         const(Atr).
m_form(node9_28, prace).         const(prace).
m_lemma(node9_28, prace___jako_cinnost_i_misto_).         const(prace___jako_cinnost_i_misto_).
m_tag(node9_28, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node9_28, prace).         const(prace).
a_ord(node9_28, 17).         const(17).
a_parent_id(node9_28, a_plzensky70827_txt_001_p1s11W16).         const(a_plzensky70827_txt_001_p1s11W16).
hide(node9_28, hide).         const(hide).
%%%%%%%% node9_29 %%%%%%%%%%%%%%%%%%%
node(node9_29).
deepord(node9_29, 12).         const(12).
functor(node9_29, ACT).         const(ACT).
gram_sempos(node9_29, n_denot).         const(n_denot).
id(node9_29, T_plzensky70827_txt_001_p1s11a18).         const(T_plzensky70827_txt_001_p1s11a18).
nodetype(node9_29, complex).         const(complex).
t_lemma(node9_29, policie).         const(policie).
%%%%%%%% node9_30 %%%%%%%%%%%%%%%%%%%
node(node9_30).
deepord(node9_30, x12_1).         const(x12_1).
a_ref_type(node9_30, tree).         const(tree).
a_afun(node9_30, Atr).         const(Atr).
m_form(node9_30, Policie).         const(Policie).
m_lemma(node9_30, policie).         const(policie).
m_tag(node9_30, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node9_30, Policie).         const(Policie).
a_ord(node9_30, 18).         const(18).
a_parent_id(node9_30, a_plzensky70827_txt_001_p1s11W17).         const(a_plzensky70827_txt_001_p1s11W17).
hide(node9_30, hide).         const(hide).
%%%%%%%% node9_31 %%%%%%%%%%%%%%%%%%%
node(node9_31).
deepord(node9_31, 13).         const(13).
functor(node9_31, APP).         const(APP).
gram_sempos(node9_31, n_denot).         const(n_denot).
id(node9_31, T_plzensky70827_txt_001_p1s11a19).         const(T_plzensky70827_txt_001_p1s11a19).
nodetype(node9_31, complex).         const(complex).
t_lemma(node9_31, CR).         const(CR).
%%%%%%%% node9_32 %%%%%%%%%%%%%%%%%%%
node(node9_32).
deepord(node9_32, x13_1).         const(x13_1).
a_ref_type(node9_32, tree).         const(tree).
a_afun(node9_32, Atr).         const(Atr).
m_form(node9_32, CR).         const(CR).
m_lemma(node9_32, CR_1__B__G___Ceska_republika_).         const(CR_1__B__G___Ceska_republika_).
m_tag(node9_32, NNFXX_____A___8).         const(NNFXX_____A___8).
w_token(node9_32, CR).         const(CR).
w_no_space_after(node9_32, 1).         const(1).
a_ord(node9_32, 19).         const(19).
a_parent_id(node9_32, a_plzensky70827_txt_001_p1s11W18).         const(a_plzensky70827_txt_001_p1s11W18).
hide(node9_32, hide).         const(hide).
edge(node9_0, node9_1).
edge(node9_1, node9_2).
edge(node9_2, node9_3).
edge(node9_1, node9_4).
edge(node9_4, node9_5).
edge(node9_5, node9_6).
edge(node9_5, node9_7).
edge(node9_5, node9_8).
edge(node9_8, node9_9).
edge(node9_8, node9_10).
edge(node9_4, node9_11).
edge(node9_4, node9_12).
edge(node9_4, node9_13).
edge(node9_13, node9_14).
edge(node9_13, node9_15).
edge(node9_1, node9_16).
edge(node9_1, node9_17).
edge(node9_17, node9_18).
edge(node9_18, node9_19).
edge(node9_18, node9_20).
edge(node9_17, node9_21).
edge(node9_17, node9_22).
edge(node9_17, node9_23).
edge(node9_23, node9_24).
edge(node9_23, node9_25).
edge(node9_23, node9_26).
edge(node9_23, node9_27).
edge(node9_27, node9_28).
edge(node9_27, node9_29).
edge(node9_29, node9_30).
edge(node9_29, node9_31).
edge(node9_31, node9_32).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Ceka je asistence odtahove sluzbe a odstraneni nasledku nehody. 
tree_root(node10_0).
:- valid_root(node10_0).
%%%%%%%% node10_0 %%%%%%%%%%%%%%%%%%%
node(node10_0).
atree_rf(node10_0, a_a_plzensky70827_txt_001_p1s12).         const(a_a_plzensky70827_txt_001_p1s12).
deepord(node10_0, 0).         const(0).
id(node10_0, T_plzensky70827_txt_001_p1s12).         const(T_plzensky70827_txt_001_p1s12).
nodetype(node10_0, root).         const(root).
sentence(node10_0, Ceka_je_asistence_odtahove_sluzbe_a_odstraneni_nasledku_nehody__).         const(Ceka_je_asistence_odtahove_sluzbe_a_odstraneni_nasledku_nehody__).
%%%%%%%% node10_1 %%%%%%%%%%%%%%%%%%%
node(node10_1).
deepord(node10_1, 2).         const(2).
functor(node10_1, PRED).         const(PRED).
gram_sempos(node10_1, v).         const(v).
id(node10_1, T_plzensky70827_txt_001_p1s12a1).         const(T_plzensky70827_txt_001_p1s12a1).
nodetype(node10_1, complex).         const(complex).
t_lemma(node10_1, cekat).         const(cekat).
val_frame_rf(node10_1, v_v_w311f1).         const(v_v_w311f1).
%%%%%%%% node10_2 %%%%%%%%%%%%%%%%%%%
node(node10_2).
deepord(node10_2, 1).         const(1).
functor(node10_2, ACT).         const(ACT).
gram_sempos(node10_2, n_pron_def_pers).         const(n_pron_def_pers).
id(node10_2, T_plzensky70827_txt_001_p1s12a10).         const(T_plzensky70827_txt_001_p1s12a10).
is_generated(node10_2, 1).         const(1).
nodetype(node10_2, complex).         const(complex).
t_lemma(node10_2, x_PersPron).         const(x_PersPron).
%%%%%%%% node10_3 %%%%%%%%%%%%%%%%%%%
node(node10_3).
deepord(node10_3, x2_1).         const(x2_1).
a_ref_type(node10_3, tree).         const(tree).
a_afun(node10_3, Pred).         const(Pred).
m_form(node10_3, Ceka).         const(Ceka).
m_lemma(node10_3, cekat__T).         const(cekat__T).
m_tag(node10_3, VB_S___3P_AA___).         const(VB_S___3P_AA___).
w_token(node10_3, Ceka).         const(Ceka).
a_ord(node10_3, 1).         const(1).
a_parent_id(node10_3, a_plzensky70827_txt_001_p1s12).         const(a_plzensky70827_txt_001_p1s12).
hide(node10_3, hide).         const(hide).
%%%%%%%% node10_4 %%%%%%%%%%%%%%%%%%%
node(node10_4).
deepord(node10_4, 3).         const(3).
functor(node10_4, PAT).         const(PAT).
gram_sempos(node10_4, n_pron_def_pers).         const(n_pron_def_pers).
id(node10_4, T_plzensky70827_txt_001_p1s12a2).         const(T_plzensky70827_txt_001_p1s12a2).
nodetype(node10_4, complex).         const(complex).
t_lemma(node10_4, x_PersPron).         const(x_PersPron).
%%%%%%%% node10_5 %%%%%%%%%%%%%%%%%%%
node(node10_5).
deepord(node10_5, x3_1).         const(x3_1).
a_ref_type(node10_5, tree).         const(tree).
a_afun(node10_5, Obj).         const(Obj).
m_form(node10_5, je).         const(je).
m_lemma(node10_5, on_1___oni_ono_).         const(on_1___oni_ono_).
m_tag(node10_5, PPXP4__3_______).         const(PPXP4__3_______).
w_token(node10_5, je).         const(je).
a_ord(node10_5, 2).         const(2).
a_parent_id(node10_5, a_plzensky70827_txt_001_p1s12W1).         const(a_plzensky70827_txt_001_p1s12W1).
hide(node10_5, hide).         const(hide).
%%%%%%%% node10_6 %%%%%%%%%%%%%%%%%%%
node(node10_6).
deepord(node10_6, 6).         const(6).
functor(node10_6, CONJ).         const(CONJ).
id(node10_6, T_plzensky70827_txt_001_p1s12a3).         const(T_plzensky70827_txt_001_p1s12a3).
nodetype(node10_6, coap).         const(coap).
t_lemma(node10_6, a).         const(a).
%%%%%%%% node10_7 %%%%%%%%%%%%%%%%%%%
node(node10_7).
deepord(node10_7, 4).         const(4).
functor(node10_7, RSTR).         const(RSTR).
gram_sempos(node10_7, n_denot).         const(n_denot).
id(node10_7, T_plzensky70827_txt_001_p1s12a4).         const(T_plzensky70827_txt_001_p1s12a4).
is_member(node10_7, 1).         const(1).
nodetype(node10_7, complex).         const(complex).
t_lemma(node10_7, asistence).         const(asistence).
%%%%%%%% node10_8 %%%%%%%%%%%%%%%%%%%
node(node10_8).
deepord(node10_8, x4_1).         const(x4_1).
a_ref_type(node10_8, tree).         const(tree).
a_afun(node10_8, Obj).         const(Obj).
m_form(node10_8, asistence).         const(asistence).
m_lemma(node10_8, asistence).         const(asistence).
m_tag(node10_8, NNFP4_____A____).         const(NNFP4_____A____).
w_token(node10_8, asistence).         const(asistence).
a_ord(node10_8, 3).         const(3).
a_parent_id(node10_8, a_plzensky70827_txt_001_p1s12W6).         const(a_plzensky70827_txt_001_p1s12W6).
hide(node10_8, hide).         const(hide).
%%%%%%%% node10_9 %%%%%%%%%%%%%%%%%%%
node(node10_9).
deepord(node10_9, 5).         const(5).
functor(node10_9, LOC).         const(LOC).
gram_sempos(node10_9, adj_denot).         const(adj_denot).
id(node10_9, T_plzensky70827_txt_001_p1s12a6).         const(T_plzensky70827_txt_001_p1s12a6).
nodetype(node10_9, complex).         const(complex).
subfunctor(node10_9, basic).         const(basic).
t_lemma(node10_9, odtahovy).         const(odtahovy).
%%%%%%%% node10_10 %%%%%%%%%%%%%%%%%%%
node(node10_10).
deepord(node10_10, x5_1).         const(x5_1).
a_ref_type(node10_10, tree).         const(tree).
a_afun(node10_10, Atr).         const(Atr).
m_form(node10_10, odtahove).         const(odtahove).
m_lemma(node10_10, odtahovy).         const(odtahovy).
m_tag(node10_10, AAFS6____1A____).         const(AAFS6____1A____).
w_token(node10_10, odtahove).         const(odtahove).
a_ord(node10_10, 4).         const(4).
a_parent_id(node10_10, a_plzensky70827_txt_001_p1s12W5).         const(a_plzensky70827_txt_001_p1s12W5).
hide(node10_10, hide).         const(hide).
%%%%%%%% node10_11 %%%%%%%%%%%%%%%%%%%
node(node10_11).
deepord(node10_11, x5_2).         const(x5_2).
a_ref_type(node10_11, tree).         const(tree).
a_afun(node10_11, AuxP).         const(AuxP).
m_form(node10_11, sluzbe).         const(sluzbe).
m_lemma(node10_11, sluzba).         const(sluzba).
m_tag(node10_11, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node10_11, sluzbe).         const(sluzbe).
a_ord(node10_11, 5).         const(5).
a_parent_id(node10_11, a_plzensky70827_txt_001_p1s12W3).         const(a_plzensky70827_txt_001_p1s12W3).
hide(node10_11, hide).         const(hide).
%%%%%%%% node10_12 %%%%%%%%%%%%%%%%%%%
node(node10_12).
deepord(node10_12, x6_1).         const(x6_1).
a_ref_type(node10_12, tree).         const(tree).
a_afun(node10_12, Coord).         const(Coord).
m_form(node10_12, a).         const(a).
m_lemma(node10_12, a_1).         const(a_1).
m_tag(node10_12, J______________).         const(J______________).
w_token(node10_12, a).         const(a).
a_ord(node10_12, 6).         const(6).
a_parent_id(node10_12, a_plzensky70827_txt_001_p1s12W1).         const(a_plzensky70827_txt_001_p1s12W1).
hide(node10_12, hide).         const(hide).
%%%%%%%% node10_13 %%%%%%%%%%%%%%%%%%%
node(node10_13).
deepord(node10_13, 8).         const(8).
functor(node10_13, ACT).         const(ACT).
gram_sempos(node10_13, n_denot_neg).         const(n_denot_neg).
id(node10_13, T_plzensky70827_txt_001_p1s12a7).         const(T_plzensky70827_txt_001_p1s12a7).
is_member(node10_13, 1).         const(1).
nodetype(node10_13, complex).         const(complex).
t_lemma(node10_13, odstraneni).         const(odstraneni).
val_frame_rf(node10_13, v_v_w2904f1).         const(v_v_w2904f1).
%%%%%%%% node10_14 %%%%%%%%%%%%%%%%%%%
node(node10_14).
deepord(node10_14, 7).         const(7).
functor(node10_14, ACT).         const(ACT).
id(node10_14, T_plzensky70827_txt_001_p1s12a11).         const(T_plzensky70827_txt_001_p1s12a11).
is_generated(node10_14, 1).         const(1).
nodetype(node10_14, qcomplex).         const(qcomplex).
t_lemma(node10_14, x_Gen).         const(x_Gen).
%%%%%%%% node10_15 %%%%%%%%%%%%%%%%%%%
node(node10_15).
deepord(node10_15, x8_1).         const(x8_1).
a_ref_type(node10_15, tree).         const(tree).
a_afun(node10_15, Sb).         const(Sb).
m_form(node10_15, odstraneni).         const(odstraneni).
m_lemma(node10_15, odstraneni____3it_).         const(odstraneni____3it_).
m_tag(node10_15, NNNS1_____A____).         const(NNNS1_____A____).
w_token(node10_15, odstraneni).         const(odstraneni).
a_ord(node10_15, 7).         const(7).
a_parent_id(node10_15, a_plzensky70827_txt_001_p1s12W6).         const(a_plzensky70827_txt_001_p1s12W6).
hide(node10_15, hide).         const(hide).
%%%%%%%% node10_16 %%%%%%%%%%%%%%%%%%%
node(node10_16).
deepord(node10_16, 9).         const(9).
functor(node10_16, PAT).         const(PAT).
gram_sempos(node10_16, n_denot).         const(n_denot).
id(node10_16, T_plzensky70827_txt_001_p1s12a8).         const(T_plzensky70827_txt_001_p1s12a8).
nodetype(node10_16, complex).         const(complex).
t_lemma(node10_16, nasledek).         const(nasledek).
%%%%%%%% node10_17 %%%%%%%%%%%%%%%%%%%
node(node10_17).
deepord(node10_17, x9_1).         const(x9_1).
a_ref_type(node10_17, tree).         const(tree).
a_afun(node10_17, Atr).         const(Atr).
m_form(node10_17, nasledku).         const(nasledku).
m_lemma(node10_17, nasledek).         const(nasledek).
m_tag(node10_17, NNIP2_____A____).         const(NNIP2_____A____).
w_token(node10_17, nasledku).         const(nasledku).
a_ord(node10_17, 8).         const(8).
a_parent_id(node10_17, a_plzensky70827_txt_001_p1s12W7).         const(a_plzensky70827_txt_001_p1s12W7).
hide(node10_17, hide).         const(hide).
%%%%%%%% node10_18 %%%%%%%%%%%%%%%%%%%
node(node10_18).
deepord(node10_18, 10).         const(10).
functor(node10_18, APP).         const(APP).
gram_sempos(node10_18, n_denot).         const(n_denot).
id(node10_18, T_plzensky70827_txt_001_p1s12a9).         const(T_plzensky70827_txt_001_p1s12a9).
nodetype(node10_18, complex).         const(complex).
t_lemma(node10_18, nehoda).         const(nehoda).
%%%%%%%% node10_19 %%%%%%%%%%%%%%%%%%%
node(node10_19).
deepord(node10_19, x10_1).         const(x10_1).
a_ref_type(node10_19, tree).         const(tree).
a_afun(node10_19, Atr).         const(Atr).
m_form(node10_19, nehody).         const(nehody).
m_lemma(node10_19, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node10_19, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node10_19, nehody).         const(nehody).
w_no_space_after(node10_19, 1).         const(1).
a_ord(node10_19, 9).         const(9).
a_parent_id(node10_19, a_plzensky70827_txt_001_p1s12W8).         const(a_plzensky70827_txt_001_p1s12W8).
hide(node10_19, hide).         const(hide).
edge(node10_0, node10_1).
edge(node10_1, node10_2).
edge(node10_1, node10_3).
edge(node10_1, node10_4).
edge(node10_4, node10_5).
edge(node10_1, node10_6).
edge(node10_6, node10_7).
edge(node10_7, node10_8).
edge(node10_7, node10_9).
edge(node10_9, node10_10).
edge(node10_9, node10_11).
edge(node10_6, node10_12).
edge(node10_6, node10_13).
edge(node10_13, node10_14).
edge(node10_13, node10_15).
edge(node10_13, node10_16).
edge(node10_16, node10_17).
edge(node10_16, node10_18).
edge(node10_18, node10_19).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Jednalo se o V. rocnik souteze na tema "Ochrana cloveka za mimoradnych udalosti" - "Maly zachranar 2007". 
tree_root(node11_0).
:- valid_root(node11_0).
%%%%%%%% node11_0 %%%%%%%%%%%%%%%%%%%
node(node11_0).
atree_rf(node11_0, a_a_plzensky51278_txt_001_p1s1).         const(a_a_plzensky51278_txt_001_p1s1).
deepord(node11_0, 0).         const(0).
id(node11_0, T_plzensky51278_txt_001_p1s1).         const(T_plzensky51278_txt_001_p1s1).
nodetype(node11_0, root).         const(root).
sentence(node11_0, Jednalo_se_o_V__rocnik_souteze_na_tema__Ochrana_cloveka_za_mimoradnych_udalosti_____Maly_zachranar_2007___).         const(Jednalo_se_o_V__rocnik_souteze_na_tema__Ochrana_cloveka_za_mimoradnych_udalosti_____Maly_zachranar_2007___).
%%%%%%%% node11_1 %%%%%%%%%%%%%%%%%%%
node(node11_1).
deepord(node11_1, 3).         const(3).
functor(node11_1, PRED).         const(PRED).
gram_sempos(node11_1, v).         const(v).
id(node11_1, T_plzensky51278_txt_001_p1s1a1).         const(T_plzensky51278_txt_001_p1s1a1).
nodetype(node11_1, complex).         const(complex).
t_lemma(node11_1, jednat_se).         const(jednat_se).
val_frame_rf(node11_1, v_v_w1323f1).         const(v_v_w1323f1).
%%%%%%%% node11_2 %%%%%%%%%%%%%%%%%%%
node(node11_2).
deepord(node11_2, 1).         const(1).
functor(node11_2, PAT).         const(PAT).
id(node11_2, T_plzensky51278_txt_001_p1s1a23).         const(T_plzensky51278_txt_001_p1s1a23).
is_generated(node11_2, 1).         const(1).
nodetype(node11_2, qcomplex).         const(qcomplex).
t_lemma(node11_2, x_Gen).         const(x_Gen).
%%%%%%%% node11_3 %%%%%%%%%%%%%%%%%%%
node(node11_3).
deepord(node11_3, 2).         const(2).
functor(node11_3, ACT).         const(ACT).
gram_sempos(node11_3, n_pron_def_pers).         const(n_pron_def_pers).
id(node11_3, T_plzensky51278_txt_001_p1s1a22).         const(T_plzensky51278_txt_001_p1s1a22).
is_generated(node11_3, 1).         const(1).
nodetype(node11_3, complex).         const(complex).
t_lemma(node11_3, x_PersPron).         const(x_PersPron).
%%%%%%%% node11_4 %%%%%%%%%%%%%%%%%%%
node(node11_4).
deepord(node11_4, x3_1).         const(x3_1).
a_ref_type(node11_4, tree).         const(tree).
a_afun(node11_4, Pred).         const(Pred).
m_form(node11_4, Jednalo).         const(Jednalo).
m_lemma(node11_4, jednat__T).         const(jednat__T).
m_tag(node11_4, VpNS___XR_AA___).         const(VpNS___XR_AA___).
w_token(node11_4, Jednalo).         const(Jednalo).
a_ord(node11_4, 1).         const(1).
a_parent_id(node11_4, a_plzensky51278_txt_001_p1s1).         const(a_plzensky51278_txt_001_p1s1).
hide(node11_4, hide).         const(hide).
%%%%%%%% node11_5 %%%%%%%%%%%%%%%%%%%
node(node11_5).
deepord(node11_5, x3_2).         const(x3_2).
a_ref_type(node11_5, tree).         const(tree).
a_afun(node11_5, AuxT).         const(AuxT).
m_form(node11_5, se).         const(se).
m_lemma(node11_5, se___zvr__zajmeno_castice_).         const(se___zvr__zajmeno_castice_).
m_tag(node11_5, P7_X4__________).         const(P7_X4__________).
w_token(node11_5, se).         const(se).
a_ord(node11_5, 2).         const(2).
a_parent_id(node11_5, a_plzensky51278_txt_001_p1s1W1).         const(a_plzensky51278_txt_001_p1s1W1).
hide(node11_5, hide).         const(hide).
%%%%%%%% node11_6 %%%%%%%%%%%%%%%%%%%
node(node11_6).
deepord(node11_6, 5).         const(5).
functor(node11_6, PAR).         const(PAR).
gram_sempos(node11_6, n_denot).         const(n_denot).
id(node11_6, T_plzensky51278_txt_001_p1s1a4).         const(T_plzensky51278_txt_001_p1s1a4).
nodetype(node11_6, complex).         const(complex).
t_lemma(node11_6, rocnik).         const(rocnik).
%%%%%%%% node11_7 %%%%%%%%%%%%%%%%%%%
node(node11_7).
deepord(node11_7, 4).         const(4).
functor(node11_7, RSTR).         const(RSTR).
gram_sempos(node11_7, n_denot).         const(n_denot).
id(node11_7, T_plzensky51278_txt_001_p1s1a5).         const(T_plzensky51278_txt_001_p1s1a5).
nodetype(node11_7, complex).         const(complex).
t_lemma(node11_7, V).         const(V).
%%%%%%%% node11_8 %%%%%%%%%%%%%%%%%%%
node(node11_8).
deepord(node11_8, x4_1).         const(x4_1).
a_ref_type(node11_8, tree).         const(tree).
a_afun(node11_8, Atr).         const(Atr).
m_form(node11_8, V).         const(V).
m_lemma(node11_8, V_0__B__Y).         const(V_0__B__Y).
m_tag(node11_8, NNMXX_____A___8).         const(NNMXX_____A___8).
w_token(node11_8, V).         const(V).
w_no_space_after(node11_8, 1).         const(1).
a_ord(node11_8, 4).         const(4).
a_parent_id(node11_8, a_plzensky51278_txt_001_p1s1W6).         const(a_plzensky51278_txt_001_p1s1W6).
hide(node11_8, hide).         const(hide).
%%%%%%%% node11_9 %%%%%%%%%%%%%%%%%%%
node(node11_9).
deepord(node11_9, x5_1).         const(x5_1).
a_ref_type(node11_9, tree).         const(tree).
a_afun(node11_9, AuxP).         const(AuxP).
m_form(node11_9, o).         const(o).
m_lemma(node11_9, o_1).         const(o_1).
m_tag(node11_9, RR__4__________).         const(RR__4__________).
w_token(node11_9, o).         const(o).
a_ord(node11_9, 3).         const(3).
a_parent_id(node11_9, a_plzensky51278_txt_001_p1s1W1).         const(a_plzensky51278_txt_001_p1s1W1).
hide(node11_9, hide).         const(hide).
%%%%%%%% node11_10 %%%%%%%%%%%%%%%%%%%
node(node11_10).
deepord(node11_10, x5_2).         const(x5_2).
a_ref_type(node11_10, tree).         const(tree).
a_afun(node11_10, Adv).         const(Adv).
m_form(node11_10, rocnik).         const(rocnik).
m_lemma(node11_10, rocnik).         const(rocnik).
m_tag(node11_10, NNIS1_____A____).         const(NNIS1_____A____).
w_token(node11_10, rocnik).         const(rocnik).
a_ord(node11_10, 6).         const(6).
a_parent_id(node11_10, a_plzensky51278_txt_001_p1s1W3).         const(a_plzensky51278_txt_001_p1s1W3).
hide(node11_10, hide).         const(hide).
%%%%%%%% node11_11 %%%%%%%%%%%%%%%%%%%
node(node11_11).
deepord(node11_11, 7).         const(7).
functor(node11_11, APP).         const(APP).
gram_sempos(node11_11, n_denot).         const(n_denot).
id(node11_11, T_plzensky51278_txt_001_p1s1a7).         const(T_plzensky51278_txt_001_p1s1a7).
nodetype(node11_11, complex).         const(complex).
t_lemma(node11_11, soutez).         const(soutez).
%%%%%%%% node11_12 %%%%%%%%%%%%%%%%%%%
node(node11_12).
deepord(node11_12, 6).         const(6).
functor(node11_12, RSTR).         const(RSTR).
id(node11_12, T_plzensky51278_txt_001_p1s1a24).         const(T_plzensky51278_txt_001_p1s1a24).
is_generated(node11_12, 1).         const(1).
nodetype(node11_12, list).         const(list).
t_lemma(node11_12, x_Forn).         const(x_Forn).
%%%%%%%% node11_13 %%%%%%%%%%%%%%%%%%%
node(node11_13).
deepord(node11_13, x7_1).         const(x7_1).
a_ref_type(node11_13, tree).         const(tree).
a_afun(node11_13, Atr).         const(Atr).
m_form(node11_13, souteze).         const(souteze).
m_lemma(node11_13, soutez).         const(soutez).
m_tag(node11_13, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node11_13, souteze).         const(souteze).
a_ord(node11_13, 7).         const(7).
a_parent_id(node11_13, a_plzensky51278_txt_001_p1s1W6).         const(a_plzensky51278_txt_001_p1s1W6).
hide(node11_13, hide).         const(hide).
%%%%%%%% node11_14 %%%%%%%%%%%%%%%%%%%
node(node11_14).
deepord(node11_14, 12).         const(12).
functor(node11_14, CONJ).         const(CONJ).
id(node11_14, T_plzensky51278_txt_001_p1s1a10).         const(T_plzensky51278_txt_001_p1s1a10).
nodetype(node11_14, coap).         const(coap).
t_lemma(node11_14, x_Dash).         const(x_Dash).
%%%%%%%% node11_15 %%%%%%%%%%%%%%%%%%%
node(node11_15).
deepord(node11_15, 8).         const(8).
functor(node11_15, ID).         const(ID).
gram_sempos(node11_15, n_denot).         const(n_denot).
id(node11_15, T_plzensky51278_txt_001_p1s1a11).         const(T_plzensky51278_txt_001_p1s1a11).
is_member(node11_15, 1).         const(1).
nodetype(node11_15, complex).         const(complex).
t_lemma(node11_15, ochrana).         const(ochrana).
%%%%%%%% node11_16 %%%%%%%%%%%%%%%%%%%
node(node11_16).
deepord(node11_16, x8_1).         const(x8_1).
a_ref_type(node11_16, tree).         const(tree).
a_afun(node11_16, Atr).         const(Atr).
m_form(node11_16, Ochrana).         const(Ochrana).
m_lemma(node11_16, ochrana).         const(ochrana).
m_tag(node11_16, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node11_16, Ochrana).         const(Ochrana).
a_ord(node11_16, 11).         const(11).
a_parent_id(node11_16, a_plzensky51278_txt_001_p1s1W17).         const(a_plzensky51278_txt_001_p1s1W17).
hide(node11_16, hide).         const(hide).
%%%%%%%% node11_17 %%%%%%%%%%%%%%%%%%%
node(node11_17).
deepord(node11_17, 9).         const(9).
functor(node11_17, PAT).         const(PAT).
gram_sempos(node11_17, n_denot).         const(n_denot).
id(node11_17, T_plzensky51278_txt_001_p1s1a13).         const(T_plzensky51278_txt_001_p1s1a13).
nodetype(node11_17, complex).         const(complex).
t_lemma(node11_17, clovek).         const(clovek).
%%%%%%%% node11_18 %%%%%%%%%%%%%%%%%%%
node(node11_18).
deepord(node11_18, x9_1).         const(x9_1).
a_ref_type(node11_18, tree).         const(tree).
a_afun(node11_18, Atr).         const(Atr).
m_form(node11_18, cloveka).         const(cloveka).
m_lemma(node11_18, clovek).         const(clovek).
m_tag(node11_18, NNMS2_____A____).         const(NNMS2_____A____).
w_token(node11_18, cloveka).         const(cloveka).
a_ord(node11_18, 12).         const(12).
a_parent_id(node11_18, a_plzensky51278_txt_001_p1s1W11).         const(a_plzensky51278_txt_001_p1s1W11).
hide(node11_18, hide).         const(hide).
%%%%%%%% node11_19 %%%%%%%%%%%%%%%%%%%
node(node11_19).
deepord(node11_19, 11).         const(11).
functor(node11_19, PAT).         const(PAT).
gram_sempos(node11_19, n_denot_neg).         const(n_denot_neg).
id(node11_19, T_plzensky51278_txt_001_p1s1a15).         const(T_plzensky51278_txt_001_p1s1a15).
nodetype(node11_19, complex).         const(complex).
t_lemma(node11_19, udalost).         const(udalost).
%%%%%%%% node11_20 %%%%%%%%%%%%%%%%%%%
node(node11_20).
deepord(node11_20, 10).         const(10).
functor(node11_20, RSTR).         const(RSTR).
gram_sempos(node11_20, adj_denot).         const(adj_denot).
id(node11_20, T_plzensky51278_txt_001_p1s1a16).         const(T_plzensky51278_txt_001_p1s1a16).
nodetype(node11_20, complex).         const(complex).
t_lemma(node11_20, mimoradny).         const(mimoradny).
%%%%%%%% node11_21 %%%%%%%%%%%%%%%%%%%
node(node11_21).
deepord(node11_21, x10_1).         const(x10_1).
a_ref_type(node11_21, tree).         const(tree).
a_afun(node11_21, Atr).         const(Atr).
m_form(node11_21, mimoradnych).         const(mimoradnych).
m_lemma(node11_21, mimoradny).         const(mimoradny).
m_tag(node11_21, AAFP2____1A____).         const(AAFP2____1A____).
w_token(node11_21, mimoradnych).         const(mimoradnych).
a_ord(node11_21, 14).         const(14).
a_parent_id(node11_21, a_plzensky51278_txt_001_p1s1W15).         const(a_plzensky51278_txt_001_p1s1W15).
hide(node11_21, hide).         const(hide).
%%%%%%%% node11_22 %%%%%%%%%%%%%%%%%%%
node(node11_22).
deepord(node11_22, x11_1).         const(x11_1).
a_ref_type(node11_22, tree).         const(tree).
a_afun(node11_22, AuxP).         const(AuxP).
m_form(node11_22, za).         const(za).
m_lemma(node11_22, za_1).         const(za_1).
m_tag(node11_22, RR__4__________).         const(RR__4__________).
w_token(node11_22, za).         const(za).
a_ord(node11_22, 13).         const(13).
a_parent_id(node11_22, a_plzensky51278_txt_001_p1s1W12).         const(a_plzensky51278_txt_001_p1s1W12).
hide(node11_22, hide).         const(hide).
%%%%%%%% node11_23 %%%%%%%%%%%%%%%%%%%
node(node11_23).
deepord(node11_23, x11_2).         const(x11_2).
a_ref_type(node11_23, tree).         const(tree).
a_afun(node11_23, Atr).         const(Atr).
m_form(node11_23, udalosti).         const(udalosti).
m_lemma(node11_23, udalost__a____3y_).         const(udalost__a____3y_).
m_tag(node11_23, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node11_23, udalosti).         const(udalosti).
w_no_space_after(node11_23, 1).         const(1).
a_ord(node11_23, 15).         const(15).
a_parent_id(node11_23, a_plzensky51278_txt_001_p1s1W13).         const(a_plzensky51278_txt_001_p1s1W13).
hide(node11_23, hide).         const(hide).
%%%%%%%% node11_24 %%%%%%%%%%%%%%%%%%%
node(node11_24).
deepord(node11_24, x12_1).         const(x12_1).
a_ref_type(node11_24, tree).         const(tree).
a_afun(node11_24, Coord).         const(Coord).
m_form(node11_24, x_).         const(x_).
m_lemma(node11_24, x_).         const(x_).
m_tag(node11_24, Z______________).         const(Z______________).
w_token(node11_24, x_).         const(x_).
a_ord(node11_24, 17).         const(17).
a_parent_id(node11_24, a_plzensky51278_txt_001_p1s1W9).         const(a_plzensky51278_txt_001_p1s1W9).
hide(node11_24, hide).         const(hide).
%%%%%%%% node11_25 %%%%%%%%%%%%%%%%%%%
node(node11_25).
deepord(node11_25, 14).         const(14).
functor(node11_25, ID).         const(ID).
gram_sempos(node11_25, n_denot).         const(n_denot).
id(node11_25, T_plzensky51278_txt_001_p1s1a18).         const(T_plzensky51278_txt_001_p1s1a18).
is_member(node11_25, 1).         const(1).
nodetype(node11_25, complex).         const(complex).
t_lemma(node11_25, zachranar).         const(zachranar).
%%%%%%%% node11_26 %%%%%%%%%%%%%%%%%%%
node(node11_26).
deepord(node11_26, 13).         const(13).
functor(node11_26, RSTR).         const(RSTR).
gram_sempos(node11_26, adj_denot).         const(adj_denot).
id(node11_26, T_plzensky51278_txt_001_p1s1a20).         const(T_plzensky51278_txt_001_p1s1a20).
nodetype(node11_26, complex).         const(complex).
t_lemma(node11_26, maly).         const(maly).
%%%%%%%% node11_27 %%%%%%%%%%%%%%%%%%%
node(node11_27).
deepord(node11_27, x13_1).         const(x13_1).
a_ref_type(node11_27, tree).         const(tree).
a_afun(node11_27, Atr).         const(Atr).
m_form(node11_27, Maly).         const(Maly).
m_lemma(node11_27, maly).         const(maly).
m_tag(node11_27, AAMS1____1A____).         const(AAMS1____1A____).
w_token(node11_27, Maly).         const(Maly).
a_ord(node11_27, 19).         const(19).
a_parent_id(node11_27, a_plzensky51278_txt_001_p1s1W20).         const(a_plzensky51278_txt_001_p1s1W20).
hide(node11_27, hide).         const(hide).
%%%%%%%% node11_28 %%%%%%%%%%%%%%%%%%%
node(node11_28).
deepord(node11_28, x14_1).         const(x14_1).
a_ref_type(node11_28, tree).         const(tree).
a_afun(node11_28, Atr).         const(Atr).
m_form(node11_28, zachranar).         const(zachranar).
m_lemma(node11_28, zachranar).         const(zachranar).
m_tag(node11_28, NNMS1_____A____).         const(NNMS1_____A____).
w_token(node11_28, zachranar).         const(zachranar).
a_ord(node11_28, 20).         const(20).
a_parent_id(node11_28, a_plzensky51278_txt_001_p1s1W17).         const(a_plzensky51278_txt_001_p1s1W17).
hide(node11_28, hide).         const(hide).
%%%%%%%% node11_29 %%%%%%%%%%%%%%%%%%%
node(node11_29).
deepord(node11_29, 15).         const(15).
functor(node11_29, RSTR).         const(RSTR).
gram_sempos(node11_29, adj_quant_def).         const(adj_quant_def).
id(node11_29, T_plzensky51278_txt_001_p1s1a21).         const(T_plzensky51278_txt_001_p1s1a21).
nodetype(node11_29, complex).         const(complex).
t_lemma(node11_29, 2007).         const(2007).
%%%%%%%% node11_30 %%%%%%%%%%%%%%%%%%%
node(node11_30).
deepord(node11_30, x15_1).         const(x15_1).
a_ref_type(node11_30, tree).         const(tree).
a_afun(node11_30, Atr).         const(Atr).
m_form(node11_30, 2007).         const(2007).
m_lemma(node11_30, 2007).         const(2007).
m_tag(node11_30, C=_____________).         const(C=_____________).
w_token(node11_30, 2007).         const(2007).
w_no_space_after(node11_30, 1).         const(1).
a_ord(node11_30, 21).         const(21).
a_parent_id(node11_30, a_plzensky51278_txt_001_p1s1W20).         const(a_plzensky51278_txt_001_p1s1W20).
hide(node11_30, hide).         const(hide).
edge(node11_0, node11_1).
edge(node11_1, node11_2).
edge(node11_1, node11_3).
edge(node11_1, node11_4).
edge(node11_1, node11_5).
edge(node11_1, node11_6).
edge(node11_6, node11_7).
edge(node11_7, node11_8).
edge(node11_6, node11_9).
edge(node11_6, node11_10).
edge(node11_6, node11_11).
edge(node11_11, node11_12).
edge(node11_11, node11_13).
edge(node11_11, node11_14).
edge(node11_14, node11_15).
edge(node11_15, node11_16).
edge(node11_15, node11_17).
edge(node11_17, node11_18).
edge(node11_17, node11_19).
edge(node11_19, node11_20).
edge(node11_20, node11_21).
edge(node11_19, node11_22).
edge(node11_19, node11_23).
edge(node11_14, node11_24).
edge(node11_14, node11_25).
edge(node11_25, node11_26).
edge(node11_26, node11_27).
edge(node11_25, node11_28).
edge(node11_25, node11_29).
edge(node11_29, node11_30).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Mistem konani byla centralni pozarni stanice Plzen - Kosutka. 
tree_root(node12_0).
:- valid_root(node12_0).
%%%%%%%% node12_0 %%%%%%%%%%%%%%%%%%%
node(node12_0).
atree_rf(node12_0, a_a_plzensky51278_txt_001_p1s2).         const(a_a_plzensky51278_txt_001_p1s2).
deepord(node12_0, 0).         const(0).
id(node12_0, T_plzensky51278_txt_001_p1s2).         const(T_plzensky51278_txt_001_p1s2).
nodetype(node12_0, root).         const(root).
sentence(node12_0, Mistem_konani_byla_centralni_pozarni_stanice_Plzen___Kosutka__).         const(Mistem_konani_byla_centralni_pozarni_stanice_Plzen___Kosutka__).
%%%%%%%% node12_1 %%%%%%%%%%%%%%%%%%%
node(node12_1).
deepord(node12_1, 4).         const(4).
functor(node12_1, PRED).         const(PRED).
gram_sempos(node12_1, v).         const(v).
id(node12_1, T_plzensky51278_txt_001_p1s2a1).         const(T_plzensky51278_txt_001_p1s2a1).
nodetype(node12_1, complex).         const(complex).
t_lemma(node12_1, byt).         const(byt).
val_frame_rf(node12_1, v_v_w243f2).         const(v_v_w243f2).
%%%%%%%% node12_2 %%%%%%%%%%%%%%%%%%%
node(node12_2).
deepord(node12_2, 1).         const(1).
functor(node12_2, PAT).         const(PAT).
gram_sempos(node12_2, n_denot).         const(n_denot).
id(node12_2, T_plzensky51278_txt_001_p1s2a2).         const(T_plzensky51278_txt_001_p1s2a2).
nodetype(node12_2, complex).         const(complex).
t_lemma(node12_2, misto).         const(misto).
%%%%%%%% node12_3 %%%%%%%%%%%%%%%%%%%
node(node12_3).
deepord(node12_3, x1_1).         const(x1_1).
a_ref_type(node12_3, tree).         const(tree).
a_afun(node12_3, Pnom).         const(Pnom).
m_form(node12_3, Mistem).         const(Mistem).
m_lemma(node12_3, misto_1___fyzicke_umisteni_).         const(misto_1___fyzicke_umisteni_).
m_tag(node12_3, NNNS7_____A____).         const(NNNS7_____A____).
w_token(node12_3, Mistem).         const(Mistem).
a_ord(node12_3, 1).         const(1).
a_parent_id(node12_3, a_plzensky51278_txt_001_p1s2W3).         const(a_plzensky51278_txt_001_p1s2W3).
hide(node12_3, hide).         const(hide).
%%%%%%%% node12_4 %%%%%%%%%%%%%%%%%%%
node(node12_4).
deepord(node12_4, 3).         const(3).
functor(node12_4, APP).         const(APP).
gram_sempos(node12_4, n_denot_neg).         const(n_denot_neg).
id(node12_4, T_plzensky51278_txt_001_p1s2a3).         const(T_plzensky51278_txt_001_p1s2a3).
nodetype(node12_4, complex).         const(complex).
t_lemma(node12_4, konani).         const(konani).
%%%%%%%% node12_5 %%%%%%%%%%%%%%%%%%%
node(node12_5).
deepord(node12_5, 2).         const(2).
functor(node12_5, ACT).         const(ACT).
id(node12_5, T_plzensky51278_txt_001_p1s2a10).         const(T_plzensky51278_txt_001_p1s2a10).
is_generated(node12_5, 1).         const(1).
nodetype(node12_5, qcomplex).         const(qcomplex).
t_lemma(node12_5, x_Gen).         const(x_Gen).
%%%%%%%% node12_6 %%%%%%%%%%%%%%%%%%%
node(node12_6).
deepord(node12_6, x3_1).         const(x3_1).
a_ref_type(node12_6, tree).         const(tree).
a_afun(node12_6, Atr).         const(Atr).
m_form(node12_6, konani).         const(konani).
m_lemma(node12_6, konani____3at_).         const(konani____3at_).
m_tag(node12_6, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node12_6, konani).         const(konani).
a_ord(node12_6, 2).         const(2).
a_parent_id(node12_6, a_plzensky51278_txt_001_p1s2W1).         const(a_plzensky51278_txt_001_p1s2W1).
hide(node12_6, hide).         const(hide).
%%%%%%%% node12_7 %%%%%%%%%%%%%%%%%%%
node(node12_7).
deepord(node12_7, x4_1).         const(x4_1).
a_ref_type(node12_7, tree).         const(tree).
a_afun(node12_7, Pred).         const(Pred).
m_form(node12_7, byla).         const(byla).
m_lemma(node12_7, byt).         const(byt).
m_tag(node12_7, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node12_7, byla).         const(byla).
a_ord(node12_7, 3).         const(3).
a_parent_id(node12_7, a_plzensky51278_txt_001_p1s2).         const(a_plzensky51278_txt_001_p1s2).
hide(node12_7, hide).         const(hide).
%%%%%%%% node12_8 %%%%%%%%%%%%%%%%%%%
node(node12_8).
deepord(node12_8, 7).         const(7).
functor(node12_8, ACT).         const(ACT).
gram_sempos(node12_8, n_denot).         const(n_denot).
id(node12_8, T_plzensky51278_txt_001_p1s2a4).         const(T_plzensky51278_txt_001_p1s2a4).
nodetype(node12_8, complex).         const(complex).
t_lemma(node12_8, stanice).         const(stanice).
%%%%%%%% node12_9 %%%%%%%%%%%%%%%%%%%
node(node12_9).
deepord(node12_9, 5).         const(5).
functor(node12_9, RSTR).         const(RSTR).
gram_sempos(node12_9, adj_denot).         const(adj_denot).
id(node12_9, T_plzensky51278_txt_001_p1s2a5).         const(T_plzensky51278_txt_001_p1s2a5).
nodetype(node12_9, complex).         const(complex).
t_lemma(node12_9, centralni).         const(centralni).
%%%%%%%% node12_10 %%%%%%%%%%%%%%%%%%%
node(node12_10).
deepord(node12_10, x5_1).         const(x5_1).
a_ref_type(node12_10, tree).         const(tree).
a_afun(node12_10, Atr).         const(Atr).
m_form(node12_10, centralni).         const(centralni).
m_lemma(node12_10, centralni).         const(centralni).
m_tag(node12_10, AAFS1____1A____).         const(AAFS1____1A____).
w_token(node12_10, centralni).         const(centralni).
a_ord(node12_10, 4).         const(4).
a_parent_id(node12_10, a_plzensky51278_txt_001_p1s2W6).         const(a_plzensky51278_txt_001_p1s2W6).
hide(node12_10, hide).         const(hide).
%%%%%%%% node12_11 %%%%%%%%%%%%%%%%%%%
node(node12_11).
deepord(node12_11, 6).         const(6).
functor(node12_11, RSTR).         const(RSTR).
gram_sempos(node12_11, adj_denot).         const(adj_denot).
id(node12_11, T_plzensky51278_txt_001_p1s2a6).         const(T_plzensky51278_txt_001_p1s2a6).
nodetype(node12_11, complex).         const(complex).
t_lemma(node12_11, pozarni).         const(pozarni).
%%%%%%%% node12_12 %%%%%%%%%%%%%%%%%%%
node(node12_12).
deepord(node12_12, x6_1).         const(x6_1).
a_ref_type(node12_12, tree).         const(tree).
a_afun(node12_12, Atr).         const(Atr).
m_form(node12_12, pozarni).         const(pozarni).
m_lemma(node12_12, pozarni).         const(pozarni).
m_tag(node12_12, AAFS1____1A____).         const(AAFS1____1A____).
w_token(node12_12, pozarni).         const(pozarni).
a_ord(node12_12, 5).         const(5).
a_parent_id(node12_12, a_plzensky51278_txt_001_p1s2W6).         const(a_plzensky51278_txt_001_p1s2W6).
hide(node12_12, hide).         const(hide).
%%%%%%%% node12_13 %%%%%%%%%%%%%%%%%%%
node(node12_13).
deepord(node12_13, x7_1).         const(x7_1).
a_ref_type(node12_13, tree).         const(tree).
a_afun(node12_13, Sb).         const(Sb).
m_form(node12_13, stanice).         const(stanice).
m_lemma(node12_13, stanice).         const(stanice).
m_tag(node12_13, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node12_13, stanice).         const(stanice).
a_ord(node12_13, 6).         const(6).
a_parent_id(node12_13, a_plzensky51278_txt_001_p1s2W3).         const(a_plzensky51278_txt_001_p1s2W3).
hide(node12_13, hide).         const(hide).
%%%%%%%% node12_14 %%%%%%%%%%%%%%%%%%%
node(node12_14).
deepord(node12_14, 9).         const(9).
functor(node12_14, RSTR).         const(RSTR).
id(node12_14, T_plzensky51278_txt_001_p1s2a7).         const(T_plzensky51278_txt_001_p1s2a7).
nodetype(node12_14, complex).         const(complex).
t_lemma(node12_14, x_Dash).         const(x_Dash).
%%%%%%%% node12_15 %%%%%%%%%%%%%%%%%%%
node(node12_15).
deepord(node12_15, 8).         const(8).
functor(node12_15, RSTR).         const(RSTR).
gram_sempos(node12_15, n_denot).         const(n_denot).
id(node12_15, T_plzensky51278_txt_001_p1s2a8).         const(T_plzensky51278_txt_001_p1s2a8).
nodetype(node12_15, complex).         const(complex).
t_lemma(node12_15, Plzen).         const(Plzen).
%%%%%%%% node12_16 %%%%%%%%%%%%%%%%%%%
node(node12_16).
deepord(node12_16, x8_1).         const(x8_1).
a_ref_type(node12_16, tree).         const(tree).
a_afun(node12_16, Atr).         const(Atr).
m_form(node12_16, Plzen).         const(Plzen).
m_lemma(node12_16, Plzen__G).         const(Plzen__G).
m_tag(node12_16, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node12_16, Plzen).         const(Plzen).
a_ord(node12_16, 7).         const(7).
a_parent_id(node12_16, a_plzensky51278_txt_001_p1s2W8).         const(a_plzensky51278_txt_001_p1s2W8).
hide(node12_16, hide).         const(hide).
%%%%%%%% node12_17 %%%%%%%%%%%%%%%%%%%
node(node12_17).
deepord(node12_17, x9_1).         const(x9_1).
a_ref_type(node12_17, tree).         const(tree).
a_afun(node12_17, AuxG).         const(AuxG).
m_form(node12_17, x_).         const(x_).
m_lemma(node12_17, x_).         const(x_).
m_tag(node12_17, Z______________).         const(Z______________).
w_token(node12_17, x_).         const(x_).
a_ord(node12_17, 8).         const(8).
a_parent_id(node12_17, a_plzensky51278_txt_001_p1s2W6).         const(a_plzensky51278_txt_001_p1s2W6).
hide(node12_17, hide).         const(hide).
%%%%%%%% node12_18 %%%%%%%%%%%%%%%%%%%
node(node12_18).
deepord(node12_18, 10).         const(10).
functor(node12_18, RSTR).         const(RSTR).
gram_sempos(node12_18, n_denot).         const(n_denot).
id(node12_18, T_plzensky51278_txt_001_p1s2a9).         const(T_plzensky51278_txt_001_p1s2a9).
nodetype(node12_18, complex).         const(complex).
t_lemma(node12_18, Kosutka).         const(Kosutka).
%%%%%%%% node12_19 %%%%%%%%%%%%%%%%%%%
node(node12_19).
deepord(node12_19, x10_1).         const(x10_1).
a_ref_type(node12_19, tree).         const(tree).
a_afun(node12_19, Atr).         const(Atr).
m_form(node12_19, Kosutka).         const(Kosutka).
m_lemma(node12_19, Kosutka).         const(Kosutka).
m_tag(node12_19, NNMS1_____A____).         const(NNMS1_____A____).
w_token(node12_19, Kosutka).         const(Kosutka).
w_no_space_after(node12_19, 1).         const(1).
a_ord(node12_19, 9).         const(9).
a_parent_id(node12_19, a_plzensky51278_txt_001_p1s2W8).         const(a_plzensky51278_txt_001_p1s2W8).
hide(node12_19, hide).         const(hide).
edge(node12_0, node12_1).
edge(node12_1, node12_2).
edge(node12_2, node12_3).
edge(node12_2, node12_4).
edge(node12_4, node12_5).
edge(node12_4, node12_6).
edge(node12_1, node12_7).
edge(node12_1, node12_8).
edge(node12_8, node12_9).
edge(node12_9, node12_10).
edge(node12_8, node12_11).
edge(node12_11, node12_12).
edge(node12_8, node12_13).
edge(node12_8, node12_14).
edge(node12_14, node12_15).
edge(node12_15, node12_16).
edge(node12_14, node12_17).
edge(node12_14, node12_18).
edge(node12_18, node12_19).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Akce byla organizovana pro zakladni skoly a viceleta gymnazia z Plzne a okoli. 
tree_root(node13_0).
:- valid_root(node13_0).
%%%%%%%% node13_0 %%%%%%%%%%%%%%%%%%%
node(node13_0).
atree_rf(node13_0, a_a_plzensky51278_txt_001_p1s3).         const(a_a_plzensky51278_txt_001_p1s3).
deepord(node13_0, 0).         const(0).
id(node13_0, T_plzensky51278_txt_001_p1s3).         const(T_plzensky51278_txt_001_p1s3).
nodetype(node13_0, root).         const(root).
sentence(node13_0, Akce_byla_organizovana_pro_zakladni_skoly_a_viceleta_gymnazia_z_Plzne_a_okoli__).         const(Akce_byla_organizovana_pro_zakladni_skoly_a_viceleta_gymnazia_z_Plzne_a_okoli__).
%%%%%%%% node13_1 %%%%%%%%%%%%%%%%%%%
node(node13_1).
deepord(node13_1, 3).         const(3).
functor(node13_1, PRED).         const(PRED).
gram_sempos(node13_1, v).         const(v).
id(node13_1, T_plzensky51278_txt_001_p1s3a1).         const(T_plzensky51278_txt_001_p1s3a1).
nodetype(node13_1, complex).         const(complex).
t_lemma(node13_1, organizovat).         const(organizovat).
val_frame_rf(node13_1, v_v_w3169f1).         const(v_v_w3169f1).
%%%%%%%% node13_2 %%%%%%%%%%%%%%%%%%%
node(node13_2).
deepord(node13_2, 1).         const(1).
functor(node13_2, ACT).         const(ACT).
id(node13_2, T_plzensky51278_txt_001_p1s3a14).         const(T_plzensky51278_txt_001_p1s3a14).
is_generated(node13_2, 1).         const(1).
nodetype(node13_2, qcomplex).         const(qcomplex).
t_lemma(node13_2, x_Gen).         const(x_Gen).
%%%%%%%% node13_3 %%%%%%%%%%%%%%%%%%%
node(node13_3).
deepord(node13_3, 2).         const(2).
functor(node13_3, PAT).         const(PAT).
gram_sempos(node13_3, n_denot).         const(n_denot).
id(node13_3, T_plzensky51278_txt_001_p1s3a2).         const(T_plzensky51278_txt_001_p1s3a2).
nodetype(node13_3, complex).         const(complex).
t_lemma(node13_3, akce).         const(akce).
%%%%%%%% node13_4 %%%%%%%%%%%%%%%%%%%
node(node13_4).
deepord(node13_4, x2_1).         const(x2_1).
a_ref_type(node13_4, tree).         const(tree).
a_afun(node13_4, Sb).         const(Sb).
m_form(node13_4, Akce).         const(Akce).
m_lemma(node13_4, akce).         const(akce).
m_tag(node13_4, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node13_4, Akce).         const(Akce).
a_ord(node13_4, 1).         const(1).
a_parent_id(node13_4, a_plzensky51278_txt_001_p1s3W3).         const(a_plzensky51278_txt_001_p1s3W3).
hide(node13_4, hide).         const(hide).
%%%%%%%% node13_5 %%%%%%%%%%%%%%%%%%%
node(node13_5).
deepord(node13_5, x3_1).         const(x3_1).
a_ref_type(node13_5, tree).         const(tree).
a_afun(node13_5, AuxV).         const(AuxV).
m_form(node13_5, byla).         const(byla).
m_lemma(node13_5, byt).         const(byt).
m_tag(node13_5, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node13_5, byla).         const(byla).
a_ord(node13_5, 2).         const(2).
a_parent_id(node13_5, a_plzensky51278_txt_001_p1s3W3).         const(a_plzensky51278_txt_001_p1s3W3).
hide(node13_5, hide).         const(hide).
%%%%%%%% node13_6 %%%%%%%%%%%%%%%%%%%
node(node13_6).
deepord(node13_6, x3_2).         const(x3_2).
a_ref_type(node13_6, tree).         const(tree).
a_afun(node13_6, Pred).         const(Pred).
m_form(node13_6, organizovana).         const(organizovana).
m_lemma(node13_6, organizovat__T__W).         const(organizovat__T__W).
m_tag(node13_6, VsQW___XX_AP___).         const(VsQW___XX_AP___).
w_token(node13_6, organizovana).         const(organizovana).
a_ord(node13_6, 3).         const(3).
a_parent_id(node13_6, a_plzensky51278_txt_001_p1s3).         const(a_plzensky51278_txt_001_p1s3).
hide(node13_6, hide).         const(hide).
%%%%%%%% node13_7 %%%%%%%%%%%%%%%%%%%
node(node13_7).
deepord(node13_7, 6).         const(6).
functor(node13_7, CONJ).         const(CONJ).
id(node13_7, T_plzensky51278_txt_001_p1s3a5).         const(T_plzensky51278_txt_001_p1s3a5).
nodetype(node13_7, coap).         const(coap).
t_lemma(node13_7, a).         const(a).
%%%%%%%% node13_8 %%%%%%%%%%%%%%%%%%%
node(node13_8).
deepord(node13_8, 5).         const(5).
functor(node13_8, PAT).         const(PAT).
gram_sempos(node13_8, n_denot).         const(n_denot).
id(node13_8, T_plzensky51278_txt_001_p1s3a6).         const(T_plzensky51278_txt_001_p1s3a6).
is_member(node13_8, 1).         const(1).
nodetype(node13_8, complex).         const(complex).
t_lemma(node13_8, skola).         const(skola).
%%%%%%%% node13_9 %%%%%%%%%%%%%%%%%%%
node(node13_9).
deepord(node13_9, 4).         const(4).
functor(node13_9, RSTR).         const(RSTR).
gram_sempos(node13_9, adj_denot).         const(adj_denot).
id(node13_9, T_plzensky51278_txt_001_p1s3a7).         const(T_plzensky51278_txt_001_p1s3a7).
nodetype(node13_9, complex).         const(complex).
t_lemma(node13_9, zakladni).         const(zakladni).
%%%%%%%% node13_10 %%%%%%%%%%%%%%%%%%%
node(node13_10).
deepord(node13_10, x4_1).         const(x4_1).
a_ref_type(node13_10, tree).         const(tree).
a_afun(node13_10, Atr).         const(Atr).
m_form(node13_10, zakladni).         const(zakladni).
m_lemma(node13_10, zakladni__s).         const(zakladni__s).
m_tag(node13_10, AAFS4____1A____).         const(AAFS4____1A____).
w_token(node13_10, zakladni).         const(zakladni).
a_ord(node13_10, 5).         const(5).
a_parent_id(node13_10, a_plzensky51278_txt_001_p1s3W6).         const(a_plzensky51278_txt_001_p1s3W6).
hide(node13_10, hide).         const(hide).
%%%%%%%% node13_11 %%%%%%%%%%%%%%%%%%%
node(node13_11).
deepord(node13_11, x5_1).         const(x5_1).
a_ref_type(node13_11, tree).         const(tree).
a_afun(node13_11, Adv).         const(Adv).
m_form(node13_11, skoly).         const(skoly).
m_lemma(node13_11, skola).         const(skola).
m_tag(node13_11, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node13_11, skoly).         const(skoly).
a_ord(node13_11, 6).         const(6).
a_parent_id(node13_11, a_plzensky51278_txt_001_p1s3W7).         const(a_plzensky51278_txt_001_p1s3W7).
hide(node13_11, hide).         const(hide).
%%%%%%%% node13_12 %%%%%%%%%%%%%%%%%%%
node(node13_12).
deepord(node13_12, x6_1).         const(x6_1).
a_ref_type(node13_12, tree).         const(tree).
a_afun(node13_12, Coord).         const(Coord).
m_form(node13_12, a).         const(a).
m_lemma(node13_12, a_1).         const(a_1).
m_tag(node13_12, J______________).         const(J______________).
w_token(node13_12, a).         const(a).
a_ord(node13_12, 7).         const(7).
a_parent_id(node13_12, a_plzensky51278_txt_001_p1s3W4).         const(a_plzensky51278_txt_001_p1s3W4).
hide(node13_12, hide).         const(hide).
%%%%%%%% node13_13 %%%%%%%%%%%%%%%%%%%
node(node13_13).
deepord(node13_13, 8).         const(8).
functor(node13_13, PAT).         const(PAT).
gram_sempos(node13_13, n_denot).         const(n_denot).
id(node13_13, T_plzensky51278_txt_001_p1s3a8).         const(T_plzensky51278_txt_001_p1s3a8).
is_member(node13_13, 1).         const(1).
nodetype(node13_13, complex).         const(complex).
t_lemma(node13_13, gymnazium).         const(gymnazium).
%%%%%%%% node13_14 %%%%%%%%%%%%%%%%%%%
node(node13_14).
deepord(node13_14, 7).         const(7).
functor(node13_14, RSTR).         const(RSTR).
gram_sempos(node13_14, adj_denot).         const(adj_denot).
id(node13_14, T_plzensky51278_txt_001_p1s3a9).         const(T_plzensky51278_txt_001_p1s3a9).
nodetype(node13_14, complex).         const(complex).
t_lemma(node13_14, vicelety).         const(vicelety).
%%%%%%%% node13_15 %%%%%%%%%%%%%%%%%%%
node(node13_15).
deepord(node13_15, x7_1).         const(x7_1).
a_ref_type(node13_15, tree).         const(tree).
a_afun(node13_15, Atr).         const(Atr).
m_form(node13_15, viceleta).         const(viceleta).
m_lemma(node13_15, vicelety).         const(vicelety).
m_tag(node13_15, AANP1____1A____).         const(AANP1____1A____).
w_token(node13_15, viceleta).         const(viceleta).
a_ord(node13_15, 8).         const(8).
a_parent_id(node13_15, a_plzensky51278_txt_001_p1s3W9).         const(a_plzensky51278_txt_001_p1s3W9).
hide(node13_15, hide).         const(hide).
%%%%%%%% node13_16 %%%%%%%%%%%%%%%%%%%
node(node13_16).
deepord(node13_16, x8_1).         const(x8_1).
a_ref_type(node13_16, tree).         const(tree).
a_afun(node13_16, Sb).         const(Sb).
m_form(node13_16, gymnazia).         const(gymnazia).
m_lemma(node13_16, gymnazium).         const(gymnazium).
m_tag(node13_16, NNNP1_____A____).         const(NNNP1_____A____).
w_token(node13_16, gymnazia).         const(gymnazia).
a_ord(node13_16, 9).         const(9).
a_parent_id(node13_16, a_plzensky51278_txt_001_p1s3W7).         const(a_plzensky51278_txt_001_p1s3W7).
hide(node13_16, hide).         const(hide).
%%%%%%%% node13_17 %%%%%%%%%%%%%%%%%%%
node(node13_17).
deepord(node13_17, 10).         const(10).
functor(node13_17, CONJ).         const(CONJ).
id(node13_17, T_plzensky51278_txt_001_p1s3a11).         const(T_plzensky51278_txt_001_p1s3a11).
nodetype(node13_17, coap).         const(coap).
t_lemma(node13_17, a).         const(a).
%%%%%%%% node13_18 %%%%%%%%%%%%%%%%%%%
node(node13_18).
deepord(node13_18, 9).         const(9).
functor(node13_18, PAT).         const(PAT).
gram_sempos(node13_18, n_denot).         const(n_denot).
id(node13_18, T_plzensky51278_txt_001_p1s3a12).         const(T_plzensky51278_txt_001_p1s3a12).
is_member(node13_18, 1).         const(1).
nodetype(node13_18, complex).         const(complex).
t_lemma(node13_18, Plzen).         const(Plzen).
%%%%%%%% node13_19 %%%%%%%%%%%%%%%%%%%
node(node13_19).
deepord(node13_19, x9_1).         const(x9_1).
a_ref_type(node13_19, tree).         const(tree).
a_afun(node13_19, Atr).         const(Atr).
m_form(node13_19, Plzne).         const(Plzne).
m_lemma(node13_19, Plzen__G).         const(Plzen__G).
m_tag(node13_19, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node13_19, Plzne).         const(Plzne).
a_ord(node13_19, 11).         const(11).
a_parent_id(node13_19, a_plzensky51278_txt_001_p1s3W12).         const(a_plzensky51278_txt_001_p1s3W12).
hide(node13_19, hide).         const(hide).
%%%%%%%% node13_20 %%%%%%%%%%%%%%%%%%%
node(node13_20).
deepord(node13_20, x10_1).         const(x10_1).
a_ref_type(node13_20, tree).         const(tree).
a_afun(node13_20, Coord).         const(Coord).
m_form(node13_20, a).         const(a).
m_lemma(node13_20, a_1).         const(a_1).
m_tag(node13_20, J______________).         const(J______________).
w_token(node13_20, a).         const(a).
a_ord(node13_20, 12).         const(12).
a_parent_id(node13_20, a_plzensky51278_txt_001_p1s3W10).         const(a_plzensky51278_txt_001_p1s3W10).
hide(node13_20, hide).         const(hide).
%%%%%%%% node13_21 %%%%%%%%%%%%%%%%%%%
node(node13_21).
deepord(node13_21, 11).         const(11).
functor(node13_21, PAT).         const(PAT).
gram_sempos(node13_21, n_denot).         const(n_denot).
id(node13_21, T_plzensky51278_txt_001_p1s3a13).         const(T_plzensky51278_txt_001_p1s3a13).
is_member(node13_21, 1).         const(1).
nodetype(node13_21, complex).         const(complex).
t_lemma(node13_21, okoli).         const(okoli).
%%%%%%%% node13_22 %%%%%%%%%%%%%%%%%%%
node(node13_22).
deepord(node13_22, x11_1).         const(x11_1).
a_ref_type(node13_22, tree).         const(tree).
a_afun(node13_22, Atr).         const(Atr).
m_form(node13_22, okoli).         const(okoli).
m_lemma(node13_22, okoli).         const(okoli).
m_tag(node13_22, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node13_22, okoli).         const(okoli).
w_no_space_after(node13_22, 1).         const(1).
a_ord(node13_22, 13).         const(13).
a_parent_id(node13_22, a_plzensky51278_txt_001_p1s3W12).         const(a_plzensky51278_txt_001_p1s3W12).
hide(node13_22, hide).         const(hide).
edge(node13_0, node13_1).
edge(node13_1, node13_2).
edge(node13_1, node13_3).
edge(node13_3, node13_4).
edge(node13_1, node13_5).
edge(node13_1, node13_6).
edge(node13_1, node13_7).
edge(node13_7, node13_8).
edge(node13_8, node13_9).
edge(node13_9, node13_10).
edge(node13_8, node13_11).
edge(node13_7, node13_12).
edge(node13_7, node13_13).
edge(node13_13, node13_14).
edge(node13_14, node13_15).
edge(node13_13, node13_16).
edge(node13_13, node13_17).
edge(node13_17, node13_18).
edge(node13_18, node13_19).
edge(node13_17, node13_20).
edge(node13_17, node13_21).
edge(node13_21, node13_22).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Soutezila ctyrclenna smisena druzstva, ktera budou u uplnych zakladnich skol tvorit dva zastupci ze 4. nebo 5. tridy a dva zastupci ze 6. nebo 7. tridy. 
tree_root(node14_0).
:- valid_root(node14_0).
%%%%%%%% node14_0 %%%%%%%%%%%%%%%%%%%
node(node14_0).
atree_rf(node14_0, a_a_plzensky51278_txt_001_p1s4).         const(a_a_plzensky51278_txt_001_p1s4).
deepord(node14_0, 0).         const(0).
id(node14_0, T_plzensky51278_txt_001_p1s4).         const(T_plzensky51278_txt_001_p1s4).
nodetype(node14_0, root).         const(root).
sentence(node14_0, Soutezila_ctyrclenna_smisena_druzstva__ktera_budou_u_uplnych_zakladnich_skol_tvorit_dva_zastupci_ze_4__nebo_5__tridy_a_dva_zastupci_ze_6__nebo_7__tridy__).         const(Soutezila_ctyrclenna_smisena_druzstva__ktera_budou_u_uplnych_zakladnich_skol_tvorit_dva_zastupci_ze_4__nebo_5__tridy_a_dva_zastupci_ze_6__nebo_7__tridy__).
%%%%%%%% node14_1 %%%%%%%%%%%%%%%%%%%
node(node14_1).
deepord(node14_1, 2).         const(2).
functor(node14_1, PRED).         const(PRED).
gram_sempos(node14_1, v).         const(v).
id(node14_1, T_plzensky51278_txt_001_p1s4a1).         const(T_plzensky51278_txt_001_p1s4a1).
nodetype(node14_1, complex).         const(complex).
t_lemma(node14_1, soutezit).         const(soutezit).
val_frame_rf(node14_1, v_v_w6295f1).         const(v_v_w6295f1).
%%%%%%%% node14_2 %%%%%%%%%%%%%%%%%%%
node(node14_2).
deepord(node14_2, 1).         const(1).
functor(node14_2, ADDR).         const(ADDR).
id(node14_2, T_plzensky51278_txt_001_p1s4a31).         const(T_plzensky51278_txt_001_p1s4a31).
is_generated(node14_2, 1).         const(1).
nodetype(node14_2, qcomplex).         const(qcomplex).
t_lemma(node14_2, x_Gen).         const(x_Gen).
%%%%%%%% node14_3 %%%%%%%%%%%%%%%%%%%
node(node14_3).
deepord(node14_3, x2_1).         const(x2_1).
a_ref_type(node14_3, tree).         const(tree).
a_afun(node14_3, Pred).         const(Pred).
m_form(node14_3, Soutezila).         const(Soutezila).
m_lemma(node14_3, soutezit__T).         const(soutezit__T).
m_tag(node14_3, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node14_3, Soutezila).         const(Soutezila).
a_ord(node14_3, 1).         const(1).
a_parent_id(node14_3, a_plzensky51278_txt_001_p1s4).         const(a_plzensky51278_txt_001_p1s4).
hide(node14_3, hide).         const(hide).
%%%%%%%% node14_4 %%%%%%%%%%%%%%%%%%%
node(node14_4).
deepord(node14_4, 5).         const(5).
functor(node14_4, ACT).         const(ACT).
gram_sempos(node14_4, n_denot).         const(n_denot).
id(node14_4, T_plzensky51278_txt_001_p1s4a2).         const(T_plzensky51278_txt_001_p1s4a2).
nodetype(node14_4, complex).         const(complex).
t_lemma(node14_4, druzstvo).         const(druzstvo).
%%%%%%%% node14_5 %%%%%%%%%%%%%%%%%%%
node(node14_5).
deepord(node14_5, 3).         const(3).
functor(node14_5, RSTR).         const(RSTR).
gram_sempos(node14_5, adj_denot).         const(adj_denot).
id(node14_5, T_plzensky51278_txt_001_p1s4a3).         const(T_plzensky51278_txt_001_p1s4a3).
nodetype(node14_5, complex).         const(complex).
t_lemma(node14_5, ctyrclenny).         const(ctyrclenny).
%%%%%%%% node14_6 %%%%%%%%%%%%%%%%%%%
node(node14_6).
deepord(node14_6, x3_1).         const(x3_1).
a_ref_type(node14_6, tree).         const(tree).
a_afun(node14_6, Atr).         const(Atr).
m_form(node14_6, ctyrclenna).         const(ctyrclenna).
m_lemma(node14_6, ctyrclenny).         const(ctyrclenny).
m_tag(node14_6, AAFS1____1A____).         const(AAFS1____1A____).
w_token(node14_6, ctyrclenna).         const(ctyrclenna).
a_ord(node14_6, 2).         const(2).
a_parent_id(node14_6, a_plzensky51278_txt_001_p1s4W4).         const(a_plzensky51278_txt_001_p1s4W4).
hide(node14_6, hide).         const(hide).
%%%%%%%% node14_7 %%%%%%%%%%%%%%%%%%%
node(node14_7).
deepord(node14_7, 4).         const(4).
functor(node14_7, RSTR).         const(RSTR).
gram_sempos(node14_7, adj_denot).         const(adj_denot).
id(node14_7, T_plzensky51278_txt_001_p1s4a4).         const(T_plzensky51278_txt_001_p1s4a4).
nodetype(node14_7, complex).         const(complex).
t_lemma(node14_7, smiseny).         const(smiseny).
%%%%%%%% node14_8 %%%%%%%%%%%%%%%%%%%
node(node14_8).
deepord(node14_8, x4_1).         const(x4_1).
a_ref_type(node14_8, tree).         const(tree).
a_afun(node14_8, Atr).         const(Atr).
m_form(node14_8, smisena).         const(smisena).
m_lemma(node14_8, smiseny____4sit_).         const(smiseny____4sit_).
m_tag(node14_8, AANP1____1A____).         const(AANP1____1A____).
w_token(node14_8, smisena).         const(smisena).
a_ord(node14_8, 3).         const(3).
a_parent_id(node14_8, a_plzensky51278_txt_001_p1s4W4).         const(a_plzensky51278_txt_001_p1s4W4).
hide(node14_8, hide).         const(hide).
%%%%%%%% node14_9 %%%%%%%%%%%%%%%%%%%
node(node14_9).
deepord(node14_9, x5_1).         const(x5_1).
a_ref_type(node14_9, tree).         const(tree).
a_afun(node14_9, Sb).         const(Sb).
m_form(node14_9, druzstva).         const(druzstva).
m_lemma(node14_9, druzstvo).         const(druzstvo).
m_tag(node14_9, NNNP1_____A____).         const(NNNP1_____A____).
w_token(node14_9, druzstva).         const(druzstva).
w_no_space_after(node14_9, 1).         const(1).
a_ord(node14_9, 4).         const(4).
a_parent_id(node14_9, a_plzensky51278_txt_001_p1s4W1).         const(a_plzensky51278_txt_001_p1s4W1).
hide(node14_9, hide).         const(hide).
%%%%%%%% node14_10 %%%%%%%%%%%%%%%%%%%
node(node14_10).
deepord(node14_10, 10).         const(10).
functor(node14_10, PAT).         const(PAT).
gram_sempos(node14_10, v).         const(v).
id(node14_10, T_plzensky51278_txt_001_p1s4a5).         const(T_plzensky51278_txt_001_p1s4a5).
nodetype(node14_10, complex).         const(complex).
t_lemma(node14_10, tvorit).         const(tvorit).
val_frame_rf(node14_10, v_v_w6951f1).         const(v_v_w6951f1).
%%%%%%%% node14_11 %%%%%%%%%%%%%%%%%%%
node(node14_11).
deepord(node14_11, 6).         const(6).
functor(node14_11, ACT).         const(ACT).
gram_sempos(node14_11, n_pron_indef).         const(n_pron_indef).
id(node14_11, T_plzensky51278_txt_001_p1s4a7).         const(T_plzensky51278_txt_001_p1s4a7).
nodetype(node14_11, complex).         const(complex).
t_lemma(node14_11, ktery).         const(ktery).
%%%%%%%% node14_12 %%%%%%%%%%%%%%%%%%%
node(node14_12).
deepord(node14_12, x6_1).         const(x6_1).
a_ref_type(node14_12, tree).         const(tree).
a_afun(node14_12, Sb).         const(Sb).
m_form(node14_12, ktera).         const(ktera).
m_lemma(node14_12, ktery).         const(ktery).
m_tag(node14_12, P4NP1__________).         const(P4NP1__________).
w_token(node14_12, ktera).         const(ktera).
a_ord(node14_12, 6).         const(6).
a_parent_id(node14_12, a_plzensky51278_txt_001_p1s4W12).         const(a_plzensky51278_txt_001_p1s4W12).
hide(node14_12, hide).         const(hide).
%%%%%%%% node14_13 %%%%%%%%%%%%%%%%%%%
node(node14_13).
deepord(node14_13, 9).         const(9).
functor(node14_13, LOC).         const(LOC).
gram_sempos(node14_13, n_denot).         const(n_denot).
id(node14_13, T_plzensky51278_txt_001_p1s4a10).         const(T_plzensky51278_txt_001_p1s4a10).
nodetype(node14_13, complex).         const(complex).
subfunctor(node14_13, near).         const(near).
t_lemma(node14_13, skola).         const(skola).
%%%%%%%% node14_14 %%%%%%%%%%%%%%%%%%%
node(node14_14).
deepord(node14_14, 7).         const(7).
functor(node14_14, RSTR).         const(RSTR).
gram_sempos(node14_14, adj_denot).         const(adj_denot).
id(node14_14, T_plzensky51278_txt_001_p1s4a11).         const(T_plzensky51278_txt_001_p1s4a11).
nodetype(node14_14, complex).         const(complex).
t_lemma(node14_14, uplny).         const(uplny).
%%%%%%%% node14_15 %%%%%%%%%%%%%%%%%%%
node(node14_15).
deepord(node14_15, x7_1).         const(x7_1).
a_ref_type(node14_15, tree).         const(tree).
a_afun(node14_15, Atr).         const(Atr).
m_form(node14_15, uplnych).         const(uplnych).
m_lemma(node14_15, uplny).         const(uplny).
m_tag(node14_15, AANP2____1A____).         const(AANP2____1A____).
w_token(node14_15, uplnych).         const(uplnych).
a_ord(node14_15, 9).         const(9).
a_parent_id(node14_15, a_plzensky51278_txt_001_p1s4W11).         const(a_plzensky51278_txt_001_p1s4W11).
hide(node14_15, hide).         const(hide).
%%%%%%%% node14_16 %%%%%%%%%%%%%%%%%%%
node(node14_16).
deepord(node14_16, 8).         const(8).
functor(node14_16, RSTR).         const(RSTR).
gram_sempos(node14_16, adj_denot).         const(adj_denot).
id(node14_16, T_plzensky51278_txt_001_p1s4a12).         const(T_plzensky51278_txt_001_p1s4a12).
nodetype(node14_16, complex).         const(complex).
t_lemma(node14_16, zakladni).         const(zakladni).
%%%%%%%% node14_17 %%%%%%%%%%%%%%%%%%%
node(node14_17).
deepord(node14_17, x8_1).         const(x8_1).
a_ref_type(node14_17, tree).         const(tree).
a_afun(node14_17, Atr).         const(Atr).
m_form(node14_17, zakladnich).         const(zakladnich).
m_lemma(node14_17, zakladni).         const(zakladni).
m_tag(node14_17, AAFP2____1A____).         const(AAFP2____1A____).
w_token(node14_17, zakladnich).         const(zakladnich).
a_ord(node14_17, 10).         const(10).
a_parent_id(node14_17, a_plzensky51278_txt_001_p1s4W11).         const(a_plzensky51278_txt_001_p1s4W11).
hide(node14_17, hide).         const(hide).
%%%%%%%% node14_18 %%%%%%%%%%%%%%%%%%%
node(node14_18).
deepord(node14_18, x9_1).         const(x9_1).
a_ref_type(node14_18, tree).         const(tree).
a_afun(node14_18, AuxP).         const(AuxP).
m_form(node14_18, u).         const(u).
m_lemma(node14_18, u_1).         const(u_1).
m_tag(node14_18, RR__2__________).         const(RR__2__________).
w_token(node14_18, u).         const(u).
a_ord(node14_18, 8).         const(8).
a_parent_id(node14_18, a_plzensky51278_txt_001_p1s4W12).         const(a_plzensky51278_txt_001_p1s4W12).
hide(node14_18, hide).         const(hide).
%%%%%%%% node14_19 %%%%%%%%%%%%%%%%%%%
node(node14_19).
deepord(node14_19, x9_2).         const(x9_2).
a_ref_type(node14_19, tree).         const(tree).
a_afun(node14_19, Adv).         const(Adv).
m_form(node14_19, skol).         const(skol).
m_lemma(node14_19, skola).         const(skola).
m_tag(node14_19, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node14_19, skol).         const(skol).
a_ord(node14_19, 11).         const(11).
a_parent_id(node14_19, a_plzensky51278_txt_001_p1s4W8).         const(a_plzensky51278_txt_001_p1s4W8).
hide(node14_19, hide).         const(hide).
%%%%%%%% node14_20 %%%%%%%%%%%%%%%%%%%
node(node14_20).
deepord(node14_20, x10_1).         const(x10_1).
a_ref_type(node14_20, tree).         const(tree).
a_afun(node14_20, AuxV).         const(AuxV).
m_form(node14_20, budou).         const(budou).
m_lemma(node14_20, byt).         const(byt).
m_tag(node14_20, VB_P___3F_AA___).         const(VB_P___3F_AA___).
w_token(node14_20, budou).         const(budou).
a_ord(node14_20, 7).         const(7).
a_parent_id(node14_20, a_plzensky51278_txt_001_p1s4W12).         const(a_plzensky51278_txt_001_p1s4W12).
hide(node14_20, hide).         const(hide).
%%%%%%%% node14_21 %%%%%%%%%%%%%%%%%%%
node(node14_21).
deepord(node14_21, x10_2).         const(x10_2).
a_ref_type(node14_21, tree).         const(tree).
a_afun(node14_21, Atr).         const(Atr).
m_form(node14_21, tvorit).         const(tvorit).
m_lemma(node14_21, tvorit__T).         const(tvorit__T).
m_tag(node14_21, Vf________A____).         const(Vf________A____).
w_token(node14_21, tvorit).         const(tvorit).
a_ord(node14_21, 12).         const(12).
a_parent_id(node14_21, a_plzensky51278_txt_001_p1s4W4).         const(a_plzensky51278_txt_001_p1s4W4).
hide(node14_21, hide).         const(hide).
%%%%%%%% node14_22 %%%%%%%%%%%%%%%%%%%
node(node14_22).
deepord(node14_22, 17).         const(17).
functor(node14_22, CONJ).         const(CONJ).
id(node14_22, T_plzensky51278_txt_001_p1s4a13).         const(T_plzensky51278_txt_001_p1s4a13).
nodetype(node14_22, coap).         const(coap).
t_lemma(node14_22, a).         const(a).
%%%%%%%% node14_23 %%%%%%%%%%%%%%%%%%%
node(node14_23).
deepord(node14_23, 12).         const(12).
functor(node14_23, ACT).         const(ACT).
gram_sempos(node14_23, n_denot).         const(n_denot).
id(node14_23, T_plzensky51278_txt_001_p1s4a14).         const(T_plzensky51278_txt_001_p1s4a14).
is_member(node14_23, 1).         const(1).
nodetype(node14_23, complex).         const(complex).
t_lemma(node14_23, zastupce).         const(zastupce).
%%%%%%%% node14_24 %%%%%%%%%%%%%%%%%%%
node(node14_24).
deepord(node14_24, 11).         const(11).
functor(node14_24, RSTR).         const(RSTR).
gram_sempos(node14_24, adj_quant_def).         const(adj_quant_def).
id(node14_24, T_plzensky51278_txt_001_p1s4a15).         const(T_plzensky51278_txt_001_p1s4a15).
nodetype(node14_24, complex).         const(complex).
t_lemma(node14_24, dva).         const(dva).
%%%%%%%% node14_25 %%%%%%%%%%%%%%%%%%%
node(node14_25).
deepord(node14_25, x11_1).         const(x11_1).
a_ref_type(node14_25, tree).         const(tree).
a_afun(node14_25, Atr).         const(Atr).
m_form(node14_25, dva).         const(dva).
m_lemma(node14_25, dva_2).         const(dva_2).
m_tag(node14_25, ClYP4__________).         const(ClYP4__________).
w_token(node14_25, dva).         const(dva).
a_ord(node14_25, 13).         const(13).
a_parent_id(node14_25, a_plzensky51278_txt_001_p1s4W14).         const(a_plzensky51278_txt_001_p1s4W14).
hide(node14_25, hide).         const(hide).
%%%%%%%% node14_26 %%%%%%%%%%%%%%%%%%%
node(node14_26).
deepord(node14_26, x12_1).         const(x12_1).
a_ref_type(node14_26, tree).         const(tree).
a_afun(node14_26, Sb).         const(Sb).
m_form(node14_26, zastupci).         const(zastupci).
m_lemma(node14_26, zastupce).         const(zastupce).
m_tag(node14_26, NNMP1_____A____).         const(NNMP1_____A____).
w_token(node14_26, zastupci).         const(zastupci).
a_ord(node14_26, 14).         const(14).
a_parent_id(node14_26, a_plzensky51278_txt_001_p1s4W22).         const(a_plzensky51278_txt_001_p1s4W22).
hide(node14_26, hide).         const(hide).
%%%%%%%% node14_27 %%%%%%%%%%%%%%%%%%%
node(node14_27).
deepord(node14_27, 16).         const(16).
functor(node14_27, DIR1).         const(DIR1).
gram_sempos(node14_27, n_denot).         const(n_denot).
id(node14_27, T_plzensky51278_txt_001_p1s4a17).         const(T_plzensky51278_txt_001_p1s4a17).
nodetype(node14_27, complex).         const(complex).
subfunctor(node14_27, basic).         const(basic).
t_lemma(node14_27, trida).         const(trida).
%%%%%%%% node14_28 %%%%%%%%%%%%%%%%%%%
node(node14_28).
deepord(node14_28, 14).         const(14).
functor(node14_28, DISJ).         const(DISJ).
id(node14_28, T_plzensky51278_txt_001_p1s4a18).         const(T_plzensky51278_txt_001_p1s4a18).
nodetype(node14_28, coap).         const(coap).
t_lemma(node14_28, nebo).         const(nebo).
%%%%%%%% node14_29 %%%%%%%%%%%%%%%%%%%
node(node14_29).
deepord(node14_29, 13).         const(13).
functor(node14_29, RSTR).         const(RSTR).
gram_sempos(node14_29, adj_quant_def).         const(adj_quant_def).
id(node14_29, T_plzensky51278_txt_001_p1s4a19).         const(T_plzensky51278_txt_001_p1s4a19).
is_member(node14_29, 1).         const(1).
nodetype(node14_29, complex).         const(complex).
t_lemma(node14_29, 4).         const(4).
%%%%%%%% node14_30 %%%%%%%%%%%%%%%%%%%
node(node14_30).
deepord(node14_30, x13_1).         const(x13_1).
a_ref_type(node14_30, tree).         const(tree).
a_afun(node14_30, Atr).         const(Atr).
m_form(node14_30, 4).         const(4).
m_lemma(node14_30, 4).         const(4).
m_tag(node14_30, C=_____________).         const(C=_____________).
w_token(node14_30, 4).         const(4).
w_no_space_after(node14_30, 1).         const(1).
a_ord(node14_30, 16).         const(16).
a_parent_id(node14_30, a_plzensky51278_txt_001_p1s4W18).         const(a_plzensky51278_txt_001_p1s4W18).
hide(node14_30, hide).         const(hide).
%%%%%%%% node14_31 %%%%%%%%%%%%%%%%%%%
node(node14_31).
deepord(node14_31, x14_1).         const(x14_1).
a_ref_type(node14_31, tree).         const(tree).
a_afun(node14_31, Coord).         const(Coord).
m_form(node14_31, nebo).         const(nebo).
m_lemma(node14_31, nebo).         const(nebo).
m_tag(node14_31, J______________).         const(J______________).
w_token(node14_31, nebo).         const(nebo).
a_ord(node14_31, 18).         const(18).
a_parent_id(node14_31, a_plzensky51278_txt_001_p1s4W21).         const(a_plzensky51278_txt_001_p1s4W21).
hide(node14_31, hide).         const(hide).
%%%%%%%% node14_32 %%%%%%%%%%%%%%%%%%%
node(node14_32).
deepord(node14_32, 15).         const(15).
functor(node14_32, RSTR).         const(RSTR).
gram_sempos(node14_32, adj_quant_def).         const(adj_quant_def).
id(node14_32, T_plzensky51278_txt_001_p1s4a21).         const(T_plzensky51278_txt_001_p1s4a21).
is_member(node14_32, 1).         const(1).
nodetype(node14_32, complex).         const(complex).
t_lemma(node14_32, 5).         const(5).
%%%%%%%% node14_33 %%%%%%%%%%%%%%%%%%%
node(node14_33).
deepord(node14_33, x15_1).         const(x15_1).
a_ref_type(node14_33, tree).         const(tree).
a_afun(node14_33, Atr).         const(Atr).
m_form(node14_33, 5).         const(5).
m_lemma(node14_33, 5).         const(5).
m_tag(node14_33, C=_____________).         const(C=_____________).
w_token(node14_33, 5).         const(5).
w_no_space_after(node14_33, 1).         const(1).
a_ord(node14_33, 19).         const(19).
a_parent_id(node14_33, a_plzensky51278_txt_001_p1s4W18).         const(a_plzensky51278_txt_001_p1s4W18).
hide(node14_33, hide).         const(hide).
%%%%%%%% node14_34 %%%%%%%%%%%%%%%%%%%
node(node14_34).
deepord(node14_34, x16_1).         const(x16_1).
a_ref_type(node14_34, tree).         const(tree).
a_afun(node14_34, AuxP).         const(AuxP).
m_form(node14_34, ze).         const(ze).
m_lemma(node14_34, z_1).         const(z_1).
m_tag(node14_34, RV__2__________).         const(RV__2__________).
w_token(node14_34, ze).         const(ze).
a_ord(node14_34, 15).         const(15).
a_parent_id(node14_34, a_plzensky51278_txt_001_p1s4W14).         const(a_plzensky51278_txt_001_p1s4W14).
hide(node14_34, hide).         const(hide).
%%%%%%%% node14_35 %%%%%%%%%%%%%%%%%%%
node(node14_35).
deepord(node14_35, x16_2).         const(x16_2).
a_ref_type(node14_35, tree).         const(tree).
a_afun(node14_35, Atr).         const(Atr).
m_form(node14_35, tridy).         const(tridy).
m_lemma(node14_35, trida).         const(trida).
m_tag(node14_35, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node14_35, tridy).         const(tridy).
a_ord(node14_35, 21).         const(21).
a_parent_id(node14_35, a_plzensky51278_txt_001_p1s4W15).         const(a_plzensky51278_txt_001_p1s4W15).
hide(node14_35, hide).         const(hide).
%%%%%%%% node14_36 %%%%%%%%%%%%%%%%%%%
node(node14_36).
deepord(node14_36, x17_1).         const(x17_1).
a_ref_type(node14_36, tree).         const(tree).
a_afun(node14_36, Coord).         const(Coord).
m_form(node14_36, a).         const(a).
m_lemma(node14_36, a_1).         const(a_1).
m_tag(node14_36, J______________).         const(J______________).
w_token(node14_36, a).         const(a).
a_ord(node14_36, 22).         const(22).
a_parent_id(node14_36, a_plzensky51278_txt_001_p1s4W12).         const(a_plzensky51278_txt_001_p1s4W12).
hide(node14_36, hide).         const(hide).
%%%%%%%% node14_37 %%%%%%%%%%%%%%%%%%%
node(node14_37).
deepord(node14_37, 19).         const(19).
functor(node14_37, ACT).         const(ACT).
gram_sempos(node14_37, n_denot).         const(n_denot).
id(node14_37, T_plzensky51278_txt_001_p1s4a23).         const(T_plzensky51278_txt_001_p1s4a23).
is_member(node14_37, 1).         const(1).
nodetype(node14_37, complex).         const(complex).
t_lemma(node14_37, zastupce).         const(zastupce).
%%%%%%%% node14_38 %%%%%%%%%%%%%%%%%%%
node(node14_38).
deepord(node14_38, 18).         const(18).
functor(node14_38, RSTR).         const(RSTR).
gram_sempos(node14_38, adj_quant_def).         const(adj_quant_def).
id(node14_38, T_plzensky51278_txt_001_p1s4a24).         const(T_plzensky51278_txt_001_p1s4a24).
nodetype(node14_38, complex).         const(complex).
t_lemma(node14_38, dva).         const(dva).
%%%%%%%% node14_39 %%%%%%%%%%%%%%%%%%%
node(node14_39).
deepord(node14_39, x18_1).         const(x18_1).
a_ref_type(node14_39, tree).         const(tree).
a_afun(node14_39, Atr).         const(Atr).
m_form(node14_39, dva).         const(dva).
m_lemma(node14_39, dva_2).         const(dva_2).
m_tag(node14_39, ClYP1__________).         const(ClYP1__________).
w_token(node14_39, dva).         const(dva).
a_ord(node14_39, 23).         const(23).
a_parent_id(node14_39, a_plzensky51278_txt_001_p1s4W24).         const(a_plzensky51278_txt_001_p1s4W24).
hide(node14_39, hide).         const(hide).
%%%%%%%% node14_40 %%%%%%%%%%%%%%%%%%%
node(node14_40).
deepord(node14_40, x19_1).         const(x19_1).
a_ref_type(node14_40, tree).         const(tree).
a_afun(node14_40, Sb).         const(Sb).
m_form(node14_40, zastupci).         const(zastupci).
m_lemma(node14_40, zastupce).         const(zastupce).
m_tag(node14_40, NNMP1_____A____).         const(NNMP1_____A____).
w_token(node14_40, zastupci).         const(zastupci).
a_ord(node14_40, 24).         const(24).
a_parent_id(node14_40, a_plzensky51278_txt_001_p1s4W22).         const(a_plzensky51278_txt_001_p1s4W22).
hide(node14_40, hide).         const(hide).
%%%%%%%% node14_41 %%%%%%%%%%%%%%%%%%%
node(node14_41).
deepord(node14_41, 23).         const(23).
functor(node14_41, DIR1).         const(DIR1).
gram_sempos(node14_41, n_denot).         const(n_denot).
id(node14_41, T_plzensky51278_txt_001_p1s4a26).         const(T_plzensky51278_txt_001_p1s4a26).
nodetype(node14_41, complex).         const(complex).
subfunctor(node14_41, basic).         const(basic).
t_lemma(node14_41, trida).         const(trida).
%%%%%%%% node14_42 %%%%%%%%%%%%%%%%%%%
node(node14_42).
deepord(node14_42, 21).         const(21).
functor(node14_42, DISJ).         const(DISJ).
id(node14_42, T_plzensky51278_txt_001_p1s4a27).         const(T_plzensky51278_txt_001_p1s4a27).
nodetype(node14_42, coap).         const(coap).
t_lemma(node14_42, nebo).         const(nebo).
%%%%%%%% node14_43 %%%%%%%%%%%%%%%%%%%
node(node14_43).
deepord(node14_43, 20).         const(20).
functor(node14_43, RSTR).         const(RSTR).
gram_sempos(node14_43, adj_quant_def).         const(adj_quant_def).
id(node14_43, T_plzensky51278_txt_001_p1s4a28).         const(T_plzensky51278_txt_001_p1s4a28).
is_member(node14_43, 1).         const(1).
nodetype(node14_43, complex).         const(complex).
t_lemma(node14_43, 6).         const(6).
%%%%%%%% node14_44 %%%%%%%%%%%%%%%%%%%
node(node14_44).
deepord(node14_44, x20_1).         const(x20_1).
a_ref_type(node14_44, tree).         const(tree).
a_afun(node14_44, Atr).         const(Atr).
m_form(node14_44, 6).         const(6).
m_lemma(node14_44, 6).         const(6).
m_tag(node14_44, C=_____________).         const(C=_____________).
w_token(node14_44, 6).         const(6).
w_no_space_after(node14_44, 1).         const(1).
a_ord(node14_44, 26).         const(26).
a_parent_id(node14_44, a_plzensky51278_txt_001_p1s4W28).         const(a_plzensky51278_txt_001_p1s4W28).
hide(node14_44, hide).         const(hide).
%%%%%%%% node14_45 %%%%%%%%%%%%%%%%%%%
node(node14_45).
deepord(node14_45, x21_1).         const(x21_1).
a_ref_type(node14_45, tree).         const(tree).
a_afun(node14_45, Coord).         const(Coord).
m_form(node14_45, nebo).         const(nebo).
m_lemma(node14_45, nebo).         const(nebo).
m_tag(node14_45, J______________).         const(J______________).
w_token(node14_45, nebo).         const(nebo).
a_ord(node14_45, 28).         const(28).
a_parent_id(node14_45, a_plzensky51278_txt_001_p1s4W31).         const(a_plzensky51278_txt_001_p1s4W31).
hide(node14_45, hide).         const(hide).
%%%%%%%% node14_46 %%%%%%%%%%%%%%%%%%%
node(node14_46).
deepord(node14_46, 22).         const(22).
functor(node14_46, RSTR).         const(RSTR).
gram_sempos(node14_46, adj_quant_def).         const(adj_quant_def).
id(node14_46, T_plzensky51278_txt_001_p1s4a30).         const(T_plzensky51278_txt_001_p1s4a30).
is_member(node14_46, 1).         const(1).
nodetype(node14_46, complex).         const(complex).
t_lemma(node14_46, 7).         const(7).
%%%%%%%% node14_47 %%%%%%%%%%%%%%%%%%%
node(node14_47).
deepord(node14_47, x22_1).         const(x22_1).
a_ref_type(node14_47, tree).         const(tree).
a_afun(node14_47, Atr).         const(Atr).
m_form(node14_47, 7).         const(7).
m_lemma(node14_47, 7).         const(7).
m_tag(node14_47, C=_____________).         const(C=_____________).
w_token(node14_47, 7).         const(7).
w_no_space_after(node14_47, 1).         const(1).
a_ord(node14_47, 29).         const(29).
a_parent_id(node14_47, a_plzensky51278_txt_001_p1s4W28).         const(a_plzensky51278_txt_001_p1s4W28).
hide(node14_47, hide).         const(hide).
%%%%%%%% node14_48 %%%%%%%%%%%%%%%%%%%
node(node14_48).
deepord(node14_48, x23_1).         const(x23_1).
a_ref_type(node14_48, tree).         const(tree).
a_afun(node14_48, AuxP).         const(AuxP).
m_form(node14_48, ze).         const(ze).
m_lemma(node14_48, z_1).         const(z_1).
m_tag(node14_48, RV__2__________).         const(RV__2__________).
w_token(node14_48, ze).         const(ze).
a_ord(node14_48, 25).         const(25).
a_parent_id(node14_48, a_plzensky51278_txt_001_p1s4W24).         const(a_plzensky51278_txt_001_p1s4W24).
hide(node14_48, hide).         const(hide).
%%%%%%%% node14_49 %%%%%%%%%%%%%%%%%%%
node(node14_49).
deepord(node14_49, x23_2).         const(x23_2).
a_ref_type(node14_49, tree).         const(tree).
a_afun(node14_49, Atr).         const(Atr).
m_form(node14_49, tridy).         const(tridy).
m_lemma(node14_49, trida).         const(trida).
m_tag(node14_49, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node14_49, tridy).         const(tridy).
w_no_space_after(node14_49, 1).         const(1).
a_ord(node14_49, 31).         const(31).
a_parent_id(node14_49, a_plzensky51278_txt_001_p1s4W25).         const(a_plzensky51278_txt_001_p1s4W25).
hide(node14_49, hide).         const(hide).
edge(node14_0, node14_1).
edge(node14_1, node14_2).
edge(node14_1, node14_3).
edge(node14_1, node14_4).
edge(node14_4, node14_5).
edge(node14_5, node14_6).
edge(node14_4, node14_7).
edge(node14_7, node14_8).
edge(node14_4, node14_9).
edge(node14_4, node14_10).
edge(node14_10, node14_11).
edge(node14_11, node14_12).
edge(node14_10, node14_13).
edge(node14_13, node14_14).
edge(node14_14, node14_15).
edge(node14_13, node14_16).
edge(node14_16, node14_17).
edge(node14_13, node14_18).
edge(node14_13, node14_19).
edge(node14_10, node14_20).
edge(node14_10, node14_21).
edge(node14_10, node14_22).
edge(node14_22, node14_23).
edge(node14_23, node14_24).
edge(node14_24, node14_25).
edge(node14_23, node14_26).
edge(node14_23, node14_27).
edge(node14_27, node14_28).
edge(node14_28, node14_29).
edge(node14_29, node14_30).
edge(node14_28, node14_31).
edge(node14_28, node14_32).
edge(node14_32, node14_33).
edge(node14_27, node14_34).
edge(node14_27, node14_35).
edge(node14_22, node14_36).
edge(node14_22, node14_37).
edge(node14_37, node14_38).
edge(node14_38, node14_39).
edge(node14_37, node14_40).
edge(node14_37, node14_41).
edge(node14_41, node14_42).
edge(node14_42, node14_43).
edge(node14_43, node14_44).
edge(node14_42, node14_45).
edge(node14_42, node14_46).
edge(node14_46, node14_47).
edge(node14_41, node14_48).
edge(node14_41, node14_49).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Zakladni skoly, ktere meli pouze prvni stupen, mohli vytvorit druzstvo ze zastupcu 4. a 5. trid a viceleta gymnazia ze zastupcu primy a sekundy. 
tree_root(node15_0).
:- valid_root(node15_0).
%%%%%%%% node15_0 %%%%%%%%%%%%%%%%%%%
node(node15_0).
atree_rf(node15_0, a_a_plzensky51278_txt_001_p1s5).         const(a_a_plzensky51278_txt_001_p1s5).
deepord(node15_0, 0).         const(0).
id(node15_0, T_plzensky51278_txt_001_p1s5).         const(T_plzensky51278_txt_001_p1s5).
nodetype(node15_0, root).         const(root).
sentence(node15_0, Zakladni_skoly__ktere_meli_pouze_prvni_stupen__mohli_vytvorit_druzstvo_ze_zastupcu_4__a_5__trid_a_viceleta_gymnazia_ze_zastupcu_primy_a_sekundy__).         const(Zakladni_skoly__ktere_meli_pouze_prvni_stupen__mohli_vytvorit_druzstvo_ze_zastupcu_4__a_5__trid_a_viceleta_gymnazia_ze_zastupcu_primy_a_sekundy__).
%%%%%%%% node15_1 %%%%%%%%%%%%%%%%%%%
node(node15_1).
deepord(node15_1, 9).         const(9).
functor(node15_1, PRED).         const(PRED).
gram_sempos(node15_1, v).         const(v).
id(node15_1, T_plzensky51278_txt_001_p1s5a11).         const(T_plzensky51278_txt_001_p1s5a11).
nodetype(node15_1, complex).         const(complex).
t_lemma(node15_1, vytvorit).         const(vytvorit).
val_frame_rf(node15_1, v_v_w8510f2).         const(v_v_w8510f2).
%%%%%%%% node15_2 %%%%%%%%%%%%%%%%%%%
node(node15_2).
deepord(node15_2, 1).         const(1).
functor(node15_2, PAT).         const(PAT).
id(node15_2, T_plzensky51278_txt_001_p1s5a30).         const(T_plzensky51278_txt_001_p1s5a30).
is_generated(node15_2, 1).         const(1).
nodetype(node15_2, qcomplex).         const(qcomplex).
t_lemma(node15_2, x_Gen).         const(x_Gen).
%%%%%%%% node15_3 %%%%%%%%%%%%%%%%%%%
node(node15_3).
deepord(node15_3, 3).         const(3).
functor(node15_3, ACT).         const(ACT).
gram_sempos(node15_3, n_denot).         const(n_denot).
id(node15_3, T_plzensky51278_txt_001_p1s5a2).         const(T_plzensky51278_txt_001_p1s5a2).
nodetype(node15_3, complex).         const(complex).
t_lemma(node15_3, skola).         const(skola).
%%%%%%%% node15_4 %%%%%%%%%%%%%%%%%%%
node(node15_4).
deepord(node15_4, 2).         const(2).
functor(node15_4, RSTR).         const(RSTR).
gram_sempos(node15_4, adj_denot).         const(adj_denot).
id(node15_4, T_plzensky51278_txt_001_p1s5a3).         const(T_plzensky51278_txt_001_p1s5a3).
nodetype(node15_4, complex).         const(complex).
t_lemma(node15_4, zakladni).         const(zakladni).
%%%%%%%% node15_5 %%%%%%%%%%%%%%%%%%%
node(node15_5).
deepord(node15_5, x2_1).         const(x2_1).
a_ref_type(node15_5, tree).         const(tree).
a_afun(node15_5, Atr).         const(Atr).
m_form(node15_5, Zakladni).         const(Zakladni).
m_lemma(node15_5, zakladni__s).         const(zakladni__s).
m_tag(node15_5, AAFP1____1A____).         const(AAFP1____1A____).
w_token(node15_5, Zakladni).         const(Zakladni).
a_ord(node15_5, 1).         const(1).
a_parent_id(node15_5, a_plzensky51278_txt_001_p1s5W2).         const(a_plzensky51278_txt_001_p1s5W2).
hide(node15_5, hide).         const(hide).
%%%%%%%% node15_6 %%%%%%%%%%%%%%%%%%%
node(node15_6).
deepord(node15_6, x3_1).         const(x3_1).
a_ref_type(node15_6, tree).         const(tree).
a_afun(node15_6, Sb).         const(Sb).
m_form(node15_6, skoly).         const(skoly).
m_lemma(node15_6, skola).         const(skola).
m_tag(node15_6, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node15_6, skoly).         const(skoly).
w_no_space_after(node15_6, 1).         const(1).
a_ord(node15_6, 2).         const(2).
a_parent_id(node15_6, a_plzensky51278_txt_001_p1s5W10).         const(a_plzensky51278_txt_001_p1s5W10).
hide(node15_6, hide).         const(hide).
%%%%%%%% node15_7 %%%%%%%%%%%%%%%%%%%
node(node15_7).
deepord(node15_7, 5).         const(5).
functor(node15_7, RSTR).         const(RSTR).
gram_sempos(node15_7, v).         const(v).
id(node15_7, T_plzensky51278_txt_001_p1s5a4).         const(T_plzensky51278_txt_001_p1s5a4).
nodetype(node15_7, complex).         const(complex).
t_lemma(node15_7, mit).         const(mit).
val_frame_rf(node15_7, v_v_w1855f1).         const(v_v_w1855f1).
%%%%%%%% node15_8 %%%%%%%%%%%%%%%%%%%
node(node15_8).
deepord(node15_8, 4).         const(4).
functor(node15_8, PAT).         const(PAT).
gram_sempos(node15_8, n_pron_indef).         const(n_pron_indef).
id(node15_8, T_plzensky51278_txt_001_p1s5a6).         const(T_plzensky51278_txt_001_p1s5a6).
nodetype(node15_8, complex).         const(complex).
t_lemma(node15_8, ktery).         const(ktery).
%%%%%%%% node15_9 %%%%%%%%%%%%%%%%%%%
node(node15_9).
deepord(node15_9, x4_1).         const(x4_1).
a_ref_type(node15_9, tree).         const(tree).
a_afun(node15_9, Obj).         const(Obj).
m_form(node15_9, ktere).         const(ktere).
m_lemma(node15_9, ktery).         const(ktery).
m_tag(node15_9, P4FP4__________).         const(P4FP4__________).
w_token(node15_9, ktere).         const(ktere).
a_ord(node15_9, 4).         const(4).
a_parent_id(node15_9, a_plzensky51278_txt_001_p1s5W5).         const(a_plzensky51278_txt_001_p1s5W5).
hide(node15_9, hide).         const(hide).
%%%%%%%% node15_10 %%%%%%%%%%%%%%%%%%%
node(node15_10).
deepord(node15_10, x5_1).         const(x5_1).
a_ref_type(node15_10, tree).         const(tree).
a_afun(node15_10, Atr).         const(Atr).
m_form(node15_10, meli).         const(meli).
m_lemma(node15_10, mit).         const(mit).
m_tag(node15_10, VpMP___XR_AA___).         const(VpMP___XR_AA___).
w_token(node15_10, meli).         const(meli).
a_ord(node15_10, 5).         const(5).
a_parent_id(node15_10, a_plzensky51278_txt_001_p1s5W2).         const(a_plzensky51278_txt_001_p1s5W2).
hide(node15_10, hide).         const(hide).
%%%%%%%% node15_11 %%%%%%%%%%%%%%%%%%%
node(node15_11).
deepord(node15_11, 8).         const(8).
functor(node15_11, ACT).         const(ACT).
gram_sempos(node15_11, n_denot).         const(n_denot).
id(node15_11, T_plzensky51278_txt_001_p1s5a7).         const(T_plzensky51278_txt_001_p1s5a7).
nodetype(node15_11, complex).         const(complex).
t_lemma(node15_11, stupen).         const(stupen).
%%%%%%%% node15_12 %%%%%%%%%%%%%%%%%%%
node(node15_12).
deepord(node15_12, 6).         const(6).
functor(node15_12, RHEM).         const(RHEM).
id(node15_12, T_plzensky51278_txt_001_p1s5a8).         const(T_plzensky51278_txt_001_p1s5a8).
nodetype(node15_12, atom).         const(atom).
t_lemma(node15_12, pouze).         const(pouze).
%%%%%%%% node15_13 %%%%%%%%%%%%%%%%%%%
node(node15_13).
deepord(node15_13, x6_1).         const(x6_1).
a_ref_type(node15_13, tree).         const(tree).
a_afun(node15_13, AuxZ).         const(AuxZ).
m_form(node15_13, pouze).         const(pouze).
m_lemma(node15_13, pouze).         const(pouze).
m_tag(node15_13, Db_____________).         const(Db_____________).
w_token(node15_13, pouze).         const(pouze).
a_ord(node15_13, 6).         const(6).
a_parent_id(node15_13, a_plzensky51278_txt_001_p1s5W8).         const(a_plzensky51278_txt_001_p1s5W8).
hide(node15_13, hide).         const(hide).
%%%%%%%% node15_14 %%%%%%%%%%%%%%%%%%%
node(node15_14).
deepord(node15_14, 7).         const(7).
functor(node15_14, RSTR).         const(RSTR).
gram_sempos(node15_14, adj_quant_def).         const(adj_quant_def).
id(node15_14, T_plzensky51278_txt_001_p1s5a9).         const(T_plzensky51278_txt_001_p1s5a9).
nodetype(node15_14, complex).         const(complex).
t_lemma(node15_14, jeden).         const(jeden).
%%%%%%%% node15_15 %%%%%%%%%%%%%%%%%%%
node(node15_15).
deepord(node15_15, x7_1).         const(x7_1).
a_ref_type(node15_15, tree).         const(tree).
a_afun(node15_15, Atr).         const(Atr).
m_form(node15_15, prvni).         const(prvni).
m_lemma(node15_15, prvni).         const(prvni).
m_tag(node15_15, CrIS1__________).         const(CrIS1__________).
w_token(node15_15, prvni).         const(prvni).
a_ord(node15_15, 7).         const(7).
a_parent_id(node15_15, a_plzensky51278_txt_001_p1s5W8).         const(a_plzensky51278_txt_001_p1s5W8).
hide(node15_15, hide).         const(hide).
%%%%%%%% node15_16 %%%%%%%%%%%%%%%%%%%
node(node15_16).
deepord(node15_16, x8_1).         const(x8_1).
a_ref_type(node15_16, tree).         const(tree).
a_afun(node15_16, Sb).         const(Sb).
m_form(node15_16, stupen).         const(stupen).
m_lemma(node15_16, stupen).         const(stupen).
m_tag(node15_16, NNIS1_____A____).         const(NNIS1_____A____).
w_token(node15_16, stupen).         const(stupen).
w_no_space_after(node15_16, 1).         const(1).
a_ord(node15_16, 8).         const(8).
a_parent_id(node15_16, a_plzensky51278_txt_001_p1s5W5).         const(a_plzensky51278_txt_001_p1s5W5).
hide(node15_16, hide).         const(hide).
%%%%%%%% node15_17 %%%%%%%%%%%%%%%%%%%
node(node15_17).
deepord(node15_17, x9_1).         const(x9_1).
a_ref_type(node15_17, tree).         const(tree).
a_afun(node15_17, Pred).         const(Pred).
m_form(node15_17, mohli).         const(mohli).
m_lemma(node15_17, moci___mit_moznost__neco_delat__).         const(moci___mit_moznost__neco_delat__).
m_tag(node15_17, VpMP___XR_AA___).         const(VpMP___XR_AA___).
w_token(node15_17, mohli).         const(mohli).
a_ord(node15_17, 10).         const(10).
a_parent_id(node15_17, a_plzensky51278_txt_001_p1s5).         const(a_plzensky51278_txt_001_p1s5).
hide(node15_17, hide).         const(hide).
%%%%%%%% node15_18 %%%%%%%%%%%%%%%%%%%
node(node15_18).
deepord(node15_18, x9_2).         const(x9_2).
a_ref_type(node15_18, tree).         const(tree).
a_afun(node15_18, Obj).         const(Obj).
m_form(node15_18, vytvorit).         const(vytvorit).
m_lemma(node15_18, vytvorit__W).         const(vytvorit__W).
m_tag(node15_18, Vf________A____).         const(Vf________A____).
w_token(node15_18, vytvorit).         const(vytvorit).
a_ord(node15_18, 11).         const(11).
a_parent_id(node15_18, a_plzensky51278_txt_001_p1s5W10).         const(a_plzensky51278_txt_001_p1s5W10).
hide(node15_18, hide).         const(hide).
%%%%%%%% node15_19 %%%%%%%%%%%%%%%%%%%
node(node15_19).
deepord(node15_19, 10).         const(10).
functor(node15_19, ACT).         const(ACT).
gram_sempos(node15_19, n_denot).         const(n_denot).
id(node15_19, T_plzensky51278_txt_001_p1s5a12).         const(T_plzensky51278_txt_001_p1s5a12).
nodetype(node15_19, complex).         const(complex).
t_lemma(node15_19, druzstvo).         const(druzstvo).
%%%%%%%% node15_20 %%%%%%%%%%%%%%%%%%%
node(node15_20).
deepord(node15_20, x10_1).         const(x10_1).
a_ref_type(node15_20, tree).         const(tree).
a_afun(node15_20, Sb).         const(Sb).
m_form(node15_20, druzstvo).         const(druzstvo).
m_lemma(node15_20, druzstvo).         const(druzstvo).
m_tag(node15_20, NNNS1_____A____).         const(NNNS1_____A____).
w_token(node15_20, druzstvo).         const(druzstvo).
a_ord(node15_20, 12).         const(12).
a_parent_id(node15_20, a_plzensky51278_txt_001_p1s5W11).         const(a_plzensky51278_txt_001_p1s5W11).
hide(node15_20, hide).         const(hide).
%%%%%%%% node15_21 %%%%%%%%%%%%%%%%%%%
node(node15_21).
deepord(node15_21, 11).         const(11).
functor(node15_21, DIR1).         const(DIR1).
gram_sempos(node15_21, n_denot).         const(n_denot).
id(node15_21, T_plzensky51278_txt_001_p1s5a14).         const(T_plzensky51278_txt_001_p1s5a14).
nodetype(node15_21, complex).         const(complex).
subfunctor(node15_21, basic).         const(basic).
t_lemma(node15_21, zastupce).         const(zastupce).
%%%%%%%% node15_22 %%%%%%%%%%%%%%%%%%%
node(node15_22).
deepord(node15_22, x11_1).         const(x11_1).
a_ref_type(node15_22, tree).         const(tree).
a_afun(node15_22, AuxP).         const(AuxP).
m_form(node15_22, ze).         const(ze).
m_lemma(node15_22, z_1).         const(z_1).
m_tag(node15_22, RV__2__________).         const(RV__2__________).
w_token(node15_22, ze).         const(ze).
a_ord(node15_22, 13).         const(13).
a_parent_id(node15_22, a_plzensky51278_txt_001_p1s5W12).         const(a_plzensky51278_txt_001_p1s5W12).
hide(node15_22, hide).         const(hide).
%%%%%%%% node15_23 %%%%%%%%%%%%%%%%%%%
node(node15_23).
deepord(node15_23, x11_2).         const(x11_2).
a_ref_type(node15_23, tree).         const(tree).
a_afun(node15_23, Atr).         const(Atr).
m_form(node15_23, zastupcu).         const(zastupcu).
m_lemma(node15_23, zastupce).         const(zastupce).
m_tag(node15_23, NNMP2_____A____).         const(NNMP2_____A____).
w_token(node15_23, zastupcu).         const(zastupcu).
a_ord(node15_23, 14).         const(14).
a_parent_id(node15_23, a_plzensky51278_txt_001_p1s5W13).         const(a_plzensky51278_txt_001_p1s5W13).
hide(node15_23, hide).         const(hide).
%%%%%%%% node15_24 %%%%%%%%%%%%%%%%%%%
node(node15_24).
deepord(node15_24, 16).         const(16).
functor(node15_24, CONJ).         const(CONJ).
id(node15_24, T_plzensky51278_txt_001_p1s5a15).         const(T_plzensky51278_txt_001_p1s5a15).
nodetype(node15_24, coap).         const(coap).
t_lemma(node15_24, a).         const(a).
%%%%%%%% node15_25 %%%%%%%%%%%%%%%%%%%
node(node15_25).
deepord(node15_25, 15).         const(15).
functor(node15_25, PAT).         const(PAT).
gram_sempos(node15_25, n_denot).         const(n_denot).
id(node15_25, T_plzensky51278_txt_001_p1s5a16).         const(T_plzensky51278_txt_001_p1s5a16).
is_member(node15_25, 1).         const(1).
nodetype(node15_25, complex).         const(complex).
t_lemma(node15_25, trida).         const(trida).
%%%%%%%% node15_26 %%%%%%%%%%%%%%%%%%%
node(node15_26).
deepord(node15_26, 13).         const(13).
functor(node15_26, CONJ).         const(CONJ).
id(node15_26, T_plzensky51278_txt_001_p1s5a17).         const(T_plzensky51278_txt_001_p1s5a17).
nodetype(node15_26, coap).         const(coap).
t_lemma(node15_26, a).         const(a).
%%%%%%%% node15_27 %%%%%%%%%%%%%%%%%%%
node(node15_27).
deepord(node15_27, 12).         const(12).
functor(node15_27, RSTR).         const(RSTR).
gram_sempos(node15_27, adj_quant_def).         const(adj_quant_def).
id(node15_27, T_plzensky51278_txt_001_p1s5a18).         const(T_plzensky51278_txt_001_p1s5a18).
is_member(node15_27, 1).         const(1).
nodetype(node15_27, complex).         const(complex).
t_lemma(node15_27, 4).         const(4).
%%%%%%%% node15_28 %%%%%%%%%%%%%%%%%%%
node(node15_28).
deepord(node15_28, x12_1).         const(x12_1).
a_ref_type(node15_28, tree).         const(tree).
a_afun(node15_28, Atr).         const(Atr).
m_form(node15_28, 4).         const(4).
m_lemma(node15_28, 4).         const(4).
m_tag(node15_28, C=_____________).         const(C=_____________).
w_token(node15_28, 4).         const(4).
w_no_space_after(node15_28, 1).         const(1).
a_ord(node15_28, 15).         const(15).
a_parent_id(node15_28, a_plzensky51278_txt_001_p1s5W17).         const(a_plzensky51278_txt_001_p1s5W17).
hide(node15_28, hide).         const(hide).
%%%%%%%% node15_29 %%%%%%%%%%%%%%%%%%%
node(node15_29).
deepord(node15_29, x13_1).         const(x13_1).
a_ref_type(node15_29, tree).         const(tree).
a_afun(node15_29, Coord).         const(Coord).
m_form(node15_29, a).         const(a).
m_lemma(node15_29, a_1).         const(a_1).
m_tag(node15_29, J______________).         const(J______________).
w_token(node15_29, a).         const(a).
a_ord(node15_29, 17).         const(17).
a_parent_id(node15_29, a_plzensky51278_txt_001_p1s5W20).         const(a_plzensky51278_txt_001_p1s5W20).
hide(node15_29, hide).         const(hide).
%%%%%%%% node15_30 %%%%%%%%%%%%%%%%%%%
node(node15_30).
deepord(node15_30, 14).         const(14).
functor(node15_30, RSTR).         const(RSTR).
gram_sempos(node15_30, adj_quant_def).         const(adj_quant_def).
id(node15_30, T_plzensky51278_txt_001_p1s5a20).         const(T_plzensky51278_txt_001_p1s5a20).
is_member(node15_30, 1).         const(1).
nodetype(node15_30, complex).         const(complex).
t_lemma(node15_30, 5).         const(5).
%%%%%%%% node15_31 %%%%%%%%%%%%%%%%%%%
node(node15_31).
deepord(node15_31, x14_1).         const(x14_1).
a_ref_type(node15_31, tree).         const(tree).
a_afun(node15_31, Atr).         const(Atr).
m_form(node15_31, 5).         const(5).
m_lemma(node15_31, 5).         const(5).
m_tag(node15_31, C=_____________).         const(C=_____________).
w_token(node15_31, 5).         const(5).
w_no_space_after(node15_31, 1).         const(1).
a_ord(node15_31, 18).         const(18).
a_parent_id(node15_31, a_plzensky51278_txt_001_p1s5W17).         const(a_plzensky51278_txt_001_p1s5W17).
hide(node15_31, hide).         const(hide).
%%%%%%%% node15_32 %%%%%%%%%%%%%%%%%%%
node(node15_32).
deepord(node15_32, x15_1).         const(x15_1).
a_ref_type(node15_32, tree).         const(tree).
a_afun(node15_32, Atr).         const(Atr).
m_form(node15_32, trid).         const(trid).
m_lemma(node15_32, trida).         const(trida).
m_tag(node15_32, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node15_32, trid).         const(trid).
a_ord(node15_32, 20).         const(20).
a_parent_id(node15_32, a_plzensky51278_txt_001_p1s5W21).         const(a_plzensky51278_txt_001_p1s5W21).
hide(node15_32, hide).         const(hide).
%%%%%%%% node15_33 %%%%%%%%%%%%%%%%%%%
node(node15_33).
deepord(node15_33, x16_1).         const(x16_1).
a_ref_type(node15_33, tree).         const(tree).
a_afun(node15_33, Coord).         const(Coord).
m_form(node15_33, a).         const(a).
m_lemma(node15_33, a_1).         const(a_1).
m_tag(node15_33, J______________).         const(J______________).
w_token(node15_33, a).         const(a).
a_ord(node15_33, 21).         const(21).
a_parent_id(node15_33, a_plzensky51278_txt_001_p1s5W14).         const(a_plzensky51278_txt_001_p1s5W14).
hide(node15_33, hide).         const(hide).
%%%%%%%% node15_34 %%%%%%%%%%%%%%%%%%%
node(node15_34).
deepord(node15_34, 18).         const(18).
functor(node15_34, RSTR).         const(RSTR).
gram_sempos(node15_34, n_denot).         const(n_denot).
id(node15_34, T_plzensky51278_txt_001_p1s5a22).         const(T_plzensky51278_txt_001_p1s5a22).
is_member(node15_34, 1).         const(1).
nodetype(node15_34, complex).         const(complex).
t_lemma(node15_34, gymnazium).         const(gymnazium).
%%%%%%%% node15_35 %%%%%%%%%%%%%%%%%%%
node(node15_35).
deepord(node15_35, 17).         const(17).
functor(node15_35, RSTR).         const(RSTR).
gram_sempos(node15_35, adj_denot).         const(adj_denot).
id(node15_35, T_plzensky51278_txt_001_p1s5a23).         const(T_plzensky51278_txt_001_p1s5a23).
nodetype(node15_35, complex).         const(complex).
t_lemma(node15_35, vicelety).         const(vicelety).
%%%%%%%% node15_36 %%%%%%%%%%%%%%%%%%%
node(node15_36).
deepord(node15_36, x17_1).         const(x17_1).
a_ref_type(node15_36, tree).         const(tree).
a_afun(node15_36, Atr).         const(Atr).
m_form(node15_36, viceleta).         const(viceleta).
m_lemma(node15_36, vicelety).         const(vicelety).
m_tag(node15_36, AANP1____1A____).         const(AANP1____1A____).
w_token(node15_36, viceleta).         const(viceleta).
a_ord(node15_36, 22).         const(22).
a_parent_id(node15_36, a_plzensky51278_txt_001_p1s5W23).         const(a_plzensky51278_txt_001_p1s5W23).
hide(node15_36, hide).         const(hide).
%%%%%%%% node15_37 %%%%%%%%%%%%%%%%%%%
node(node15_37).
deepord(node15_37, x18_1).         const(x18_1).
a_ref_type(node15_37, tree).         const(tree).
a_afun(node15_37, Atr).         const(Atr).
m_form(node15_37, gymnazia).         const(gymnazia).
m_lemma(node15_37, gymnazium).         const(gymnazium).
m_tag(node15_37, NNNP1_____A____).         const(NNNP1_____A____).
w_token(node15_37, gymnazia).         const(gymnazia).
a_ord(node15_37, 23).         const(23).
a_parent_id(node15_37, a_plzensky51278_txt_001_p1s5W21).         const(a_plzensky51278_txt_001_p1s5W21).
hide(node15_37, hide).         const(hide).
%%%%%%%% node15_38 %%%%%%%%%%%%%%%%%%%
node(node15_38).
deepord(node15_38, 21).         const(21).
functor(node15_38, CONJ).         const(CONJ).
id(node15_38, T_plzensky51278_txt_001_p1s5a26).         const(T_plzensky51278_txt_001_p1s5a26).
nodetype(node15_38, coap).         const(coap).
t_lemma(node15_38, a).         const(a).
%%%%%%%% node15_39 %%%%%%%%%%%%%%%%%%%
node(node15_39).
deepord(node15_39, 19).         const(19).
functor(node15_39, DIR1).         const(DIR1).
gram_sempos(node15_39, n_denot).         const(n_denot).
id(node15_39, T_plzensky51278_txt_001_p1s5a25).         const(T_plzensky51278_txt_001_p1s5a25).
is_member(node15_39, 1).         const(1).
nodetype(node15_39, complex).         const(complex).
subfunctor(node15_39, basic).         const(basic).
t_lemma(node15_39, zastupce).         const(zastupce).
%%%%%%%% node15_40 %%%%%%%%%%%%%%%%%%%
node(node15_40).
deepord(node15_40, x19_1).         const(x19_1).
a_ref_type(node15_40, tree).         const(tree).
a_afun(node15_40, AuxP).         const(AuxP).
m_form(node15_40, ze).         const(ze).
m_lemma(node15_40, z_1).         const(z_1).
m_tag(node15_40, RV__2__________).         const(RV__2__________).
w_token(node15_40, ze).         const(ze).
a_ord(node15_40, 24).         const(24).
a_parent_id(node15_40, a_plzensky51278_txt_001_p1s5W23).         const(a_plzensky51278_txt_001_p1s5W23).
hide(node15_40, hide).         const(hide).
%%%%%%%% node15_41 %%%%%%%%%%%%%%%%%%%
node(node15_41).
deepord(node15_41, x19_2).         const(x19_2).
a_ref_type(node15_41, tree).         const(tree).
a_afun(node15_41, Atr).         const(Atr).
m_form(node15_41, zastupcu).         const(zastupcu).
m_lemma(node15_41, zastupce).         const(zastupce).
m_tag(node15_41, NNMP2_____A____).         const(NNMP2_____A____).
w_token(node15_41, zastupcu).         const(zastupcu).
a_ord(node15_41, 25).         const(25).
a_parent_id(node15_41, a_plzensky51278_txt_001_p1s5W24).         const(a_plzensky51278_txt_001_p1s5W24).
hide(node15_41, hide).         const(hide).
%%%%%%%% node15_42 %%%%%%%%%%%%%%%%%%%
node(node15_42).
deepord(node15_42, 22).         const(22).
functor(node15_42, RSTR).         const(RSTR).
gram_sempos(node15_42, n_denot).         const(n_denot).
id(node15_42, T_plzensky51278_txt_001_p1s5a28).         const(T_plzensky51278_txt_001_p1s5a28).
nodetype(node15_42, complex).         const(complex).
t_lemma(node15_42, sekunda).         const(sekunda).
%%%%%%%% node15_43 %%%%%%%%%%%%%%%%%%%
node(node15_43).
deepord(node15_43, x22_1).         const(x22_1).
a_ref_type(node15_43, tree).         const(tree).
a_afun(node15_43, Atr).         const(Atr).
m_form(node15_43, sekundy).         const(sekundy).
m_lemma(node15_43, sekunda).         const(sekunda).
m_tag(node15_43, NNFP4_____A____).         const(NNFP4_____A____).
w_token(node15_43, sekundy).         const(sekundy).
w_no_space_after(node15_43, 1).         const(1).
a_ord(node15_43, 28).         const(28).
a_parent_id(node15_43, a_plzensky51278_txt_001_p1s5W27).         const(a_plzensky51278_txt_001_p1s5W27).
hide(node15_43, hide).         const(hide).
%%%%%%%% node15_44 %%%%%%%%%%%%%%%%%%%
node(node15_44).
deepord(node15_44, x21_1).         const(x21_1).
a_ref_type(node15_44, tree).         const(tree).
a_afun(node15_44, Coord).         const(Coord).
m_form(node15_44, a).         const(a).
m_lemma(node15_44, a_1).         const(a_1).
m_tag(node15_44, J______________).         const(J______________).
w_token(node15_44, a).         const(a).
a_ord(node15_44, 27).         const(27).
a_parent_id(node15_44, a_plzensky51278_txt_001_p1s5W25).         const(a_plzensky51278_txt_001_p1s5W25).
hide(node15_44, hide).         const(hide).
%%%%%%%% node15_45 %%%%%%%%%%%%%%%%%%%
node(node15_45).
deepord(node15_45, 23).         const(23).
functor(node15_45, DIR1).         const(DIR1).
gram_sempos(node15_45, n_denot).         const(n_denot).
id(node15_45, T_plzensky51278_txt_001_p1s5a29).         const(T_plzensky51278_txt_001_p1s5a29).
is_generated(node15_45, 1).         const(1).
is_member(node15_45, 1).         const(1).
nodetype(node15_45, complex).         const(complex).
subfunctor(node15_45, basic).         const(basic).
t_lemma(node15_45, zastupce).         const(zastupce).
%%%%%%%% node15_46 %%%%%%%%%%%%%%%%%%%
node(node15_46).
deepord(node15_46, 20).         const(20).
functor(node15_46, RSTR).         const(RSTR).
gram_sempos(node15_46, n_denot).         const(n_denot).
id(node15_46, T_plzensky51278_txt_001_p1s5a27).         const(T_plzensky51278_txt_001_p1s5a27).
nodetype(node15_46, complex).         const(complex).
t_lemma(node15_46, prim).         const(prim).
%%%%%%%% node15_47 %%%%%%%%%%%%%%%%%%%
node(node15_47).
deepord(node15_47, x20_1).         const(x20_1).
a_ref_type(node15_47, tree).         const(tree).
a_afun(node15_47, Atr).         const(Atr).
m_form(node15_47, primy).         const(primy).
m_lemma(node15_47, prim).         const(prim).
m_tag(node15_47, NNIP4_____A____).         const(NNIP4_____A____).
w_token(node15_47, primy).         const(primy).
a_ord(node15_47, 26).         const(26).
a_parent_id(node15_47, a_plzensky51278_txt_001_p1s5W27).         const(a_plzensky51278_txt_001_p1s5W27).
hide(node15_47, hide).         const(hide).
%%%%%%%% node15_48 %%%%%%%%%%%%%%%%%%%
node(node15_48).
deepord(node15_48, x23_1).         const(x23_1).
a_ref_type(node15_48, tree).         const(tree).
a_afun(node15_48, AuxP).         const(AuxP).
m_form(node15_48, ze).         const(ze).
m_lemma(node15_48, z_1).         const(z_1).
m_tag(node15_48, RV__2__________).         const(RV__2__________).
w_token(node15_48, ze).         const(ze).
a_ord(node15_48, 24).         const(24).
a_parent_id(node15_48, a_plzensky51278_txt_001_p1s5W23).         const(a_plzensky51278_txt_001_p1s5W23).
hide(node15_48, hide).         const(hide).
%%%%%%%% node15_49 %%%%%%%%%%%%%%%%%%%
node(node15_49).
deepord(node15_49, x23_2).         const(x23_2).
a_ref_type(node15_49, tree).         const(tree).
a_afun(node15_49, Atr).         const(Atr).
m_form(node15_49, zastupcu).         const(zastupcu).
m_lemma(node15_49, zastupce).         const(zastupce).
m_tag(node15_49, NNMP2_____A____).         const(NNMP2_____A____).
w_token(node15_49, zastupcu).         const(zastupcu).
a_ord(node15_49, 25).         const(25).
a_parent_id(node15_49, a_plzensky51278_txt_001_p1s5W24).         const(a_plzensky51278_txt_001_p1s5W24).
hide(node15_49, hide).         const(hide).
edge(node15_0, node15_1).
edge(node15_1, node15_2).
edge(node15_1, node15_3).
edge(node15_3, node15_4).
edge(node15_4, node15_5).
edge(node15_3, node15_6).
edge(node15_3, node15_7).
edge(node15_7, node15_8).
edge(node15_8, node15_9).
edge(node15_7, node15_10).
edge(node15_7, node15_11).
edge(node15_11, node15_12).
edge(node15_12, node15_13).
edge(node15_11, node15_14).
edge(node15_14, node15_15).
edge(node15_11, node15_16).
edge(node15_1, node15_17).
edge(node15_1, node15_18).
edge(node15_1, node15_19).
edge(node15_19, node15_20).
edge(node15_19, node15_21).
edge(node15_21, node15_22).
edge(node15_21, node15_23).
edge(node15_21, node15_24).
edge(node15_24, node15_25).
edge(node15_25, node15_26).
edge(node15_26, node15_27).
edge(node15_27, node15_28).
edge(node15_26, node15_29).
edge(node15_26, node15_30).
edge(node15_30, node15_31).
edge(node15_25, node15_32).
edge(node15_24, node15_33).
edge(node15_24, node15_34).
edge(node15_34, node15_35).
edge(node15_35, node15_36).
edge(node15_34, node15_37).
edge(node15_34, node15_38).
edge(node15_38, node15_39).
edge(node15_39, node15_40).
edge(node15_39, node15_41).
edge(node15_39, node15_42).
edge(node15_42, node15_43).
edge(node15_38, node15_44).
edge(node15_38, node15_45).
edge(node15_45, node15_46).
edge(node15_46, node15_47).
edge(node15_45, node15_48).
edge(node15_45, node15_49).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pro soutezni druzstva byly pripraveny prakticke i vedomostni ukoly souvisejici s vyukou predmetu "Ochrana cloveka za mimoradnych udalosti". 
tree_root(node16_0).
:- valid_root(node16_0).
%%%%%%%% node16_0 %%%%%%%%%%%%%%%%%%%
node(node16_0).
atree_rf(node16_0, a_a_plzensky51278_txt_001_p2s1).         const(a_a_plzensky51278_txt_001_p2s1).
deepord(node16_0, 0).         const(0).
id(node16_0, T_plzensky51278_txt_001_p2s1).         const(T_plzensky51278_txt_001_p2s1).
nodetype(node16_0, root).         const(root).
sentence(node16_0, Pro_soutezni_druzstva_byly_pripraveny_prakticke_i_vedomostni_ukoly_souvisejici_s_vyukou_predmetu__Ochrana_cloveka_za_mimoradnych_udalosti___).         const(Pro_soutezni_druzstva_byly_pripraveny_prakticke_i_vedomostni_ukoly_souvisejici_s_vyukou_predmetu__Ochrana_cloveka_za_mimoradnych_udalosti___).
%%%%%%%% node16_1 %%%%%%%%%%%%%%%%%%%
node(node16_1).
deepord(node16_1, 3).         const(3).
functor(node16_1, PRED).         const(PRED).
gram_sempos(node16_1, v).         const(v).
id(node16_1, T_plzensky51278_txt_001_p2s1a1).         const(T_plzensky51278_txt_001_p2s1a1).
nodetype(node16_1, complex).         const(complex).
t_lemma(node16_1, pripravit).         const(pripravit).
val_frame_rf(node16_1, v_v_w5238f1).         const(v_v_w5238f1).
%%%%%%%% node16_2 %%%%%%%%%%%%%%%%%%%
node(node16_2).
deepord(node16_2, 2).         const(2).
functor(node16_2, BEN).         const(BEN).
gram_sempos(node16_2, n_denot).         const(n_denot).
id(node16_2, T_plzensky51278_txt_001_p2s1a3).         const(T_plzensky51278_txt_001_p2s1a3).
nodetype(node16_2, complex).         const(complex).
subfunctor(node16_2, basic).         const(basic).
t_lemma(node16_2, druzstvo).         const(druzstvo).
%%%%%%%% node16_3 %%%%%%%%%%%%%%%%%%%
node(node16_3).
deepord(node16_3, 1).         const(1).
functor(node16_3, RSTR).         const(RSTR).
gram_sempos(node16_3, adj_denot).         const(adj_denot).
id(node16_3, T_plzensky51278_txt_001_p2s1a4).         const(T_plzensky51278_txt_001_p2s1a4).
nodetype(node16_3, complex).         const(complex).
t_lemma(node16_3, soutezni).         const(soutezni).
%%%%%%%% node16_4 %%%%%%%%%%%%%%%%%%%
node(node16_4).
deepord(node16_4, x1_1).         const(x1_1).
a_ref_type(node16_4, tree).         const(tree).
a_afun(node16_4, Atr).         const(Atr).
m_form(node16_4, soutezni).         const(soutezni).
m_lemma(node16_4, soutezni).         const(soutezni).
m_tag(node16_4, AANP4____1A____).         const(AANP4____1A____).
w_token(node16_4, soutezni).         const(soutezni).
a_ord(node16_4, 2).         const(2).
a_parent_id(node16_4, a_plzensky51278_txt_001_p2s1W3).         const(a_plzensky51278_txt_001_p2s1W3).
hide(node16_4, hide).         const(hide).
%%%%%%%% node16_5 %%%%%%%%%%%%%%%%%%%
node(node16_5).
deepord(node16_5, x2_1).         const(x2_1).
a_ref_type(node16_5, tree).         const(tree).
a_afun(node16_5, AuxP).         const(AuxP).
m_form(node16_5, Pro).         const(Pro).
m_lemma(node16_5, pro_1).         const(pro_1).
m_tag(node16_5, RR__4__________).         const(RR__4__________).
w_token(node16_5, Pro).         const(Pro).
a_ord(node16_5, 1).         const(1).
a_parent_id(node16_5, a_plzensky51278_txt_001_p2s1W5).         const(a_plzensky51278_txt_001_p2s1W5).
hide(node16_5, hide).         const(hide).
%%%%%%%% node16_6 %%%%%%%%%%%%%%%%%%%
node(node16_6).
deepord(node16_6, x2_2).         const(x2_2).
a_ref_type(node16_6, tree).         const(tree).
a_afun(node16_6, Adv).         const(Adv).
m_form(node16_6, druzstva).         const(druzstva).
m_lemma(node16_6, druzstvo).         const(druzstvo).
m_tag(node16_6, NNNP4_____A____).         const(NNNP4_____A____).
w_token(node16_6, druzstva).         const(druzstva).
a_ord(node16_6, 3).         const(3).
a_parent_id(node16_6, a_plzensky51278_txt_001_p2s1W1).         const(a_plzensky51278_txt_001_p2s1W1).
hide(node16_6, hide).         const(hide).
%%%%%%%% node16_7 %%%%%%%%%%%%%%%%%%%
node(node16_7).
deepord(node16_7, x3_1).         const(x3_1).
a_ref_type(node16_7, tree).         const(tree).
a_afun(node16_7, AuxV).         const(AuxV).
m_form(node16_7, byly).         const(byly).
m_lemma(node16_7, byt).         const(byt).
m_tag(node16_7, VpTP___XR_AA___).         const(VpTP___XR_AA___).
w_token(node16_7, byly).         const(byly).
a_ord(node16_7, 4).         const(4).
a_parent_id(node16_7, a_plzensky51278_txt_001_p2s1W5).         const(a_plzensky51278_txt_001_p2s1W5).
hide(node16_7, hide).         const(hide).
%%%%%%%% node16_8 %%%%%%%%%%%%%%%%%%%
node(node16_8).
deepord(node16_8, x3_2).         const(x3_2).
a_ref_type(node16_8, tree).         const(tree).
a_afun(node16_8, Pred).         const(Pred).
m_form(node16_8, pripraveny).         const(pripraveny).
m_lemma(node16_8, pripravit__W).         const(pripravit__W).
m_tag(node16_8, VsTP___XX_AP___).         const(VsTP___XX_AP___).
w_token(node16_8, pripraveny).         const(pripraveny).
a_ord(node16_8, 5).         const(5).
a_parent_id(node16_8, a_plzensky51278_txt_001_p2s1).         const(a_plzensky51278_txt_001_p2s1).
hide(node16_8, hide).         const(hide).
%%%%%%%% node16_9 %%%%%%%%%%%%%%%%%%%
node(node16_9).
deepord(node16_9, 11).         const(11).
functor(node16_9, PAT).         const(PAT).
gram_sempos(node16_9, n_denot).         const(n_denot).
id(node16_9, T_plzensky51278_txt_001_p2s1a6).         const(T_plzensky51278_txt_001_p2s1a6).
nodetype(node16_9, complex).         const(complex).
t_lemma(node16_9, ochrana).         const(ochrana).
%%%%%%%% node16_10 %%%%%%%%%%%%%%%%%%%
node(node16_10).
deepord(node16_10, 7).         const(7).
functor(node16_10, PAT).         const(PAT).
gram_sempos(node16_10, n_denot).         const(n_denot).
id(node16_10, T_plzensky51278_txt_001_p2s1a7).         const(T_plzensky51278_txt_001_p2s1a7).
nodetype(node16_10, complex).         const(complex).
t_lemma(node16_10, ukol).         const(ukol).
%%%%%%%% node16_11 %%%%%%%%%%%%%%%%%%%
node(node16_11).
deepord(node16_11, 5).         const(5).
functor(node16_11, CONJ).         const(CONJ).
id(node16_11, T_plzensky51278_txt_001_p2s1a8).         const(T_plzensky51278_txt_001_p2s1a8).
nodetype(node16_11, coap).         const(coap).
t_lemma(node16_11, i).         const(i).
%%%%%%%% node16_12 %%%%%%%%%%%%%%%%%%%
node(node16_12).
deepord(node16_12, 4).         const(4).
functor(node16_12, RSTR).         const(RSTR).
gram_sempos(node16_12, adj_denot).         const(adj_denot).
id(node16_12, T_plzensky51278_txt_001_p2s1a9).         const(T_plzensky51278_txt_001_p2s1a9).
is_member(node16_12, 1).         const(1).
nodetype(node16_12, complex).         const(complex).
t_lemma(node16_12, prakticky).         const(prakticky).
%%%%%%%% node16_13 %%%%%%%%%%%%%%%%%%%
node(node16_13).
deepord(node16_13, x4_1).         const(x4_1).
a_ref_type(node16_13, tree).         const(tree).
a_afun(node16_13, Atr).         const(Atr).
m_form(node16_13, prakticke).         const(prakticke).
m_lemma(node16_13, prakticky).         const(prakticky).
m_tag(node16_13, AAIP1____1A____).         const(AAIP1____1A____).
w_token(node16_13, prakticke).         const(prakticke).
a_ord(node16_13, 6).         const(6).
a_parent_id(node16_13, a_plzensky51278_txt_001_p2s1W7).         const(a_plzensky51278_txt_001_p2s1W7).
hide(node16_13, hide).         const(hide).
%%%%%%%% node16_14 %%%%%%%%%%%%%%%%%%%
node(node16_14).
deepord(node16_14, x5_1).         const(x5_1).
a_ref_type(node16_14, tree).         const(tree).
a_afun(node16_14, Coord).         const(Coord).
m_form(node16_14, i).         const(i).
m_lemma(node16_14, i_1).         const(i_1).
m_tag(node16_14, J______________).         const(J______________).
w_token(node16_14, i).         const(i).
a_ord(node16_14, 7).         const(7).
a_parent_id(node16_14, a_plzensky51278_txt_001_p2s1W9).         const(a_plzensky51278_txt_001_p2s1W9).
hide(node16_14, hide).         const(hide).
%%%%%%%% node16_15 %%%%%%%%%%%%%%%%%%%
node(node16_15).
deepord(node16_15, 6).         const(6).
functor(node16_15, RSTR).         const(RSTR).
gram_sempos(node16_15, adj_denot).         const(adj_denot).
id(node16_15, T_plzensky51278_txt_001_p2s1a10).         const(T_plzensky51278_txt_001_p2s1a10).
is_member(node16_15, 1).         const(1).
nodetype(node16_15, complex).         const(complex).
t_lemma(node16_15, vedomostni).         const(vedomostni).
%%%%%%%% node16_16 %%%%%%%%%%%%%%%%%%%
node(node16_16).
deepord(node16_16, x6_1).         const(x6_1).
a_ref_type(node16_16, tree).         const(tree).
a_afun(node16_16, Atr).         const(Atr).
m_form(node16_16, vedomostni).         const(vedomostni).
m_lemma(node16_16, vedomostni).         const(vedomostni).
m_tag(node16_16, AAIP4____1A____).         const(AAIP4____1A____).
w_token(node16_16, vedomostni).         const(vedomostni).
a_ord(node16_16, 8).         const(8).
a_parent_id(node16_16, a_plzensky51278_txt_001_p2s1W7).         const(a_plzensky51278_txt_001_p2s1W7).
hide(node16_16, hide).         const(hide).
%%%%%%%% node16_17 %%%%%%%%%%%%%%%%%%%
node(node16_17).
deepord(node16_17, x7_1).         const(x7_1).
a_ref_type(node16_17, tree).         const(tree).
a_afun(node16_17, Atr).         const(Atr).
m_form(node16_17, ukoly).         const(ukoly).
m_lemma(node16_17, ukol).         const(ukol).
m_tag(node16_17, NNIP4_____A____).         const(NNIP4_____A____).
w_token(node16_17, ukoly).         const(ukoly).
a_ord(node16_17, 9).         const(9).
a_parent_id(node16_17, a_plzensky51278_txt_001_p2s1W15).         const(a_plzensky51278_txt_001_p2s1W15).
hide(node16_17, hide).         const(hide).
%%%%%%%% node16_18 %%%%%%%%%%%%%%%%%%%
node(node16_18).
deepord(node16_18, 8).         const(8).
functor(node16_18, RSTR).         const(RSTR).
gram_sempos(node16_18, adj_denot).         const(adj_denot).
id(node16_18, T_plzensky51278_txt_001_p2s1a11).         const(T_plzensky51278_txt_001_p2s1a11).
nodetype(node16_18, complex).         const(complex).
t_lemma(node16_18, souvisejici).         const(souvisejici).
%%%%%%%% node16_19 %%%%%%%%%%%%%%%%%%%
node(node16_19).
deepord(node16_19, x8_1).         const(x8_1).
a_ref_type(node16_19, tree).         const(tree).
a_afun(node16_19, Atr).         const(Atr).
m_form(node16_19, souvisejici).         const(souvisejici).
m_lemma(node16_19, souvisejici____4t_).         const(souvisejici____4t_).
m_tag(node16_19, AGIS4_____A____).         const(AGIS4_____A____).
w_token(node16_19, souvisejici).         const(souvisejici).
a_ord(node16_19, 10).         const(10).
a_parent_id(node16_19, a_plzensky51278_txt_001_p2s1W9).         const(a_plzensky51278_txt_001_p2s1W9).
hide(node16_19, hide).         const(hide).
%%%%%%%% node16_20 %%%%%%%%%%%%%%%%%%%
node(node16_20).
deepord(node16_20, 9).         const(9).
functor(node16_20, PAT).         const(PAT).
gram_sempos(node16_20, n_denot).         const(n_denot).
id(node16_20, T_plzensky51278_txt_001_p2s1a13).         const(T_plzensky51278_txt_001_p2s1a13).
nodetype(node16_20, complex).         const(complex).
t_lemma(node16_20, vyuka).         const(vyuka).
%%%%%%%% node16_21 %%%%%%%%%%%%%%%%%%%
node(node16_21).
deepord(node16_21, x9_1).         const(x9_1).
a_ref_type(node16_21, tree).         const(tree).
a_afun(node16_21, AuxP).         const(AuxP).
m_form(node16_21, s).         const(s).
m_lemma(node16_21, s_1).         const(s_1).
m_tag(node16_21, RR__7__________).         const(RR__7__________).
w_token(node16_21, s).         const(s).
a_ord(node16_21, 11).         const(11).
a_parent_id(node16_21, a_plzensky51278_txt_001_p2s1W10).         const(a_plzensky51278_txt_001_p2s1W10).
hide(node16_21, hide).         const(hide).
%%%%%%%% node16_22 %%%%%%%%%%%%%%%%%%%
node(node16_22).
deepord(node16_22, x9_2).         const(x9_2).
a_ref_type(node16_22, tree).         const(tree).
a_afun(node16_22, Obj).         const(Obj).
m_form(node16_22, vyukou).         const(vyukou).
m_lemma(node16_22, vyuka).         const(vyuka).
m_tag(node16_22, NNFS7_____A____).         const(NNFS7_____A____).
w_token(node16_22, vyukou).         const(vyukou).
a_ord(node16_22, 12).         const(12).
a_parent_id(node16_22, a_plzensky51278_txt_001_p2s1W11).         const(a_plzensky51278_txt_001_p2s1W11).
hide(node16_22, hide).         const(hide).
%%%%%%%% node16_23 %%%%%%%%%%%%%%%%%%%
node(node16_23).
deepord(node16_23, 10).         const(10).
functor(node16_23, PAT).         const(PAT).
gram_sempos(node16_23, n_denot).         const(n_denot).
id(node16_23, T_plzensky51278_txt_001_p2s1a14).         const(T_plzensky51278_txt_001_p2s1a14).
nodetype(node16_23, complex).         const(complex).
t_lemma(node16_23, predmet).         const(predmet).
%%%%%%%% node16_24 %%%%%%%%%%%%%%%%%%%
node(node16_24).
deepord(node16_24, x10_1).         const(x10_1).
a_ref_type(node16_24, tree).         const(tree).
a_afun(node16_24, Atr).         const(Atr).
m_form(node16_24, predmetu).         const(predmetu).
m_lemma(node16_24, predmet).         const(predmet).
m_tag(node16_24, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node16_24, predmetu).         const(predmetu).
a_ord(node16_24, 13).         const(13).
a_parent_id(node16_24, a_plzensky51278_txt_001_p2s1W12).         const(a_plzensky51278_txt_001_p2s1W12).
hide(node16_24, hide).         const(hide).
%%%%%%%% node16_25 %%%%%%%%%%%%%%%%%%%
node(node16_25).
deepord(node16_25, x11_1).         const(x11_1).
a_ref_type(node16_25, tree).         const(tree).
a_afun(node16_25, Sb).         const(Sb).
m_form(node16_25, Ochrana).         const(Ochrana).
m_lemma(node16_25, ochrana).         const(ochrana).
m_tag(node16_25, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node16_25, Ochrana).         const(Ochrana).
a_ord(node16_25, 15).         const(15).
a_parent_id(node16_25, a_plzensky51278_txt_001_p2s1W5).         const(a_plzensky51278_txt_001_p2s1W5).
hide(node16_25, hide).         const(hide).
%%%%%%%% node16_26 %%%%%%%%%%%%%%%%%%%
node(node16_26).
deepord(node16_26, 12).         const(12).
functor(node16_26, PAT).         const(PAT).
gram_sempos(node16_26, n_denot).         const(n_denot).
id(node16_26, T_plzensky51278_txt_001_p2s1a16).         const(T_plzensky51278_txt_001_p2s1a16).
nodetype(node16_26, complex).         const(complex).
t_lemma(node16_26, clovek).         const(clovek).
%%%%%%%% node16_27 %%%%%%%%%%%%%%%%%%%
node(node16_27).
deepord(node16_27, x12_1).         const(x12_1).
a_ref_type(node16_27, tree).         const(tree).
a_afun(node16_27, Atr).         const(Atr).
m_form(node16_27, cloveka).         const(cloveka).
m_lemma(node16_27, clovek).         const(clovek).
m_tag(node16_27, NNMS2_____A____).         const(NNMS2_____A____).
w_token(node16_27, cloveka).         const(cloveka).
a_ord(node16_27, 16).         const(16).
a_parent_id(node16_27, a_plzensky51278_txt_001_p2s1W15).         const(a_plzensky51278_txt_001_p2s1W15).
hide(node16_27, hide).         const(hide).
%%%%%%%% node16_28 %%%%%%%%%%%%%%%%%%%
node(node16_28).
deepord(node16_28, 13).         const(13).
functor(node16_28, LOC).         const(LOC).
gram_sempos(node16_28, adj_denot).         const(adj_denot).
id(node16_28, T_plzensky51278_txt_001_p2s1a19).         const(T_plzensky51278_txt_001_p2s1a19).
nodetype(node16_28, complex).         const(complex).
subfunctor(node16_28, behind).         const(behind).
t_lemma(node16_28, mimoradny).         const(mimoradny).
%%%%%%%% node16_29 %%%%%%%%%%%%%%%%%%%
node(node16_29).
deepord(node16_29, x13_1).         const(x13_1).
a_ref_type(node16_29, tree).         const(tree).
a_afun(node16_29, AuxP).         const(AuxP).
m_form(node16_29, za).         const(za).
m_lemma(node16_29, za_1).         const(za_1).
m_tag(node16_29, RR__4__________).         const(RR__4__________).
w_token(node16_29, za).         const(za).
a_ord(node16_29, 17).         const(17).
a_parent_id(node16_29, a_plzensky51278_txt_001_p2s1W5).         const(a_plzensky51278_txt_001_p2s1W5).
hide(node16_29, hide).         const(hide).
%%%%%%%% node16_30 %%%%%%%%%%%%%%%%%%%
node(node16_30).
deepord(node16_30, x13_2).         const(x13_2).
a_ref_type(node16_30, tree).         const(tree).
a_afun(node16_30, Atr).         const(Atr).
m_form(node16_30, mimoradnych).         const(mimoradnych).
m_lemma(node16_30, mimoradny).         const(mimoradny).
m_tag(node16_30, AAFP2____1A____).         const(AAFP2____1A____).
w_token(node16_30, mimoradnych).         const(mimoradnych).
a_ord(node16_30, 18).         const(18).
a_parent_id(node16_30, a_plzensky51278_txt_001_p2s1W19).         const(a_plzensky51278_txt_001_p2s1W19).
hide(node16_30, hide).         const(hide).
%%%%%%%% node16_31 %%%%%%%%%%%%%%%%%%%
node(node16_31).
deepord(node16_31, x13_3).         const(x13_3).
a_ref_type(node16_31, tree).         const(tree).
a_afun(node16_31, AuxP).         const(AuxP).
m_form(node16_31, udalosti).         const(udalosti).
m_lemma(node16_31, udalost__a____3y_).         const(udalost__a____3y_).
m_tag(node16_31, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node16_31, udalosti).         const(udalosti).
w_no_space_after(node16_31, 1).         const(1).
a_ord(node16_31, 19).         const(19).
a_parent_id(node16_31, a_plzensky51278_txt_001_p2s1W17).         const(a_plzensky51278_txt_001_p2s1W17).
hide(node16_31, hide).         const(hide).
edge(node16_0, node16_1).
edge(node16_1, node16_2).
edge(node16_2, node16_3).
edge(node16_3, node16_4).
edge(node16_2, node16_5).
edge(node16_2, node16_6).
edge(node16_1, node16_7).
edge(node16_1, node16_8).
edge(node16_1, node16_9).
edge(node16_9, node16_10).
edge(node16_10, node16_11).
edge(node16_11, node16_12).
edge(node16_12, node16_13).
edge(node16_11, node16_14).
edge(node16_11, node16_15).
edge(node16_15, node16_16).
edge(node16_10, node16_17).
edge(node16_10, node16_18).
edge(node16_18, node16_19).
edge(node16_18, node16_20).
edge(node16_20, node16_21).
edge(node16_20, node16_22).
edge(node16_20, node16_23).
edge(node16_23, node16_24).
edge(node16_9, node16_25).
edge(node16_9, node16_26).
edge(node16_26, node16_27).
edge(node16_1, node16_28).
edge(node16_28, node16_29).
edge(node16_28, node16_30).
edge(node16_28, node16_31).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Deti cekalo napriklad nahlaseni dopravni nehody, pozaru aj., na nekterou z linek tisnoveho volani. 
tree_root(node17_0).
:- valid_root(node17_0).
%%%%%%%% node17_0 %%%%%%%%%%%%%%%%%%%
node(node17_0).
atree_rf(node17_0, a_a_plzensky51278_txt_001_p2s2).         const(a_a_plzensky51278_txt_001_p2s2).
deepord(node17_0, 0).         const(0).
id(node17_0, T_plzensky51278_txt_001_p2s2).         const(T_plzensky51278_txt_001_p2s2).
nodetype(node17_0, root).         const(root).
sentence(node17_0, Deti_cekalo_napriklad_nahlaseni_dopravni_nehody__pozaru_aj___na_nekterou_z_linek_tisnoveho_volani__).         const(Deti_cekalo_napriklad_nahlaseni_dopravni_nehody__pozaru_aj___na_nekterou_z_linek_tisnoveho_volani__).
%%%%%%%% node17_1 %%%%%%%%%%%%%%%%%%%
node(node17_1).
deepord(node17_1, 3).         const(3).
functor(node17_1, PRED).         const(PRED).
gram_sempos(node17_1, v).         const(v).
id(node17_1, T_plzensky51278_txt_001_p2s2a1).         const(T_plzensky51278_txt_001_p2s2a1).
nodetype(node17_1, complex).         const(complex).
t_lemma(node17_1, cekat).         const(cekat).
val_frame_rf(node17_1, v_v_w311f1).         const(v_v_w311f1).
%%%%%%%% node17_2 %%%%%%%%%%%%%%%%%%%
node(node17_2).
deepord(node17_2, 1).         const(1).
functor(node17_2, PAT).         const(PAT).
id(node17_2, T_plzensky51278_txt_001_p2s2a18).         const(T_plzensky51278_txt_001_p2s2a18).
is_generated(node17_2, 1).         const(1).
nodetype(node17_2, qcomplex).         const(qcomplex).
t_lemma(node17_2, x_Gen).         const(x_Gen).
%%%%%%%% node17_3 %%%%%%%%%%%%%%%%%%%
node(node17_3).
deepord(node17_3, 2).         const(2).
functor(node17_3, ACT).         const(ACT).
gram_sempos(node17_3, n_denot).         const(n_denot).
id(node17_3, T_plzensky51278_txt_001_p2s2a2).         const(T_plzensky51278_txt_001_p2s2a2).
nodetype(node17_3, complex).         const(complex).
t_lemma(node17_3, dite).         const(dite).
%%%%%%%% node17_4 %%%%%%%%%%%%%%%%%%%
node(node17_4).
deepord(node17_4, x2_1).         const(x2_1).
a_ref_type(node17_4, tree).         const(tree).
a_afun(node17_4, Sb).         const(Sb).
m_form(node17_4, Deti).         const(Deti).
m_lemma(node17_4, dite).         const(dite).
m_tag(node17_4, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node17_4, Deti).         const(Deti).
a_ord(node17_4, 1).         const(1).
a_parent_id(node17_4, a_plzensky51278_txt_001_p2s2W2).         const(a_plzensky51278_txt_001_p2s2W2).
hide(node17_4, hide).         const(hide).
%%%%%%%% node17_5 %%%%%%%%%%%%%%%%%%%
node(node17_5).
deepord(node17_5, x3_1).         const(x3_1).
a_ref_type(node17_5, tree).         const(tree).
a_afun(node17_5, Pred).         const(Pred).
m_form(node17_5, cekalo).         const(cekalo).
m_lemma(node17_5, cekat__T).         const(cekat__T).
m_tag(node17_5, VpNS___XR_AA___).         const(VpNS___XR_AA___).
w_token(node17_5, cekalo).         const(cekalo).
a_ord(node17_5, 2).         const(2).
a_parent_id(node17_5, a_plzensky51278_txt_001_p2s2).         const(a_plzensky51278_txt_001_p2s2).
hide(node17_5, hide).         const(hide).
%%%%%%%% node17_6 %%%%%%%%%%%%%%%%%%%
node(node17_6).
deepord(node17_6, 4).         const(4).
functor(node17_6, RHEM).         const(RHEM).
id(node17_6, T_plzensky51278_txt_001_p2s2a4).         const(T_plzensky51278_txt_001_p2s2a4).
nodetype(node17_6, atom).         const(atom).
t_lemma(node17_6, napriklad).         const(napriklad).
%%%%%%%% node17_7 %%%%%%%%%%%%%%%%%%%
node(node17_7).
deepord(node17_7, x4_1).         const(x4_1).
a_ref_type(node17_7, tree).         const(tree).
a_afun(node17_7, AuxZ).         const(AuxZ).
m_form(node17_7, napriklad).         const(napriklad).
m_lemma(node17_7, napriklad).         const(napriklad).
m_tag(node17_7, Db_____________).         const(Db_____________).
w_token(node17_7, napriklad).         const(napriklad).
a_ord(node17_7, 3).         const(3).
a_parent_id(node17_7, a_plzensky51278_txt_001_p2s2W4).         const(a_plzensky51278_txt_001_p2s2W4).
hide(node17_7, hide).         const(hide).
%%%%%%%% node17_8 %%%%%%%%%%%%%%%%%%%
node(node17_8).
deepord(node17_8, 5).         const(5).
functor(node17_8, ACT).         const(ACT).
gram_sempos(node17_8, n_denot).         const(n_denot).
id(node17_8, T_plzensky51278_txt_001_p2s2a3).         const(T_plzensky51278_txt_001_p2s2a3).
nodetype(node17_8, complex).         const(complex).
t_lemma(node17_8, nahlaseni).         const(nahlaseni).
%%%%%%%% node17_9 %%%%%%%%%%%%%%%%%%%
node(node17_9).
deepord(node17_9, x5_1).         const(x5_1).
a_ref_type(node17_9, tree).         const(tree).
a_afun(node17_9, Sb).         const(Sb).
m_form(node17_9, nahlaseni).         const(nahlaseni).
m_lemma(node17_9, nahlaseni____4sit_).         const(nahlaseni____4sit_).
m_tag(node17_9, NNNS1_____A____).         const(NNNS1_____A____).
w_token(node17_9, nahlaseni).         const(nahlaseni).
a_ord(node17_9, 4).         const(4).
a_parent_id(node17_9, a_plzensky51278_txt_001_p2s2W2).         const(a_plzensky51278_txt_001_p2s2W2).
hide(node17_9, hide).         const(hide).
%%%%%%%% node17_10 %%%%%%%%%%%%%%%%%%%
node(node17_10).
deepord(node17_10, 8).         const(8).
functor(node17_10, RSTR).         const(RSTR).
id(node17_10, T_plzensky51278_txt_001_p2s2a5).         const(T_plzensky51278_txt_001_p2s2a5).
nodetype(node17_10, complex).         const(complex).
t_lemma(node17_10, x_Comma).         const(x_Comma).
%%%%%%%% node17_11 %%%%%%%%%%%%%%%%%%%
node(node17_11).
deepord(node17_11, 7).         const(7).
functor(node17_11, RSTR).         const(RSTR).
gram_sempos(node17_11, n_denot).         const(n_denot).
id(node17_11, T_plzensky51278_txt_001_p2s2a6).         const(T_plzensky51278_txt_001_p2s2a6).
nodetype(node17_11, complex).         const(complex).
t_lemma(node17_11, nehoda).         const(nehoda).
%%%%%%%% node17_12 %%%%%%%%%%%%%%%%%%%
node(node17_12).
deepord(node17_12, 6).         const(6).
functor(node17_12, RSTR).         const(RSTR).
gram_sempos(node17_12, adj_denot).         const(adj_denot).
id(node17_12, T_plzensky51278_txt_001_p2s2a7).         const(T_plzensky51278_txt_001_p2s2a7).
nodetype(node17_12, complex).         const(complex).
t_lemma(node17_12, dopravni).         const(dopravni).
%%%%%%%% node17_13 %%%%%%%%%%%%%%%%%%%
node(node17_13).
deepord(node17_13, x6_1).         const(x6_1).
a_ref_type(node17_13, tree).         const(tree).
a_afun(node17_13, Atr).         const(Atr).
m_form(node17_13, dopravni).         const(dopravni).
m_lemma(node17_13, dopravni).         const(dopravni).
m_tag(node17_13, AAFS2____1A____).         const(AAFS2____1A____).
w_token(node17_13, dopravni).         const(dopravni).
a_ord(node17_13, 5).         const(5).
a_parent_id(node17_13, a_plzensky51278_txt_001_p2s2W6).         const(a_plzensky51278_txt_001_p2s2W6).
hide(node17_13, hide).         const(hide).
%%%%%%%% node17_14 %%%%%%%%%%%%%%%%%%%
node(node17_14).
deepord(node17_14, x7_1).         const(x7_1).
a_ref_type(node17_14, tree).         const(tree).
a_afun(node17_14, Atr).         const(Atr).
m_form(node17_14, nehody).         const(nehody).
m_lemma(node17_14, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node17_14, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node17_14, nehody).         const(nehody).
w_no_space_after(node17_14, 1).         const(1).
a_ord(node17_14, 6).         const(6).
a_parent_id(node17_14, a_plzensky51278_txt_001_p2s2W7).         const(a_plzensky51278_txt_001_p2s2W7).
hide(node17_14, hide).         const(hide).
%%%%%%%% node17_15 %%%%%%%%%%%%%%%%%%%
node(node17_15).
deepord(node17_15, x8_1).         const(x8_1).
a_ref_type(node17_15, tree).         const(tree).
a_afun(node17_15, AuxX).         const(AuxX).
m_form(node17_15, x_).         const(x_).
m_lemma(node17_15, x_).         const(x_).
m_tag(node17_15, Z______________).         const(Z______________).
w_token(node17_15, x_).         const(x_).
a_ord(node17_15, 7).         const(7).
a_parent_id(node17_15, a_plzensky51278_txt_001_p2s2W4).         const(a_plzensky51278_txt_001_p2s2W4).
hide(node17_15, hide).         const(hide).
%%%%%%%% node17_16 %%%%%%%%%%%%%%%%%%%
node(node17_16).
deepord(node17_16, 9).         const(9).
functor(node17_16, RSTR).         const(RSTR).
gram_sempos(node17_16, n_denot).         const(n_denot).
id(node17_16, T_plzensky51278_txt_001_p2s2a8).         const(T_plzensky51278_txt_001_p2s2a8).
nodetype(node17_16, complex).         const(complex).
t_lemma(node17_16, pozar).         const(pozar).
%%%%%%%% node17_17 %%%%%%%%%%%%%%%%%%%
node(node17_17).
deepord(node17_17, x9_1).         const(x9_1).
a_ref_type(node17_17, tree).         const(tree).
a_afun(node17_17, Atr).         const(Atr).
m_form(node17_17, pozaru).         const(pozaru).
m_lemma(node17_17, pozar).         const(pozar).
m_tag(node17_17, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node17_17, pozaru).         const(pozaru).
a_ord(node17_17, 8).         const(8).
a_parent_id(node17_17, a_plzensky51278_txt_001_p2s2W7).         const(a_plzensky51278_txt_001_p2s2W7).
hide(node17_17, hide).         const(hide).
%%%%%%%% node17_18 %%%%%%%%%%%%%%%%%%%
node(node17_18).
deepord(node17_18, 10).         const(10).
functor(node17_18, FPHR).         const(FPHR).
gram_sempos(node17_18, n_denot).         const(n_denot).
id(node17_18, T_plzensky51278_txt_001_p2s2a9).         const(T_plzensky51278_txt_001_p2s2a9).
nodetype(node17_18, fphr).         const(fphr).
t_lemma(node17_18, aj).         const(aj).
%%%%%%%% node17_19 %%%%%%%%%%%%%%%%%%%
node(node17_19).
deepord(node17_19, x10_1).         const(x10_1).
a_ref_type(node17_19, tree).         const(tree).
a_afun(node17_19, Atr).         const(Atr).
m_form(node17_19, aj).         const(aj).
m_lemma(node17_19, aj_1__B___a_jiny_a_e_).         const(aj_1__B___a_jiny_a_e_).
m_tag(node17_19, AAXXX____1A___8).         const(AAXXX____1A___8).
w_token(node17_19, aj).         const(aj).
w_no_space_after(node17_19, 1).         const(1).
a_ord(node17_19, 9).         const(9).
a_parent_id(node17_19, a_plzensky51278_txt_001_p2s2W7).         const(a_plzensky51278_txt_001_p2s2W7).
hide(node17_19, hide).         const(hide).
%%%%%%%% node17_20 %%%%%%%%%%%%%%%%%%%
node(node17_20).
deepord(node17_20, 11).         const(11).
functor(node17_20, LOC).         const(LOC).
gram_sempos(node17_20, n_pron_indef).         const(n_pron_indef).
id(node17_20, T_plzensky51278_txt_001_p2s2a13).         const(T_plzensky51278_txt_001_p2s2a13).
nodetype(node17_20, complex).         const(complex).
subfunctor(node17_20, basic).         const(basic).
t_lemma(node17_20, ktery).         const(ktery).
%%%%%%%% node17_21 %%%%%%%%%%%%%%%%%%%
node(node17_21).
deepord(node17_21, x11_1).         const(x11_1).
a_ref_type(node17_21, tree).         const(tree).
a_afun(node17_21, AuxP).         const(AuxP).
m_form(node17_21, na).         const(na).
m_lemma(node17_21, na_1).         const(na_1).
m_tag(node17_21, RR__4__________).         const(RR__4__________).
w_token(node17_21, na).         const(na).
a_ord(node17_21, 12).         const(12).
a_parent_id(node17_21, a_plzensky51278_txt_001_p2s2W4).         const(a_plzensky51278_txt_001_p2s2W4).
hide(node17_21, hide).         const(hide).
%%%%%%%% node17_22 %%%%%%%%%%%%%%%%%%%
node(node17_22).
deepord(node17_22, x11_2).         const(x11_2).
a_ref_type(node17_22, tree).         const(tree).
a_afun(node17_22, Atr).         const(Atr).
m_form(node17_22, nekterou).         const(nekterou).
m_lemma(node17_22, nektery).         const(nektery).
m_tag(node17_22, PZFS4__________).         const(PZFS4__________).
w_token(node17_22, nekterou).         const(nekterou).
a_ord(node17_22, 13).         const(13).
a_parent_id(node17_22, a_plzensky51278_txt_001_p2s2W12).         const(a_plzensky51278_txt_001_p2s2W12).
hide(node17_22, hide).         const(hide).
%%%%%%%% node17_23 %%%%%%%%%%%%%%%%%%%
node(node17_23).
deepord(node17_23, 12).         const(12).
functor(node17_23, DIR1).         const(DIR1).
gram_sempos(node17_23, n_denot).         const(n_denot).
id(node17_23, T_plzensky51278_txt_001_p2s2a15).         const(T_plzensky51278_txt_001_p2s2a15).
nodetype(node17_23, complex).         const(complex).
subfunctor(node17_23, basic).         const(basic).
t_lemma(node17_23, linka).         const(linka).
%%%%%%%% node17_24 %%%%%%%%%%%%%%%%%%%
node(node17_24).
deepord(node17_24, x12_1).         const(x12_1).
a_ref_type(node17_24, tree).         const(tree).
a_afun(node17_24, AuxP).         const(AuxP).
m_form(node17_24, z).         const(z).
m_lemma(node17_24, z_1).         const(z_1).
m_tag(node17_24, RR__2__________).         const(RR__2__________).
w_token(node17_24, z).         const(z).
a_ord(node17_24, 14).         const(14).
a_parent_id(node17_24, a_plzensky51278_txt_001_p2s2W13).         const(a_plzensky51278_txt_001_p2s2W13).
hide(node17_24, hide).         const(hide).
%%%%%%%% node17_25 %%%%%%%%%%%%%%%%%%%
node(node17_25).
deepord(node17_25, x12_2).         const(x12_2).
a_ref_type(node17_25, tree).         const(tree).
a_afun(node17_25, Atr).         const(Atr).
m_form(node17_25, linek).         const(linek).
m_lemma(node17_25, linka).         const(linka).
m_tag(node17_25, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node17_25, linek).         const(linek).
a_ord(node17_25, 15).         const(15).
a_parent_id(node17_25, a_plzensky51278_txt_001_p2s2W14).         const(a_plzensky51278_txt_001_p2s2W14).
hide(node17_25, hide).         const(hide).
%%%%%%%% node17_26 %%%%%%%%%%%%%%%%%%%
node(node17_26).
deepord(node17_26, 16).         const(16).
functor(node17_26, RSTR).         const(RSTR).
gram_sempos(node17_26, n_denot_neg).         const(n_denot_neg).
id(node17_26, T_plzensky51278_txt_001_p2s2a16).         const(T_plzensky51278_txt_001_p2s2a16).
nodetype(node17_26, complex).         const(complex).
t_lemma(node17_26, volani).         const(volani).
val_frame_rf(node17_26, v_v_w7682f1).         const(v_v_w7682f1).
%%%%%%%% node17_27 %%%%%%%%%%%%%%%%%%%
node(node17_27).
deepord(node17_27, 13).         const(13).
functor(node17_27, PAT).         const(PAT).
id(node17_27, T_plzensky51278_txt_001_p2s2a20).         const(T_plzensky51278_txt_001_p2s2a20).
is_generated(node17_27, 1).         const(1).
nodetype(node17_27, qcomplex).         const(qcomplex).
t_lemma(node17_27, x_Gen).         const(x_Gen).
%%%%%%%% node17_28 %%%%%%%%%%%%%%%%%%%
node(node17_28).
deepord(node17_28, 14).         const(14).
functor(node17_28, ACT).         const(ACT).
id(node17_28, T_plzensky51278_txt_001_p2s2a19).         const(T_plzensky51278_txt_001_p2s2a19).
is_generated(node17_28, 1).         const(1).
nodetype(node17_28, qcomplex).         const(qcomplex).
t_lemma(node17_28, x_Gen).         const(x_Gen).
%%%%%%%% node17_29 %%%%%%%%%%%%%%%%%%%
node(node17_29).
deepord(node17_29, 15).         const(15).
functor(node17_29, RSTR).         const(RSTR).
gram_sempos(node17_29, adj_denot).         const(adj_denot).
id(node17_29, T_plzensky51278_txt_001_p2s2a17).         const(T_plzensky51278_txt_001_p2s2a17).
nodetype(node17_29, complex).         const(complex).
t_lemma(node17_29, tisnovy).         const(tisnovy).
%%%%%%%% node17_30 %%%%%%%%%%%%%%%%%%%
node(node17_30).
deepord(node17_30, x15_1).         const(x15_1).
a_ref_type(node17_30, tree).         const(tree).
a_afun(node17_30, Atr).         const(Atr).
m_form(node17_30, tisnoveho).         const(tisnoveho).
m_lemma(node17_30, tisnovy).         const(tisnovy).
m_tag(node17_30, AANS2____1A____).         const(AANS2____1A____).
w_token(node17_30, tisnoveho).         const(tisnoveho).
a_ord(node17_30, 16).         const(16).
a_parent_id(node17_30, a_plzensky51278_txt_001_p2s2W17).         const(a_plzensky51278_txt_001_p2s2W17).
hide(node17_30, hide).         const(hide).
%%%%%%%% node17_31 %%%%%%%%%%%%%%%%%%%
node(node17_31).
deepord(node17_31, x16_1).         const(x16_1).
a_ref_type(node17_31, tree).         const(tree).
a_afun(node17_31, Atr).         const(Atr).
m_form(node17_31, volani).         const(volani).
m_lemma(node17_31, volani____3at_).         const(volani____3at_).
m_tag(node17_31, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node17_31, volani).         const(volani).
w_no_space_after(node17_31, 1).         const(1).
a_ord(node17_31, 17).         const(17).
a_parent_id(node17_31, a_plzensky51278_txt_001_p2s2W15).         const(a_plzensky51278_txt_001_p2s2W15).
hide(node17_31, hide).         const(hide).
edge(node17_0, node17_1).
edge(node17_1, node17_2).
edge(node17_1, node17_3).
edge(node17_3, node17_4).
edge(node17_1, node17_5).
edge(node17_1, node17_6).
edge(node17_6, node17_7).
edge(node17_1, node17_8).
edge(node17_8, node17_9).
edge(node17_8, node17_10).
edge(node17_10, node17_11).
edge(node17_11, node17_12).
edge(node17_12, node17_13).
edge(node17_11, node17_14).
edge(node17_10, node17_15).
edge(node17_10, node17_16).
edge(node17_16, node17_17).
edge(node17_10, node17_18).
edge(node17_18, node17_19).
edge(node17_8, node17_20).
edge(node17_20, node17_21).
edge(node17_20, node17_22).
edge(node17_20, node17_23).
edge(node17_23, node17_24).
edge(node17_23, node17_25).
edge(node17_23, node17_26).
edge(node17_26, node17_27).
edge(node17_26, node17_28).
edge(node17_26, node17_29).
edge(node17_29, node17_30).
edge(node17_26, node17_31).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Museli rozpoznat varovne signaly a poskytnout prvni pomoc na pracovisti CCK. 
tree_root(node18_0).
:- valid_root(node18_0).
%%%%%%%% node18_0 %%%%%%%%%%%%%%%%%%%
node(node18_0).
atree_rf(node18_0, a_a_plzensky51278_txt_001_p2s3).         const(a_a_plzensky51278_txt_001_p2s3).
deepord(node18_0, 1).         const(1).
id(node18_0, T_plzensky51278_txt_001_p2s3).         const(T_plzensky51278_txt_001_p2s3).
nodetype(node18_0, root).         const(root).
sentence(node18_0, Museli_rozpoznat_varovne_signaly_a_poskytnout_prvni_pomoc_na_pracovisti_CCK__).         const(Museli_rozpoznat_varovne_signaly_a_poskytnout_prvni_pomoc_na_pracovisti_CCK__).
%%%%%%%% node18_1 %%%%%%%%%%%%%%%%%%%
node(node18_1).
deepord(node18_1, 5).         const(5).
functor(node18_1, CONJ).         const(CONJ).
id(node18_1, T_plzensky51278_txt_001_p2s3a2).         const(T_plzensky51278_txt_001_p2s3a2).
nodetype(node18_1, coap).         const(coap).
t_lemma(node18_1, a).         const(a).
%%%%%%%% node18_2 %%%%%%%%%%%%%%%%%%%
node(node18_2).
deepord(node18_2, 0).         const(0).
functor(node18_2, ACT).         const(ACT).
id(node18_2, T_plzensky51278_txt_001_p2s3a15).         const(T_plzensky51278_txt_001_p2s3a15).
is_generated(node18_2, 1).         const(1).
nodetype(node18_2, qcomplex).         const(qcomplex).
t_lemma(node18_2, x_Cor).         const(x_Cor).
%%%%%%%% node18_3 %%%%%%%%%%%%%%%%%%%
node(node18_3).
deepord(node18_3, 2).         const(2).
functor(node18_3, RSTR).         const(RSTR).
gram_sempos(node18_3, v).         const(v).
id(node18_3, T_plzensky51278_txt_001_p2s3a3).         const(T_plzensky51278_txt_001_p2s3a3).
is_member(node18_3, 1).         const(1).
nodetype(node18_3, complex).         const(complex).
t_lemma(node18_3, rozpoznat).         const(rozpoznat).
val_frame_rf(node18_3, v_v_w5742f1).         const(v_v_w5742f1).
%%%%%%%% node18_4 %%%%%%%%%%%%%%%%%%%
node(node18_4).
deepord(node18_4, x2_1).         const(x2_1).
a_ref_type(node18_4, tree).         const(tree).
a_afun(node18_4, Obj).         const(Obj).
m_form(node18_4, rozpoznat).         const(rozpoznat).
m_lemma(node18_4, rozpoznat__W).         const(rozpoznat__W).
m_tag(node18_4, Vf________A____).         const(Vf________A____).
w_token(node18_4, rozpoznat).         const(rozpoznat).
a_ord(node18_4, 2).         const(2).
a_parent_id(node18_4, a_plzensky51278_txt_001_p2s3W5).         const(a_plzensky51278_txt_001_p2s3W5).
hide(node18_4, hide).         const(hide).
%%%%%%%% node18_5 %%%%%%%%%%%%%%%%%%%
node(node18_5).
deepord(node18_5, 4).         const(4).
functor(node18_5, PAT).         const(PAT).
gram_sempos(node18_5, n_denot).         const(n_denot).
id(node18_5, T_plzensky51278_txt_001_p2s3a4).         const(T_plzensky51278_txt_001_p2s3a4).
nodetype(node18_5, complex).         const(complex).
t_lemma(node18_5, signal).         const(signal).
%%%%%%%% node18_6 %%%%%%%%%%%%%%%%%%%
node(node18_6).
deepord(node18_6, 3).         const(3).
functor(node18_6, RSTR).         const(RSTR).
gram_sempos(node18_6, adj_denot).         const(adj_denot).
id(node18_6, T_plzensky51278_txt_001_p2s3a5).         const(T_plzensky51278_txt_001_p2s3a5).
nodetype(node18_6, complex).         const(complex).
t_lemma(node18_6, varovny).         const(varovny).
%%%%%%%% node18_7 %%%%%%%%%%%%%%%%%%%
node(node18_7).
deepord(node18_7, x3_1).         const(x3_1).
a_ref_type(node18_7, tree).         const(tree).
a_afun(node18_7, Atr).         const(Atr).
m_form(node18_7, varovne).         const(varovne).
m_lemma(node18_7, varovny).         const(varovny).
m_tag(node18_7, AAIP4____1A____).         const(AAIP4____1A____).
w_token(node18_7, varovne).         const(varovne).
a_ord(node18_7, 3).         const(3).
a_parent_id(node18_7, a_plzensky51278_txt_001_p2s3W4).         const(a_plzensky51278_txt_001_p2s3W4).
hide(node18_7, hide).         const(hide).
%%%%%%%% node18_8 %%%%%%%%%%%%%%%%%%%
node(node18_8).
deepord(node18_8, x4_1).         const(x4_1).
a_ref_type(node18_8, tree).         const(tree).
a_afun(node18_8, Obj).         const(Obj).
m_form(node18_8, signaly).         const(signaly).
m_lemma(node18_8, signal).         const(signal).
m_tag(node18_8, NNIP4_____A____).         const(NNIP4_____A____).
w_token(node18_8, signaly).         const(signaly).
a_ord(node18_8, 4).         const(4).
a_parent_id(node18_8, a_plzensky51278_txt_001_p2s3W2).         const(a_plzensky51278_txt_001_p2s3W2).
hide(node18_8, hide).         const(hide).
%%%%%%%% node18_9 %%%%%%%%%%%%%%%%%%%
node(node18_9).
deepord(node18_9, x5_1).         const(x5_1).
a_ref_type(node18_9, tree).         const(tree).
a_afun(node18_9, Coord).         const(Coord).
m_form(node18_9, a).         const(a).
m_lemma(node18_9, a_1).         const(a_1).
m_tag(node18_9, J______________).         const(J______________).
w_token(node18_9, a).         const(a).
a_ord(node18_9, 5).         const(5).
a_parent_id(node18_9, a_plzensky51278_txt_001_p2s3W1).         const(a_plzensky51278_txt_001_p2s3W1).
hide(node18_9, hide).         const(hide).
%%%%%%%% node18_10 %%%%%%%%%%%%%%%%%%%
node(node18_10).
deepord(node18_10, 6).         const(6).
functor(node18_10, RSTR).         const(RSTR).
gram_sempos(node18_10, v).         const(v).
id(node18_10, T_plzensky51278_txt_001_p2s3a6).         const(T_plzensky51278_txt_001_p2s3a6).
is_member(node18_10, 1).         const(1).
nodetype(node18_10, complex).         const(complex).
t_lemma(node18_10, poskytnout).         const(poskytnout).
val_frame_rf(node18_10, v_v_w3973f2).         const(v_v_w3973f2).
%%%%%%%% node18_11 %%%%%%%%%%%%%%%%%%%
node(node18_11).
deepord(node18_11, x6_1).         const(x6_1).
a_ref_type(node18_11, tree).         const(tree).
a_afun(node18_11, Obj).         const(Obj).
m_form(node18_11, poskytnout).         const(poskytnout).
m_lemma(node18_11, poskytnout__W).         const(poskytnout__W).
m_tag(node18_11, Vf________A____).         const(Vf________A____).
w_token(node18_11, poskytnout).         const(poskytnout).
a_ord(node18_11, 6).         const(6).
a_parent_id(node18_11, a_plzensky51278_txt_001_p2s3W5).         const(a_plzensky51278_txt_001_p2s3W5).
hide(node18_11, hide).         const(hide).
%%%%%%%% node18_12 %%%%%%%%%%%%%%%%%%%
node(node18_12).
deepord(node18_12, 7).         const(7).
functor(node18_12, ADDR).         const(ADDR).
id(node18_12, T_plzensky51278_txt_001_p2s3a14).         const(T_plzensky51278_txt_001_p2s3a14).
is_generated(node18_12, 1).         const(1).
nodetype(node18_12, qcomplex).         const(qcomplex).
t_lemma(node18_12, x_Gen).         const(x_Gen).
%%%%%%%% node18_13 %%%%%%%%%%%%%%%%%%%
node(node18_13).
deepord(node18_13, 9).         const(9).
functor(node18_13, CPHR).         const(CPHR).
gram_sempos(node18_13, n_denot).         const(n_denot).
id(node18_13, T_plzensky51278_txt_001_p2s3a7).         const(T_plzensky51278_txt_001_p2s3a7).
nodetype(node18_13, complex).         const(complex).
t_lemma(node18_13, pomoc).         const(pomoc).
%%%%%%%% node18_14 %%%%%%%%%%%%%%%%%%%
node(node18_14).
deepord(node18_14, 8).         const(8).
functor(node18_14, RSTR).         const(RSTR).
gram_sempos(node18_14, adj_quant_def).         const(adj_quant_def).
id(node18_14, T_plzensky51278_txt_001_p2s3a8).         const(T_plzensky51278_txt_001_p2s3a8).
nodetype(node18_14, complex).         const(complex).
t_lemma(node18_14, jeden).         const(jeden).
%%%%%%%% node18_15 %%%%%%%%%%%%%%%%%%%
node(node18_15).
deepord(node18_15, x8_1).         const(x8_1).
a_ref_type(node18_15, tree).         const(tree).
a_afun(node18_15, Atr).         const(Atr).
m_form(node18_15, prvni).         const(prvni).
m_lemma(node18_15, prvni).         const(prvni).
m_tag(node18_15, CrFS4__________).         const(CrFS4__________).
w_token(node18_15, prvni).         const(prvni).
a_ord(node18_15, 7).         const(7).
a_parent_id(node18_15, a_plzensky51278_txt_001_p2s3W8).         const(a_plzensky51278_txt_001_p2s3W8).
hide(node18_15, hide).         const(hide).
%%%%%%%% node18_16 %%%%%%%%%%%%%%%%%%%
node(node18_16).
deepord(node18_16, x9_1).         const(x9_1).
a_ref_type(node18_16, tree).         const(tree).
a_afun(node18_16, Obj).         const(Obj).
m_form(node18_16, pomoc).         const(pomoc).
m_lemma(node18_16, pomoc).         const(pomoc).
m_tag(node18_16, NNFS4_____A____).         const(NNFS4_____A____).
w_token(node18_16, pomoc).         const(pomoc).
a_ord(node18_16, 8).         const(8).
a_parent_id(node18_16, a_plzensky51278_txt_001_p2s3W6).         const(a_plzensky51278_txt_001_p2s3W6).
hide(node18_16, hide).         const(hide).
%%%%%%%% node18_17 %%%%%%%%%%%%%%%%%%%
node(node18_17).
deepord(node18_17, 10).         const(10).
functor(node18_17, LOC).         const(LOC).
gram_sempos(node18_17, n_denot).         const(n_denot).
id(node18_17, T_plzensky51278_txt_001_p2s3a10).         const(T_plzensky51278_txt_001_p2s3a10).
nodetype(node18_17, complex).         const(complex).
subfunctor(node18_17, basic).         const(basic).
t_lemma(node18_17, pracoviste).         const(pracoviste).
%%%%%%%% node18_18 %%%%%%%%%%%%%%%%%%%
node(node18_18).
deepord(node18_18, x10_1).         const(x10_1).
a_ref_type(node18_18, tree).         const(tree).
a_afun(node18_18, AuxP).         const(AuxP).
m_form(node18_18, na).         const(na).
m_lemma(node18_18, na_1).         const(na_1).
m_tag(node18_18, RR__6__________).         const(RR__6__________).
w_token(node18_18, na).         const(na).
a_ord(node18_18, 9).         const(9).
a_parent_id(node18_18, a_plzensky51278_txt_001_p2s3W8).         const(a_plzensky51278_txt_001_p2s3W8).
hide(node18_18, hide).         const(hide).
%%%%%%%% node18_19 %%%%%%%%%%%%%%%%%%%
node(node18_19).
deepord(node18_19, x10_2).         const(x10_2).
a_ref_type(node18_19, tree).         const(tree).
a_afun(node18_19, Atr).         const(Atr).
m_form(node18_19, pracovisti).         const(pracovisti).
m_lemma(node18_19, pracoviste).         const(pracoviste).
m_tag(node18_19, NNNS6_____A____).         const(NNNS6_____A____).
w_token(node18_19, pracovisti).         const(pracovisti).
a_ord(node18_19, 10).         const(10).
a_parent_id(node18_19, a_plzensky51278_txt_001_p2s3W9).         const(a_plzensky51278_txt_001_p2s3W9).
hide(node18_19, hide).         const(hide).
%%%%%%%% node18_20 %%%%%%%%%%%%%%%%%%%
node(node18_20).
deepord(node18_20, 11).         const(11).
functor(node18_20, RSTR).         const(RSTR).
id(node18_20, T_plzensky51278_txt_001_p2s3a11).         const(T_plzensky51278_txt_001_p2s3a11).
nodetype(node18_20, complex).         const(complex).
t_lemma(node18_20, CCK).         const(CCK).
%%%%%%%% node18_21 %%%%%%%%%%%%%%%%%%%
node(node18_21).
deepord(node18_21, x11_1).         const(x11_1).
a_ref_type(node18_21, tree).         const(tree).
a_afun(node18_21, Atr).         const(Atr).
m_form(node18_21, CCK).         const(CCK).
m_lemma(node18_21, CCK__B__K).         const(CCK__B__K).
m_tag(node18_21, Xx_____________).         const(Xx_____________).
w_token(node18_21, CCK).         const(CCK).
w_no_space_after(node18_21, 1).         const(1).
a_ord(node18_21, 11).         const(11).
a_parent_id(node18_21, a_plzensky51278_txt_001_p2s3W10).         const(a_plzensky51278_txt_001_p2s3W10).
hide(node18_21, hide).         const(hide).
edge(node18_0, node18_1).
edge(node18_1, node18_2).
edge(node18_1, node18_3).
edge(node18_3, node18_4).
edge(node18_3, node18_5).
edge(node18_5, node18_6).
edge(node18_6, node18_7).
edge(node18_5, node18_8).
edge(node18_1, node18_9).
edge(node18_1, node18_10).
edge(node18_10, node18_11).
edge(node18_10, node18_12).
edge(node18_10, node18_13).
edge(node18_13, node18_14).
edge(node18_14, node18_15).
edge(node18_13, node18_16).
edge(node18_13, node18_17).
edge(node18_17, node18_18).
edge(node18_17, node18_19).
edge(node18_17, node18_20).
edge(node18_20, node18_21).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Nechybela proverka znalosti zasad provadeni evakuace, vcetne sbaleni evakuacniho zavazadla, proverka znalosti z cinnosti pri povodnich aj. 
tree_root(node19_0).
:- valid_root(node19_0).
%%%%%%%% node19_0 %%%%%%%%%%%%%%%%%%%
node(node19_0).
atree_rf(node19_0, a_a_plzensky51278_txt_001_p2s4).         const(a_a_plzensky51278_txt_001_p2s4).
deepord(node19_0, 0).         const(0).
id(node19_0, T_plzensky51278_txt_001_p2s4).         const(T_plzensky51278_txt_001_p2s4).
nodetype(node19_0, root).         const(root).
sentence(node19_0, Nechybela_proverka_znalosti_zasad_provadeni_evakuace__vcetne_sbaleni_evakuacniho_zavazadla__proverka_znalosti_z_cinnosti_pri_povodnich_aj__).         const(Nechybela_proverka_znalosti_zasad_provadeni_evakuace__vcetne_sbaleni_evakuacniho_zavazadla__proverka_znalosti_z_cinnosti_pri_povodnich_aj__).
%%%%%%%% node19_1 %%%%%%%%%%%%%%%%%%%
node(node19_1).
deepord(node19_1, 3).         const(3).
functor(node19_1, PRED).         const(PRED).
gram_sempos(node19_1, v).         const(v).
id(node19_1, T_plzensky51278_txt_001_p2s4a1).         const(T_plzensky51278_txt_001_p2s4a1).
nodetype(node19_1, complex).         const(complex).
t_lemma(node19_1, chybet).         const(chybet).
val_frame_rf(node19_1, v_v_w1204f1).         const(v_v_w1204f1).
%%%%%%%% node19_2 %%%%%%%%%%%%%%%%%%%
node(node19_2).
deepord(node19_2, 1).         const(1).
functor(node19_2, RHEM).         const(RHEM).
id(node19_2, T_plzensky51278_txt_001_p2s4a21).         const(T_plzensky51278_txt_001_p2s4a21).
is_generated(node19_2, 1).         const(1).
nodetype(node19_2, atom).         const(atom).
t_lemma(node19_2, x_Neg).         const(x_Neg).
%%%%%%%% node19_3 %%%%%%%%%%%%%%%%%%%
node(node19_3).
deepord(node19_3, 2).         const(2).
functor(node19_3, ACT).         const(ACT).
gram_sempos(node19_3, n_pron_def_pers).         const(n_pron_def_pers).
id(node19_3, T_plzensky51278_txt_001_p2s4a20).         const(T_plzensky51278_txt_001_p2s4a20).
is_generated(node19_3, 1).         const(1).
nodetype(node19_3, complex).         const(complex).
t_lemma(node19_3, x_PersPron).         const(x_PersPron).
%%%%%%%% node19_4 %%%%%%%%%%%%%%%%%%%
node(node19_4).
deepord(node19_4, x3_1).         const(x3_1).
a_ref_type(node19_4, tree).         const(tree).
a_afun(node19_4, Pred).         const(Pred).
m_form(node19_4, Nechybela).         const(Nechybela).
m_lemma(node19_4, chybet__T___nekde_neco_chybi_).         const(chybet__T___nekde_neco_chybi_).
m_tag(node19_4, VpQW___XR_NA___).         const(VpQW___XR_NA___).
w_token(node19_4, Nechybela).         const(Nechybela).
a_ord(node19_4, 1).         const(1).
a_parent_id(node19_4, a_plzensky51278_txt_001_p2s4).         const(a_plzensky51278_txt_001_p2s4).
hide(node19_4, hide).         const(hide).
%%%%%%%% node19_5 %%%%%%%%%%%%%%%%%%%
node(node19_5).
deepord(node19_5, 13).         const(13).
functor(node19_5, RSTR).         const(RSTR).
id(node19_5, T_plzensky51278_txt_001_p2s4a2).         const(T_plzensky51278_txt_001_p2s4a2).
nodetype(node19_5, complex).         const(complex).
t_lemma(node19_5, x_Comma).         const(x_Comma).
%%%%%%%% node19_6 %%%%%%%%%%%%%%%%%%%
node(node19_6).
deepord(node19_6, 4).         const(4).
functor(node19_6, RSTR).         const(RSTR).
gram_sempos(node19_6, n_denot).         const(n_denot).
id(node19_6, T_plzensky51278_txt_001_p2s4a3).         const(T_plzensky51278_txt_001_p2s4a3).
nodetype(node19_6, complex).         const(complex).
t_lemma(node19_6, proverka).         const(proverka).
%%%%%%%% node19_7 %%%%%%%%%%%%%%%%%%%
node(node19_7).
deepord(node19_7, x4_1).         const(x4_1).
a_ref_type(node19_7, tree).         const(tree).
a_afun(node19_7, Sb).         const(Sb).
a_is_member(node19_7, 1).         const(1).
m_form(node19_7, proverka).         const(proverka).
m_lemma(node19_7, proverka).         const(proverka).
m_tag(node19_7, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node19_7, proverka).         const(proverka).
a_ord(node19_7, 2).         const(2).
a_parent_id(node19_7, a_plzensky51278_txt_001_p2s4W12).         const(a_plzensky51278_txt_001_p2s4W12).
hide(node19_7, hide).         const(hide).
%%%%%%%% node19_8 %%%%%%%%%%%%%%%%%%%
node(node19_8).
deepord(node19_8, 5).         const(5).
functor(node19_8, PAT).         const(PAT).
gram_sempos(node19_8, n_denot_neg).         const(n_denot_neg).
id(node19_8, T_plzensky51278_txt_001_p2s4a4).         const(T_plzensky51278_txt_001_p2s4a4).
nodetype(node19_8, complex).         const(complex).
t_lemma(node19_8, znalost).         const(znalost).
%%%%%%%% node19_9 %%%%%%%%%%%%%%%%%%%
node(node19_9).
deepord(node19_9, x5_1).         const(x5_1).
a_ref_type(node19_9, tree).         const(tree).
a_afun(node19_9, Atr).         const(Atr).
m_form(node19_9, znalosti).         const(znalosti).
m_lemma(node19_9, znalost____3y_).         const(znalost____3y_).
m_tag(node19_9, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node19_9, znalosti).         const(znalosti).
a_ord(node19_9, 3).         const(3).
a_parent_id(node19_9, a_plzensky51278_txt_001_p2s4W2).         const(a_plzensky51278_txt_001_p2s4W2).
hide(node19_9, hide).         const(hide).
%%%%%%%% node19_10 %%%%%%%%%%%%%%%%%%%
node(node19_10).
deepord(node19_10, 6).         const(6).
functor(node19_10, PAT).         const(PAT).
gram_sempos(node19_10, n_denot).         const(n_denot).
id(node19_10, T_plzensky51278_txt_001_p2s4a5).         const(T_plzensky51278_txt_001_p2s4a5).
nodetype(node19_10, complex).         const(complex).
t_lemma(node19_10, zasada).         const(zasada).
%%%%%%%% node19_11 %%%%%%%%%%%%%%%%%%%
node(node19_11).
deepord(node19_11, x6_1).         const(x6_1).
a_ref_type(node19_11, tree).         const(tree).
a_afun(node19_11, Atr).         const(Atr).
m_form(node19_11, zasad).         const(zasad).
m_lemma(node19_11, zasada).         const(zasada).
m_tag(node19_11, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node19_11, zasad).         const(zasad).
a_ord(node19_11, 4).         const(4).
a_parent_id(node19_11, a_plzensky51278_txt_001_p2s4W3).         const(a_plzensky51278_txt_001_p2s4W3).
hide(node19_11, hide).         const(hide).
%%%%%%%% node19_12 %%%%%%%%%%%%%%%%%%%
node(node19_12).
deepord(node19_12, 8).         const(8).
functor(node19_12, APP).         const(APP).
gram_sempos(node19_12, n_denot_neg).         const(n_denot_neg).
id(node19_12, T_plzensky51278_txt_001_p2s4a6).         const(T_plzensky51278_txt_001_p2s4a6).
nodetype(node19_12, complex).         const(complex).
t_lemma(node19_12, provadeni).         const(provadeni).
val_frame_rf(node19_12, v_v_w4599f1).         const(v_v_w4599f1).
%%%%%%%% node19_13 %%%%%%%%%%%%%%%%%%%
node(node19_13).
deepord(node19_13, 7).         const(7).
functor(node19_13, ACT).         const(ACT).
id(node19_13, T_plzensky51278_txt_001_p2s4a22).         const(T_plzensky51278_txt_001_p2s4a22).
is_generated(node19_13, 1).         const(1).
nodetype(node19_13, qcomplex).         const(qcomplex).
t_lemma(node19_13, x_Gen).         const(x_Gen).
%%%%%%%% node19_14 %%%%%%%%%%%%%%%%%%%
node(node19_14).
deepord(node19_14, x8_1).         const(x8_1).
a_ref_type(node19_14, tree).         const(tree).
a_afun(node19_14, Atr).         const(Atr).
m_form(node19_14, provadeni).         const(provadeni).
m_lemma(node19_14, provadeni____2t_).         const(provadeni____2t_).
m_tag(node19_14, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node19_14, provadeni).         const(provadeni).
a_ord(node19_14, 5).         const(5).
a_parent_id(node19_14, a_plzensky51278_txt_001_p2s4W4).         const(a_plzensky51278_txt_001_p2s4W4).
hide(node19_14, hide).         const(hide).
%%%%%%%% node19_15 %%%%%%%%%%%%%%%%%%%
node(node19_15).
deepord(node19_15, 9).         const(9).
functor(node19_15, PAT).         const(PAT).
gram_sempos(node19_15, n_denot).         const(n_denot).
id(node19_15, T_plzensky51278_txt_001_p2s4a7).         const(T_plzensky51278_txt_001_p2s4a7).
nodetype(node19_15, complex).         const(complex).
t_lemma(node19_15, evakuace).         const(evakuace).
%%%%%%%% node19_16 %%%%%%%%%%%%%%%%%%%
node(node19_16).
deepord(node19_16, x9_1).         const(x9_1).
a_ref_type(node19_16, tree).         const(tree).
a_afun(node19_16, Atr).         const(Atr).
m_form(node19_16, evakuace).         const(evakuace).
m_lemma(node19_16, evakuace).         const(evakuace).
m_tag(node19_16, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node19_16, evakuace).         const(evakuace).
w_no_space_after(node19_16, 1).         const(1).
a_ord(node19_16, 6).         const(6).
a_parent_id(node19_16, a_plzensky51278_txt_001_p2s4W5).         const(a_plzensky51278_txt_001_p2s4W5).
hide(node19_16, hide).         const(hide).
%%%%%%%% node19_17 %%%%%%%%%%%%%%%%%%%
node(node19_17).
deepord(node19_17, 10).         const(10).
functor(node19_17, ACMP).         const(ACMP).
gram_sempos(node19_17, n_denot).         const(n_denot).
id(node19_17, T_plzensky51278_txt_001_p2s4a10).         const(T_plzensky51278_txt_001_p2s4a10).
nodetype(node19_17, complex).         const(complex).
subfunctor(node19_17, incl).         const(incl).
t_lemma(node19_17, sbaleni).         const(sbaleni).
%%%%%%%% node19_18 %%%%%%%%%%%%%%%%%%%
node(node19_18).
deepord(node19_18, x10_1).         const(x10_1).
a_ref_type(node19_18, tree).         const(tree).
a_afun(node19_18, AuxP).         const(AuxP).
m_form(node19_18, vcetne).         const(vcetne).
m_lemma(node19_18, vcetne_2).         const(vcetne_2).
m_tag(node19_18, RR__2__________).         const(RR__2__________).
w_token(node19_18, vcetne).         const(vcetne).
a_ord(node19_18, 8).         const(8).
a_parent_id(node19_18, a_plzensky51278_txt_001_p2s4W6).         const(a_plzensky51278_txt_001_p2s4W6).
hide(node19_18, hide).         const(hide).
%%%%%%%% node19_19 %%%%%%%%%%%%%%%%%%%
node(node19_19).
deepord(node19_19, x10_2).         const(x10_2).
a_ref_type(node19_19, tree).         const(tree).
a_afun(node19_19, Atr).         const(Atr).
m_form(node19_19, sbaleni).         const(sbaleni).
m_lemma(node19_19, sbaleni____3it_).         const(sbaleni____3it_).
m_tag(node19_19, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node19_19, sbaleni).         const(sbaleni).
a_ord(node19_19, 9).         const(9).
a_parent_id(node19_19, a_plzensky51278_txt_001_p2s4W8).         const(a_plzensky51278_txt_001_p2s4W8).
hide(node19_19, hide).         const(hide).
%%%%%%%% node19_20 %%%%%%%%%%%%%%%%%%%
node(node19_20).
deepord(node19_20, 11).         const(11).
functor(node19_20, RSTR).         const(RSTR).
gram_sempos(node19_20, adj_denot).         const(adj_denot).
id(node19_20, T_plzensky51278_txt_001_p2s4a11).         const(T_plzensky51278_txt_001_p2s4a11).
nodetype(node19_20, complex).         const(complex).
t_lemma(node19_20, evakuacni).         const(evakuacni).
%%%%%%%% node19_21 %%%%%%%%%%%%%%%%%%%
node(node19_21).
deepord(node19_21, x11_1).         const(x11_1).
a_ref_type(node19_21, tree).         const(tree).
a_afun(node19_21, Atr).         const(Atr).
m_form(node19_21, evakuacniho).         const(evakuacniho).
m_lemma(node19_21, evakuacni).         const(evakuacni).
m_tag(node19_21, AANS2____1A____).         const(AANS2____1A____).
w_token(node19_21, evakuacniho).         const(evakuacniho).
a_ord(node19_21, 10).         const(10).
a_parent_id(node19_21, a_plzensky51278_txt_001_p2s4W9).         const(a_plzensky51278_txt_001_p2s4W9).
hide(node19_21, hide).         const(hide).
%%%%%%%% node19_22 %%%%%%%%%%%%%%%%%%%
node(node19_22).
deepord(node19_22, 12).         const(12).
functor(node19_22, PAT).         const(PAT).
gram_sempos(node19_22, n_denot).         const(n_denot).
id(node19_22, T_plzensky51278_txt_001_p2s4a12).         const(T_plzensky51278_txt_001_p2s4a12).
nodetype(node19_22, complex).         const(complex).
t_lemma(node19_22, zavazadlo).         const(zavazadlo).
%%%%%%%% node19_23 %%%%%%%%%%%%%%%%%%%
node(node19_23).
deepord(node19_23, x12_1).         const(x12_1).
a_ref_type(node19_23, tree).         const(tree).
a_afun(node19_23, Atr).         const(Atr).
m_form(node19_23, zavazadla).         const(zavazadla).
m_lemma(node19_23, zavazadlo).         const(zavazadlo).
m_tag(node19_23, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node19_23, zavazadla).         const(zavazadla).
w_no_space_after(node19_23, 1).         const(1).
a_ord(node19_23, 11).         const(11).
a_parent_id(node19_23, a_plzensky51278_txt_001_p2s4W10).         const(a_plzensky51278_txt_001_p2s4W10).
hide(node19_23, hide).         const(hide).
%%%%%%%% node19_24 %%%%%%%%%%%%%%%%%%%
node(node19_24).
deepord(node19_24, x13_1).         const(x13_1).
a_ref_type(node19_24, tree).         const(tree).
a_afun(node19_24, AuxX).         const(AuxX).
m_form(node19_24, x_).         const(x_).
m_lemma(node19_24, x_).         const(x_).
m_tag(node19_24, Z______________).         const(Z______________).
w_token(node19_24, x_).         const(x_).
a_ord(node19_24, 12).         const(12).
a_parent_id(node19_24, a_plzensky51278_txt_001_p2s4W1).         const(a_plzensky51278_txt_001_p2s4W1).
hide(node19_24, hide).         const(hide).
%%%%%%%% node19_25 %%%%%%%%%%%%%%%%%%%
node(node19_25).
deepord(node19_25, 14).         const(14).
functor(node19_25, RSTR).         const(RSTR).
gram_sempos(node19_25, n_denot).         const(n_denot).
id(node19_25, T_plzensky51278_txt_001_p2s4a13).         const(T_plzensky51278_txt_001_p2s4a13).
nodetype(node19_25, complex).         const(complex).
t_lemma(node19_25, proverka).         const(proverka).
%%%%%%%% node19_26 %%%%%%%%%%%%%%%%%%%
node(node19_26).
deepord(node19_26, x14_1).         const(x14_1).
a_ref_type(node19_26, tree).         const(tree).
a_afun(node19_26, Sb).         const(Sb).
a_is_member(node19_26, 1).         const(1).
m_form(node19_26, proverka).         const(proverka).
m_lemma(node19_26, proverka).         const(proverka).
m_tag(node19_26, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node19_26, proverka).         const(proverka).
a_ord(node19_26, 13).         const(13).
a_parent_id(node19_26, a_plzensky51278_txt_001_p2s4W12).         const(a_plzensky51278_txt_001_p2s4W12).
hide(node19_26, hide).         const(hide).
%%%%%%%% node19_27 %%%%%%%%%%%%%%%%%%%
node(node19_27).
deepord(node19_27, 15).         const(15).
functor(node19_27, PAT).         const(PAT).
gram_sempos(node19_27, n_denot_neg).         const(n_denot_neg).
id(node19_27, T_plzensky51278_txt_001_p2s4a14).         const(T_plzensky51278_txt_001_p2s4a14).
nodetype(node19_27, complex).         const(complex).
t_lemma(node19_27, znalost).         const(znalost).
%%%%%%%% node19_28 %%%%%%%%%%%%%%%%%%%
node(node19_28).
deepord(node19_28, x15_1).         const(x15_1).
a_ref_type(node19_28, tree).         const(tree).
a_afun(node19_28, Atr).         const(Atr).
m_form(node19_28, znalosti).         const(znalosti).
m_lemma(node19_28, znalost____3y_).         const(znalost____3y_).
m_tag(node19_28, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node19_28, znalosti).         const(znalosti).
a_ord(node19_28, 14).         const(14).
a_parent_id(node19_28, a_plzensky51278_txt_001_p2s4W13).         const(a_plzensky51278_txt_001_p2s4W13).
hide(node19_28, hide).         const(hide).
%%%%%%%% node19_29 %%%%%%%%%%%%%%%%%%%
node(node19_29).
deepord(node19_29, 16).         const(16).
functor(node19_29, DIR1).         const(DIR1).
gram_sempos(node19_29, n_denot_neg).         const(n_denot_neg).
id(node19_29, T_plzensky51278_txt_001_p2s4a16).         const(T_plzensky51278_txt_001_p2s4a16).
nodetype(node19_29, complex).         const(complex).
subfunctor(node19_29, basic).         const(basic).
t_lemma(node19_29, cinnost).         const(cinnost).
%%%%%%%% node19_30 %%%%%%%%%%%%%%%%%%%
node(node19_30).
deepord(node19_30, x16_1).         const(x16_1).
a_ref_type(node19_30, tree).         const(tree).
a_afun(node19_30, AuxP).         const(AuxP).
m_form(node19_30, z).         const(z).
m_lemma(node19_30, z_1).         const(z_1).
m_tag(node19_30, RR__2__________).         const(RR__2__________).
w_token(node19_30, z).         const(z).
a_ord(node19_30, 15).         const(15).
a_parent_id(node19_30, a_plzensky51278_txt_001_p2s4W14).         const(a_plzensky51278_txt_001_p2s4W14).
hide(node19_30, hide).         const(hide).
%%%%%%%% node19_31 %%%%%%%%%%%%%%%%%%%
node(node19_31).
deepord(node19_31, x16_2).         const(x16_2).
a_ref_type(node19_31, tree).         const(tree).
a_afun(node19_31, Atr).         const(Atr).
m_form(node19_31, cinnosti).         const(cinnosti).
m_lemma(node19_31, cinnost____3y_).         const(cinnost____3y_).
m_tag(node19_31, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node19_31, cinnosti).         const(cinnosti).
a_ord(node19_31, 16).         const(16).
a_parent_id(node19_31, a_plzensky51278_txt_001_p2s4W15).         const(a_plzensky51278_txt_001_p2s4W15).
hide(node19_31, hide).         const(hide).
%%%%%%%% node19_32 %%%%%%%%%%%%%%%%%%%
node(node19_32).
deepord(node19_32, 17).         const(17).
functor(node19_32, TWHEN).         const(TWHEN).
gram_sempos(node19_32, n_denot).         const(n_denot).
id(node19_32, T_plzensky51278_txt_001_p2s4a18).         const(T_plzensky51278_txt_001_p2s4a18).
nodetype(node19_32, complex).         const(complex).
subfunctor(node19_32, basic).         const(basic).
t_lemma(node19_32, povoden).         const(povoden).
%%%%%%%% node19_33 %%%%%%%%%%%%%%%%%%%
node(node19_33).
deepord(node19_33, x17_1).         const(x17_1).
a_ref_type(node19_33, tree).         const(tree).
a_afun(node19_33, AuxP).         const(AuxP).
m_form(node19_33, pri).         const(pri).
m_lemma(node19_33, pri_1).         const(pri_1).
m_tag(node19_33, RR__6__________).         const(RR__6__________).
w_token(node19_33, pri).         const(pri).
a_ord(node19_33, 17).         const(17).
a_parent_id(node19_33, a_plzensky51278_txt_001_p2s4W13).         const(a_plzensky51278_txt_001_p2s4W13).
hide(node19_33, hide).         const(hide).
%%%%%%%% node19_34 %%%%%%%%%%%%%%%%%%%
node(node19_34).
deepord(node19_34, x17_2).         const(x17_2).
a_ref_type(node19_34, tree).         const(tree).
a_afun(node19_34, Atr).         const(Atr).
m_form(node19_34, povodnich).         const(povodnich).
m_lemma(node19_34, povoden).         const(povoden).
m_tag(node19_34, NNFP6_____A____).         const(NNFP6_____A____).
w_token(node19_34, povodnich).         const(povodnich).
a_ord(node19_34, 18).         const(18).
a_parent_id(node19_34, a_plzensky51278_txt_001_p2s4W17).         const(a_plzensky51278_txt_001_p2s4W17).
hide(node19_34, hide).         const(hide).
%%%%%%%% node19_35 %%%%%%%%%%%%%%%%%%%
node(node19_35).
deepord(node19_35, 18).         const(18).
functor(node19_35, FPHR).         const(FPHR).
gram_sempos(node19_35, n_denot).         const(n_denot).
id(node19_35, T_plzensky51278_txt_001_p2s4a19).         const(T_plzensky51278_txt_001_p2s4a19).
nodetype(node19_35, fphr).         const(fphr).
t_lemma(node19_35, aj).         const(aj).
%%%%%%%% node19_36 %%%%%%%%%%%%%%%%%%%
node(node19_36).
deepord(node19_36, x18_1).         const(x18_1).
a_ref_type(node19_36, tree).         const(tree).
a_afun(node19_36, Sb).         const(Sb).
a_is_member(node19_36, 1).         const(1).
m_form(node19_36, aj).         const(aj).
m_lemma(node19_36, aj_1__B___a_jiny_a_e_).         const(aj_1__B___a_jiny_a_e_).
m_tag(node19_36, AAXXX____1A___8).         const(AAXXX____1A___8).
w_token(node19_36, aj).         const(aj).
w_no_space_after(node19_36, 1).         const(1).
a_ord(node19_36, 19).         const(19).
a_parent_id(node19_36, a_plzensky51278_txt_001_p2s4W12).         const(a_plzensky51278_txt_001_p2s4W12).
hide(node19_36, hide).         const(hide).
edge(node19_0, node19_1).
edge(node19_1, node19_2).
edge(node19_1, node19_3).
edge(node19_1, node19_4).
edge(node19_1, node19_5).
edge(node19_5, node19_6).
edge(node19_6, node19_7).
edge(node19_6, node19_8).
edge(node19_8, node19_9).
edge(node19_8, node19_10).
edge(node19_10, node19_11).
edge(node19_10, node19_12).
edge(node19_12, node19_13).
edge(node19_12, node19_14).
edge(node19_12, node19_15).
edge(node19_15, node19_16).
edge(node19_15, node19_17).
edge(node19_17, node19_18).
edge(node19_17, node19_19).
edge(node19_17, node19_20).
edge(node19_20, node19_21).
edge(node19_20, node19_22).
edge(node19_22, node19_23).
edge(node19_5, node19_24).
edge(node19_5, node19_25).
edge(node19_25, node19_26).
edge(node19_25, node19_27).
edge(node19_27, node19_28).
edge(node19_27, node19_29).
edge(node19_29, node19_30).
edge(node19_29, node19_31).
edge(node19_25, node19_32).
edge(node19_32, node19_33).
edge(node19_32, node19_34).
edge(node19_5, node19_35).
edge(node19_35, node19_36).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Soucasti byl i znalostni test. 
tree_root(node20_0).
:- valid_root(node20_0).
%%%%%%%% node20_0 %%%%%%%%%%%%%%%%%%%
node(node20_0).
atree_rf(node20_0, a_a_plzensky51278_txt_001_p2s5).         const(a_a_plzensky51278_txt_001_p2s5).
deepord(node20_0, 0).         const(0).
id(node20_0, T_plzensky51278_txt_001_p2s5).         const(T_plzensky51278_txt_001_p2s5).
nodetype(node20_0, root).         const(root).
sentence(node20_0, Soucasti_byl_i_znalostni_test__).         const(Soucasti_byl_i_znalostni_test__).
%%%%%%%% node20_1 %%%%%%%%%%%%%%%%%%%
node(node20_1).
deepord(node20_1, 2).         const(2).
functor(node20_1, PRED).         const(PRED).
gram_sempos(node20_1, v).         const(v).
id(node20_1, T_plzensky51278_txt_001_p2s5a1).         const(T_plzensky51278_txt_001_p2s5a1).
nodetype(node20_1, complex).         const(complex).
t_lemma(node20_1, byt).         const(byt).
val_frame_rf(node20_1, v_v_w243f1).         const(v_v_w243f1).
%%%%%%%% node20_2 %%%%%%%%%%%%%%%%%%%
node(node20_2).
deepord(node20_2, 1).         const(1).
functor(node20_2, PAT).         const(PAT).
gram_sempos(node20_2, n_denot).         const(n_denot).
id(node20_2, T_plzensky51278_txt_001_p2s5a2).         const(T_plzensky51278_txt_001_p2s5a2).
nodetype(node20_2, complex).         const(complex).
t_lemma(node20_2, soucast).         const(soucast).
%%%%%%%% node20_3 %%%%%%%%%%%%%%%%%%%
node(node20_3).
deepord(node20_3, x1_1).         const(x1_1).
a_ref_type(node20_3, tree).         const(tree).
a_afun(node20_3, Pnom).         const(Pnom).
m_form(node20_3, Soucasti).         const(Soucasti).
m_lemma(node20_3, soucast).         const(soucast).
m_tag(node20_3, NNFS7_____A____).         const(NNFS7_____A____).
w_token(node20_3, Soucasti).         const(Soucasti).
a_ord(node20_3, 1).         const(1).
a_parent_id(node20_3, a_plzensky51278_txt_001_p2s5W2).         const(a_plzensky51278_txt_001_p2s5W2).
hide(node20_3, hide).         const(hide).
%%%%%%%% node20_4 %%%%%%%%%%%%%%%%%%%
node(node20_4).
deepord(node20_4, x2_1).         const(x2_1).
a_ref_type(node20_4, tree).         const(tree).
a_afun(node20_4, Pred).         const(Pred).
m_form(node20_4, byl).         const(byl).
m_lemma(node20_4, byt).         const(byt).
m_tag(node20_4, VpYS___XR_AA___).         const(VpYS___XR_AA___).
w_token(node20_4, byl).         const(byl).
a_ord(node20_4, 2).         const(2).
a_parent_id(node20_4, a_plzensky51278_txt_001_p2s5).         const(a_plzensky51278_txt_001_p2s5).
hide(node20_4, hide).         const(hide).
%%%%%%%% node20_5 %%%%%%%%%%%%%%%%%%%
node(node20_5).
deepord(node20_5, 5).         const(5).
functor(node20_5, ACT).         const(ACT).
gram_sempos(node20_5, n_denot).         const(n_denot).
id(node20_5, T_plzensky51278_txt_001_p2s5a3).         const(T_plzensky51278_txt_001_p2s5a3).
nodetype(node20_5, complex).         const(complex).
t_lemma(node20_5, test).         const(test).
%%%%%%%% node20_6 %%%%%%%%%%%%%%%%%%%
node(node20_6).
deepord(node20_6, 3).         const(3).
functor(node20_6, CONJ).         const(CONJ).
id(node20_6, T_plzensky51278_txt_001_p2s5a4).         const(T_plzensky51278_txt_001_p2s5a4).
nodetype(node20_6, coap).         const(coap).
t_lemma(node20_6, i).         const(i).
%%%%%%%% node20_7 %%%%%%%%%%%%%%%%%%%
node(node20_7).
deepord(node20_7, x3_1).         const(x3_1).
a_ref_type(node20_7, tree).         const(tree).
a_afun(node20_7, Coord).         const(Coord).
m_form(node20_7, i).         const(i).
m_lemma(node20_7, i_1).         const(i_1).
m_tag(node20_7, J______________).         const(J______________).
w_token(node20_7, i).         const(i).
a_ord(node20_7, 3).         const(3).
a_parent_id(node20_7, a_plzensky51278_txt_001_p2s5W5).         const(a_plzensky51278_txt_001_p2s5W5).
hide(node20_7, hide).         const(hide).
%%%%%%%% node20_8 %%%%%%%%%%%%%%%%%%%
node(node20_8).
deepord(node20_8, 4).         const(4).
functor(node20_8, RSTR).         const(RSTR).
gram_sempos(node20_8, adj_denot).         const(adj_denot).
id(node20_8, T_plzensky51278_txt_001_p2s5a5).         const(T_plzensky51278_txt_001_p2s5a5).
nodetype(node20_8, complex).         const(complex).
t_lemma(node20_8, znalostni).         const(znalostni).
%%%%%%%% node20_9 %%%%%%%%%%%%%%%%%%%
node(node20_9).
deepord(node20_9, x4_1).         const(x4_1).
a_ref_type(node20_9, tree).         const(tree).
a_afun(node20_9, Atr).         const(Atr).
m_form(node20_9, znalostni).         const(znalostni).
m_lemma(node20_9, znalostni).         const(znalostni).
m_tag(node20_9, AAIS1____1A____).         const(AAIS1____1A____).
w_token(node20_9, znalostni).         const(znalostni).
a_ord(node20_9, 4).         const(4).
a_parent_id(node20_9, a_plzensky51278_txt_001_p2s5W5).         const(a_plzensky51278_txt_001_p2s5W5).
hide(node20_9, hide).         const(hide).
%%%%%%%% node20_10 %%%%%%%%%%%%%%%%%%%
node(node20_10).
deepord(node20_10, x5_1).         const(x5_1).
a_ref_type(node20_10, tree).         const(tree).
a_afun(node20_10, Sb).         const(Sb).
m_form(node20_10, test).         const(test).
m_lemma(node20_10, test).         const(test).
m_tag(node20_10, NNIS1_____A____).         const(NNIS1_____A____).
w_token(node20_10, test).         const(test).
w_no_space_after(node20_10, 1).         const(1).
a_ord(node20_10, 5).         const(5).
a_parent_id(node20_10, a_plzensky51278_txt_001_p2s5W2).         const(a_plzensky51278_txt_001_p2s5W2).
hide(node20_10, hide).         const(hide).
edge(node20_0, node20_1).
edge(node20_1, node20_2).
edge(node20_2, node20_3).
edge(node20_1, node20_4).
edge(node20_1, node20_5).
edge(node20_5, node20_6).
edge(node20_6, node20_7).
edge(node20_5, node20_8).
edge(node20_8, node20_9).
edge(node20_5, node20_10).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Vse zpestri discipliny, ve kterych budou moci soutezici prokazat aktivitu, rychly usudek a rozhodnost. 
tree_root(node21_0).
:- valid_root(node21_0).
%%%%%%%% node21_0 %%%%%%%%%%%%%%%%%%%
node(node21_0).
atree_rf(node21_0, a_a_plzensky51278_txt_001_p2s6).         const(a_a_plzensky51278_txt_001_p2s6).
deepord(node21_0, 0).         const(0).
id(node21_0, T_plzensky51278_txt_001_p2s6).         const(T_plzensky51278_txt_001_p2s6).
nodetype(node21_0, root).         const(root).
sentence(node21_0, Vse_zpestri_discipliny__ve_kterych_budou_moci_soutezici_prokazat_aktivitu__rychly_usudek_a_rozhodnost__).         const(Vse_zpestri_discipliny__ve_kterych_budou_moci_soutezici_prokazat_aktivitu__rychly_usudek_a_rozhodnost__).
%%%%%%%% node21_1 %%%%%%%%%%%%%%%%%%%
node(node21_1).
deepord(node21_1, 2).         const(2).
functor(node21_1, PRED).         const(PRED).
gram_sempos(node21_1, v).         const(v).
id(node21_1, T_plzensky51278_txt_001_p2s6a1).         const(T_plzensky51278_txt_001_p2s6a1).
nodetype(node21_1, complex).         const(complex).
t_lemma(node21_1, zpestret).         const(zpestret).
%%%%%%%% node21_2 %%%%%%%%%%%%%%%%%%%
node(node21_2).
deepord(node21_2, 1).         const(1).
functor(node21_2, COMPL).         const(COMPL).
gram_sempos(node21_2, adj_pron_indef).         const(adj_pron_indef).
id(node21_2, T_plzensky51278_txt_001_p2s6a2).         const(T_plzensky51278_txt_001_p2s6a2).
nodetype(node21_2, complex).         const(complex).
t_lemma(node21_2, ktery).         const(ktery).
%%%%%%%% node21_3 %%%%%%%%%%%%%%%%%%%
node(node21_3).
deepord(node21_3, x1_1).         const(x1_1).
a_ref_type(node21_3, tree).         const(tree).
a_afun(node21_3, AtvV).         const(AtvV).
m_form(node21_3, Vse).         const(Vse).
m_lemma(node21_3, vsechen).         const(vsechen).
m_tag(node21_3, PLNS1_________1).         const(PLNS1_________1).
w_token(node21_3, Vse).         const(Vse).
a_ord(node21_3, 1).         const(1).
a_parent_id(node21_3, a_plzensky51278_txt_001_p2s6W2).         const(a_plzensky51278_txt_001_p2s6W2).
hide(node21_3, hide).         const(hide).
%%%%%%%% node21_4 %%%%%%%%%%%%%%%%%%%
node(node21_4).
deepord(node21_4, x2_1).         const(x2_1).
a_ref_type(node21_4, tree).         const(tree).
a_afun(node21_4, Pred).         const(Pred).
m_form(node21_4, zpestri).         const(zpestri).
m_lemma(node21_4, zpestret__W__s).         const(zpestret__W__s).
m_tag(node21_4, VB_S___3P_AA___).         const(VB_S___3P_AA___).
w_token(node21_4, zpestri).         const(zpestri).
a_ord(node21_4, 2).         const(2).
a_parent_id(node21_4, a_plzensky51278_txt_001_p2s6).         const(a_plzensky51278_txt_001_p2s6).
hide(node21_4, hide).         const(hide).
%%%%%%%% node21_5 %%%%%%%%%%%%%%%%%%%
node(node21_5).
deepord(node21_5, 11).         const(11).
functor(node21_5, CONJ).         const(CONJ).
id(node21_5, T_plzensky51278_txt_001_p2s6a3).         const(T_plzensky51278_txt_001_p2s6a3).
nodetype(node21_5, coap).         const(coap).
t_lemma(node21_5, a).         const(a).
%%%%%%%% node21_6 %%%%%%%%%%%%%%%%%%%
node(node21_6).
deepord(node21_6, 3).         const(3).
functor(node21_6, ACT).         const(ACT).
gram_sempos(node21_6, n_denot).         const(n_denot).
id(node21_6, T_plzensky51278_txt_001_p2s6a4).         const(T_plzensky51278_txt_001_p2s6a4).
is_member(node21_6, 1).         const(1).
nodetype(node21_6, complex).         const(complex).
t_lemma(node21_6, disciplina).         const(disciplina).
%%%%%%%% node21_7 %%%%%%%%%%%%%%%%%%%
node(node21_7).
deepord(node21_7, x3_1).         const(x3_1).
a_ref_type(node21_7, tree).         const(tree).
a_afun(node21_7, Sb).         const(Sb).
m_form(node21_7, discipliny).         const(discipliny).
m_lemma(node21_7, disciplina).         const(disciplina).
m_tag(node21_7, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node21_7, discipliny).         const(discipliny).
w_no_space_after(node21_7, 1).         const(1).
a_ord(node21_7, 3).         const(3).
a_parent_id(node21_7, a_plzensky51278_txt_001_p2s6W15).         const(a_plzensky51278_txt_001_p2s6W15).
hide(node21_7, hide).         const(hide).
%%%%%%%% node21_8 %%%%%%%%%%%%%%%%%%%
node(node21_8).
deepord(node21_8, 7).         const(7).
functor(node21_8, RSTR).         const(RSTR).
gram_sempos(node21_8, v).         const(v).
id(node21_8, T_plzensky51278_txt_001_p2s6a11).         const(T_plzensky51278_txt_001_p2s6a11).
nodetype(node21_8, complex).         const(complex).
t_lemma(node21_8, prokazat).         const(prokazat).
val_frame_rf(node21_8, v_v_w4400f1).         const(v_v_w4400f1).
%%%%%%%% node21_9 %%%%%%%%%%%%%%%%%%%
node(node21_9).
deepord(node21_9, 4).         const(4).
functor(node21_9, ACT).         const(ACT).
id(node21_9, T_plzensky51278_txt_001_p2s6a17).         const(T_plzensky51278_txt_001_p2s6a17).
is_generated(node21_9, 1).         const(1).
nodetype(node21_9, qcomplex).         const(qcomplex).
t_lemma(node21_9, x_PersPron).         const(x_PersPron).
%%%%%%%% node21_10 %%%%%%%%%%%%%%%%%%%
node(node21_10).
deepord(node21_10, 5).         const(5).
functor(node21_10, LOC).         const(LOC).
gram_sempos(node21_10, n_pron_indef).         const(n_pron_indef).
id(node21_10, T_plzensky51278_txt_001_p2s6a8).         const(T_plzensky51278_txt_001_p2s6a8).
nodetype(node21_10, complex).         const(complex).
subfunctor(node21_10, basic).         const(basic).
t_lemma(node21_10, ktery).         const(ktery).
%%%%%%%% node21_11 %%%%%%%%%%%%%%%%%%%
node(node21_11).
deepord(node21_11, x5_1).         const(x5_1).
a_ref_type(node21_11, tree).         const(tree).
a_afun(node21_11, AuxP).         const(AuxP).
m_form(node21_11, ve).         const(ve).
m_lemma(node21_11, v_1).         const(v_1).
m_tag(node21_11, RV__6__________).         const(RV__6__________).
w_token(node21_11, ve).         const(ve).
a_ord(node21_11, 5).         const(5).
a_parent_id(node21_11, a_plzensky51278_txt_001_p2s6W8).         const(a_plzensky51278_txt_001_p2s6W8).
hide(node21_11, hide).         const(hide).
%%%%%%%% node21_12 %%%%%%%%%%%%%%%%%%%
node(node21_12).
deepord(node21_12, x5_2).         const(x5_2).
a_ref_type(node21_12, tree).         const(tree).
a_afun(node21_12, Adv).         const(Adv).
m_form(node21_12, kterych).         const(kterych).
m_lemma(node21_12, ktery).         const(ktery).
m_tag(node21_12, P4XP6__________).         const(P4XP6__________).
w_token(node21_12, kterych).         const(kterych).
a_ord(node21_12, 6).         const(6).
a_parent_id(node21_12, a_plzensky51278_txt_001_p2s6W5).         const(a_plzensky51278_txt_001_p2s6W5).
hide(node21_12, hide).         const(hide).
%%%%%%%% node21_13 %%%%%%%%%%%%%%%%%%%
node(node21_13).
deepord(node21_13, 6).         const(6).
functor(node21_13, RSTR).         const(RSTR).
gram_sempos(node21_13, n_denot).         const(n_denot).
id(node21_13, T_plzensky51278_txt_001_p2s6a10).         const(T_plzensky51278_txt_001_p2s6a10).
nodetype(node21_13, complex).         const(complex).
t_lemma(node21_13, soutezici).         const(soutezici).
%%%%%%%% node21_14 %%%%%%%%%%%%%%%%%%%
node(node21_14).
deepord(node21_14, x6_1).         const(x6_1).
a_ref_type(node21_14, tree).         const(tree).
a_afun(node21_14, Obj).         const(Obj).
m_form(node21_14, soutezici).         const(soutezici).
m_lemma(node21_14, soutezici____3it_).         const(soutezici____3it_).
m_tag(node21_14, AGNS1_____A____).         const(AGNS1_____A____).
w_token(node21_14, soutezici).         const(soutezici).
a_ord(node21_14, 9).         const(9).
a_parent_id(node21_14, a_plzensky51278_txt_001_p2s6W8).         const(a_plzensky51278_txt_001_p2s6W8).
hide(node21_14, hide).         const(hide).
%%%%%%%% node21_15 %%%%%%%%%%%%%%%%%%%
node(node21_15).
deepord(node21_15, x7_1).         const(x7_1).
a_ref_type(node21_15, tree).         const(tree).
a_afun(node21_15, AuxV).         const(AuxV).
m_form(node21_15, budou).         const(budou).
m_lemma(node21_15, byt).         const(byt).
m_tag(node21_15, VB_P___3F_AA___).         const(VB_P___3F_AA___).
w_token(node21_15, budou).         const(budou).
a_ord(node21_15, 7).         const(7).
a_parent_id(node21_15, a_plzensky51278_txt_001_p2s6W8).         const(a_plzensky51278_txt_001_p2s6W8).
hide(node21_15, hide).         const(hide).
%%%%%%%% node21_16 %%%%%%%%%%%%%%%%%%%
node(node21_16).
deepord(node21_16, x7_2).         const(x7_2).
a_ref_type(node21_16, tree).         const(tree).
a_afun(node21_16, Atr).         const(Atr).
m_form(node21_16, moci).         const(moci).
m_lemma(node21_16, moci___mit_moznost__neco_delat__).         const(moci___mit_moznost__neco_delat__).
m_tag(node21_16, Vf________A____).         const(Vf________A____).
w_token(node21_16, moci).         const(moci).
a_ord(node21_16, 8).         const(8).
a_parent_id(node21_16, a_plzensky51278_txt_001_p2s6W3).         const(a_plzensky51278_txt_001_p2s6W3).
hide(node21_16, hide).         const(hide).
%%%%%%%% node21_17 %%%%%%%%%%%%%%%%%%%
node(node21_17).
deepord(node21_17, x7_3).         const(x7_3).
a_ref_type(node21_17, tree).         const(tree).
a_afun(node21_17, Obj).         const(Obj).
m_form(node21_17, prokazat).         const(prokazat).
m_lemma(node21_17, prokazat).         const(prokazat).
m_tag(node21_17, Vf________A____).         const(Vf________A____).
w_token(node21_17, prokazat).         const(prokazat).
a_ord(node21_17, 10).         const(10).
a_parent_id(node21_17, a_plzensky51278_txt_001_p2s6W8).         const(a_plzensky51278_txt_001_p2s6W8).
hide(node21_17, hide).         const(hide).
%%%%%%%% node21_18 %%%%%%%%%%%%%%%%%%%
node(node21_18).
deepord(node21_18, 8).         const(8).
functor(node21_18, PAT).         const(PAT).
gram_sempos(node21_18, n_denot).         const(n_denot).
id(node21_18, T_plzensky51278_txt_001_p2s6a12).         const(T_plzensky51278_txt_001_p2s6a12).
nodetype(node21_18, complex).         const(complex).
t_lemma(node21_18, aktivita).         const(aktivita).
%%%%%%%% node21_19 %%%%%%%%%%%%%%%%%%%
node(node21_19).
deepord(node21_19, x8_1).         const(x8_1).
a_ref_type(node21_19, tree).         const(tree).
a_afun(node21_19, Obj).         const(Obj).
m_form(node21_19, aktivitu).         const(aktivitu).
m_lemma(node21_19, aktivita).         const(aktivita).
m_tag(node21_19, NNFS4_____A____).         const(NNFS4_____A____).
w_token(node21_19, aktivitu).         const(aktivitu).
w_no_space_after(node21_19, 1).         const(1).
a_ord(node21_19, 11).         const(11).
a_parent_id(node21_19, a_plzensky51278_txt_001_p2s6W10).         const(a_plzensky51278_txt_001_p2s6W10).
hide(node21_19, hide).         const(hide).
%%%%%%%% node21_20 %%%%%%%%%%%%%%%%%%%
node(node21_20).
deepord(node21_20, 10).         const(10).
functor(node21_20, RSTR).         const(RSTR).
gram_sempos(node21_20, n_denot).         const(n_denot).
id(node21_20, T_plzensky51278_txt_001_p2s6a14).         const(T_plzensky51278_txt_001_p2s6a14).
nodetype(node21_20, complex).         const(complex).
t_lemma(node21_20, usudek).         const(usudek).
%%%%%%%% node21_21 %%%%%%%%%%%%%%%%%%%
node(node21_21).
deepord(node21_21, 9).         const(9).
functor(node21_21, RSTR).         const(RSTR).
gram_sempos(node21_21, adj_denot).         const(adj_denot).
id(node21_21, T_plzensky51278_txt_001_p2s6a15).         const(T_plzensky51278_txt_001_p2s6a15).
nodetype(node21_21, complex).         const(complex).
t_lemma(node21_21, rychly).         const(rychly).
%%%%%%%% node21_22 %%%%%%%%%%%%%%%%%%%
node(node21_22).
deepord(node21_22, x9_1).         const(x9_1).
a_ref_type(node21_22, tree).         const(tree).
a_afun(node21_22, Atr).         const(Atr).
m_form(node21_22, rychly).         const(rychly).
m_lemma(node21_22, rychly).         const(rychly).
m_tag(node21_22, AAIS4____1A____).         const(AAIS4____1A____).
w_token(node21_22, rychly).         const(rychly).
a_ord(node21_22, 13).         const(13).
a_parent_id(node21_22, a_plzensky51278_txt_001_p2s6W14).         const(a_plzensky51278_txt_001_p2s6W14).
hide(node21_22, hide).         const(hide).
%%%%%%%% node21_23 %%%%%%%%%%%%%%%%%%%
node(node21_23).
deepord(node21_23, x10_1).         const(x10_1).
a_ref_type(node21_23, tree).         const(tree).
a_afun(node21_23, Obj).         const(Obj).
m_form(node21_23, usudek).         const(usudek).
m_lemma(node21_23, usudek).         const(usudek).
m_tag(node21_23, NNIS4_____A____).         const(NNIS4_____A____).
w_token(node21_23, usudek).         const(usudek).
a_ord(node21_23, 14).         const(14).
a_parent_id(node21_23, a_plzensky51278_txt_001_p2s6W15).         const(a_plzensky51278_txt_001_p2s6W15).
hide(node21_23, hide).         const(hide).
%%%%%%%% node21_24 %%%%%%%%%%%%%%%%%%%
node(node21_24).
deepord(node21_24, x11_1).         const(x11_1).
a_ref_type(node21_24, tree).         const(tree).
a_afun(node21_24, Coord).         const(Coord).
m_form(node21_24, a).         const(a).
m_lemma(node21_24, a_1).         const(a_1).
m_tag(node21_24, J______________).         const(J______________).
w_token(node21_24, a).         const(a).
a_ord(node21_24, 15).         const(15).
a_parent_id(node21_24, a_plzensky51278_txt_001_p2s6W2).         const(a_plzensky51278_txt_001_p2s6W2).
hide(node21_24, hide).         const(hide).
%%%%%%%% node21_25 %%%%%%%%%%%%%%%%%%%
node(node21_25).
deepord(node21_25, 12).         const(12).
functor(node21_25, ACT).         const(ACT).
gram_sempos(node21_25, n_denot_neg).         const(n_denot_neg).
id(node21_25, T_plzensky51278_txt_001_p2s6a16).         const(T_plzensky51278_txt_001_p2s6a16).
is_member(node21_25, 1).         const(1).
nodetype(node21_25, complex).         const(complex).
t_lemma(node21_25, rozhodnost).         const(rozhodnost).
%%%%%%%% node21_26 %%%%%%%%%%%%%%%%%%%
node(node21_26).
deepord(node21_26, x12_1).         const(x12_1).
a_ref_type(node21_26, tree).         const(tree).
a_afun(node21_26, Sb).         const(Sb).
m_form(node21_26, rozhodnost).         const(rozhodnost).
m_lemma(node21_26, rozhodnost____3y_).         const(rozhodnost____3y_).
m_tag(node21_26, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node21_26, rozhodnost).         const(rozhodnost).
w_no_space_after(node21_26, 1).         const(1).
a_ord(node21_26, 16).         const(16).
a_parent_id(node21_26, a_plzensky51278_txt_001_p2s6W15).         const(a_plzensky51278_txt_001_p2s6W15).
hide(node21_26, hide).         const(hide).
edge(node21_0, node21_1).
edge(node21_1, node21_2).
edge(node21_2, node21_3).
edge(node21_1, node21_4).
edge(node21_1, node21_5).
edge(node21_5, node21_6).
edge(node21_6, node21_7).
edge(node21_6, node21_8).
edge(node21_8, node21_9).
edge(node21_8, node21_10).
edge(node21_10, node21_11).
edge(node21_10, node21_12).
edge(node21_8, node21_13).
edge(node21_13, node21_14).
edge(node21_8, node21_15).
edge(node21_8, node21_16).
edge(node21_8, node21_17).
edge(node21_8, node21_18).
edge(node21_18, node21_19).
edge(node21_5, node21_20).
edge(node21_20, node21_21).
edge(node21_21, node21_22).
edge(node21_20, node21_23).
edge(node21_5, node21_24).
edge(node21_5, node21_25).
edge(node21_25, node21_26).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Strikalo se na terc a prenaseli se raneni.Ukoly soutezni druzstva plnila na nekolika stanovistich. 
tree_root(node22_0).
:- valid_root(node22_0).
%%%%%%%% node22_0 %%%%%%%%%%%%%%%%%%%
node(node22_0).
atree_rf(node22_0, a_a_plzensky51278_txt_001_p2s7).         const(a_a_plzensky51278_txt_001_p2s7).
deepord(node22_0, 1).         const(1).
id(node22_0, T_plzensky51278_txt_001_p2s7).         const(T_plzensky51278_txt_001_p2s7).
nodetype(node22_0, root).         const(root).
sentence(node22_0, Strikalo_se_na_terc_a_prenaseli_se_raneni_Ukoly_soutezni_druzstva_plnila_na_nekolika_stanovistich__).         const(Strikalo_se_na_terc_a_prenaseli_se_raneni_Ukoly_soutezni_druzstva_plnila_na_nekolika_stanovistich__).
%%%%%%%% node22_1 %%%%%%%%%%%%%%%%%%%
node(node22_1).
deepord(node22_1, 14).         const(14).
functor(node22_1, PRED).         const(PRED).
gram_sempos(node22_1, v).         const(v).
id(node22_1, T_plzensky51278_txt_001_p2s7a1).         const(T_plzensky51278_txt_001_p2s7a1).
nodetype(node22_1, complex).         const(complex).
t_lemma(node22_1, plnit).         const(plnit).
val_frame_rf(node22_1, v_v_w3486f1).         const(v_v_w3486f1).
%%%%%%%% node22_2 %%%%%%%%%%%%%%%%%%%
node(node22_2).
deepord(node22_2, 3).         const(3).
functor(node22_2, PAT).         const(PAT).
id(node22_2, T_plzensky51278_txt_001_p2s7a18).         const(T_plzensky51278_txt_001_p2s7a18).
is_generated(node22_2, 1).         const(1).
nodetype(node22_2, qcomplex).         const(qcomplex).
t_lemma(node22_2, x_Gen).         const(x_Gen).
%%%%%%%% node22_3 %%%%%%%%%%%%%%%%%%%
node(node22_3).
deepord(node22_3, 4).         const(4).
functor(node22_3, ACT).         const(ACT).
gram_sempos(node22_3, n_pron_def_pers).         const(n_pron_def_pers).
id(node22_3, T_plzensky51278_txt_001_p2s7a17).         const(T_plzensky51278_txt_001_p2s7a17).
is_generated(node22_3, 1).         const(1).
nodetype(node22_3, complex).         const(complex).
t_lemma(node22_3, x_PersPron).         const(x_PersPron).
%%%%%%%% node22_4 %%%%%%%%%%%%%%%%%%%
node(node22_4).
deepord(node22_4, 6).         const(6).
functor(node22_4, CONJ).         const(CONJ).
id(node22_4, T_plzensky51278_txt_001_p2s7a2).         const(T_plzensky51278_txt_001_p2s7a2).
nodetype(node22_4, coap).         const(coap).
t_lemma(node22_4, a).         const(a).
%%%%%%%% node22_5 %%%%%%%%%%%%%%%%%%%
node(node22_5).
deepord(node22_5, 0).         const(0).
functor(node22_5, ACT).         const(ACT).
gram_sempos(node22_5, n_pron_def_pers).         const(n_pron_def_pers).
id(node22_5, T_plzensky51278_txt_001_p2s7a22).         const(T_plzensky51278_txt_001_p2s7a22).
is_generated(node22_5, 1).         const(1).
nodetype(node22_5, complex).         const(complex).
t_lemma(node22_5, x_PersPron).         const(x_PersPron).
%%%%%%%% node22_6 %%%%%%%%%%%%%%%%%%%
node(node22_6).
deepord(node22_6, 2).         const(2).
functor(node22_6, RSTR).         const(RSTR).
gram_sempos(node22_6, v).         const(v).
id(node22_6, T_plzensky51278_txt_001_p2s7a3).         const(T_plzensky51278_txt_001_p2s7a3).
is_member(node22_6, 1).         const(1).
nodetype(node22_6, complex).         const(complex).
t_lemma(node22_6, strikat).         const(strikat).
val_frame_rf(node22_6, v_v_w6600f1).         const(v_v_w6600f1).
%%%%%%%% node22_7 %%%%%%%%%%%%%%%%%%%
node(node22_7).
deepord(node22_7, x2_1).         const(x2_1).
a_ref_type(node22_7, tree).         const(tree).
a_afun(node22_7, Obj).         const(Obj).
m_form(node22_7, Strikalo).         const(Strikalo).
m_lemma(node22_7, strikat__T).         const(strikat__T).
m_tag(node22_7, VpNS___XR_AA___).         const(VpNS___XR_AA___).
w_token(node22_7, Strikalo).         const(Strikalo).
a_ord(node22_7, 1).         const(1).
a_parent_id(node22_7, a_plzensky51278_txt_001_p2s7W5).         const(a_plzensky51278_txt_001_p2s7W5).
hide(node22_7, hide).         const(hide).
%%%%%%%% node22_8 %%%%%%%%%%%%%%%%%%%
node(node22_8).
deepord(node22_8, x2_2).         const(x2_2).
a_ref_type(node22_8, tree).         const(tree).
a_afun(node22_8, AuxT).         const(AuxT).
m_form(node22_8, se).         const(se).
m_lemma(node22_8, se___zvr__zajmeno_castice_).         const(se___zvr__zajmeno_castice_).
m_tag(node22_8, P7_X4__________).         const(P7_X4__________).
w_token(node22_8, se).         const(se).
a_ord(node22_8, 2).         const(2).
a_parent_id(node22_8, a_plzensky51278_txt_001_p2s7W1).         const(a_plzensky51278_txt_001_p2s7W1).
hide(node22_8, hide).         const(hide).
%%%%%%%% node22_9 %%%%%%%%%%%%%%%%%%%
node(node22_9).
deepord(node22_9, 5).         const(5).
functor(node22_9, DIR3).         const(DIR3).
gram_sempos(node22_9, n_denot).         const(n_denot).
id(node22_9, T_plzensky51278_txt_001_p2s7a6).         const(T_plzensky51278_txt_001_p2s7a6).
nodetype(node22_9, complex).         const(complex).
subfunctor(node22_9, basic).         const(basic).
t_lemma(node22_9, terc).         const(terc).
%%%%%%%% node22_10 %%%%%%%%%%%%%%%%%%%
node(node22_10).
deepord(node22_10, x5_1).         const(x5_1).
a_ref_type(node22_10, tree).         const(tree).
a_afun(node22_10, AuxP).         const(AuxP).
m_form(node22_10, na).         const(na).
m_lemma(node22_10, na_1).         const(na_1).
m_tag(node22_10, RR__4__________).         const(RR__4__________).
w_token(node22_10, na).         const(na).
a_ord(node22_10, 3).         const(3).
a_parent_id(node22_10, a_plzensky51278_txt_001_p2s7W1).         const(a_plzensky51278_txt_001_p2s7W1).
hide(node22_10, hide).         const(hide).
%%%%%%%% node22_11 %%%%%%%%%%%%%%%%%%%
node(node22_11).
deepord(node22_11, x5_2).         const(x5_2).
a_ref_type(node22_11, tree).         const(tree).
a_afun(node22_11, Adv).         const(Adv).
m_form(node22_11, terc).         const(terc).
m_lemma(node22_11, terc).         const(terc).
m_tag(node22_11, NNIS4_____A____).         const(NNIS4_____A____).
w_token(node22_11, terc).         const(terc).
a_ord(node22_11, 4).         const(4).
a_parent_id(node22_11, a_plzensky51278_txt_001_p2s7W3).         const(a_plzensky51278_txt_001_p2s7W3).
hide(node22_11, hide).         const(hide).
%%%%%%%% node22_12 %%%%%%%%%%%%%%%%%%%
node(node22_12).
deepord(node22_12, x6_1).         const(x6_1).
a_ref_type(node22_12, tree).         const(tree).
a_afun(node22_12, Coord).         const(Coord).
m_form(node22_12, a).         const(a).
m_lemma(node22_12, a_1).         const(a_1).
m_tag(node22_12, J______________).         const(J______________).
w_token(node22_12, a).         const(a).
a_ord(node22_12, 5).         const(5).
a_parent_id(node22_12, a_plzensky51278_txt_001_p2s7W13).         const(a_plzensky51278_txt_001_p2s7W13).
hide(node22_12, hide).         const(hide).
%%%%%%%% node22_13 %%%%%%%%%%%%%%%%%%%
node(node22_13).
deepord(node22_13, 7).         const(7).
functor(node22_13, RSTR).         const(RSTR).
gram_sempos(node22_13, v).         const(v).
id(node22_13, T_plzensky51278_txt_001_p2s7a7).         const(T_plzensky51278_txt_001_p2s7a7).
is_member(node22_13, 1).         const(1).
nodetype(node22_13, complex).         const(complex).
t_lemma(node22_13, prenaset).         const(prenaset).
val_frame_rf(node22_13, v_v_w4899f1).         const(v_v_w4899f1).
%%%%%%%% node22_14 %%%%%%%%%%%%%%%%%%%
node(node22_14).
deepord(node22_14, x7_1).         const(x7_1).
a_ref_type(node22_14, tree).         const(tree).
a_afun(node22_14, Obj).         const(Obj).
m_form(node22_14, prenaseli).         const(prenaseli).
m_lemma(node22_14, prenaset__T).         const(prenaset__T).
m_tag(node22_14, VpMP___XR_AA___).         const(VpMP___XR_AA___).
w_token(node22_14, prenaseli).         const(prenaseli).
a_ord(node22_14, 6).         const(6).
a_parent_id(node22_14, a_plzensky51278_txt_001_p2s7W5).         const(a_plzensky51278_txt_001_p2s7W5).
hide(node22_14, hide).         const(hide).
%%%%%%%% node22_15 %%%%%%%%%%%%%%%%%%%
node(node22_15).
deepord(node22_15, x7_2).         const(x7_2).
a_ref_type(node22_15, tree).         const(tree).
a_afun(node22_15, AuxT).         const(AuxT).
m_form(node22_15, se).         const(se).
m_lemma(node22_15, se___zvr__zajmeno_castice_).         const(se___zvr__zajmeno_castice_).
m_tag(node22_15, P7_X4__________).         const(P7_X4__________).
w_token(node22_15, se).         const(se).
a_ord(node22_15, 7).         const(7).
a_parent_id(node22_15, a_plzensky51278_txt_001_p2s7W6).         const(a_plzensky51278_txt_001_p2s7W6).
hide(node22_15, hide).         const(hide).
%%%%%%%% node22_16 %%%%%%%%%%%%%%%%%%%
node(node22_16).
deepord(node22_16, 8).         const(8).
functor(node22_16, DIR1).         const(DIR1).
id(node22_16, T_plzensky51278_txt_001_p2s7a21).         const(T_plzensky51278_txt_001_p2s7a21).
is_generated(node22_16, 1).         const(1).
nodetype(node22_16, qcomplex).         const(qcomplex).
subfunctor(node22_16, basic).         const(basic).
t_lemma(node22_16, x_Oblfm).         const(x_Oblfm).
%%%%%%%% node22_17 %%%%%%%%%%%%%%%%%%%
node(node22_17).
deepord(node22_17, 10).         const(10).
functor(node22_17, RSTR).         const(RSTR).
id(node22_17, T_plzensky51278_txt_001_p2s7a9).         const(T_plzensky51278_txt_001_p2s7a9).
nodetype(node22_17, complex).         const(complex).
t_lemma(node22_17, x_Period).         const(x_Period).
%%%%%%%% node22_18 %%%%%%%%%%%%%%%%%%%
node(node22_18).
deepord(node22_18, 9).         const(9).
functor(node22_18, RSTR).         const(RSTR).
gram_sempos(node22_18, n_denot).         const(n_denot).
id(node22_18, T_plzensky51278_txt_001_p2s7a10).         const(T_plzensky51278_txt_001_p2s7a10).
nodetype(node22_18, complex).         const(complex).
t_lemma(node22_18, raneni).         const(raneni).
%%%%%%%% node22_19 %%%%%%%%%%%%%%%%%%%
node(node22_19).
deepord(node22_19, x9_1).         const(x9_1).
a_ref_type(node22_19, tree).         const(tree).
a_afun(node22_19, Sb).         const(Sb).
m_form(node22_19, raneni).         const(raneni).
m_lemma(node22_19, raneni___poranit____3it_).         const(raneni___poranit____3it_).
m_tag(node22_19, NNNS1_____A____).         const(NNNS1_____A____).
w_token(node22_19, raneni).         const(raneni).
w_no_space_after(node22_19, 1).         const(1).
a_ord(node22_19, 8).         const(8).
a_parent_id(node22_19, a_plzensky51278_txt_001_p2s7W9).         const(a_plzensky51278_txt_001_p2s7W9).
hide(node22_19, hide).         const(hide).
%%%%%%%% node22_20 %%%%%%%%%%%%%%%%%%%
node(node22_20).
deepord(node22_20, x10_1).         const(x10_1).
a_ref_type(node22_20, tree).         const(tree).
a_afun(node22_20, AuxG).         const(AuxG).
m_form(node22_20, x_).         const(x_).
m_lemma(node22_20, x_).         const(x_).
m_tag(node22_20, Z______________).         const(Z______________).
w_token(node22_20, x_).         const(x_).
w_no_space_after(node22_20, 1).         const(1).
a_ord(node22_20, 9).         const(9).
a_parent_id(node22_20, a_plzensky51278_txt_001_p2s7W6).         const(a_plzensky51278_txt_001_p2s7W6).
hide(node22_20, hide).         const(hide).
%%%%%%%% node22_21 %%%%%%%%%%%%%%%%%%%
node(node22_21).
deepord(node22_21, 13).         const(13).
functor(node22_21, APP).         const(APP).
gram_sempos(node22_21, n_denot).         const(n_denot).
id(node22_21, T_plzensky51278_txt_001_p2s7a12).         const(T_plzensky51278_txt_001_p2s7a12).
nodetype(node22_21, complex).         const(complex).
t_lemma(node22_21, druzstvo).         const(druzstvo).
%%%%%%%% node22_22 %%%%%%%%%%%%%%%%%%%
node(node22_22).
deepord(node22_22, 11).         const(11).
functor(node22_22, RSTR).         const(RSTR).
gram_sempos(node22_22, n_denot).         const(n_denot).
id(node22_22, T_plzensky51278_txt_001_p2s7a11).         const(T_plzensky51278_txt_001_p2s7a11).
nodetype(node22_22, complex).         const(complex).
t_lemma(node22_22, ukol).         const(ukol).
%%%%%%%% node22_23 %%%%%%%%%%%%%%%%%%%
node(node22_23).
deepord(node22_23, x11_1).         const(x11_1).
a_ref_type(node22_23, tree).         const(tree).
a_afun(node22_23, Sb).         const(Sb).
m_form(node22_23, Ukoly).         const(Ukoly).
m_lemma(node22_23, ukol).         const(ukol).
m_tag(node22_23, NNIP1_____A____).         const(NNIP1_____A____).
w_token(node22_23, Ukoly).         const(Ukoly).
a_ord(node22_23, 10).         const(10).
a_parent_id(node22_23, a_plzensky51278_txt_001_p2s7W9).         const(a_plzensky51278_txt_001_p2s7W9).
hide(node22_23, hide).         const(hide).
%%%%%%%% node22_24 %%%%%%%%%%%%%%%%%%%
node(node22_24).
deepord(node22_24, 12).         const(12).
functor(node22_24, RSTR).         const(RSTR).
gram_sempos(node22_24, adj_denot).         const(adj_denot).
id(node22_24, T_plzensky51278_txt_001_p2s7a13).         const(T_plzensky51278_txt_001_p2s7a13).
nodetype(node22_24, complex).         const(complex).
t_lemma(node22_24, soutezni).         const(soutezni).
%%%%%%%% node22_25 %%%%%%%%%%%%%%%%%%%
node(node22_25).
deepord(node22_25, x12_1).         const(x12_1).
a_ref_type(node22_25, tree).         const(tree).
a_afun(node22_25, Atr).         const(Atr).
m_form(node22_25, soutezni).         const(soutezni).
m_lemma(node22_25, soutezni).         const(soutezni).
m_tag(node22_25, AANS1____1A____).         const(AANS1____1A____).
w_token(node22_25, soutezni).         const(soutezni).
a_ord(node22_25, 11).         const(11).
a_parent_id(node22_25, a_plzensky51278_txt_001_p2s7W12).         const(a_plzensky51278_txt_001_p2s7W12).
hide(node22_25, hide).         const(hide).
%%%%%%%% node22_26 %%%%%%%%%%%%%%%%%%%
node(node22_26).
deepord(node22_26, x13_1).         const(x13_1).
a_ref_type(node22_26, tree).         const(tree).
a_afun(node22_26, Atr).         const(Atr).
m_form(node22_26, druzstva).         const(druzstva).
m_lemma(node22_26, druzstvo).         const(druzstvo).
m_tag(node22_26, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node22_26, druzstva).         const(druzstva).
a_ord(node22_26, 12).         const(12).
a_parent_id(node22_26, a_plzensky51278_txt_001_p2s7W10).         const(a_plzensky51278_txt_001_p2s7W10).
hide(node22_26, hide).         const(hide).
%%%%%%%% node22_27 %%%%%%%%%%%%%%%%%%%
node(node22_27).
deepord(node22_27, x14_1).         const(x14_1).
a_ref_type(node22_27, tree).         const(tree).
a_afun(node22_27, Pred).         const(Pred).
m_form(node22_27, plnila).         const(plnila).
m_lemma(node22_27, plnit__T).         const(plnit__T).
m_tag(node22_27, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node22_27, plnila).         const(plnila).
a_ord(node22_27, 13).         const(13).
a_parent_id(node22_27, a_plzensky51278_txt_001_p2s7).         const(a_plzensky51278_txt_001_p2s7).
hide(node22_27, hide).         const(hide).
%%%%%%%% node22_28 %%%%%%%%%%%%%%%%%%%
node(node22_28).
deepord(node22_28, 16).         const(16).
functor(node22_28, LOC).         const(LOC).
gram_sempos(node22_28, n_denot).         const(n_denot).
id(node22_28, T_plzensky51278_txt_001_p2s7a15).         const(T_plzensky51278_txt_001_p2s7a15).
nodetype(node22_28, complex).         const(complex).
subfunctor(node22_28, basic).         const(basic).
t_lemma(node22_28, stanoviste).         const(stanoviste).
%%%%%%%% node22_29 %%%%%%%%%%%%%%%%%%%
node(node22_29).
deepord(node22_29, 15).         const(15).
functor(node22_29, RSTR).         const(RSTR).
gram_sempos(node22_29, adj_quant_indef).         const(adj_quant_indef).
id(node22_29, T_plzensky51278_txt_001_p2s7a16).         const(T_plzensky51278_txt_001_p2s7a16).
nodetype(node22_29, complex).         const(complex).
t_lemma(node22_29, kolik).         const(kolik).
%%%%%%%% node22_30 %%%%%%%%%%%%%%%%%%%
node(node22_30).
deepord(node22_30, x15_1).         const(x15_1).
a_ref_type(node22_30, tree).         const(tree).
a_afun(node22_30, Atr).         const(Atr).
m_form(node22_30, nekolika).         const(nekolika).
m_lemma(node22_30, nekolik).         const(nekolik).
m_tag(node22_30, Ca__6__________).         const(Ca__6__________).
w_token(node22_30, nekolika).         const(nekolika).
a_ord(node22_30, 15).         const(15).
a_parent_id(node22_30, a_plzensky51278_txt_001_p2s7W16).         const(a_plzensky51278_txt_001_p2s7W16).
hide(node22_30, hide).         const(hide).
%%%%%%%% node22_31 %%%%%%%%%%%%%%%%%%%
node(node22_31).
deepord(node22_31, x16_1).         const(x16_1).
a_ref_type(node22_31, tree).         const(tree).
a_afun(node22_31, AuxP).         const(AuxP).
m_form(node22_31, na).         const(na).
m_lemma(node22_31, na_1).         const(na_1).
m_tag(node22_31, RR__6__________).         const(RR__6__________).
w_token(node22_31, na).         const(na).
a_ord(node22_31, 14).         const(14).
a_parent_id(node22_31, a_plzensky51278_txt_001_p2s7W13).         const(a_plzensky51278_txt_001_p2s7W13).
hide(node22_31, hide).         const(hide).
%%%%%%%% node22_32 %%%%%%%%%%%%%%%%%%%
node(node22_32).
deepord(node22_32, x16_2).         const(x16_2).
a_ref_type(node22_32, tree).         const(tree).
a_afun(node22_32, Adv).         const(Adv).
m_form(node22_32, stanovistich).         const(stanovistich).
m_lemma(node22_32, stanoviste).         const(stanoviste).
m_tag(node22_32, NNNP6_____A____).         const(NNNP6_____A____).
w_token(node22_32, stanovistich).         const(stanovistich).
w_no_space_after(node22_32, 1).         const(1).
a_ord(node22_32, 16).         const(16).
a_parent_id(node22_32, a_plzensky51278_txt_001_p2s7W14).         const(a_plzensky51278_txt_001_p2s7W14).
hide(node22_32, hide).         const(hide).
edge(node22_0, node22_1).
edge(node22_1, node22_2).
edge(node22_1, node22_3).
edge(node22_1, node22_4).
edge(node22_4, node22_5).
edge(node22_4, node22_6).
edge(node22_6, node22_7).
edge(node22_6, node22_8).
edge(node22_6, node22_9).
edge(node22_9, node22_10).
edge(node22_9, node22_11).
edge(node22_4, node22_12).
edge(node22_4, node22_13).
edge(node22_13, node22_14).
edge(node22_13, node22_15).
edge(node22_13, node22_16).
edge(node22_13, node22_17).
edge(node22_17, node22_18).
edge(node22_18, node22_19).
edge(node22_17, node22_20).
edge(node22_17, node22_21).
edge(node22_21, node22_22).
edge(node22_22, node22_23).
edge(node22_21, node22_24).
edge(node22_24, node22_25).
edge(node22_21, node22_26).
edge(node22_1, node22_27).
edge(node22_1, node22_28).
edge(node22_28, node22_29).
edge(node22_29, node22_30).
edge(node22_28, node22_31).
edge(node22_28, node22_32).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Na jednom ze stanovist byly i pracovnice Zdravotniho ustavu se sidlem v Plzni, kde deti cekaly otazky z problematiky prevence a ochrany zdravi pri sportu, dopravnich nehodach a jinych udalostech. 
tree_root(node23_0).
:- valid_root(node23_0).
%%%%%%%% node23_0 %%%%%%%%%%%%%%%%%%%
node(node23_0).
atree_rf(node23_0, a_a_plzensky51278_txt_001_p2s8).         const(a_a_plzensky51278_txt_001_p2s8).
deepord(node23_0, 0).         const(0).
id(node23_0, T_plzensky51278_txt_001_p2s8).         const(T_plzensky51278_txt_001_p2s8).
nodetype(node23_0, root).         const(root).
sentence(node23_0, Na_jednom_ze_stanovist_byly_i_pracovnice_Zdravotniho_ustavu_se_sidlem_v_Plzni__kde_deti_cekaly_otazky_z_problematiky_prevence_a_ochrany_zdravi_pri_sportu__dopravnich_nehodach_a_jinych_udalostech__).         const(Na_jednom_ze_stanovist_byly_i_pracovnice_Zdravotniho_ustavu_se_sidlem_v_Plzni__kde_deti_cekaly_otazky_z_problematiky_prevence_a_ochrany_zdravi_pri_sportu__dopravnich_nehodach_a_jinych_udalostech__).
%%%%%%%% node23_1 %%%%%%%%%%%%%%%%%%%
node(node23_1).
deepord(node23_1, 3).         const(3).
functor(node23_1, PRED).         const(PRED).
gram_sempos(node23_1, v).         const(v).
id(node23_1, T_plzensky51278_txt_001_p2s8a1).         const(T_plzensky51278_txt_001_p2s8a1).
nodetype(node23_1, complex).         const(complex).
t_lemma(node23_1, byt).         const(byt).
val_frame_rf(node23_1, v_v_w243f1).         const(v_v_w243f1).
%%%%%%%% node23_2 %%%%%%%%%%%%%%%%%%%
node(node23_2).
deepord(node23_2, 1).         const(1).
functor(node23_2, LOC).         const(LOC).
gram_sempos(node23_2, n_quant_def).         const(n_quant_def).
id(node23_2, T_plzensky51278_txt_001_p2s8a3).         const(T_plzensky51278_txt_001_p2s8a3).
nodetype(node23_2, complex).         const(complex).
subfunctor(node23_2, basic).         const(basic).
t_lemma(node23_2, jeden).         const(jeden).
%%%%%%%% node23_3 %%%%%%%%%%%%%%%%%%%
node(node23_3).
deepord(node23_3, x1_1).         const(x1_1).
a_ref_type(node23_3, tree).         const(tree).
a_afun(node23_3, AuxP).         const(AuxP).
m_form(node23_3, Na).         const(Na).
m_lemma(node23_3, na_1).         const(na_1).
m_tag(node23_3, RR__6__________).         const(RR__6__________).
w_token(node23_3, Na).         const(Na).
a_ord(node23_3, 1).         const(1).
a_parent_id(node23_3, a_plzensky51278_txt_001_p2s8W5).         const(a_plzensky51278_txt_001_p2s8W5).
hide(node23_3, hide).         const(hide).
%%%%%%%% node23_4 %%%%%%%%%%%%%%%%%%%
node(node23_4).
deepord(node23_4, x1_2).         const(x1_2).
a_ref_type(node23_4, tree).         const(tree).
a_afun(node23_4, Adv).         const(Adv).
m_form(node23_4, jednom).         const(jednom).
m_lemma(node23_4, jeden_1).         const(jeden_1).
m_tag(node23_4, ClZS6__________).         const(ClZS6__________).
w_token(node23_4, jednom).         const(jednom).
a_ord(node23_4, 2).         const(2).
a_parent_id(node23_4, a_plzensky51278_txt_001_p2s8W1).         const(a_plzensky51278_txt_001_p2s8W1).
hide(node23_4, hide).         const(hide).
%%%%%%%% node23_5 %%%%%%%%%%%%%%%%%%%
node(node23_5).
deepord(node23_5, 2).         const(2).
functor(node23_5, DIR1).         const(DIR1).
gram_sempos(node23_5, n_denot).         const(n_denot).
id(node23_5, T_plzensky51278_txt_001_p2s8a5).         const(T_plzensky51278_txt_001_p2s8a5).
nodetype(node23_5, complex).         const(complex).
subfunctor(node23_5, basic).         const(basic).
t_lemma(node23_5, stanoviste).         const(stanoviste).
%%%%%%%% node23_6 %%%%%%%%%%%%%%%%%%%
node(node23_6).
deepord(node23_6, x2_1).         const(x2_1).
a_ref_type(node23_6, tree).         const(tree).
a_afun(node23_6, AuxP).         const(AuxP).
m_form(node23_6, ze).         const(ze).
m_lemma(node23_6, z_1).         const(z_1).
m_tag(node23_6, RV__2__________).         const(RV__2__________).
w_token(node23_6, ze).         const(ze).
a_ord(node23_6, 3).         const(3).
a_parent_id(node23_6, a_plzensky51278_txt_001_p2s8W2).         const(a_plzensky51278_txt_001_p2s8W2).
hide(node23_6, hide).         const(hide).
%%%%%%%% node23_7 %%%%%%%%%%%%%%%%%%%
node(node23_7).
deepord(node23_7, x2_2).         const(x2_2).
a_ref_type(node23_7, tree).         const(tree).
a_afun(node23_7, Atr).         const(Atr).
m_form(node23_7, stanovist).         const(stanovist).
m_lemma(node23_7, stanoviste).         const(stanoviste).
m_tag(node23_7, NNNP2_____A____).         const(NNNP2_____A____).
w_token(node23_7, stanovist).         const(stanovist).
a_ord(node23_7, 4).         const(4).
a_parent_id(node23_7, a_plzensky51278_txt_001_p2s8W3).         const(a_plzensky51278_txt_001_p2s8W3).
hide(node23_7, hide).         const(hide).
%%%%%%%% node23_8 %%%%%%%%%%%%%%%%%%%
node(node23_8).
deepord(node23_8, x3_1).         const(x3_1).
a_ref_type(node23_8, tree).         const(tree).
a_afun(node23_8, Pred).         const(Pred).
m_form(node23_8, byly).         const(byly).
m_lemma(node23_8, byt).         const(byt).
m_tag(node23_8, VpTP___XR_AA___).         const(VpTP___XR_AA___).
w_token(node23_8, byly).         const(byly).
a_ord(node23_8, 5).         const(5).
a_parent_id(node23_8, a_plzensky51278_txt_001_p2s8).         const(a_plzensky51278_txt_001_p2s8).
hide(node23_8, hide).         const(hide).
%%%%%%%% node23_9 %%%%%%%%%%%%%%%%%%%
node(node23_9).
deepord(node23_9, 5).         const(5).
functor(node23_9, ACT).         const(ACT).
gram_sempos(node23_9, n_denot).         const(n_denot).
id(node23_9, T_plzensky51278_txt_001_p2s8a6).         const(T_plzensky51278_txt_001_p2s8a6).
nodetype(node23_9, complex).         const(complex).
t_lemma(node23_9, pracovnice).         const(pracovnice).
%%%%%%%% node23_10 %%%%%%%%%%%%%%%%%%%
node(node23_10).
deepord(node23_10, 4).         const(4).
functor(node23_10, CONJ).         const(CONJ).
id(node23_10, T_plzensky51278_txt_001_p2s8a7).         const(T_plzensky51278_txt_001_p2s8a7).
nodetype(node23_10, coap).         const(coap).
t_lemma(node23_10, i).         const(i).
%%%%%%%% node23_11 %%%%%%%%%%%%%%%%%%%
node(node23_11).
deepord(node23_11, x4_1).         const(x4_1).
a_ref_type(node23_11, tree).         const(tree).
a_afun(node23_11, Coord).         const(Coord).
m_form(node23_11, i).         const(i).
m_lemma(node23_11, i_1).         const(i_1).
m_tag(node23_11, J______________).         const(J______________).
w_token(node23_11, i).         const(i).
a_ord(node23_11, 6).         const(6).
a_parent_id(node23_11, a_plzensky51278_txt_001_p2s8W7).         const(a_plzensky51278_txt_001_p2s8W7).
hide(node23_11, hide).         const(hide).
%%%%%%%% node23_12 %%%%%%%%%%%%%%%%%%%
node(node23_12).
deepord(node23_12, x5_1).         const(x5_1).
a_ref_type(node23_12, tree).         const(tree).
a_afun(node23_12, Sb).         const(Sb).
m_form(node23_12, pracovnice).         const(pracovnice).
m_lemma(node23_12, pracovnice____3ik_).         const(pracovnice____3ik_).
m_tag(node23_12, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node23_12, pracovnice).         const(pracovnice).
a_ord(node23_12, 7).         const(7).
a_parent_id(node23_12, a_plzensky51278_txt_001_p2s8W5).         const(a_plzensky51278_txt_001_p2s8W5).
hide(node23_12, hide).         const(hide).
%%%%%%%% node23_13 %%%%%%%%%%%%%%%%%%%
node(node23_13).
deepord(node23_13, 7).         const(7).
functor(node23_13, APP).         const(APP).
gram_sempos(node23_13, n_denot).         const(n_denot).
id(node23_13, T_plzensky51278_txt_001_p2s8a8).         const(T_plzensky51278_txt_001_p2s8a8).
nodetype(node23_13, complex).         const(complex).
t_lemma(node23_13, ustav).         const(ustav).
%%%%%%%% node23_14 %%%%%%%%%%%%%%%%%%%
node(node23_14).
deepord(node23_14, 6).         const(6).
functor(node23_14, RSTR).         const(RSTR).
gram_sempos(node23_14, adj_denot).         const(adj_denot).
id(node23_14, T_plzensky51278_txt_001_p2s8a9).         const(T_plzensky51278_txt_001_p2s8a9).
nodetype(node23_14, complex).         const(complex).
t_lemma(node23_14, zdravotni).         const(zdravotni).
%%%%%%%% node23_15 %%%%%%%%%%%%%%%%%%%
node(node23_15).
deepord(node23_15, x6_1).         const(x6_1).
a_ref_type(node23_15, tree).         const(tree).
a_afun(node23_15, Atr).         const(Atr).
m_form(node23_15, Zdravotniho).         const(Zdravotniho).
m_lemma(node23_15, zdravotni).         const(zdravotni).
m_tag(node23_15, AAIS2____1A____).         const(AAIS2____1A____).
w_token(node23_15, Zdravotniho).         const(Zdravotniho).
a_ord(node23_15, 8).         const(8).
a_parent_id(node23_15, a_plzensky51278_txt_001_p2s8W9).         const(a_plzensky51278_txt_001_p2s8W9).
hide(node23_15, hide).         const(hide).
%%%%%%%% node23_16 %%%%%%%%%%%%%%%%%%%
node(node23_16).
deepord(node23_16, x7_1).         const(x7_1).
a_ref_type(node23_16, tree).         const(tree).
a_afun(node23_16, Atr).         const(Atr).
m_form(node23_16, ustavu).         const(ustavu).
m_lemma(node23_16, ustav).         const(ustav).
m_tag(node23_16, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node23_16, ustavu).         const(ustavu).
a_ord(node23_16, 9).         const(9).
a_parent_id(node23_16, a_plzensky51278_txt_001_p2s8W7).         const(a_plzensky51278_txt_001_p2s8W7).
hide(node23_16, hide).         const(hide).
%%%%%%%% node23_17 %%%%%%%%%%%%%%%%%%%
node(node23_17).
deepord(node23_17, 8).         const(8).
functor(node23_17, ACMP).         const(ACMP).
gram_sempos(node23_17, n_denot).         const(n_denot).
id(node23_17, T_plzensky51278_txt_001_p2s8a11).         const(T_plzensky51278_txt_001_p2s8a11).
nodetype(node23_17, complex).         const(complex).
subfunctor(node23_17, basic).         const(basic).
t_lemma(node23_17, sidlo).         const(sidlo).
%%%%%%%% node23_18 %%%%%%%%%%%%%%%%%%%
node(node23_18).
deepord(node23_18, x8_1).         const(x8_1).
a_ref_type(node23_18, tree).         const(tree).
a_afun(node23_18, AuxP).         const(AuxP).
m_form(node23_18, se).         const(se).
m_lemma(node23_18, s_1).         const(s_1).
m_tag(node23_18, RV__7__________).         const(RV__7__________).
w_token(node23_18, se).         const(se).
a_ord(node23_18, 10).         const(10).
a_parent_id(node23_18, a_plzensky51278_txt_001_p2s8W9).         const(a_plzensky51278_txt_001_p2s8W9).
hide(node23_18, hide).         const(hide).
%%%%%%%% node23_19 %%%%%%%%%%%%%%%%%%%
node(node23_19).
deepord(node23_19, x8_2).         const(x8_2).
a_ref_type(node23_19, tree).         const(tree).
a_afun(node23_19, Atr).         const(Atr).
m_form(node23_19, sidlem).         const(sidlem).
m_lemma(node23_19, sidlo).         const(sidlo).
m_tag(node23_19, NNNS7_____A____).         const(NNNS7_____A____).
w_token(node23_19, sidlem).         const(sidlem).
a_ord(node23_19, 11).         const(11).
a_parent_id(node23_19, a_plzensky51278_txt_001_p2s8W10).         const(a_plzensky51278_txt_001_p2s8W10).
hide(node23_19, hide).         const(hide).
%%%%%%%% node23_20 %%%%%%%%%%%%%%%%%%%
node(node23_20).
deepord(node23_20, 9).         const(9).
functor(node23_20, LOC).         const(LOC).
gram_sempos(node23_20, n_denot).         const(n_denot).
id(node23_20, T_plzensky51278_txt_001_p2s8a13).         const(T_plzensky51278_txt_001_p2s8a13).
nodetype(node23_20, complex).         const(complex).
subfunctor(node23_20, basic).         const(basic).
t_lemma(node23_20, Plzen).         const(Plzen).
%%%%%%%% node23_21 %%%%%%%%%%%%%%%%%%%
node(node23_21).
deepord(node23_21, x9_1).         const(x9_1).
a_ref_type(node23_21, tree).         const(tree).
a_afun(node23_21, AuxP).         const(AuxP).
m_form(node23_21, v).         const(v).
m_lemma(node23_21, v_1).         const(v_1).
m_tag(node23_21, RR__6__________).         const(RR__6__________).
w_token(node23_21, v).         const(v).
a_ord(node23_21, 12).         const(12).
a_parent_id(node23_21, a_plzensky51278_txt_001_p2s8W11).         const(a_plzensky51278_txt_001_p2s8W11).
hide(node23_21, hide).         const(hide).
%%%%%%%% node23_22 %%%%%%%%%%%%%%%%%%%
node(node23_22).
deepord(node23_22, x9_2).         const(x9_2).
a_ref_type(node23_22, tree).         const(tree).
a_afun(node23_22, Atr).         const(Atr).
m_form(node23_22, Plzni).         const(Plzni).
m_lemma(node23_22, Plzen__G).         const(Plzen__G).
m_tag(node23_22, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node23_22, Plzni).         const(Plzni).
w_no_space_after(node23_22, 1).         const(1).
a_ord(node23_22, 13).         const(13).
a_parent_id(node23_22, a_plzensky51278_txt_001_p2s8W12).         const(a_plzensky51278_txt_001_p2s8W12).
hide(node23_22, hide).         const(hide).
%%%%%%%% node23_23 %%%%%%%%%%%%%%%%%%%
node(node23_23).
deepord(node23_23, 12).         const(12).
functor(node23_23, RSTR).         const(RSTR).
gram_sempos(node23_23, v).         const(v).
id(node23_23, T_plzensky51278_txt_001_p2s8a14).         const(T_plzensky51278_txt_001_p2s8a14).
nodetype(node23_23, complex).         const(complex).
t_lemma(node23_23, cekat).         const(cekat).
val_frame_rf(node23_23, v_v_w311f1).         const(v_v_w311f1).
%%%%%%%% node23_24 %%%%%%%%%%%%%%%%%%%
node(node23_24).
deepord(node23_24, 10).         const(10).
functor(node23_24, LOC).         const(LOC).
gram_sempos(node23_24, adv_pron_indef).         const(adv_pron_indef).
id(node23_24, T_plzensky51278_txt_001_p2s8a16).         const(T_plzensky51278_txt_001_p2s8a16).
nodetype(node23_24, complex).         const(complex).
subfunctor(node23_24, basic).         const(basic).
t_lemma(node23_24, kde).         const(kde).
%%%%%%%% node23_25 %%%%%%%%%%%%%%%%%%%
node(node23_25).
deepord(node23_25, x10_1).         const(x10_1).
a_ref_type(node23_25, tree).         const(tree).
a_afun(node23_25, Adv).         const(Adv).
m_form(node23_25, kde).         const(kde).
m_lemma(node23_25, kde).         const(kde).
m_tag(node23_25, Db_____________).         const(Db_____________).
w_token(node23_25, kde).         const(kde).
a_ord(node23_25, 15).         const(15).
a_parent_id(node23_25, a_plzensky51278_txt_001_p2s8W17).         const(a_plzensky51278_txt_001_p2s8W17).
hide(node23_25, hide).         const(hide).
%%%%%%%% node23_26 %%%%%%%%%%%%%%%%%%%
node(node23_26).
deepord(node23_26, 11).         const(11).
functor(node23_26, ACT).         const(ACT).
gram_sempos(node23_26, n_denot).         const(n_denot).
id(node23_26, T_plzensky51278_txt_001_p2s8a17).         const(T_plzensky51278_txt_001_p2s8a17).
nodetype(node23_26, complex).         const(complex).
t_lemma(node23_26, dite).         const(dite).
%%%%%%%% node23_27 %%%%%%%%%%%%%%%%%%%
node(node23_27).
deepord(node23_27, x11_1).         const(x11_1).
a_ref_type(node23_27, tree).         const(tree).
a_afun(node23_27, Sb).         const(Sb).
m_form(node23_27, deti).         const(deti).
m_lemma(node23_27, dite).         const(dite).
m_tag(node23_27, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node23_27, deti).         const(deti).
a_ord(node23_27, 16).         const(16).
a_parent_id(node23_27, a_plzensky51278_txt_001_p2s8W17).         const(a_plzensky51278_txt_001_p2s8W17).
hide(node23_27, hide).         const(hide).
%%%%%%%% node23_28 %%%%%%%%%%%%%%%%%%%
node(node23_28).
deepord(node23_28, x12_1).         const(x12_1).
a_ref_type(node23_28, tree).         const(tree).
a_afun(node23_28, Atr).         const(Atr).
m_form(node23_28, cekaly).         const(cekaly).
m_lemma(node23_28, cekat__T).         const(cekat__T).
m_tag(node23_28, VpTP___XR_AA___).         const(VpTP___XR_AA___).
w_token(node23_28, cekaly).         const(cekaly).
a_ord(node23_28, 17).         const(17).
a_parent_id(node23_28, a_plzensky51278_txt_001_p2s8W9).         const(a_plzensky51278_txt_001_p2s8W9).
hide(node23_28, hide).         const(hide).
%%%%%%%% node23_29 %%%%%%%%%%%%%%%%%%%
node(node23_29).
deepord(node23_29, 13).         const(13).
functor(node23_29, ACT).         const(ACT).
gram_sempos(node23_29, n_denot).         const(n_denot).
id(node23_29, T_plzensky51278_txt_001_p2s8a18).         const(T_plzensky51278_txt_001_p2s8a18).
nodetype(node23_29, complex).         const(complex).
t_lemma(node23_29, otazka).         const(otazka).
%%%%%%%% node23_30 %%%%%%%%%%%%%%%%%%%
node(node23_30).
deepord(node23_30, x13_1).         const(x13_1).
a_ref_type(node23_30, tree).         const(tree).
a_afun(node23_30, Sb).         const(Sb).
m_form(node23_30, otazky).         const(otazky).
m_lemma(node23_30, otazka).         const(otazka).
m_tag(node23_30, NNFP1_____A____).         const(NNFP1_____A____).
w_token(node23_30, otazky).         const(otazky).
a_ord(node23_30, 18).         const(18).
a_parent_id(node23_30, a_plzensky51278_txt_001_p2s8W17).         const(a_plzensky51278_txt_001_p2s8W17).
hide(node23_30, hide).         const(hide).
%%%%%%%% node23_31 %%%%%%%%%%%%%%%%%%%
node(node23_31).
deepord(node23_31, 16).         const(16).
functor(node23_31, CONJ).         const(CONJ).
id(node23_31, T_plzensky51278_txt_001_p2s8a20).         const(T_plzensky51278_txt_001_p2s8a20).
nodetype(node23_31, coap).         const(coap).
t_lemma(node23_31, a).         const(a).
%%%%%%%% node23_32 %%%%%%%%%%%%%%%%%%%
node(node23_32).
deepord(node23_32, 14).         const(14).
functor(node23_32, PAT).         const(PAT).
gram_sempos(node23_32, n_denot).         const(n_denot).
id(node23_32, T_plzensky51278_txt_001_p2s8a21).         const(T_plzensky51278_txt_001_p2s8a21).
is_member(node23_32, 1).         const(1).
nodetype(node23_32, complex).         const(complex).
t_lemma(node23_32, problematika).         const(problematika).
%%%%%%%% node23_33 %%%%%%%%%%%%%%%%%%%
node(node23_33).
deepord(node23_33, x14_1).         const(x14_1).
a_ref_type(node23_33, tree).         const(tree).
a_afun(node23_33, Adv).         const(Adv).
m_form(node23_33, problematiky).         const(problematiky).
m_lemma(node23_33, problematika).         const(problematika).
m_tag(node23_33, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node23_33, problematiky).         const(problematiky).
a_ord(node23_33, 20).         const(20).
a_parent_id(node23_33, a_plzensky51278_txt_001_p2s8W22).         const(a_plzensky51278_txt_001_p2s8W22).
hide(node23_33, hide).         const(hide).
%%%%%%%% node23_34 %%%%%%%%%%%%%%%%%%%
node(node23_34).
deepord(node23_34, 15).         const(15).
functor(node23_34, PAT).         const(PAT).
gram_sempos(node23_34, n_denot).         const(n_denot).
id(node23_34, T_plzensky51278_txt_001_p2s8a22).         const(T_plzensky51278_txt_001_p2s8a22).
is_member(node23_34, 1).         const(1).
nodetype(node23_34, complex).         const(complex).
t_lemma(node23_34, prevence).         const(prevence).
%%%%%%%% node23_35 %%%%%%%%%%%%%%%%%%%
node(node23_35).
deepord(node23_35, x15_1).         const(x15_1).
a_ref_type(node23_35, tree).         const(tree).
a_afun(node23_35, Adv).         const(Adv).
m_form(node23_35, prevence).         const(prevence).
m_lemma(node23_35, prevence).         const(prevence).
m_tag(node23_35, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node23_35, prevence).         const(prevence).
a_ord(node23_35, 21).         const(21).
a_parent_id(node23_35, a_plzensky51278_txt_001_p2s8W22).         const(a_plzensky51278_txt_001_p2s8W22).
hide(node23_35, hide).         const(hide).
%%%%%%%% node23_36 %%%%%%%%%%%%%%%%%%%
node(node23_36).
deepord(node23_36, x16_1).         const(x16_1).
a_ref_type(node23_36, tree).         const(tree).
a_afun(node23_36, Coord).         const(Coord).
m_form(node23_36, a).         const(a).
m_lemma(node23_36, a_1).         const(a_1).
m_tag(node23_36, J______________).         const(J______________).
w_token(node23_36, a).         const(a).
a_ord(node23_36, 22).         const(22).
a_parent_id(node23_36, a_plzensky51278_txt_001_p2s8W19).         const(a_plzensky51278_txt_001_p2s8W19).
hide(node23_36, hide).         const(hide).
%%%%%%%% node23_37 %%%%%%%%%%%%%%%%%%%
node(node23_37).
deepord(node23_37, 17).         const(17).
functor(node23_37, PAT).         const(PAT).
gram_sempos(node23_37, n_denot).         const(n_denot).
id(node23_37, T_plzensky51278_txt_001_p2s8a23).         const(T_plzensky51278_txt_001_p2s8a23).
is_member(node23_37, 1).         const(1).
nodetype(node23_37, complex).         const(complex).
t_lemma(node23_37, ochrana).         const(ochrana).
%%%%%%%% node23_38 %%%%%%%%%%%%%%%%%%%
node(node23_38).
deepord(node23_38, x17_1).         const(x17_1).
a_ref_type(node23_38, tree).         const(tree).
a_afun(node23_38, Adv).         const(Adv).
m_form(node23_38, ochrany).         const(ochrany).
m_lemma(node23_38, ochrana).         const(ochrana).
m_tag(node23_38, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node23_38, ochrany).         const(ochrany).
a_ord(node23_38, 23).         const(23).
a_parent_id(node23_38, a_plzensky51278_txt_001_p2s8W22).         const(a_plzensky51278_txt_001_p2s8W22).
hide(node23_38, hide).         const(hide).
%%%%%%%% node23_39 %%%%%%%%%%%%%%%%%%%
node(node23_39).
deepord(node23_39, 18).         const(18).
functor(node23_39, PAT).         const(PAT).
gram_sempos(node23_39, n_denot).         const(n_denot).
id(node23_39, T_plzensky51278_txt_001_p2s8a24).         const(T_plzensky51278_txt_001_p2s8a24).
nodetype(node23_39, complex).         const(complex).
t_lemma(node23_39, zdravi).         const(zdravi).
%%%%%%%% node23_40 %%%%%%%%%%%%%%%%%%%
node(node23_40).
deepord(node23_40, x18_1).         const(x18_1).
a_ref_type(node23_40, tree).         const(tree).
a_afun(node23_40, Atr).         const(Atr).
m_form(node23_40, zdravi).         const(zdravi).
m_lemma(node23_40, zdravi).         const(zdravi).
m_tag(node23_40, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node23_40, zdravi).         const(zdravi).
a_ord(node23_40, 24).         const(24).
a_parent_id(node23_40, a_plzensky51278_txt_001_p2s8W23).         const(a_plzensky51278_txt_001_p2s8W23).
hide(node23_40, hide).         const(hide).
%%%%%%%% node23_41 %%%%%%%%%%%%%%%%%%%
node(node23_41).
deepord(node23_41, 22).         const(22).
functor(node23_41, CONJ).         const(CONJ).
id(node23_41, T_plzensky51278_txt_001_p2s8a26).         const(T_plzensky51278_txt_001_p2s8a26).
nodetype(node23_41, coap).         const(coap).
t_lemma(node23_41, a).         const(a).
%%%%%%%% node23_42 %%%%%%%%%%%%%%%%%%%
node(node23_42).
deepord(node23_42, 19).         const(19).
functor(node23_42, ACT).         const(ACT).
gram_sempos(node23_42, n_denot).         const(n_denot).
id(node23_42, T_plzensky51278_txt_001_p2s8a27).         const(T_plzensky51278_txt_001_p2s8a27).
is_member(node23_42, 1).         const(1).
nodetype(node23_42, complex).         const(complex).
t_lemma(node23_42, sport).         const(sport).
%%%%%%%% node23_43 %%%%%%%%%%%%%%%%%%%
node(node23_43).
deepord(node23_43, x19_1).         const(x19_1).
a_ref_type(node23_43, tree).         const(tree).
a_afun(node23_43, Adv).         const(Adv).
m_form(node23_43, sportu).         const(sportu).
m_lemma(node23_43, sport).         const(sport).
m_tag(node23_43, NNIS6_____A____).         const(NNIS6_____A____).
w_token(node23_43, sportu).         const(sportu).
w_no_space_after(node23_43, 1).         const(1).
a_ord(node23_43, 26).         const(26).
a_parent_id(node23_43, a_plzensky51278_txt_001_p2s8W30).         const(a_plzensky51278_txt_001_p2s8W30).
hide(node23_43, hide).         const(hide).
%%%%%%%% node23_44 %%%%%%%%%%%%%%%%%%%
node(node23_44).
deepord(node23_44, 21).         const(21).
functor(node23_44, ACT).         const(ACT).
gram_sempos(node23_44, n_denot).         const(n_denot).
id(node23_44, T_plzensky51278_txt_001_p2s8a29).         const(T_plzensky51278_txt_001_p2s8a29).
is_member(node23_44, 1).         const(1).
nodetype(node23_44, complex).         const(complex).
t_lemma(node23_44, nehoda).         const(nehoda).
%%%%%%%% node23_45 %%%%%%%%%%%%%%%%%%%
node(node23_45).
deepord(node23_45, 20).         const(20).
functor(node23_45, RSTR).         const(RSTR).
gram_sempos(node23_45, adj_denot).         const(adj_denot).
id(node23_45, T_plzensky51278_txt_001_p2s8a30).         const(T_plzensky51278_txt_001_p2s8a30).
nodetype(node23_45, complex).         const(complex).
t_lemma(node23_45, dopravni).         const(dopravni).
%%%%%%%% node23_46 %%%%%%%%%%%%%%%%%%%
node(node23_46).
deepord(node23_46, x20_1).         const(x20_1).
a_ref_type(node23_46, tree).         const(tree).
a_afun(node23_46, Atr).         const(Atr).
m_form(node23_46, dopravnich).         const(dopravnich).
m_lemma(node23_46, dopravni).         const(dopravni).
m_tag(node23_46, AAFP6____1A____).         const(AAFP6____1A____).
w_token(node23_46, dopravnich).         const(dopravnich).
a_ord(node23_46, 28).         const(28).
a_parent_id(node23_46, a_plzensky51278_txt_001_p2s8W29).         const(a_plzensky51278_txt_001_p2s8W29).
hide(node23_46, hide).         const(hide).
%%%%%%%% node23_47 %%%%%%%%%%%%%%%%%%%
node(node23_47).
deepord(node23_47, x21_1).         const(x21_1).
a_ref_type(node23_47, tree).         const(tree).
a_afun(node23_47, Adv).         const(Adv).
m_form(node23_47, nehodach).         const(nehodach).
m_lemma(node23_47, nehoda___pr__automobilova__cokoliv_neprijemneho_).         const(nehoda___pr__automobilova__cokoliv_neprijemneho_).
m_tag(node23_47, NNFP6_____A____).         const(NNFP6_____A____).
w_token(node23_47, nehodach).         const(nehodach).
a_ord(node23_47, 29).         const(29).
a_parent_id(node23_47, a_plzensky51278_txt_001_p2s8W30).         const(a_plzensky51278_txt_001_p2s8W30).
hide(node23_47, hide).         const(hide).
%%%%%%%% node23_48 %%%%%%%%%%%%%%%%%%%
node(node23_48).
deepord(node23_48, x22_1).         const(x22_1).
a_ref_type(node23_48, tree).         const(tree).
a_afun(node23_48, Coord).         const(Coord).
m_form(node23_48, a).         const(a).
m_lemma(node23_48, a_1).         const(a_1).
m_tag(node23_48, J______________).         const(J______________).
w_token(node23_48, a).         const(a).
a_ord(node23_48, 30).         const(30).
a_parent_id(node23_48, a_plzensky51278_txt_001_p2s8W25).         const(a_plzensky51278_txt_001_p2s8W25).
hide(node23_48, hide).         const(hide).
%%%%%%%% node23_49 %%%%%%%%%%%%%%%%%%%
node(node23_49).
deepord(node23_49, 24).         const(24).
functor(node23_49, ACT).         const(ACT).
gram_sempos(node23_49, n_denot_neg).         const(n_denot_neg).
id(node23_49, T_plzensky51278_txt_001_p2s8a31).         const(T_plzensky51278_txt_001_p2s8a31).
is_member(node23_49, 1).         const(1).
nodetype(node23_49, complex).         const(complex).
t_lemma(node23_49, udalost).         const(udalost).
%%%%%%%% node23_50 %%%%%%%%%%%%%%%%%%%
node(node23_50).
deepord(node23_50, 23).         const(23).
functor(node23_50, RSTR).         const(RSTR).
gram_sempos(node23_50, adj_denot).         const(adj_denot).
id(node23_50, T_plzensky51278_txt_001_p2s8a32).         const(T_plzensky51278_txt_001_p2s8a32).
nodetype(node23_50, complex).         const(complex).
t_lemma(node23_50, jiny).         const(jiny).
%%%%%%%% node23_51 %%%%%%%%%%%%%%%%%%%
node(node23_51).
deepord(node23_51, x23_1).         const(x23_1).
a_ref_type(node23_51, tree).         const(tree).
a_afun(node23_51, Atr).         const(Atr).
m_form(node23_51, jinych).         const(jinych).
m_lemma(node23_51, jiny).         const(jiny).
m_tag(node23_51, AAFP6____1A____).         const(AAFP6____1A____).
w_token(node23_51, jinych).         const(jinych).
a_ord(node23_51, 31).         const(31).
a_parent_id(node23_51, a_plzensky51278_txt_001_p2s8W32).         const(a_plzensky51278_txt_001_p2s8W32).
hide(node23_51, hide).         const(hide).
%%%%%%%% node23_52 %%%%%%%%%%%%%%%%%%%
node(node23_52).
deepord(node23_52, x24_1).         const(x24_1).
a_ref_type(node23_52, tree).         const(tree).
a_afun(node23_52, Adv).         const(Adv).
m_form(node23_52, udalostech).         const(udalostech).
m_lemma(node23_52, udalost__a____3y_).         const(udalost__a____3y_).
m_tag(node23_52, NNFP6_____A____).         const(NNFP6_____A____).
w_token(node23_52, udalostech).         const(udalostech).
w_no_space_after(node23_52, 1).         const(1).
a_ord(node23_52, 32).         const(32).
a_parent_id(node23_52, a_plzensky51278_txt_001_p2s8W30).         const(a_plzensky51278_txt_001_p2s8W30).
hide(node23_52, hide).         const(hide).
edge(node23_0, node23_1).
edge(node23_1, node23_2).
edge(node23_2, node23_3).
edge(node23_2, node23_4).
edge(node23_2, node23_5).
edge(node23_5, node23_6).
edge(node23_5, node23_7).
edge(node23_1, node23_8).
edge(node23_1, node23_9).
edge(node23_9, node23_10).
edge(node23_10, node23_11).
edge(node23_9, node23_12).
edge(node23_9, node23_13).
edge(node23_13, node23_14).
edge(node23_14, node23_15).
edge(node23_13, node23_16).
edge(node23_13, node23_17).
edge(node23_17, node23_18).
edge(node23_17, node23_19).
edge(node23_17, node23_20).
edge(node23_20, node23_21).
edge(node23_20, node23_22).
edge(node23_13, node23_23).
edge(node23_23, node23_24).
edge(node23_24, node23_25).
edge(node23_23, node23_26).
edge(node23_26, node23_27).
edge(node23_23, node23_28).
edge(node23_23, node23_29).
edge(node23_29, node23_30).
edge(node23_23, node23_31).
edge(node23_31, node23_32).
edge(node23_32, node23_33).
edge(node23_31, node23_34).
edge(node23_34, node23_35).
edge(node23_31, node23_36).
edge(node23_31, node23_37).
edge(node23_37, node23_38).
edge(node23_37, node23_39).
edge(node23_39, node23_40).
edge(node23_23, node23_41).
edge(node23_41, node23_42).
edge(node23_42, node23_43).
edge(node23_41, node23_44).
edge(node23_44, node23_45).
edge(node23_45, node23_46).
edge(node23_44, node23_47).
edge(node23_41, node23_48).
edge(node23_41, node23_49).
edge(node23_49, node23_50).
edge(node23_50, node23_51).
edge(node23_49, node23_52).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pripraven byl i doprovodny program. 
tree_root(node24_0).
:- valid_root(node24_0).
%%%%%%%% node24_0 %%%%%%%%%%%%%%%%%%%
node(node24_0).
atree_rf(node24_0, a_a_plzensky51278_txt_001_p3s1).         const(a_a_plzensky51278_txt_001_p3s1).
deepord(node24_0, 0).         const(0).
id(node24_0, T_plzensky51278_txt_001_p3s1).         const(T_plzensky51278_txt_001_p3s1).
nodetype(node24_0, root).         const(root).
sentence(node24_0, Pripraven_byl_i_doprovodny_program__).         const(Pripraven_byl_i_doprovodny_program__).
%%%%%%%% node24_1 %%%%%%%%%%%%%%%%%%%
node(node24_1).
deepord(node24_1, 3).         const(3).
functor(node24_1, PRED).         const(PRED).
gram_sempos(node24_1, v).         const(v).
id(node24_1, T_plzensky51278_txt_001_p3s1a1).         const(T_plzensky51278_txt_001_p3s1a1).
nodetype(node24_1, complex).         const(complex).
t_lemma(node24_1, byt).         const(byt).
val_frame_rf(node24_1, v_v_w243f1).         const(v_v_w243f1).
%%%%%%%% node24_2 %%%%%%%%%%%%%%%%%%%
node(node24_2).
deepord(node24_2, 2).         const(2).
functor(node24_2, PAT).         const(PAT).
gram_sempos(node24_2, adj_denot).         const(adj_denot).
id(node24_2, T_plzensky51278_txt_001_p3s1a2).         const(T_plzensky51278_txt_001_p3s1a2).
nodetype(node24_2, complex).         const(complex).
t_lemma(node24_2, pripravit).         const(pripravit).
%%%%%%%% node24_3 %%%%%%%%%%%%%%%%%%%
node(node24_3).
deepord(node24_3, 1).         const(1).
functor(node24_3, PAT).         const(PAT).
gram_sempos(node24_3, n_pron_def_pers).         const(n_pron_def_pers).
id(node24_3, T_plzensky51278_txt_001_p3s1a6).         const(T_plzensky51278_txt_001_p3s1a6).
is_generated(node24_3, 1).         const(1).
nodetype(node24_3, complex).         const(complex).
t_lemma(node24_3, x_Cor).         const(x_Cor).
%%%%%%%% node24_4 %%%%%%%%%%%%%%%%%%%
node(node24_4).
deepord(node24_4, x2_1).         const(x2_1).
a_ref_type(node24_4, tree).         const(tree).
a_afun(node24_4, Pnom).         const(Pnom).
m_form(node24_4, Pripraven).         const(Pripraven).
m_lemma(node24_4, pripravit__W).         const(pripravit__W).
m_tag(node24_4, VsYS___XX_AP___).         const(VsYS___XX_AP___).
w_token(node24_4, Pripraven).         const(Pripraven).
a_ord(node24_4, 1).         const(1).
a_parent_id(node24_4, a_plzensky51278_txt_001_p3s1W2).         const(a_plzensky51278_txt_001_p3s1W2).
hide(node24_4, hide).         const(hide).
%%%%%%%% node24_5 %%%%%%%%%%%%%%%%%%%
node(node24_5).
deepord(node24_5, x3_1).         const(x3_1).
a_ref_type(node24_5, tree).         const(tree).
a_afun(node24_5, Pred).         const(Pred).
m_form(node24_5, byl).         const(byl).
m_lemma(node24_5, byt).         const(byt).
m_tag(node24_5, VpYS___XR_AA___).         const(VpYS___XR_AA___).
w_token(node24_5, byl).         const(byl).
a_ord(node24_5, 2).         const(2).
a_parent_id(node24_5, a_plzensky51278_txt_001_p3s1).         const(a_plzensky51278_txt_001_p3s1).
hide(node24_5, hide).         const(hide).
%%%%%%%% node24_6 %%%%%%%%%%%%%%%%%%%
node(node24_6).
deepord(node24_6, 6).         const(6).
functor(node24_6, ACT).         const(ACT).
gram_sempos(node24_6, n_denot).         const(n_denot).
id(node24_6, T_plzensky51278_txt_001_p3s1a3).         const(T_plzensky51278_txt_001_p3s1a3).
nodetype(node24_6, complex).         const(complex).
t_lemma(node24_6, program).         const(program).
%%%%%%%% node24_7 %%%%%%%%%%%%%%%%%%%
node(node24_7).
deepord(node24_7, 4).         const(4).
functor(node24_7, CONJ).         const(CONJ).
id(node24_7, T_plzensky51278_txt_001_p3s1a4).         const(T_plzensky51278_txt_001_p3s1a4).
nodetype(node24_7, coap).         const(coap).
t_lemma(node24_7, i).         const(i).
%%%%%%%% node24_8 %%%%%%%%%%%%%%%%%%%
node(node24_8).
deepord(node24_8, x4_1).         const(x4_1).
a_ref_type(node24_8, tree).         const(tree).
a_afun(node24_8, Coord).         const(Coord).
m_form(node24_8, i).         const(i).
m_lemma(node24_8, i_1).         const(i_1).
m_tag(node24_8, J______________).         const(J______________).
w_token(node24_8, i).         const(i).
a_ord(node24_8, 3).         const(3).
a_parent_id(node24_8, a_plzensky51278_txt_001_p3s1W5).         const(a_plzensky51278_txt_001_p3s1W5).
hide(node24_8, hide).         const(hide).
%%%%%%%% node24_9 %%%%%%%%%%%%%%%%%%%
node(node24_9).
deepord(node24_9, 5).         const(5).
functor(node24_9, RSTR).         const(RSTR).
gram_sempos(node24_9, adj_denot).         const(adj_denot).
id(node24_9, T_plzensky51278_txt_001_p3s1a5).         const(T_plzensky51278_txt_001_p3s1a5).
nodetype(node24_9, complex).         const(complex).
t_lemma(node24_9, doprovodny).         const(doprovodny).
%%%%%%%% node24_10 %%%%%%%%%%%%%%%%%%%
node(node24_10).
deepord(node24_10, x5_1).         const(x5_1).
a_ref_type(node24_10, tree).         const(tree).
a_afun(node24_10, Atr).         const(Atr).
m_form(node24_10, doprovodny).         const(doprovodny).
m_lemma(node24_10, doprovodny).         const(doprovodny).
m_tag(node24_10, AAIS1____1A____).         const(AAIS1____1A____).
w_token(node24_10, doprovodny).         const(doprovodny).
a_ord(node24_10, 4).         const(4).
a_parent_id(node24_10, a_plzensky51278_txt_001_p3s1W5).         const(a_plzensky51278_txt_001_p3s1W5).
hide(node24_10, hide).         const(hide).
%%%%%%%% node24_11 %%%%%%%%%%%%%%%%%%%
node(node24_11).
deepord(node24_11, x6_1).         const(x6_1).
a_ref_type(node24_11, tree).         const(tree).
a_afun(node24_11, Sb).         const(Sb).
m_form(node24_11, program).         const(program).
m_lemma(node24_11, program_1).         const(program_1).
m_tag(node24_11, NNIS1_____A____).         const(NNIS1_____A____).
w_token(node24_11, program).         const(program).
w_no_space_after(node24_11, 1).         const(1).
a_ord(node24_11, 5).         const(5).
a_parent_id(node24_11, a_plzensky51278_txt_001_p3s1W2).         const(a_plzensky51278_txt_001_p3s1W2).
hide(node24_11, hide).         const(hide).
edge(node24_0, node24_1).
edge(node24_1, node24_2).
edge(node24_2, node24_3).
edge(node24_2, node24_4).
edge(node24_1, node24_5).
edge(node24_1, node24_6).
edge(node24_6, node24_7).
edge(node24_7, node24_8).
edge(node24_6, node24_9).
edge(node24_9, node24_10).
edge(node24_6, node24_11).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Krome prohlidky techniky profesionalnich hasicu soutezici ceka i prohlidka pozarni stanice a ukazka zasahu hasicu - lezcu. 
tree_root(node25_0).
:- valid_root(node25_0).
%%%%%%%% node25_0 %%%%%%%%%%%%%%%%%%%
node(node25_0).
atree_rf(node25_0, a_a_plzensky51278_txt_001_p3s2).         const(a_a_plzensky51278_txt_001_p3s2).
deepord(node25_0, 0).         const(0).
id(node25_0, T_plzensky51278_txt_001_p3s2).         const(T_plzensky51278_txt_001_p3s2).
nodetype(node25_0, root).         const(root).
sentence(node25_0, Krome_prohlidky_techniky_profesionalnich_hasicu_soutezici_ceka_i_prohlidka_pozarni_stanice_a_ukazka_zasahu_hasicu___lezcu__).         const(Krome_prohlidky_techniky_profesionalnich_hasicu_soutezici_ceka_i_prohlidka_pozarni_stanice_a_ukazka_zasahu_hasicu___lezcu__).
%%%%%%%% node25_1 %%%%%%%%%%%%%%%%%%%
node(node25_1).
deepord(node25_1, 7).         const(7).
functor(node25_1, PRED).         const(PRED).
gram_sempos(node25_1, v).         const(v).
id(node25_1, T_plzensky51278_txt_001_p3s2a1).         const(T_plzensky51278_txt_001_p3s2a1).
nodetype(node25_1, complex).         const(complex).
t_lemma(node25_1, cekat).         const(cekat).
val_frame_rf(node25_1, v_v_w311f1).         const(v_v_w311f1).
%%%%%%%% node25_2 %%%%%%%%%%%%%%%%%%%
node(node25_2).
deepord(node25_2, 1).         const(1).
functor(node25_2, PAT).         const(PAT).
id(node25_2, T_plzensky51278_txt_001_p3s2a18).         const(T_plzensky51278_txt_001_p3s2a18).
is_generated(node25_2, 1).         const(1).
nodetype(node25_2, qcomplex).         const(qcomplex).
t_lemma(node25_2, x_Gen).         const(x_Gen).
%%%%%%%% node25_3 %%%%%%%%%%%%%%%%%%%
node(node25_3).
deepord(node25_3, 2).         const(2).
functor(node25_3, RESTR).         const(RESTR).
gram_sempos(node25_3, n_denot).         const(n_denot).
id(node25_3, T_plzensky51278_txt_001_p3s2a3).         const(T_plzensky51278_txt_001_p3s2a3).
nodetype(node25_3, complex).         const(complex).
t_lemma(node25_3, prohlidka).         const(prohlidka).
%%%%%%%% node25_4 %%%%%%%%%%%%%%%%%%%
node(node25_4).
deepord(node25_4, x2_1).         const(x2_1).
a_ref_type(node25_4, tree).         const(tree).
a_afun(node25_4, AuxP).         const(AuxP).
m_form(node25_4, Krome).         const(Krome).
m_lemma(node25_4, krome).         const(krome).
m_tag(node25_4, RR__2__________).         const(RR__2__________).
w_token(node25_4, Krome).         const(Krome).
a_ord(node25_4, 1).         const(1).
a_parent_id(node25_4, a_plzensky51278_txt_001_p3s2W7).         const(a_plzensky51278_txt_001_p3s2W7).
hide(node25_4, hide).         const(hide).
%%%%%%%% node25_5 %%%%%%%%%%%%%%%%%%%
node(node25_5).
deepord(node25_5, x2_2).         const(x2_2).
a_ref_type(node25_5, tree).         const(tree).
a_afun(node25_5, Adv).         const(Adv).
m_form(node25_5, prohlidky).         const(prohlidky).
m_lemma(node25_5, prohlidka).         const(prohlidka).
m_tag(node25_5, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node25_5, prohlidky).         const(prohlidky).
a_ord(node25_5, 2).         const(2).
a_parent_id(node25_5, a_plzensky51278_txt_001_p3s2W1).         const(a_plzensky51278_txt_001_p3s2W1).
hide(node25_5, hide).         const(hide).
%%%%%%%% node25_6 %%%%%%%%%%%%%%%%%%%
node(node25_6).
deepord(node25_6, 3).         const(3).
functor(node25_6, PAT).         const(PAT).
gram_sempos(node25_6, n_denot).         const(n_denot).
id(node25_6, T_plzensky51278_txt_001_p3s2a4).         const(T_plzensky51278_txt_001_p3s2a4).
nodetype(node25_6, complex).         const(complex).
t_lemma(node25_6, technika).         const(technika).
%%%%%%%% node25_7 %%%%%%%%%%%%%%%%%%%
node(node25_7).
deepord(node25_7, x3_1).         const(x3_1).
a_ref_type(node25_7, tree).         const(tree).
a_afun(node25_7, Atr).         const(Atr).
m_form(node25_7, techniky).         const(techniky).
m_lemma(node25_7, technika).         const(technika).
m_tag(node25_7, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node25_7, techniky).         const(techniky).
a_ord(node25_7, 3).         const(3).
a_parent_id(node25_7, a_plzensky51278_txt_001_p3s2W2).         const(a_plzensky51278_txt_001_p3s2W2).
hide(node25_7, hide).         const(hide).
%%%%%%%% node25_8 %%%%%%%%%%%%%%%%%%%
node(node25_8).
deepord(node25_8, 5).         const(5).
functor(node25_8, APP).         const(APP).
gram_sempos(node25_8, n_denot).         const(n_denot).
id(node25_8, T_plzensky51278_txt_001_p3s2a5).         const(T_plzensky51278_txt_001_p3s2a5).
nodetype(node25_8, complex).         const(complex).
t_lemma(node25_8, hasic).         const(hasic).
%%%%%%%% node25_9 %%%%%%%%%%%%%%%%%%%
node(node25_9).
deepord(node25_9, 4).         const(4).
functor(node25_9, RSTR).         const(RSTR).
gram_sempos(node25_9, adj_denot).         const(adj_denot).
id(node25_9, T_plzensky51278_txt_001_p3s2a6).         const(T_plzensky51278_txt_001_p3s2a6).
nodetype(node25_9, complex).         const(complex).
t_lemma(node25_9, profesionalni).         const(profesionalni).
%%%%%%%% node25_10 %%%%%%%%%%%%%%%%%%%
node(node25_10).
deepord(node25_10, x4_1).         const(x4_1).
a_ref_type(node25_10, tree).         const(tree).
a_afun(node25_10, Atr).         const(Atr).
m_form(node25_10, profesionalnich).         const(profesionalnich).
m_lemma(node25_10, profesionalni).         const(profesionalni).
m_tag(node25_10, AAMP2____1A____).         const(AAMP2____1A____).
w_token(node25_10, profesionalnich).         const(profesionalnich).
a_ord(node25_10, 4).         const(4).
a_parent_id(node25_10, a_plzensky51278_txt_001_p3s2W5).         const(a_plzensky51278_txt_001_p3s2W5).
hide(node25_10, hide).         const(hide).
%%%%%%%% node25_11 %%%%%%%%%%%%%%%%%%%
node(node25_11).
deepord(node25_11, x5_1).         const(x5_1).
a_ref_type(node25_11, tree).         const(tree).
a_afun(node25_11, Atr).         const(Atr).
m_form(node25_11, hasicu).         const(hasicu).
m_lemma(node25_11, hasic).         const(hasic).
m_tag(node25_11, NNMP2_____A____).         const(NNMP2_____A____).
w_token(node25_11, hasicu).         const(hasicu).
a_ord(node25_11, 5).         const(5).
a_parent_id(node25_11, a_plzensky51278_txt_001_p3s2W3).         const(a_plzensky51278_txt_001_p3s2W3).
hide(node25_11, hide).         const(hide).
%%%%%%%% node25_12 %%%%%%%%%%%%%%%%%%%
node(node25_12).
deepord(node25_12, 6).         const(6).
functor(node25_12, ACT).         const(ACT).
gram_sempos(node25_12, n_denot).         const(n_denot).
id(node25_12, T_plzensky51278_txt_001_p3s2a7).         const(T_plzensky51278_txt_001_p3s2a7).
nodetype(node25_12, complex).         const(complex).
t_lemma(node25_12, soutezici).         const(soutezici).
%%%%%%%% node25_13 %%%%%%%%%%%%%%%%%%%
node(node25_13).
deepord(node25_13, x6_1).         const(x6_1).
a_ref_type(node25_13, tree).         const(tree).
a_afun(node25_13, Sb).         const(Sb).
m_form(node25_13, soutezici).         const(soutezici).
m_lemma(node25_13, soutezici____3it_).         const(soutezici____3it_).
m_tag(node25_13, AGFS1_____A____).         const(AGFS1_____A____).
w_token(node25_13, soutezici).         const(soutezici).
a_ord(node25_13, 6).         const(6).
a_parent_id(node25_13, a_plzensky51278_txt_001_p3s2W7).         const(a_plzensky51278_txt_001_p3s2W7).
hide(node25_13, hide).         const(hide).
%%%%%%%% node25_14 %%%%%%%%%%%%%%%%%%%
node(node25_14).
deepord(node25_14, x7_1).         const(x7_1).
a_ref_type(node25_14, tree).         const(tree).
a_afun(node25_14, Pred).         const(Pred).
m_form(node25_14, ceka).         const(ceka).
m_lemma(node25_14, cekat__T).         const(cekat__T).
m_tag(node25_14, VB_S___3P_AA___).         const(VB_S___3P_AA___).
w_token(node25_14, ceka).         const(ceka).
a_ord(node25_14, 7).         const(7).
a_parent_id(node25_14, a_plzensky51278_txt_001_p3s2).         const(a_plzensky51278_txt_001_p3s2).
hide(node25_14, hide).         const(hide).
%%%%%%%% node25_15 %%%%%%%%%%%%%%%%%%%
node(node25_15).
deepord(node25_15, 12).         const(12).
functor(node25_15, CONJ).         const(CONJ).
id(node25_15, T_plzensky51278_txt_001_p3s2a8).         const(T_plzensky51278_txt_001_p3s2a8).
nodetype(node25_15, coap).         const(coap).
t_lemma(node25_15, a).         const(a).
%%%%%%%% node25_16 %%%%%%%%%%%%%%%%%%%
node(node25_16).
deepord(node25_16, 9).         const(9).
functor(node25_16, ACT).         const(ACT).
gram_sempos(node25_16, n_denot).         const(n_denot).
id(node25_16, T_plzensky51278_txt_001_p3s2a9).         const(T_plzensky51278_txt_001_p3s2a9).
is_member(node25_16, 1).         const(1).
nodetype(node25_16, complex).         const(complex).
t_lemma(node25_16, prohlidka).         const(prohlidka).
%%%%%%%% node25_17 %%%%%%%%%%%%%%%%%%%
node(node25_17).
deepord(node25_17, 8).         const(8).
functor(node25_17, CONJ).         const(CONJ).
id(node25_17, T_plzensky51278_txt_001_p3s2a10).         const(T_plzensky51278_txt_001_p3s2a10).
nodetype(node25_17, coap).         const(coap).
t_lemma(node25_17, i).         const(i).
%%%%%%%% node25_18 %%%%%%%%%%%%%%%%%%%
node(node25_18).
deepord(node25_18, x8_1).         const(x8_1).
a_ref_type(node25_18, tree).         const(tree).
a_afun(node25_18, Coord).         const(Coord).
m_form(node25_18, i).         const(i).
m_lemma(node25_18, i_1).         const(i_1).
m_tag(node25_18, J______________).         const(J______________).
w_token(node25_18, i).         const(i).
a_ord(node25_18, 8).         const(8).
a_parent_id(node25_18, a_plzensky51278_txt_001_p3s2W9).         const(a_plzensky51278_txt_001_p3s2W9).
hide(node25_18, hide).         const(hide).
%%%%%%%% node25_19 %%%%%%%%%%%%%%%%%%%
node(node25_19).
deepord(node25_19, x9_1).         const(x9_1).
a_ref_type(node25_19, tree).         const(tree).
a_afun(node25_19, Sb).         const(Sb).
m_form(node25_19, prohlidka).         const(prohlidka).
m_lemma(node25_19, prohlidka).         const(prohlidka).
m_tag(node25_19, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node25_19, prohlidka).         const(prohlidka).
a_ord(node25_19, 9).         const(9).
a_parent_id(node25_19, a_plzensky51278_txt_001_p3s2W12).         const(a_plzensky51278_txt_001_p3s2W12).
hide(node25_19, hide).         const(hide).
%%%%%%%% node25_20 %%%%%%%%%%%%%%%%%%%
node(node25_20).
deepord(node25_20, 11).         const(11).
functor(node25_20, PAT).         const(PAT).
gram_sempos(node25_20, n_denot).         const(n_denot).
id(node25_20, T_plzensky51278_txt_001_p3s2a11).         const(T_plzensky51278_txt_001_p3s2a11).
nodetype(node25_20, complex).         const(complex).
t_lemma(node25_20, stanice).         const(stanice).
%%%%%%%% node25_21 %%%%%%%%%%%%%%%%%%%
node(node25_21).
deepord(node25_21, 10).         const(10).
functor(node25_21, RSTR).         const(RSTR).
gram_sempos(node25_21, adj_denot).         const(adj_denot).
id(node25_21, T_plzensky51278_txt_001_p3s2a12).         const(T_plzensky51278_txt_001_p3s2a12).
nodetype(node25_21, complex).         const(complex).
t_lemma(node25_21, pozarni).         const(pozarni).
%%%%%%%% node25_22 %%%%%%%%%%%%%%%%%%%
node(node25_22).
deepord(node25_22, x10_1).         const(x10_1).
a_ref_type(node25_22, tree).         const(tree).
a_afun(node25_22, Atr).         const(Atr).
m_form(node25_22, pozarni).         const(pozarni).
m_lemma(node25_22, pozarni).         const(pozarni).
m_tag(node25_22, AAFS2____1A____).         const(AAFS2____1A____).
w_token(node25_22, pozarni).         const(pozarni).
a_ord(node25_22, 10).         const(10).
a_parent_id(node25_22, a_plzensky51278_txt_001_p3s2W11).         const(a_plzensky51278_txt_001_p3s2W11).
hide(node25_22, hide).         const(hide).
%%%%%%%% node25_23 %%%%%%%%%%%%%%%%%%%
node(node25_23).
deepord(node25_23, x11_1).         const(x11_1).
a_ref_type(node25_23, tree).         const(tree).
a_afun(node25_23, Atr).         const(Atr).
m_form(node25_23, stanice).         const(stanice).
m_lemma(node25_23, stanice).         const(stanice).
m_tag(node25_23, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node25_23, stanice).         const(stanice).
a_ord(node25_23, 11).         const(11).
a_parent_id(node25_23, a_plzensky51278_txt_001_p3s2W9).         const(a_plzensky51278_txt_001_p3s2W9).
hide(node25_23, hide).         const(hide).
%%%%%%%% node25_24 %%%%%%%%%%%%%%%%%%%
node(node25_24).
deepord(node25_24, x12_1).         const(x12_1).
a_ref_type(node25_24, tree).         const(tree).
a_afun(node25_24, Coord).         const(Coord).
m_form(node25_24, a).         const(a).
m_lemma(node25_24, a_1).         const(a_1).
m_tag(node25_24, J______________).         const(J______________).
w_token(node25_24, a).         const(a).
a_ord(node25_24, 12).         const(12).
a_parent_id(node25_24, a_plzensky51278_txt_001_p3s2W7).         const(a_plzensky51278_txt_001_p3s2W7).
hide(node25_24, hide).         const(hide).
%%%%%%%% node25_25 %%%%%%%%%%%%%%%%%%%
node(node25_25).
deepord(node25_25, 13).         const(13).
functor(node25_25, ACT).         const(ACT).
gram_sempos(node25_25, n_denot).         const(n_denot).
id(node25_25, T_plzensky51278_txt_001_p3s2a13).         const(T_plzensky51278_txt_001_p3s2a13).
is_member(node25_25, 1).         const(1).
nodetype(node25_25, complex).         const(complex).
t_lemma(node25_25, ukazka).         const(ukazka).
%%%%%%%% node25_26 %%%%%%%%%%%%%%%%%%%
node(node25_26).
deepord(node25_26, x13_1).         const(x13_1).
a_ref_type(node25_26, tree).         const(tree).
a_afun(node25_26, Sb).         const(Sb).
m_form(node25_26, ukazka).         const(ukazka).
m_lemma(node25_26, ukazka).         const(ukazka).
m_tag(node25_26, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node25_26, ukazka).         const(ukazka).
a_ord(node25_26, 13).         const(13).
a_parent_id(node25_26, a_plzensky51278_txt_001_p3s2W12).         const(a_plzensky51278_txt_001_p3s2W12).
hide(node25_26, hide).         const(hide).
%%%%%%%% node25_27 %%%%%%%%%%%%%%%%%%%
node(node25_27).
deepord(node25_27, 16).         const(16).
functor(node25_27, RSTR).         const(RSTR).
id(node25_27, T_plzensky51278_txt_001_p3s2a14).         const(T_plzensky51278_txt_001_p3s2a14).
nodetype(node25_27, complex).         const(complex).
t_lemma(node25_27, x_Dash).         const(x_Dash).
%%%%%%%% node25_28 %%%%%%%%%%%%%%%%%%%
node(node25_28).
deepord(node25_28, 14).         const(14).
functor(node25_28, RSTR).         const(RSTR).
gram_sempos(node25_28, n_denot).         const(n_denot).
id(node25_28, T_plzensky51278_txt_001_p3s2a15).         const(T_plzensky51278_txt_001_p3s2a15).
nodetype(node25_28, complex).         const(complex).
t_lemma(node25_28, zasah).         const(zasah).
%%%%%%%% node25_29 %%%%%%%%%%%%%%%%%%%
node(node25_29).
deepord(node25_29, x14_1).         const(x14_1).
a_ref_type(node25_29, tree).         const(tree).
a_afun(node25_29, Atr).         const(Atr).
a_is_member(node25_29, 1).         const(1).
m_form(node25_29, zasahu).         const(zasahu).
m_lemma(node25_29, zasah).         const(zasah).
m_tag(node25_29, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node25_29, zasahu).         const(zasahu).
a_ord(node25_29, 14).         const(14).
a_parent_id(node25_29, a_plzensky51278_txt_001_p3s2W16).         const(a_plzensky51278_txt_001_p3s2W16).
hide(node25_29, hide).         const(hide).
%%%%%%%% node25_30 %%%%%%%%%%%%%%%%%%%
node(node25_30).
deepord(node25_30, 15).         const(15).
functor(node25_30, ACT).         const(ACT).
gram_sempos(node25_30, n_denot).         const(n_denot).
id(node25_30, T_plzensky51278_txt_001_p3s2a16).         const(T_plzensky51278_txt_001_p3s2a16).
nodetype(node25_30, complex).         const(complex).
t_lemma(node25_30, hasic).         const(hasic).
%%%%%%%% node25_31 %%%%%%%%%%%%%%%%%%%
node(node25_31).
deepord(node25_31, x15_1).         const(x15_1).
a_ref_type(node25_31, tree).         const(tree).
a_afun(node25_31, Atr).         const(Atr).
m_form(node25_31, hasicu).         const(hasicu).
m_lemma(node25_31, hasic).         const(hasic).
m_tag(node25_31, NNMP2_____A____).         const(NNMP2_____A____).
w_token(node25_31, hasicu).         const(hasicu).
a_ord(node25_31, 15).         const(15).
a_parent_id(node25_31, a_plzensky51278_txt_001_p3s2W14).         const(a_plzensky51278_txt_001_p3s2W14).
hide(node25_31, hide).         const(hide).
%%%%%%%% node25_32 %%%%%%%%%%%%%%%%%%%
node(node25_32).
deepord(node25_32, x16_1).         const(x16_1).
a_ref_type(node25_32, tree).         const(tree).
a_afun(node25_32, AuxG).         const(AuxG).
m_form(node25_32, x_).         const(x_).
m_lemma(node25_32, x_).         const(x_).
m_tag(node25_32, Z______________).         const(Z______________).
w_token(node25_32, x_).         const(x_).
a_ord(node25_32, 16).         const(16).
a_parent_id(node25_32, a_plzensky51278_txt_001_p3s2W13).         const(a_plzensky51278_txt_001_p3s2W13).
hide(node25_32, hide).         const(hide).
%%%%%%%% node25_33 %%%%%%%%%%%%%%%%%%%
node(node25_33).
deepord(node25_33, 17).         const(17).
functor(node25_33, RSTR).         const(RSTR).
gram_sempos(node25_33, n_denot).         const(n_denot).
id(node25_33, T_plzensky51278_txt_001_p3s2a17).         const(T_plzensky51278_txt_001_p3s2a17).
nodetype(node25_33, complex).         const(complex).
t_lemma(node25_33, lezec).         const(lezec).
%%%%%%%% node25_34 %%%%%%%%%%%%%%%%%%%
node(node25_34).
deepord(node25_34, x17_1).         const(x17_1).
a_ref_type(node25_34, tree).         const(tree).
a_afun(node25_34, Atr).         const(Atr).
a_is_member(node25_34, 1).         const(1).
m_form(node25_34, lezcu).         const(lezcu).
m_lemma(node25_34, lezec).         const(lezec).
m_tag(node25_34, NNMP2_____A____).         const(NNMP2_____A____).
w_token(node25_34, lezcu).         const(lezcu).
w_no_space_after(node25_34, 1).         const(1).
a_ord(node25_34, 17).         const(17).
a_parent_id(node25_34, a_plzensky51278_txt_001_p3s2W16).         const(a_plzensky51278_txt_001_p3s2W16).
hide(node25_34, hide).         const(hide).
edge(node25_0, node25_1).
edge(node25_1, node25_2).
edge(node25_1, node25_3).
edge(node25_3, node25_4).
edge(node25_3, node25_5).
edge(node25_3, node25_6).
edge(node25_6, node25_7).
edge(node25_6, node25_8).
edge(node25_8, node25_9).
edge(node25_9, node25_10).
edge(node25_8, node25_11).
edge(node25_1, node25_12).
edge(node25_12, node25_13).
edge(node25_1, node25_14).
edge(node25_1, node25_15).
edge(node25_15, node25_16).
edge(node25_16, node25_17).
edge(node25_17, node25_18).
edge(node25_16, node25_19).
edge(node25_16, node25_20).
edge(node25_20, node25_21).
edge(node25_21, node25_22).
edge(node25_20, node25_23).
edge(node25_15, node25_24).
edge(node25_15, node25_25).
edge(node25_25, node25_26).
edge(node25_25, node25_27).
edge(node25_27, node25_28).
edge(node25_28, node25_29).
edge(node25_28, node25_30).
edge(node25_30, node25_31).
edge(node25_27, node25_32).
edge(node25_27, node25_33).
edge(node25_33, node25_34).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Straznici Mestske policie predvedli vycvik sluzebniho psa a dopadeni pachatele za jeho pomoci. 
tree_root(node26_0).
:- valid_root(node26_0).
%%%%%%%% node26_0 %%%%%%%%%%%%%%%%%%%
node(node26_0).
atree_rf(node26_0, a_a_plzensky51278_txt_001_p3s3).         const(a_a_plzensky51278_txt_001_p3s3).
deepord(node26_0, 0).         const(0).
id(node26_0, T_plzensky51278_txt_001_p3s3).         const(T_plzensky51278_txt_001_p3s3).
nodetype(node26_0, root).         const(root).
sentence(node26_0, Straznici_Mestske_policie_predvedli_vycvik_sluzebniho_psa_a_dopadeni_pachatele_za_jeho_pomoci__).         const(Straznici_Mestske_policie_predvedli_vycvik_sluzebniho_psa_a_dopadeni_pachatele_za_jeho_pomoci__).
%%%%%%%% node26_1 %%%%%%%%%%%%%%%%%%%
node(node26_1).
deepord(node26_1, 5).         const(5).
functor(node26_1, PRED).         const(PRED).
gram_sempos(node26_1, v).         const(v).
id(node26_1, T_plzensky51278_txt_001_p3s3a1).         const(T_plzensky51278_txt_001_p3s3a1).
nodetype(node26_1, complex).         const(complex).
t_lemma(node26_1, predvest).         const(predvest).
val_frame_rf(node26_1, v_v_w4782f1).         const(v_v_w4782f1).
%%%%%%%% node26_2 %%%%%%%%%%%%%%%%%%%
node(node26_2).
deepord(node26_2, 1).         const(1).
functor(node26_2, ADDR).         const(ADDR).
id(node26_2, T_plzensky51278_txt_001_p3s3a14).         const(T_plzensky51278_txt_001_p3s3a14).
is_generated(node26_2, 1).         const(1).
nodetype(node26_2, qcomplex).         const(qcomplex).
t_lemma(node26_2, x_Gen).         const(x_Gen).
%%%%%%%% node26_3 %%%%%%%%%%%%%%%%%%%
node(node26_3).
deepord(node26_3, 2).         const(2).
functor(node26_3, ACT).         const(ACT).
gram_sempos(node26_3, n_denot).         const(n_denot).
id(node26_3, T_plzensky51278_txt_001_p3s3a2).         const(T_plzensky51278_txt_001_p3s3a2).
nodetype(node26_3, complex).         const(complex).
t_lemma(node26_3, straznik).         const(straznik).
%%%%%%%% node26_4 %%%%%%%%%%%%%%%%%%%
node(node26_4).
deepord(node26_4, x2_1).         const(x2_1).
a_ref_type(node26_4, tree).         const(tree).
a_afun(node26_4, Sb).         const(Sb).
m_form(node26_4, Straznici).         const(Straznici).
m_lemma(node26_4, straznik___kdo_strazi__clovek_).         const(straznik___kdo_strazi__clovek_).
m_tag(node26_4, NNMP1_____A____).         const(NNMP1_____A____).
w_token(node26_4, Straznici).         const(Straznici).
a_ord(node26_4, 1).         const(1).
a_parent_id(node26_4, a_plzensky51278_txt_001_p3s3W4).         const(a_plzensky51278_txt_001_p3s3W4).
hide(node26_4, hide).         const(hide).
%%%%%%%% node26_5 %%%%%%%%%%%%%%%%%%%
node(node26_5).
deepord(node26_5, 4).         const(4).
functor(node26_5, APP).         const(APP).
gram_sempos(node26_5, n_denot).         const(n_denot).
id(node26_5, T_plzensky51278_txt_001_p3s3a3).         const(T_plzensky51278_txt_001_p3s3a3).
nodetype(node26_5, complex).         const(complex).
t_lemma(node26_5, policie).         const(policie).
%%%%%%%% node26_6 %%%%%%%%%%%%%%%%%%%
node(node26_6).
deepord(node26_6, 3).         const(3).
functor(node26_6, RSTR).         const(RSTR).
gram_sempos(node26_6, adj_denot).         const(adj_denot).
id(node26_6, T_plzensky51278_txt_001_p3s3a4).         const(T_plzensky51278_txt_001_p3s3a4).
nodetype(node26_6, complex).         const(complex).
t_lemma(node26_6, mestsky).         const(mestsky).
%%%%%%%% node26_7 %%%%%%%%%%%%%%%%%%%
node(node26_7).
deepord(node26_7, x3_1).         const(x3_1).
a_ref_type(node26_7, tree).         const(tree).
a_afun(node26_7, Atr).         const(Atr).
m_form(node26_7, Mestske).         const(Mestske).
m_lemma(node26_7, mestsky).         const(mestsky).
m_tag(node26_7, AAFS2____1A____).         const(AAFS2____1A____).
w_token(node26_7, Mestske).         const(Mestske).
a_ord(node26_7, 2).         const(2).
a_parent_id(node26_7, a_plzensky51278_txt_001_p3s3W3).         const(a_plzensky51278_txt_001_p3s3W3).
hide(node26_7, hide).         const(hide).
%%%%%%%% node26_8 %%%%%%%%%%%%%%%%%%%
node(node26_8).
deepord(node26_8, x4_1).         const(x4_1).
a_ref_type(node26_8, tree).         const(tree).
a_afun(node26_8, Atr).         const(Atr).
m_form(node26_8, policie).         const(policie).
m_lemma(node26_8, policie).         const(policie).
m_tag(node26_8, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node26_8, policie).         const(policie).
a_ord(node26_8, 3).         const(3).
a_parent_id(node26_8, a_plzensky51278_txt_001_p3s3W1).         const(a_plzensky51278_txt_001_p3s3W1).
hide(node26_8, hide).         const(hide).
%%%%%%%% node26_9 %%%%%%%%%%%%%%%%%%%
node(node26_9).
deepord(node26_9, x5_1).         const(x5_1).
a_ref_type(node26_9, tree).         const(tree).
a_afun(node26_9, Pred).         const(Pred).
m_form(node26_9, predvedli).         const(predvedli).
m_lemma(node26_9, predvest).         const(predvest).
m_tag(node26_9, VpMP___XR_AA___).         const(VpMP___XR_AA___).
w_token(node26_9, predvedli).         const(predvedli).
a_ord(node26_9, 4).         const(4).
a_parent_id(node26_9, a_plzensky51278_txt_001_p3s3).         const(a_plzensky51278_txt_001_p3s3).
hide(node26_9, hide).         const(hide).
%%%%%%%% node26_10 %%%%%%%%%%%%%%%%%%%
node(node26_10).
deepord(node26_10, 6).         const(6).
functor(node26_10, RSTR).         const(RSTR).
gram_sempos(node26_10, n_denot).         const(n_denot).
id(node26_10, T_plzensky51278_txt_001_p3s3a6).         const(T_plzensky51278_txt_001_p3s3a6).
nodetype(node26_10, complex).         const(complex).
t_lemma(node26_10, vycvik).         const(vycvik).
%%%%%%%% node26_11 %%%%%%%%%%%%%%%%%%%
node(node26_11).
deepord(node26_11, x6_1).         const(x6_1).
a_ref_type(node26_11, tree).         const(tree).
a_afun(node26_11, Obj).         const(Obj).
m_form(node26_11, vycvik).         const(vycvik).
m_lemma(node26_11, vycvik).         const(vycvik).
m_tag(node26_11, NNIS4_____A____).         const(NNIS4_____A____).
w_token(node26_11, vycvik).         const(vycvik).
a_ord(node26_11, 5).         const(5).
a_parent_id(node26_11, a_plzensky51278_txt_001_p3s3W8).         const(a_plzensky51278_txt_001_p3s3W8).
hide(node26_11, hide).         const(hide).
%%%%%%%% node26_12 %%%%%%%%%%%%%%%%%%%
node(node26_12).
deepord(node26_12, 9).         const(9).
functor(node26_12, CONJ).         const(CONJ).
id(node26_12, T_plzensky51278_txt_001_p3s3a5).         const(T_plzensky51278_txt_001_p3s3a5).
nodetype(node26_12, coap).         const(coap).
t_lemma(node26_12, a).         const(a).
%%%%%%%% node26_13 %%%%%%%%%%%%%%%%%%%
node(node26_13).
deepord(node26_13, 8).         const(8).
functor(node26_13, PAT).         const(PAT).
gram_sempos(node26_13, n_denot).         const(n_denot).
id(node26_13, T_plzensky51278_txt_001_p3s3a7).         const(T_plzensky51278_txt_001_p3s3a7).
is_member(node26_13, 1).         const(1).
nodetype(node26_13, complex).         const(complex).
t_lemma(node26_13, pes).         const(pes).
%%%%%%%% node26_14 %%%%%%%%%%%%%%%%%%%
node(node26_14).
deepord(node26_14, 7).         const(7).
functor(node26_14, RSTR).         const(RSTR).
gram_sempos(node26_14, adj_denot).         const(adj_denot).
id(node26_14, T_plzensky51278_txt_001_p3s3a8).         const(T_plzensky51278_txt_001_p3s3a8).
nodetype(node26_14, complex).         const(complex).
t_lemma(node26_14, sluzebni).         const(sluzebni).
%%%%%%%% node26_15 %%%%%%%%%%%%%%%%%%%
node(node26_15).
deepord(node26_15, x7_1).         const(x7_1).
a_ref_type(node26_15, tree).         const(tree).
a_afun(node26_15, Atr).         const(Atr).
m_form(node26_15, sluzebniho).         const(sluzebniho).
m_lemma(node26_15, sluzebni___pomer_byt_zbran_____).         const(sluzebni___pomer_byt_zbran_____).
m_tag(node26_15, AAMS2____1A____).         const(AAMS2____1A____).
w_token(node26_15, sluzebniho).         const(sluzebniho).
a_ord(node26_15, 6).         const(6).
a_parent_id(node26_15, a_plzensky51278_txt_001_p3s3W7).         const(a_plzensky51278_txt_001_p3s3W7).
hide(node26_15, hide).         const(hide).
%%%%%%%% node26_16 %%%%%%%%%%%%%%%%%%%
node(node26_16).
deepord(node26_16, x8_1).         const(x8_1).
a_ref_type(node26_16, tree).         const(tree).
a_afun(node26_16, Atr).         const(Atr).
m_form(node26_16, psa).         const(psa).
m_lemma(node26_16, pes___zvire_).         const(pes___zvire_).
m_tag(node26_16, NNMS2_____A____).         const(NNMS2_____A____).
w_token(node26_16, psa).         const(psa).
a_ord(node26_16, 7).         const(7).
a_parent_id(node26_16, a_plzensky51278_txt_001_p3s3W5).         const(a_plzensky51278_txt_001_p3s3W5).
hide(node26_16, hide).         const(hide).
%%%%%%%% node26_17 %%%%%%%%%%%%%%%%%%%
node(node26_17).
deepord(node26_17, x9_1).         const(x9_1).
a_ref_type(node26_17, tree).         const(tree).
a_afun(node26_17, Coord).         const(Coord).
m_form(node26_17, a).         const(a).
m_lemma(node26_17, a_1).         const(a_1).
m_tag(node26_17, J______________).         const(J______________).
w_token(node26_17, a).         const(a).
a_ord(node26_17, 8).         const(8).
a_parent_id(node26_17, a_plzensky51278_txt_001_p3s3W4).         const(a_plzensky51278_txt_001_p3s3W4).
hide(node26_17, hide).         const(hide).
%%%%%%%% node26_18 %%%%%%%%%%%%%%%%%%%
node(node26_18).
deepord(node26_18, 10).         const(10).
functor(node26_18, PAT).         const(PAT).
gram_sempos(node26_18, n_denot).         const(n_denot).
id(node26_18, T_plzensky51278_txt_001_p3s3a9).         const(T_plzensky51278_txt_001_p3s3a9).
is_member(node26_18, 1).         const(1).
nodetype(node26_18, complex).         const(complex).
t_lemma(node26_18, dopadeni).         const(dopadeni).
%%%%%%%% node26_19 %%%%%%%%%%%%%%%%%%%
node(node26_19).
deepord(node26_19, x10_1).         const(x10_1).
a_ref_type(node26_19, tree).         const(tree).
a_afun(node26_19, Adv).         const(Adv).
m_form(node26_19, dopadeni).         const(dopadeni).
m_lemma(node26_19, dopadeni____3nout_).         const(dopadeni____3nout_).
m_tag(node26_19, NNNP2_____A____).         const(NNNP2_____A____).
w_token(node26_19, dopadeni).         const(dopadeni).
a_ord(node26_19, 9).         const(9).
a_parent_id(node26_19, a_plzensky51278_txt_001_p3s3W8).         const(a_plzensky51278_txt_001_p3s3W8).
hide(node26_19, hide).         const(hide).
%%%%%%%% node26_20 %%%%%%%%%%%%%%%%%%%
node(node26_20).
deepord(node26_20, 11).         const(11).
functor(node26_20, APP).         const(APP).
gram_sempos(node26_20, n_denot).         const(n_denot).
id(node26_20, T_plzensky51278_txt_001_p3s3a10).         const(T_plzensky51278_txt_001_p3s3a10).
nodetype(node26_20, complex).         const(complex).
t_lemma(node26_20, pachatel).         const(pachatel).
%%%%%%%% node26_21 %%%%%%%%%%%%%%%%%%%
node(node26_21).
deepord(node26_21, x11_1).         const(x11_1).
a_ref_type(node26_21, tree).         const(tree).
a_afun(node26_21, Atr).         const(Atr).
m_form(node26_21, pachatele).         const(pachatele).
m_lemma(node26_21, pachatel).         const(pachatel).
m_tag(node26_21, NNMS2_____A____).         const(NNMS2_____A____).
w_token(node26_21, pachatele).         const(pachatele).
a_ord(node26_21, 10).         const(10).
a_parent_id(node26_21, a_plzensky51278_txt_001_p3s3W9).         const(a_plzensky51278_txt_001_p3s3W9).
hide(node26_21, hide).         const(hide).
%%%%%%%% node26_22 %%%%%%%%%%%%%%%%%%%
node(node26_22).
deepord(node26_22, 12).         const(12).
functor(node26_22, ACT).         const(ACT).
gram_sempos(node26_22, n_pron_def_pers).         const(n_pron_def_pers).
id(node26_22, T_plzensky51278_txt_001_p3s3a13).         const(T_plzensky51278_txt_001_p3s3a13).
nodetype(node26_22, complex).         const(complex).
t_lemma(node26_22, x_PersPron).         const(x_PersPron).
%%%%%%%% node26_23 %%%%%%%%%%%%%%%%%%%
node(node26_23).
deepord(node26_23, x12_1).         const(x12_1).
a_ref_type(node26_23, tree).         const(tree).
a_afun(node26_23, AuxP).         const(AuxP).
m_form(node26_23, za).         const(za).
m_lemma(node26_23, za_1).         const(za_1).
m_tag(node26_23, RR__4__________).         const(RR__4__________).
w_token(node26_23, za).         const(za).
a_ord(node26_23, 11).         const(11).
a_parent_id(node26_23, a_plzensky51278_txt_001_p3s3W4).         const(a_plzensky51278_txt_001_p3s3W4).
hide(node26_23, hide).         const(hide).
%%%%%%%% node26_24 %%%%%%%%%%%%%%%%%%%
node(node26_24).
deepord(node26_24, x12_2).         const(x12_2).
a_ref_type(node26_24, tree).         const(tree).
a_afun(node26_24, Atr).         const(Atr).
m_form(node26_24, jeho).         const(jeho).
m_lemma(node26_24, jeho___privlast__).         const(jeho___privlast__).
m_tag(node26_24, PSXXXZS3_______).         const(PSXXXZS3_______).
w_token(node26_24, jeho).         const(jeho).
a_ord(node26_24, 12).         const(12).
a_parent_id(node26_24, a_plzensky51278_txt_001_p3s3W13).         const(a_plzensky51278_txt_001_p3s3W13).
hide(node26_24, hide).         const(hide).
%%%%%%%% node26_25 %%%%%%%%%%%%%%%%%%%
node(node26_25).
deepord(node26_25, x12_3).         const(x12_3).
a_ref_type(node26_25, tree).         const(tree).
a_afun(node26_25, AuxP).         const(AuxP).
m_form(node26_25, pomoci).         const(pomoci).
m_lemma(node26_25, pomoc).         const(pomoc).
m_tag(node26_25, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node26_25, pomoci).         const(pomoci).
w_no_space_after(node26_25, 1).         const(1).
a_ord(node26_25, 13).         const(13).
a_parent_id(node26_25, a_plzensky51278_txt_001_p3s3W11).         const(a_plzensky51278_txt_001_p3s3W11).
hide(node26_25, hide).         const(hide).
edge(node26_0, node26_1).
edge(node26_1, node26_2).
edge(node26_1, node26_3).
edge(node26_3, node26_4).
edge(node26_3, node26_5).
edge(node26_5, node26_6).
edge(node26_6, node26_7).
edge(node26_5, node26_8).
edge(node26_1, node26_9).
edge(node26_1, node26_10).
edge(node26_10, node26_11).
edge(node26_10, node26_12).
edge(node26_12, node26_13).
edge(node26_13, node26_14).
edge(node26_14, node26_15).
edge(node26_13, node26_16).
edge(node26_12, node26_17).
edge(node26_12, node26_18).
edge(node26_18, node26_19).
edge(node26_18, node26_20).
edge(node26_20, node26_21).
edge(node26_1, node26_22).
edge(node26_22, node26_23).
edge(node26_22, node26_24).
edge(node26_22, node26_25).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Kazdy soutezici obdrzel drobne vecne ceny a pametni list. 
tree_root(node27_0).
:- valid_root(node27_0).
%%%%%%%% node27_0 %%%%%%%%%%%%%%%%%%%
node(node27_0).
atree_rf(node27_0, a_a_plzensky51278_txt_001_p4s1).         const(a_a_plzensky51278_txt_001_p4s1).
deepord(node27_0, 0).         const(0).
id(node27_0, T_plzensky51278_txt_001_p4s1).         const(T_plzensky51278_txt_001_p4s1).
nodetype(node27_0, root).         const(root).
sentence(node27_0, Kazdy_soutezici_obdrzel_drobne_vecne_ceny_a_pametni_list__).         const(Kazdy_soutezici_obdrzel_drobne_vecne_ceny_a_pametni_list__).
%%%%%%%% node27_1 %%%%%%%%%%%%%%%%%%%
node(node27_1).
deepord(node27_1, 4).         const(4).
functor(node27_1, PRED).         const(PRED).
gram_sempos(node27_1, v).         const(v).
id(node27_1, T_plzensky51278_txt_001_p4s1a1).         const(T_plzensky51278_txt_001_p4s1a1).
nodetype(node27_1, complex).         const(complex).
t_lemma(node27_1, obdrzet).         const(obdrzet).
val_frame_rf(node27_1, v_v_w2451f1).         const(v_v_w2451f1).
%%%%%%%% node27_2 %%%%%%%%%%%%%%%%%%%
node(node27_2).
deepord(node27_2, 1).         const(1).
functor(node27_2, PAT).         const(PAT).
id(node27_2, T_plzensky51278_txt_001_p4s1a10).         const(T_plzensky51278_txt_001_p4s1a10).
is_generated(node27_2, 1).         const(1).
nodetype(node27_2, qcomplex).         const(qcomplex).
t_lemma(node27_2, x_Gen).         const(x_Gen).
%%%%%%%% node27_3 %%%%%%%%%%%%%%%%%%%
node(node27_3).
deepord(node27_3, 3).         const(3).
functor(node27_3, ACT).         const(ACT).
gram_sempos(node27_3, n_denot).         const(n_denot).
id(node27_3, T_plzensky51278_txt_001_p4s1a2).         const(T_plzensky51278_txt_001_p4s1a2).
nodetype(node27_3, complex).         const(complex).
t_lemma(node27_3, soutezici).         const(soutezici).
%%%%%%%% node27_4 %%%%%%%%%%%%%%%%%%%
node(node27_4).
deepord(node27_4, 2).         const(2).
functor(node27_4, RSTR).         const(RSTR).
gram_sempos(node27_4, adj_pron_indef).         const(adj_pron_indef).
id(node27_4, T_plzensky51278_txt_001_p4s1a3).         const(T_plzensky51278_txt_001_p4s1a3).
nodetype(node27_4, complex).         const(complex).
t_lemma(node27_4, ktery).         const(ktery).
%%%%%%%% node27_5 %%%%%%%%%%%%%%%%%%%
node(node27_5).
deepord(node27_5, x2_1).         const(x2_1).
a_ref_type(node27_5, tree).         const(tree).
a_afun(node27_5, Atr).         const(Atr).
m_form(node27_5, Kazdy).         const(Kazdy).
m_lemma(node27_5, kazdy).         const(kazdy).
m_tag(node27_5, AAMS1____1A____).         const(AAMS1____1A____).
w_token(node27_5, Kazdy).         const(Kazdy).
a_ord(node27_5, 1).         const(1).
a_parent_id(node27_5, a_plzensky51278_txt_001_p4s1W2).         const(a_plzensky51278_txt_001_p4s1W2).
hide(node27_5, hide).         const(hide).
%%%%%%%% node27_6 %%%%%%%%%%%%%%%%%%%
node(node27_6).
deepord(node27_6, x3_1).         const(x3_1).
a_ref_type(node27_6, tree).         const(tree).
a_afun(node27_6, Sb).         const(Sb).
m_form(node27_6, soutezici).         const(soutezici).
m_lemma(node27_6, soutezici____3it_).         const(soutezici____3it_).
m_tag(node27_6, AGMP1_____A____).         const(AGMP1_____A____).
w_token(node27_6, soutezici).         const(soutezici).
a_ord(node27_6, 2).         const(2).
a_parent_id(node27_6, a_plzensky51278_txt_001_p4s1W3).         const(a_plzensky51278_txt_001_p4s1W3).
hide(node27_6, hide).         const(hide).
%%%%%%%% node27_7 %%%%%%%%%%%%%%%%%%%
node(node27_7).
deepord(node27_7, x4_1).         const(x4_1).
a_ref_type(node27_7, tree).         const(tree).
a_afun(node27_7, Pred).         const(Pred).
m_form(node27_7, obdrzel).         const(obdrzel).
m_lemma(node27_7, obdrzet).         const(obdrzet).
m_tag(node27_7, VpYS___XR_AA___).         const(VpYS___XR_AA___).
w_token(node27_7, obdrzel).         const(obdrzel).
a_ord(node27_7, 3).         const(3).
a_parent_id(node27_7, a_plzensky51278_txt_001_p4s1).         const(a_plzensky51278_txt_001_p4s1).
hide(node27_7, hide).         const(hide).
%%%%%%%% node27_8 %%%%%%%%%%%%%%%%%%%
node(node27_8).
deepord(node27_8, 8).         const(8).
functor(node27_8, CONJ).         const(CONJ).
id(node27_8, T_plzensky51278_txt_001_p4s1a4).         const(T_plzensky51278_txt_001_p4s1a4).
nodetype(node27_8, coap).         const(coap).
t_lemma(node27_8, a).         const(a).
%%%%%%%% node27_9 %%%%%%%%%%%%%%%%%%%
node(node27_9).
deepord(node27_9, 5).         const(5).
functor(node27_9, RSTR).         const(RSTR).
gram_sempos(node27_9, adj_denot).         const(adj_denot).
id(node27_9, T_plzensky51278_txt_001_p4s1a5).         const(T_plzensky51278_txt_001_p4s1a5).
is_member(node27_9, 1).         const(1).
nodetype(node27_9, complex).         const(complex).
t_lemma(node27_9, drobny).         const(drobny).
%%%%%%%% node27_10 %%%%%%%%%%%%%%%%%%%
node(node27_10).
deepord(node27_10, x5_1).         const(x5_1).
a_ref_type(node27_10, tree).         const(tree).
a_afun(node27_10, Atr).         const(Atr).
m_form(node27_10, drobne).         const(drobne).
m_lemma(node27_10, drobny).         const(drobny).
m_tag(node27_10, AANS4____1A____).         const(AANS4____1A____).
w_token(node27_10, drobne).         const(drobne).
a_ord(node27_10, 4).         const(4).
a_parent_id(node27_10, a_plzensky51278_txt_001_p4s1W7).         const(a_plzensky51278_txt_001_p4s1W7).
hide(node27_10, hide).         const(hide).
%%%%%%%% node27_11 %%%%%%%%%%%%%%%%%%%
node(node27_11).
deepord(node27_11, 7).         const(7).
functor(node27_11, RSTR).         const(RSTR).
gram_sempos(node27_11, n_denot).         const(n_denot).
id(node27_11, T_plzensky51278_txt_001_p4s1a6).         const(T_plzensky51278_txt_001_p4s1a6).
is_member(node27_11, 1).         const(1).
nodetype(node27_11, complex).         const(complex).
t_lemma(node27_11, cena).         const(cena).
%%%%%%%% node27_12 %%%%%%%%%%%%%%%%%%%
node(node27_12).
deepord(node27_12, 6).         const(6).
functor(node27_12, RSTR).         const(RSTR).
gram_sempos(node27_12, adj_denot).         const(adj_denot).
id(node27_12, T_plzensky51278_txt_001_p4s1a7).         const(T_plzensky51278_txt_001_p4s1a7).
nodetype(node27_12, complex).         const(complex).
t_lemma(node27_12, vecny).         const(vecny).
%%%%%%%% node27_13 %%%%%%%%%%%%%%%%%%%
node(node27_13).
deepord(node27_13, x6_1).         const(x6_1).
a_ref_type(node27_13, tree).         const(tree).
a_afun(node27_13, Atr).         const(Atr).
m_form(node27_13, vecne).         const(vecne).
m_lemma(node27_13, vecny).         const(vecny).
m_tag(node27_13, AAFP4____1A____).         const(AAFP4____1A____).
w_token(node27_13, vecne).         const(vecne).
a_ord(node27_13, 5).         const(5).
a_parent_id(node27_13, a_plzensky51278_txt_001_p4s1W6).         const(a_plzensky51278_txt_001_p4s1W6).
hide(node27_13, hide).         const(hide).
%%%%%%%% node27_14 %%%%%%%%%%%%%%%%%%%
node(node27_14).
deepord(node27_14, x7_1).         const(x7_1).
a_ref_type(node27_14, tree).         const(tree).
a_afun(node27_14, Obj).         const(Obj).
m_form(node27_14, ceny).         const(ceny).
m_lemma(node27_14, cena_1___v_penezich__naturalni__nevycislitelna_____).         const(cena_1___v_penezich__naturalni__nevycislitelna_____).
m_tag(node27_14, NNFP4_____A____).         const(NNFP4_____A____).
w_token(node27_14, ceny).         const(ceny).
a_ord(node27_14, 6).         const(6).
a_parent_id(node27_14, a_plzensky51278_txt_001_p4s1W7).         const(a_plzensky51278_txt_001_p4s1W7).
hide(node27_14, hide).         const(hide).
%%%%%%%% node27_15 %%%%%%%%%%%%%%%%%%%
node(node27_15).
deepord(node27_15, x8_1).         const(x8_1).
a_ref_type(node27_15, tree).         const(tree).
a_afun(node27_15, Coord).         const(Coord).
m_form(node27_15, a).         const(a).
m_lemma(node27_15, a_1).         const(a_1).
m_tag(node27_15, J______________).         const(J______________).
w_token(node27_15, a).         const(a).
a_ord(node27_15, 7).         const(7).
a_parent_id(node27_15, a_plzensky51278_txt_001_p4s1W3).         const(a_plzensky51278_txt_001_p4s1W3).
hide(node27_15, hide).         const(hide).
%%%%%%%% node27_16 %%%%%%%%%%%%%%%%%%%
node(node27_16).
deepord(node27_16, 10).         const(10).
functor(node27_16, RSTR).         const(RSTR).
gram_sempos(node27_16, n_denot).         const(n_denot).
id(node27_16, T_plzensky51278_txt_001_p4s1a8).         const(T_plzensky51278_txt_001_p4s1a8).
is_member(node27_16, 1).         const(1).
nodetype(node27_16, complex).         const(complex).
t_lemma(node27_16, list).         const(list).
%%%%%%%% node27_17 %%%%%%%%%%%%%%%%%%%
node(node27_17).
deepord(node27_17, 9).         const(9).
functor(node27_17, RSTR).         const(RSTR).
gram_sempos(node27_17, adj_denot).         const(adj_denot).
id(node27_17, T_plzensky51278_txt_001_p4s1a9).         const(T_plzensky51278_txt_001_p4s1a9).
nodetype(node27_17, complex).         const(complex).
t_lemma(node27_17, pametni).         const(pametni).
%%%%%%%% node27_18 %%%%%%%%%%%%%%%%%%%
node(node27_18).
deepord(node27_18, x9_1).         const(x9_1).
a_ref_type(node27_18, tree).         const(tree).
a_afun(node27_18, Atr).         const(Atr).
m_form(node27_18, pametni).         const(pametni).
m_lemma(node27_18, pametni).         const(pametni).
m_tag(node27_18, AAIS4____1A____).         const(AAIS4____1A____).
w_token(node27_18, pametni).         const(pametni).
a_ord(node27_18, 8).         const(8).
a_parent_id(node27_18, a_plzensky51278_txt_001_p4s1W9).         const(a_plzensky51278_txt_001_p4s1W9).
hide(node27_18, hide).         const(hide).
%%%%%%%% node27_19 %%%%%%%%%%%%%%%%%%%
node(node27_19).
deepord(node27_19, x10_1).         const(x10_1).
a_ref_type(node27_19, tree).         const(tree).
a_afun(node27_19, Obj).         const(Obj).
m_form(node27_19, list).         const(list).
m_lemma(node27_19, list).         const(list).
m_tag(node27_19, NNIS4_____A____).         const(NNIS4_____A____).
w_token(node27_19, list).         const(list).
w_no_space_after(node27_19, 1).         const(1).
a_ord(node27_19, 9).         const(9).
a_parent_id(node27_19, a_plzensky51278_txt_001_p4s1W7).         const(a_plzensky51278_txt_001_p4s1W7).
hide(node27_19, hide).         const(hide).
edge(node27_0, node27_1).
edge(node27_1, node27_2).
edge(node27_1, node27_3).
edge(node27_3, node27_4).
edge(node27_4, node27_5).
edge(node27_3, node27_6).
edge(node27_1, node27_7).
edge(node27_1, node27_8).
edge(node27_8, node27_9).
edge(node27_9, node27_10).
edge(node27_8, node27_11).
edge(node27_11, node27_12).
edge(node27_12, node27_13).
edge(node27_11, node27_14).
edge(node27_8, node27_15).
edge(node27_8, node27_16).
edge(node27_16, node27_17).
edge(node27_17, node27_18).
edge(node27_16, node27_19).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Tri vitezna druzstva obdrzela hodnotne ceny a medaile. 
tree_root(node28_0).
:- valid_root(node28_0).
%%%%%%%% node28_0 %%%%%%%%%%%%%%%%%%%
node(node28_0).
atree_rf(node28_0, a_a_plzensky51278_txt_001_p4s2).         const(a_a_plzensky51278_txt_001_p4s2).
deepord(node28_0, 0).         const(0).
id(node28_0, T_plzensky51278_txt_001_p4s2).         const(T_plzensky51278_txt_001_p4s2).
nodetype(node28_0, root).         const(root).
sentence(node28_0, Tri_vitezna_druzstva_obdrzela_hodnotne_ceny_a_medaile__).         const(Tri_vitezna_druzstva_obdrzela_hodnotne_ceny_a_medaile__).
%%%%%%%% node28_1 %%%%%%%%%%%%%%%%%%%
node(node28_1).
deepord(node28_1, 5).         const(5).
functor(node28_1, PRED).         const(PRED).
gram_sempos(node28_1, v).         const(v).
id(node28_1, T_plzensky51278_txt_001_p4s2a1).         const(T_plzensky51278_txt_001_p4s2a1).
nodetype(node28_1, complex).         const(complex).
t_lemma(node28_1, obdrzet).         const(obdrzet).
val_frame_rf(node28_1, v_v_w2451f1).         const(v_v_w2451f1).
%%%%%%%% node28_2 %%%%%%%%%%%%%%%%%%%
node(node28_2).
deepord(node28_2, 1).         const(1).
functor(node28_2, PAT).         const(PAT).
id(node28_2, T_plzensky51278_txt_001_p4s2a9).         const(T_plzensky51278_txt_001_p4s2a9).
is_generated(node28_2, 1).         const(1).
nodetype(node28_2, qcomplex).         const(qcomplex).
t_lemma(node28_2, x_Gen).         const(x_Gen).
%%%%%%%% node28_3 %%%%%%%%%%%%%%%%%%%
node(node28_3).
deepord(node28_3, 4).         const(4).
functor(node28_3, ACT).         const(ACT).
gram_sempos(node28_3, n_denot).         const(n_denot).
id(node28_3, T_plzensky51278_txt_001_p4s2a2).         const(T_plzensky51278_txt_001_p4s2a2).
nodetype(node28_3, complex).         const(complex).
t_lemma(node28_3, druzstvo).         const(druzstvo).
%%%%%%%% node28_4 %%%%%%%%%%%%%%%%%%%
node(node28_4).
deepord(node28_4, 2).         const(2).
functor(node28_4, RSTR).         const(RSTR).
gram_sempos(node28_4, adj_quant_def).         const(adj_quant_def).
id(node28_4, T_plzensky51278_txt_001_p4s2a3).         const(T_plzensky51278_txt_001_p4s2a3).
nodetype(node28_4, complex).         const(complex).
t_lemma(node28_4, tri).         const(tri).
%%%%%%%% node28_5 %%%%%%%%%%%%%%%%%%%
node(node28_5).
deepord(node28_5, x2_1).         const(x2_1).
a_ref_type(node28_5, tree).         const(tree).
a_afun(node28_5, Atr).         const(Atr).
m_form(node28_5, Tri).         const(Tri).
m_lemma(node28_5, tri_3).         const(tri_3).
m_tag(node28_5, ClXP1__________).         const(ClXP1__________).
w_token(node28_5, Tri).         const(Tri).
a_ord(node28_5, 1).         const(1).
a_parent_id(node28_5, a_plzensky51278_txt_001_p4s2W3).         const(a_plzensky51278_txt_001_p4s2W3).
hide(node28_5, hide).         const(hide).
%%%%%%%% node28_6 %%%%%%%%%%%%%%%%%%%
node(node28_6).
deepord(node28_6, 3).         const(3).
functor(node28_6, RSTR).         const(RSTR).
gram_sempos(node28_6, adj_denot).         const(adj_denot).
id(node28_6, T_plzensky51278_txt_001_p4s2a4).         const(T_plzensky51278_txt_001_p4s2a4).
nodetype(node28_6, complex).         const(complex).
t_lemma(node28_6, vitezny).         const(vitezny).
%%%%%%%% node28_7 %%%%%%%%%%%%%%%%%%%
node(node28_7).
deepord(node28_7, x3_1).         const(x3_1).
a_ref_type(node28_7, tree).         const(tree).
a_afun(node28_7, Atr).         const(Atr).
m_form(node28_7, vitezna).         const(vitezna).
m_lemma(node28_7, vitezny).         const(vitezny).
m_tag(node28_7, AANP1____1A____).         const(AANP1____1A____).
w_token(node28_7, vitezna).         const(vitezna).
a_ord(node28_7, 2).         const(2).
a_parent_id(node28_7, a_plzensky51278_txt_001_p4s2W3).         const(a_plzensky51278_txt_001_p4s2W3).
hide(node28_7, hide).         const(hide).
%%%%%%%% node28_8 %%%%%%%%%%%%%%%%%%%
node(node28_8).
deepord(node28_8, x4_1).         const(x4_1).
a_ref_type(node28_8, tree).         const(tree).
a_afun(node28_8, Sb).         const(Sb).
m_form(node28_8, druzstva).         const(druzstva).
m_lemma(node28_8, druzstvo).         const(druzstvo).
m_tag(node28_8, NNNP1_____A____).         const(NNNP1_____A____).
w_token(node28_8, druzstva).         const(druzstva).
a_ord(node28_8, 3).         const(3).
a_parent_id(node28_8, a_plzensky51278_txt_001_p4s2W4).         const(a_plzensky51278_txt_001_p4s2W4).
hide(node28_8, hide).         const(hide).
%%%%%%%% node28_9 %%%%%%%%%%%%%%%%%%%
node(node28_9).
deepord(node28_9, x5_1).         const(x5_1).
a_ref_type(node28_9, tree).         const(tree).
a_afun(node28_9, Pred).         const(Pred).
m_form(node28_9, obdrzela).         const(obdrzela).
m_lemma(node28_9, obdrzet).         const(obdrzet).
m_tag(node28_9, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node28_9, obdrzela).         const(obdrzela).
a_ord(node28_9, 4).         const(4).
a_parent_id(node28_9, a_plzensky51278_txt_001_p4s2).         const(a_plzensky51278_txt_001_p4s2).
hide(node28_9, hide).         const(hide).
%%%%%%%% node28_10 %%%%%%%%%%%%%%%%%%%
node(node28_10).
deepord(node28_10, 8).         const(8).
functor(node28_10, CONJ).         const(CONJ).
id(node28_10, T_plzensky51278_txt_001_p4s2a5).         const(T_plzensky51278_txt_001_p4s2a5).
nodetype(node28_10, coap).         const(coap).
t_lemma(node28_10, a).         const(a).
%%%%%%%% node28_11 %%%%%%%%%%%%%%%%%%%
node(node28_11).
deepord(node28_11, 7).         const(7).
functor(node28_11, RSTR).         const(RSTR).
gram_sempos(node28_11, n_denot).         const(n_denot).
id(node28_11, T_plzensky51278_txt_001_p4s2a6).         const(T_plzensky51278_txt_001_p4s2a6).
is_member(node28_11, 1).         const(1).
nodetype(node28_11, complex).         const(complex).
t_lemma(node28_11, cena).         const(cena).
%%%%%%%% node28_12 %%%%%%%%%%%%%%%%%%%
node(node28_12).
deepord(node28_12, 6).         const(6).
functor(node28_12, RSTR).         const(RSTR).
gram_sempos(node28_12, adj_denot).         const(adj_denot).
id(node28_12, T_plzensky51278_txt_001_p4s2a7).         const(T_plzensky51278_txt_001_p4s2a7).
nodetype(node28_12, complex).         const(complex).
t_lemma(node28_12, hodnotny).         const(hodnotny).
%%%%%%%% node28_13 %%%%%%%%%%%%%%%%%%%
node(node28_13).
deepord(node28_13, x6_1).         const(x6_1).
a_ref_type(node28_13, tree).         const(tree).
a_afun(node28_13, Atr).         const(Atr).
m_form(node28_13, hodnotne).         const(hodnotne).
m_lemma(node28_13, hodnotny).         const(hodnotny).
m_tag(node28_13, AAFP4____1A____).         const(AAFP4____1A____).
w_token(node28_13, hodnotne).         const(hodnotne).
a_ord(node28_13, 5).         const(5).
a_parent_id(node28_13, a_plzensky51278_txt_001_p4s2W6).         const(a_plzensky51278_txt_001_p4s2W6).
hide(node28_13, hide).         const(hide).
%%%%%%%% node28_14 %%%%%%%%%%%%%%%%%%%
node(node28_14).
deepord(node28_14, x7_1).         const(x7_1).
a_ref_type(node28_14, tree).         const(tree).
a_afun(node28_14, Obj).         const(Obj).
m_form(node28_14, ceny).         const(ceny).
m_lemma(node28_14, cena_1___v_penezich__naturalni__nevycislitelna_____).         const(cena_1___v_penezich__naturalni__nevycislitelna_____).
m_tag(node28_14, NNFP4_____A____).         const(NNFP4_____A____).
w_token(node28_14, ceny).         const(ceny).
a_ord(node28_14, 6).         const(6).
a_parent_id(node28_14, a_plzensky51278_txt_001_p4s2W7).         const(a_plzensky51278_txt_001_p4s2W7).
hide(node28_14, hide).         const(hide).
%%%%%%%% node28_15 %%%%%%%%%%%%%%%%%%%
node(node28_15).
deepord(node28_15, x8_1).         const(x8_1).
a_ref_type(node28_15, tree).         const(tree).
a_afun(node28_15, Coord).         const(Coord).
m_form(node28_15, a).         const(a).
m_lemma(node28_15, a_1).         const(a_1).
m_tag(node28_15, J______________).         const(J______________).
w_token(node28_15, a).         const(a).
a_ord(node28_15, 7).         const(7).
a_parent_id(node28_15, a_plzensky51278_txt_001_p4s2W4).         const(a_plzensky51278_txt_001_p4s2W4).
hide(node28_15, hide).         const(hide).
%%%%%%%% node28_16 %%%%%%%%%%%%%%%%%%%
node(node28_16).
deepord(node28_16, 9).         const(9).
functor(node28_16, RSTR).         const(RSTR).
gram_sempos(node28_16, n_denot).         const(n_denot).
id(node28_16, T_plzensky51278_txt_001_p4s2a8).         const(T_plzensky51278_txt_001_p4s2a8).
is_member(node28_16, 1).         const(1).
nodetype(node28_16, complex).         const(complex).
t_lemma(node28_16, medaile).         const(medaile).
%%%%%%%% node28_17 %%%%%%%%%%%%%%%%%%%
node(node28_17).
deepord(node28_17, x9_1).         const(x9_1).
a_ref_type(node28_17, tree).         const(tree).
a_afun(node28_17, Obj).         const(Obj).
m_form(node28_17, medaile).         const(medaile).
m_lemma(node28_17, medaile).         const(medaile).
m_tag(node28_17, NNFP4_____A____).         const(NNFP4_____A____).
w_token(node28_17, medaile).         const(medaile).
w_no_space_after(node28_17, 1).         const(1).
a_ord(node28_17, 8).         const(8).
a_parent_id(node28_17, a_plzensky51278_txt_001_p4s2W7).         const(a_plzensky51278_txt_001_p4s2W7).
hide(node28_17, hide).         const(hide).
edge(node28_0, node28_1).
edge(node28_1, node28_2).
edge(node28_1, node28_3).
edge(node28_3, node28_4).
edge(node28_4, node28_5).
edge(node28_3, node28_6).
edge(node28_6, node28_7).
edge(node28_3, node28_8).
edge(node28_1, node28_9).
edge(node28_1, node28_10).
edge(node28_10, node28_11).
edge(node28_11, node28_12).
edge(node28_12, node28_13).
edge(node28_11, node28_14).
edge(node28_10, node28_15).
edge(node28_10, node28_16).
edge(node28_16, node28_17).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Prvni dva vitezne kolektivy postoupili do krajskeho kola, ktere se uskutecni v roce 2008. 
tree_root(node29_0).
:- valid_root(node29_0).
%%%%%%%% node29_0 %%%%%%%%%%%%%%%%%%%
node(node29_0).
atree_rf(node29_0, a_a_plzensky51278_txt_001_p4s3).         const(a_a_plzensky51278_txt_001_p4s3).
deepord(node29_0, 0).         const(0).
id(node29_0, T_plzensky51278_txt_001_p4s3).         const(T_plzensky51278_txt_001_p4s3).
nodetype(node29_0, root).         const(root).
sentence(node29_0, Prvni_dva_vitezne_kolektivy_postoupili_do_krajskeho_kola__ktere_se_uskutecni_v_roce_2008__).         const(Prvni_dva_vitezne_kolektivy_postoupili_do_krajskeho_kola__ktere_se_uskutecni_v_roce_2008__).
%%%%%%%% node29_1 %%%%%%%%%%%%%%%%%%%
node(node29_1).
deepord(node29_1, 5).         const(5).
functor(node29_1, PRED).         const(PRED).
gram_sempos(node29_1, v).         const(v).
id(node29_1, T_plzensky51278_txt_001_p4s3a1).         const(T_plzensky51278_txt_001_p4s3a1).
nodetype(node29_1, complex).         const(complex).
t_lemma(node29_1, postoupit).         const(postoupit).
val_frame_rf(node29_1, v_v_w4017f1).         const(v_v_w4017f1).
%%%%%%%% node29_2 %%%%%%%%%%%%%%%%%%%
node(node29_2).
deepord(node29_2, 4).         const(4).
functor(node29_2, ACT).         const(ACT).
gram_sempos(node29_2, n_denot).         const(n_denot).
id(node29_2, T_plzensky51278_txt_001_p4s3a2).         const(T_plzensky51278_txt_001_p4s3a2).
nodetype(node29_2, complex).         const(complex).
t_lemma(node29_2, kolektiv).         const(kolektiv).
%%%%%%%% node29_3 %%%%%%%%%%%%%%%%%%%
node(node29_3).
deepord(node29_3, 1).         const(1).
functor(node29_3, RSTR).         const(RSTR).
gram_sempos(node29_3, adj_quant_def).         const(adj_quant_def).
id(node29_3, T_plzensky51278_txt_001_p4s3a3).         const(T_plzensky51278_txt_001_p4s3a3).
nodetype(node29_3, complex).         const(complex).
t_lemma(node29_3, jeden).         const(jeden).
%%%%%%%% node29_4 %%%%%%%%%%%%%%%%%%%
node(node29_4).
deepord(node29_4, x1_1).         const(x1_1).
a_ref_type(node29_4, tree).         const(tree).
a_afun(node29_4, Atr).         const(Atr).
m_form(node29_4, Prvni).         const(Prvni).
m_lemma(node29_4, prvni).         const(prvni).
m_tag(node29_4, CrIP1__________).         const(CrIP1__________).
w_token(node29_4, Prvni).         const(Prvni).
a_ord(node29_4, 1).         const(1).
a_parent_id(node29_4, a_plzensky51278_txt_001_p4s3W4).         const(a_plzensky51278_txt_001_p4s3W4).
hide(node29_4, hide).         const(hide).
%%%%%%%% node29_5 %%%%%%%%%%%%%%%%%%%
node(node29_5).
deepord(node29_5, 2).         const(2).
functor(node29_5, RSTR).         const(RSTR).
gram_sempos(node29_5, adj_quant_def).         const(adj_quant_def).
id(node29_5, T_plzensky51278_txt_001_p4s3a4).         const(T_plzensky51278_txt_001_p4s3a4).
nodetype(node29_5, complex).         const(complex).
t_lemma(node29_5, dva).         const(dva).
%%%%%%%% node29_6 %%%%%%%%%%%%%%%%%%%
node(node29_6).
deepord(node29_6, x2_1).         const(x2_1).
a_ref_type(node29_6, tree).         const(tree).
a_afun(node29_6, Atr).         const(Atr).
m_form(node29_6, dva).         const(dva).
m_lemma(node29_6, dva_2).         const(dva_2).
m_tag(node29_6, ClYP1__________).         const(ClYP1__________).
w_token(node29_6, dva).         const(dva).
a_ord(node29_6, 2).         const(2).
a_parent_id(node29_6, a_plzensky51278_txt_001_p4s3W4).         const(a_plzensky51278_txt_001_p4s3W4).
hide(node29_6, hide).         const(hide).
%%%%%%%% node29_7 %%%%%%%%%%%%%%%%%%%
node(node29_7).
deepord(node29_7, 3).         const(3).
functor(node29_7, RSTR).         const(RSTR).
gram_sempos(node29_7, adj_denot).         const(adj_denot).
id(node29_7, T_plzensky51278_txt_001_p4s3a5).         const(T_plzensky51278_txt_001_p4s3a5).
nodetype(node29_7, complex).         const(complex).
t_lemma(node29_7, vitezny).         const(vitezny).
%%%%%%%% node29_8 %%%%%%%%%%%%%%%%%%%
node(node29_8).
deepord(node29_8, x3_1).         const(x3_1).
a_ref_type(node29_8, tree).         const(tree).
a_afun(node29_8, Atr).         const(Atr).
m_form(node29_8, vitezne).         const(vitezne).
m_lemma(node29_8, vitezny).         const(vitezny).
m_tag(node29_8, AAIP1____1A____).         const(AAIP1____1A____).
w_token(node29_8, vitezne).         const(vitezne).
a_ord(node29_8, 3).         const(3).
a_parent_id(node29_8, a_plzensky51278_txt_001_p4s3W4).         const(a_plzensky51278_txt_001_p4s3W4).
hide(node29_8, hide).         const(hide).
%%%%%%%% node29_9 %%%%%%%%%%%%%%%%%%%
node(node29_9).
deepord(node29_9, x4_1).         const(x4_1).
a_ref_type(node29_9, tree).         const(tree).
a_afun(node29_9, Sb).         const(Sb).
m_form(node29_9, kolektivy).         const(kolektivy).
m_lemma(node29_9, kolektiv).         const(kolektiv).
m_tag(node29_9, NNIP1_____A____).         const(NNIP1_____A____).
w_token(node29_9, kolektivy).         const(kolektivy).
a_ord(node29_9, 4).         const(4).
a_parent_id(node29_9, a_plzensky51278_txt_001_p4s3W5).         const(a_plzensky51278_txt_001_p4s3W5).
hide(node29_9, hide).         const(hide).
%%%%%%%% node29_10 %%%%%%%%%%%%%%%%%%%
node(node29_10).
deepord(node29_10, x5_1).         const(x5_1).
a_ref_type(node29_10, tree).         const(tree).
a_afun(node29_10, Pred).         const(Pred).
m_form(node29_10, postoupili).         const(postoupili).
m_lemma(node29_10, postoupit__W).         const(postoupit__W).
m_tag(node29_10, VpMP___XR_AA___).         const(VpMP___XR_AA___).
w_token(node29_10, postoupili).         const(postoupili).
a_ord(node29_10, 5).         const(5).
a_parent_id(node29_10, a_plzensky51278_txt_001_p4s3).         const(a_plzensky51278_txt_001_p4s3).
hide(node29_10, hide).         const(hide).
%%%%%%%% node29_11 %%%%%%%%%%%%%%%%%%%
node(node29_11).
deepord(node29_11, 7).         const(7).
functor(node29_11, DIR3).         const(DIR3).
gram_sempos(node29_11, n_denot).         const(n_denot).
id(node29_11, T_plzensky51278_txt_001_p4s3a7).         const(T_plzensky51278_txt_001_p4s3a7).
nodetype(node29_11, complex).         const(complex).
subfunctor(node29_11, basic).         const(basic).
t_lemma(node29_11, kolo).         const(kolo).
%%%%%%%% node29_12 %%%%%%%%%%%%%%%%%%%
node(node29_12).
deepord(node29_12, 6).         const(6).
functor(node29_12, RSTR).         const(RSTR).
gram_sempos(node29_12, adj_denot).         const(adj_denot).
id(node29_12, T_plzensky51278_txt_001_p4s3a8).         const(T_plzensky51278_txt_001_p4s3a8).
nodetype(node29_12, complex).         const(complex).
t_lemma(node29_12, krajsky).         const(krajsky).
%%%%%%%% node29_13 %%%%%%%%%%%%%%%%%%%
node(node29_13).
deepord(node29_13, x6_1).         const(x6_1).
a_ref_type(node29_13, tree).         const(tree).
a_afun(node29_13, Atr).         const(Atr).
m_form(node29_13, krajskeho).         const(krajskeho).
m_lemma(node29_13, krajsky).         const(krajsky).
m_tag(node29_13, AANS2____1A____).         const(AANS2____1A____).
w_token(node29_13, krajskeho).         const(krajskeho).
a_ord(node29_13, 7).         const(7).
a_parent_id(node29_13, a_plzensky51278_txt_001_p4s3W8).         const(a_plzensky51278_txt_001_p4s3W8).
hide(node29_13, hide).         const(hide).
%%%%%%%% node29_14 %%%%%%%%%%%%%%%%%%%
node(node29_14).
deepord(node29_14, x7_1).         const(x7_1).
a_ref_type(node29_14, tree).         const(tree).
a_afun(node29_14, AuxP).         const(AuxP).
m_form(node29_14, do).         const(do).
m_lemma(node29_14, do_1).         const(do_1).
m_tag(node29_14, RR__2__________).         const(RR__2__________).
w_token(node29_14, do).         const(do).
a_ord(node29_14, 6).         const(6).
a_parent_id(node29_14, a_plzensky51278_txt_001_p4s3W5).         const(a_plzensky51278_txt_001_p4s3W5).
hide(node29_14, hide).         const(hide).
%%%%%%%% node29_15 %%%%%%%%%%%%%%%%%%%
node(node29_15).
deepord(node29_15, x7_2).         const(x7_2).
a_ref_type(node29_15, tree).         const(tree).
a_afun(node29_15, Adv).         const(Adv).
m_form(node29_15, kola).         const(kola).
m_lemma(node29_15, kolo).         const(kolo).
m_tag(node29_15, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node29_15, kola).         const(kola).
w_no_space_after(node29_15, 1).         const(1).
a_ord(node29_15, 8).         const(8).
a_parent_id(node29_15, a_plzensky51278_txt_001_p4s3W6).         const(a_plzensky51278_txt_001_p4s3W6).
hide(node29_15, hide).         const(hide).
%%%%%%%% node29_16 %%%%%%%%%%%%%%%%%%%
node(node29_16).
deepord(node29_16, 9).         const(9).
functor(node29_16, RSTR).         const(RSTR).
gram_sempos(node29_16, v).         const(v).
id(node29_16, T_plzensky51278_txt_001_p4s3a9).         const(T_plzensky51278_txt_001_p4s3a9).
nodetype(node29_16, complex).         const(complex).
t_lemma(node29_16, uskutecnit_se).         const(uskutecnit_se).
val_frame_rf(node29_16, v_v_w7291f1).         const(v_v_w7291f1).
%%%%%%%% node29_17 %%%%%%%%%%%%%%%%%%%
node(node29_17).
deepord(node29_17, 8).         const(8).
functor(node29_17, ACT).         const(ACT).
gram_sempos(node29_17, n_pron_indef).         const(n_pron_indef).
id(node29_17, T_plzensky51278_txt_001_p4s3a11).         const(T_plzensky51278_txt_001_p4s3a11).
nodetype(node29_17, complex).         const(complex).
t_lemma(node29_17, ktery).         const(ktery).
%%%%%%%% node29_18 %%%%%%%%%%%%%%%%%%%
node(node29_18).
deepord(node29_18, x8_1).         const(x8_1).
a_ref_type(node29_18, tree).         const(tree).
a_afun(node29_18, Sb).         const(Sb).
m_form(node29_18, ktere).         const(ktere).
m_lemma(node29_18, ktery).         const(ktery).
m_tag(node29_18, P4NS1__________).         const(P4NS1__________).
w_token(node29_18, ktere).         const(ktere).
a_ord(node29_18, 10).         const(10).
a_parent_id(node29_18, a_plzensky51278_txt_001_p4s3W12).         const(a_plzensky51278_txt_001_p4s3W12).
hide(node29_18, hide).         const(hide).
%%%%%%%% node29_19 %%%%%%%%%%%%%%%%%%%
node(node29_19).
deepord(node29_19, x9_1).         const(x9_1).
a_ref_type(node29_19, tree).         const(tree).
a_afun(node29_19, AuxT).         const(AuxT).
m_form(node29_19, se).         const(se).
m_lemma(node29_19, se___zvr__zajmeno_castice_).         const(se___zvr__zajmeno_castice_).
m_tag(node29_19, P7_X4__________).         const(P7_X4__________).
w_token(node29_19, se).         const(se).
a_ord(node29_19, 11).         const(11).
a_parent_id(node29_19, a_plzensky51278_txt_001_p4s3W12).         const(a_plzensky51278_txt_001_p4s3W12).
hide(node29_19, hide).         const(hide).
%%%%%%%% node29_20 %%%%%%%%%%%%%%%%%%%
node(node29_20).
deepord(node29_20, x9_2).         const(x9_2).
a_ref_type(node29_20, tree).         const(tree).
a_afun(node29_20, Atr).         const(Atr).
m_form(node29_20, uskutecni).         const(uskutecni).
m_lemma(node29_20, uskutecnit__W).         const(uskutecnit__W).
m_tag(node29_20, VB_S___3P_AA___).         const(VB_S___3P_AA___).
w_token(node29_20, uskutecni).         const(uskutecni).
a_ord(node29_20, 12).         const(12).
a_parent_id(node29_20, a_plzensky51278_txt_001_p4s3W8).         const(a_plzensky51278_txt_001_p4s3W8).
hide(node29_20, hide).         const(hide).
%%%%%%%% node29_21 %%%%%%%%%%%%%%%%%%%
node(node29_21).
deepord(node29_21, 10).         const(10).
functor(node29_21, TWHEN).         const(TWHEN).
gram_sempos(node29_21, n_denot).         const(n_denot).
id(node29_21, T_plzensky51278_txt_001_p4s3a14).         const(T_plzensky51278_txt_001_p4s3a14).
nodetype(node29_21, complex).         const(complex).
subfunctor(node29_21, basic).         const(basic).
t_lemma(node29_21, rok).         const(rok).
%%%%%%%% node29_22 %%%%%%%%%%%%%%%%%%%
node(node29_22).
deepord(node29_22, x10_1).         const(x10_1).
a_ref_type(node29_22, tree).         const(tree).
a_afun(node29_22, AuxP).         const(AuxP).
m_form(node29_22, v).         const(v).
m_lemma(node29_22, v_1).         const(v_1).
m_tag(node29_22, RR__6__________).         const(RR__6__________).
w_token(node29_22, v).         const(v).
a_ord(node29_22, 13).         const(13).
a_parent_id(node29_22, a_plzensky51278_txt_001_p4s3W12).         const(a_plzensky51278_txt_001_p4s3W12).
hide(node29_22, hide).         const(hide).
%%%%%%%% node29_23 %%%%%%%%%%%%%%%%%%%
node(node29_23).
deepord(node29_23, x10_2).         const(x10_2).
a_ref_type(node29_23, tree).         const(tree).
a_afun(node29_23, Adv).         const(Adv).
m_form(node29_23, roce).         const(roce).
m_lemma(node29_23, rok).         const(rok).
m_tag(node29_23, NNIS6_____A___1).         const(NNIS6_____A___1).
w_token(node29_23, roce).         const(roce).
a_ord(node29_23, 14).         const(14).
a_parent_id(node29_23, a_plzensky51278_txt_001_p4s3W13).         const(a_plzensky51278_txt_001_p4s3W13).
hide(node29_23, hide).         const(hide).
%%%%%%%% node29_24 %%%%%%%%%%%%%%%%%%%
node(node29_24).
deepord(node29_24, 11).         const(11).
functor(node29_24, RSTR).         const(RSTR).
gram_sempos(node29_24, n_quant_def).         const(n_quant_def).
id(node29_24, T_plzensky51278_txt_001_p4s3a15).         const(T_plzensky51278_txt_001_p4s3a15).
nodetype(node29_24, complex).         const(complex).
t_lemma(node29_24, 2008).         const(2008).
%%%%%%%% node29_25 %%%%%%%%%%%%%%%%%%%
node(node29_25).
deepord(node29_25, x11_1).         const(x11_1).
a_ref_type(node29_25, tree).         const(tree).
a_afun(node29_25, Atr).         const(Atr).
m_form(node29_25, 2008).         const(2008).
m_lemma(node29_25, 2008).         const(2008).
m_tag(node29_25, C=_____________).         const(C=_____________).
w_token(node29_25, 2008).         const(2008).
w_no_space_after(node29_25, 1).         const(1).
a_ord(node29_25, 15).         const(15).
a_parent_id(node29_25, a_plzensky51278_txt_001_p4s3W14).         const(a_plzensky51278_txt_001_p4s3W14).
hide(node29_25, hide).         const(hide).
edge(node29_0, node29_1).
edge(node29_1, node29_2).
edge(node29_2, node29_3).
edge(node29_3, node29_4).
edge(node29_2, node29_5).
edge(node29_5, node29_6).
edge(node29_2, node29_7).
edge(node29_7, node29_8).
edge(node29_2, node29_9).
edge(node29_1, node29_10).
edge(node29_1, node29_11).
edge(node29_11, node29_12).
edge(node29_12, node29_13).
edge(node29_11, node29_14).
edge(node29_11, node29_15).
edge(node29_11, node29_16).
edge(node29_16, node29_17).
edge(node29_17, node29_18).
edge(node29_16, node29_19).
edge(node29_16, node29_20).
edge(node29_16, node29_21).
edge(node29_21, node29_22).
edge(node29_21, node29_23).
edge(node29_21, node29_24).
edge(node29_24, node29_25).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Vysledky: Vitezem se stalo druzstvo c. 6 ze 4. 
tree_root(node30_0).
:- valid_root(node30_0).
%%%%%%%% node30_0 %%%%%%%%%%%%%%%%%%%
node(node30_0).
atree_rf(node30_0, a_a_plzensky51278_txt_001_p5s1).         const(a_a_plzensky51278_txt_001_p5s1).
deepord(node30_0, 0).         const(0).
id(node30_0, T_plzensky51278_txt_001_p5s1).         const(T_plzensky51278_txt_001_p5s1).
nodetype(node30_0, root).         const(root).
sentence(node30_0, Vysledky__Vitezem_se_stalo_druzstvo_c__6_ze_4__).         const(Vysledky__Vitezem_se_stalo_druzstvo_c__6_ze_4__).
%%%%%%%% node30_1 %%%%%%%%%%%%%%%%%%%
node(node30_1).
deepord(node30_1, 2).         const(2).
functor(node30_1, APPS).         const(APPS).
id(node30_1, T_plzensky51278_txt_001_p5s1a1).         const(T_plzensky51278_txt_001_p5s1a1).
nodetype(node30_1, coap).         const(coap).
t_lemma(node30_1, x_Colon).         const(x_Colon).
%%%%%%%% node30_2 %%%%%%%%%%%%%%%%%%%
node(node30_2).
deepord(node30_2, 1).         const(1).
functor(node30_2, DENOM).         const(DENOM).
gram_sempos(node30_2, n_denot).         const(n_denot).
id(node30_2, T_plzensky51278_txt_001_p5s1a2).         const(T_plzensky51278_txt_001_p5s1a2).
is_member(node30_2, 1).         const(1).
nodetype(node30_2, complex).         const(complex).
t_lemma(node30_2, vysledek).         const(vysledek).
%%%%%%%% node30_3 %%%%%%%%%%%%%%%%%%%
node(node30_3).
deepord(node30_3, x1_1).         const(x1_1).
a_ref_type(node30_3, tree).         const(tree).
a_afun(node30_3, ExD).         const(ExD).
a_is_member(node30_3, 1).         const(1).
m_form(node30_3, Vysledky).         const(Vysledky).
m_lemma(node30_3, vysledek).         const(vysledek).
m_tag(node30_3, NNIP1_____A____).         const(NNIP1_____A____).
w_token(node30_3, Vysledky).         const(Vysledky).
w_no_space_after(node30_3, 1).         const(1).
a_ord(node30_3, 1).         const(1).
a_parent_id(node30_3, a_plzensky51278_txt_001_p5s1W2).         const(a_plzensky51278_txt_001_p5s1W2).
hide(node30_3, hide).         const(hide).
%%%%%%%% node30_4 %%%%%%%%%%%%%%%%%%%
node(node30_4).
deepord(node30_4, x2_1).         const(x2_1).
a_ref_type(node30_4, tree).         const(tree).
a_afun(node30_4, Apos).         const(Apos).
m_form(node30_4, x_).         const(x_).
m_lemma(node30_4, x_).         const(x_).
m_tag(node30_4, Z______________).         const(Z______________).
w_token(node30_4, x_).         const(x_).
a_ord(node30_4, 2).         const(2).
a_parent_id(node30_4, a_plzensky51278_txt_001_p5s1).         const(a_plzensky51278_txt_001_p5s1).
hide(node30_4, hide).         const(hide).
%%%%%%%% node30_5 %%%%%%%%%%%%%%%%%%%
node(node30_5).
deepord(node30_5, 4).         const(4).
functor(node30_5, PAR).         const(PAR).
gram_sempos(node30_5, v).         const(v).
id(node30_5, T_plzensky51278_txt_001_p5s1a3).         const(T_plzensky51278_txt_001_p5s1a3).
nodetype(node30_5, complex).         const(complex).
t_lemma(node30_5, stat_se).         const(stat_se).
val_frame_rf(node30_5, v_v_w6496f1).         const(v_v_w6496f1).
%%%%%%%% node30_6 %%%%%%%%%%%%%%%%%%%
node(node30_6).
deepord(node30_6, 3).         const(3).
functor(node30_6, MEANS).         const(MEANS).
gram_sempos(node30_6, n_denot).         const(n_denot).
id(node30_6, T_plzensky51278_txt_001_p5s1a4).         const(T_plzensky51278_txt_001_p5s1a4).
nodetype(node30_6, complex).         const(complex).
t_lemma(node30_6, vitez).         const(vitez).
%%%%%%%% node30_7 %%%%%%%%%%%%%%%%%%%
node(node30_7).
deepord(node30_7, x3_1).         const(x3_1).
a_ref_type(node30_7, tree).         const(tree).
a_afun(node30_7, Adv).         const(Adv).
m_form(node30_7, Vitezem).         const(Vitezem).
m_lemma(node30_7, vitez).         const(vitez).
m_tag(node30_7, NNMS7_____A____).         const(NNMS7_____A____).
w_token(node30_7, Vitezem).         const(Vitezem).
a_ord(node30_7, 3).         const(3).
a_parent_id(node30_7, a_plzensky51278_txt_001_p5s1W5).         const(a_plzensky51278_txt_001_p5s1W5).
hide(node30_7, hide).         const(hide).
%%%%%%%% node30_8 %%%%%%%%%%%%%%%%%%%
node(node30_8).
deepord(node30_8, x4_1).         const(x4_1).
a_ref_type(node30_8, tree).         const(tree).
a_afun(node30_8, AuxT).         const(AuxT).
m_form(node30_8, se).         const(se).
m_lemma(node30_8, se___zvr__zajmeno_castice_).         const(se___zvr__zajmeno_castice_).
m_tag(node30_8, P7_X4__________).         const(P7_X4__________).
w_token(node30_8, se).         const(se).
a_ord(node30_8, 4).         const(4).
a_parent_id(node30_8, a_plzensky51278_txt_001_p5s1W5).         const(a_plzensky51278_txt_001_p5s1W5).
hide(node30_8, hide).         const(hide).
%%%%%%%% node30_9 %%%%%%%%%%%%%%%%%%%
node(node30_9).
deepord(node30_9, x4_2).         const(x4_2).
a_ref_type(node30_9, tree).         const(tree).
a_afun(node30_9, Pred).         const(Pred).
m_form(node30_9, stalo).         const(stalo).
m_lemma(node30_9, stat_2___neco_se_prihodilo_).         const(stat_2___neco_se_prihodilo_).
m_tag(node30_9, VpNS___XR_AA___).         const(VpNS___XR_AA___).
w_token(node30_9, stalo).         const(stalo).
a_ord(node30_9, 5).         const(5).
a_parent_id(node30_9, a_plzensky51278_txt_001_p5s1W2).         const(a_plzensky51278_txt_001_p5s1W2).
hide(node30_9, hide).         const(hide).
%%%%%%%% node30_10 %%%%%%%%%%%%%%%%%%%
node(node30_10).
deepord(node30_10, 5).         const(5).
functor(node30_10, ACT).         const(ACT).
gram_sempos(node30_10, n_denot).         const(n_denot).
id(node30_10, T_plzensky51278_txt_001_p5s1a6).         const(T_plzensky51278_txt_001_p5s1a6).
nodetype(node30_10, complex).         const(complex).
t_lemma(node30_10, druzstvo).         const(druzstvo).
%%%%%%%% node30_11 %%%%%%%%%%%%%%%%%%%
node(node30_11).
deepord(node30_11, x5_1).         const(x5_1).
a_ref_type(node30_11, tree).         const(tree).
a_afun(node30_11, Sb).         const(Sb).
m_form(node30_11, druzstvo).         const(druzstvo).
m_lemma(node30_11, druzstvo).         const(druzstvo).
m_tag(node30_11, NNNS1_____A____).         const(NNNS1_____A____).
w_token(node30_11, druzstvo).         const(druzstvo).
a_ord(node30_11, 6).         const(6).
a_parent_id(node30_11, a_plzensky51278_txt_001_p5s1W5).         const(a_plzensky51278_txt_001_p5s1W5).
hide(node30_11, hide).         const(hide).
%%%%%%%% node30_12 %%%%%%%%%%%%%%%%%%%
node(node30_12).
deepord(node30_12, 6).         const(6).
functor(node30_12, APP).         const(APP).
gram_sempos(node30_12, n_denot).         const(n_denot).
id(node30_12, T_plzensky51278_txt_001_p5s1a7).         const(T_plzensky51278_txt_001_p5s1a7).
nodetype(node30_12, complex).         const(complex).
t_lemma(node30_12, cislo).         const(cislo).
%%%%%%%% node30_13 %%%%%%%%%%%%%%%%%%%
node(node30_13).
deepord(node30_13, x6_1).         const(x6_1).
a_ref_type(node30_13, tree).         const(tree).
a_afun(node30_13, Atr).         const(Atr).
m_form(node30_13, c_).         const(c_).
m_lemma(node30_13, cislo__B).         const(cislo__B).
m_tag(node30_13, NNNXX_____A___8).         const(NNNXX_____A___8).
w_token(node30_13, c_).         const(c_).
a_ord(node30_13, 7).         const(7).
a_parent_id(node30_13, a_plzensky51278_txt_001_p5s1W6).         const(a_plzensky51278_txt_001_p5s1W6).
hide(node30_13, hide).         const(hide).
%%%%%%%% node30_14 %%%%%%%%%%%%%%%%%%%
node(node30_14).
deepord(node30_14, 7).         const(7).
functor(node30_14, RSTR).         const(RSTR).
gram_sempos(node30_14, adj_quant_def).         const(adj_quant_def).
id(node30_14, T_plzensky51278_txt_001_p5s1a8).         const(T_plzensky51278_txt_001_p5s1a8).
nodetype(node30_14, complex).         const(complex).
t_lemma(node30_14, 6).         const(6).
%%%%%%%% node30_15 %%%%%%%%%%%%%%%%%%%
node(node30_15).
deepord(node30_15, x7_1).         const(x7_1).
a_ref_type(node30_15, tree).         const(tree).
a_afun(node30_15, Atr).         const(Atr).
m_form(node30_15, 6).         const(6).
m_lemma(node30_15, 6).         const(6).
m_tag(node30_15, C=_____________).         const(C=_____________).
w_token(node30_15, 6).         const(6).
a_ord(node30_15, 8).         const(8).
a_parent_id(node30_15, a_plzensky51278_txt_001_p5s1W7).         const(a_plzensky51278_txt_001_p5s1W7).
hide(node30_15, hide).         const(hide).
%%%%%%%% node30_16 %%%%%%%%%%%%%%%%%%%
node(node30_16).
deepord(node30_16, 8).         const(8).
functor(node30_16, PAT).         const(PAT).
gram_sempos(node30_16, n_quant_def).         const(n_quant_def).
id(node30_16, T_plzensky51278_txt_001_p5s1a10).         const(T_plzensky51278_txt_001_p5s1a10).
nodetype(node30_16, complex).         const(complex).
t_lemma(node30_16, 4).         const(4).
%%%%%%%% node30_17 %%%%%%%%%%%%%%%%%%%
node(node30_17).
deepord(node30_17, x8_1).         const(x8_1).
a_ref_type(node30_17, tree).         const(tree).
a_afun(node30_17, AuxP).         const(AuxP).
m_form(node30_17, ze).         const(ze).
m_lemma(node30_17, z_1).         const(z_1).
m_tag(node30_17, RV__2__________).         const(RV__2__________).
w_token(node30_17, ze).         const(ze).
a_ord(node30_17, 9).         const(9).
a_parent_id(node30_17, a_plzensky51278_txt_001_p5s1W5).         const(a_plzensky51278_txt_001_p5s1W5).
hide(node30_17, hide).         const(hide).
%%%%%%%% node30_18 %%%%%%%%%%%%%%%%%%%
node(node30_18).
deepord(node30_18, x8_2).         const(x8_2).
a_ref_type(node30_18, tree).         const(tree).
a_afun(node30_18, ExD).         const(ExD).
m_form(node30_18, 4).         const(4).
m_lemma(node30_18, 4).         const(4).
m_tag(node30_18, C=_____________).         const(C=_____________).
w_token(node30_18, 4).         const(4).
w_no_space_after(node30_18, 1).         const(1).
a_ord(node30_18, 10).         const(10).
a_parent_id(node30_18, a_plzensky51278_txt_001_p5s1W9).         const(a_plzensky51278_txt_001_p5s1W9).
hide(node30_18, hide).         const(hide).
edge(node30_0, node30_1).
edge(node30_1, node30_2).
edge(node30_2, node30_3).
edge(node30_1, node30_4).
edge(node30_1, node30_5).
edge(node30_5, node30_6).
edge(node30_6, node30_7).
edge(node30_5, node30_8).
edge(node30_5, node30_9).
edge(node30_5, node30_10).
edge(node30_10, node30_11).
edge(node30_10, node30_12).
edge(node30_12, node30_13).
edge(node30_12, node30_14).
edge(node30_14, node30_15).
edge(node30_5, node30_16).
edge(node30_16, node30_17).
edge(node30_16, node30_18).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% ZS Kralovicka ulice Plzen s poctem bodu 105. 
tree_root(node31_0).
:- valid_root(node31_0).
%%%%%%%% node31_0 %%%%%%%%%%%%%%%%%%%
node(node31_0).
atree_rf(node31_0, a_a_plzensky51278_txt_001_p5s2).         const(a_a_plzensky51278_txt_001_p5s2).
deepord(node31_0, 0).         const(0).
id(node31_0, T_plzensky51278_txt_001_p5s2).         const(T_plzensky51278_txt_001_p5s2).
nodetype(node31_0, root).         const(root).
sentence(node31_0, ZS_Kralovicka_ulice_Plzen_s_poctem_bodu_105__).         const(ZS_Kralovicka_ulice_Plzen_s_poctem_bodu_105__).
%%%%%%%% node31_1 %%%%%%%%%%%%%%%%%%%
node(node31_1).
deepord(node31_1, 3).         const(3).
functor(node31_1, DENOM).         const(DENOM).
gram_sempos(node31_1, n_denot).         const(n_denot).
id(node31_1, T_plzensky51278_txt_001_p5s2a1).         const(T_plzensky51278_txt_001_p5s2a1).
nodetype(node31_1, complex).         const(complex).
t_lemma(node31_1, ulice).         const(ulice).
%%%%%%%% node31_2 %%%%%%%%%%%%%%%%%%%
node(node31_2).
deepord(node31_2, 1).         const(1).
functor(node31_2, RSTR).         const(RSTR).
gram_sempos(node31_2, n_denot).         const(n_denot).
id(node31_2, T_plzensky51278_txt_001_p5s2a2).         const(T_plzensky51278_txt_001_p5s2a2).
nodetype(node31_2, complex).         const(complex).
t_lemma(node31_2, ZS).         const(ZS).
%%%%%%%% node31_3 %%%%%%%%%%%%%%%%%%%
node(node31_3).
deepord(node31_3, x1_1).         const(x1_1).
a_ref_type(node31_3, tree).         const(tree).
a_afun(node31_3, Atr).         const(Atr).
m_form(node31_3, ZS).         const(ZS).
m_lemma(node31_3, ZS__B___zakladni_skola_).         const(ZS__B___zakladni_skola_).
m_tag(node31_3, NNFXX_____A____).         const(NNFXX_____A____).
w_token(node31_3, ZS).         const(ZS).
a_ord(node31_3, 1).         const(1).
a_parent_id(node31_3, a_plzensky51278_txt_001_p5s2W3).         const(a_plzensky51278_txt_001_p5s2W3).
hide(node31_3, hide).         const(hide).
%%%%%%%% node31_4 %%%%%%%%%%%%%%%%%%%
node(node31_4).
deepord(node31_4, 2).         const(2).
functor(node31_4, RSTR).         const(RSTR).
gram_sempos(node31_4, adj_denot).         const(adj_denot).
id(node31_4, T_plzensky51278_txt_001_p5s2a3).         const(T_plzensky51278_txt_001_p5s2a3).
nodetype(node31_4, complex).         const(complex).
t_lemma(node31_4, kralovicky).         const(kralovicky).
%%%%%%%% node31_5 %%%%%%%%%%%%%%%%%%%
node(node31_5).
deepord(node31_5, x2_1).         const(x2_1).
a_ref_type(node31_5, tree).         const(tree).
a_afun(node31_5, Atr).         const(Atr).
m_form(node31_5, Kralovicka).         const(Kralovicka).
m_lemma(node31_5, kralovicky).         const(kralovicky).
m_tag(node31_5, AAFS1____1A____).         const(AAFS1____1A____).
w_token(node31_5, Kralovicka).         const(Kralovicka).
a_ord(node31_5, 2).         const(2).
a_parent_id(node31_5, a_plzensky51278_txt_001_p5s2W3).         const(a_plzensky51278_txt_001_p5s2W3).
hide(node31_5, hide).         const(hide).
%%%%%%%% node31_6 %%%%%%%%%%%%%%%%%%%
node(node31_6).
deepord(node31_6, x3_1).         const(x3_1).
a_ref_type(node31_6, tree).         const(tree).
a_afun(node31_6, ExD).         const(ExD).
m_form(node31_6, ulice).         const(ulice).
m_lemma(node31_6, ulice).         const(ulice).
m_tag(node31_6, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node31_6, ulice).         const(ulice).
a_ord(node31_6, 3).         const(3).
a_parent_id(node31_6, a_plzensky51278_txt_001_p5s2).         const(a_plzensky51278_txt_001_p5s2).
hide(node31_6, hide).         const(hide).
%%%%%%%% node31_7 %%%%%%%%%%%%%%%%%%%
node(node31_7).
deepord(node31_7, 4).         const(4).
functor(node31_7, RSTR).         const(RSTR).
gram_sempos(node31_7, n_denot).         const(n_denot).
id(node31_7, T_plzensky51278_txt_001_p5s2a4).         const(T_plzensky51278_txt_001_p5s2a4).
nodetype(node31_7, complex).         const(complex).
t_lemma(node31_7, Plzen).         const(Plzen).
%%%%%%%% node31_8 %%%%%%%%%%%%%%%%%%%
node(node31_8).
deepord(node31_8, x4_1).         const(x4_1).
a_ref_type(node31_8, tree).         const(tree).
a_afun(node31_8, Atr).         const(Atr).
m_form(node31_8, Plzen).         const(Plzen).
m_lemma(node31_8, Plzen__G).         const(Plzen__G).
m_tag(node31_8, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node31_8, Plzen).         const(Plzen).
a_ord(node31_8, 4).         const(4).
a_parent_id(node31_8, a_plzensky51278_txt_001_p5s2W3).         const(a_plzensky51278_txt_001_p5s2W3).
hide(node31_8, hide).         const(hide).
%%%%%%%% node31_9 %%%%%%%%%%%%%%%%%%%
node(node31_9).
deepord(node31_9, 5).         const(5).
functor(node31_9, ACMP).         const(ACMP).
gram_sempos(node31_9, n_denot).         const(n_denot).
id(node31_9, T_plzensky51278_txt_001_p5s2a6).         const(T_plzensky51278_txt_001_p5s2a6).
nodetype(node31_9, complex).         const(complex).
subfunctor(node31_9, basic).         const(basic).
t_lemma(node31_9, pocet).         const(pocet).
%%%%%%%% node31_10 %%%%%%%%%%%%%%%%%%%
node(node31_10).
deepord(node31_10, x5_1).         const(x5_1).
a_ref_type(node31_10, tree).         const(tree).
a_afun(node31_10, AuxP).         const(AuxP).
m_form(node31_10, s).         const(s).
m_lemma(node31_10, s_1).         const(s_1).
m_tag(node31_10, RR__7__________).         const(RR__7__________).
w_token(node31_10, s).         const(s).
a_ord(node31_10, 5).         const(5).
a_parent_id(node31_10, a_plzensky51278_txt_001_p5s2).         const(a_plzensky51278_txt_001_p5s2).
hide(node31_10, hide).         const(hide).
%%%%%%%% node31_11 %%%%%%%%%%%%%%%%%%%
node(node31_11).
deepord(node31_11, x5_2).         const(x5_2).
a_ref_type(node31_11, tree).         const(tree).
a_afun(node31_11, ExD).         const(ExD).
m_form(node31_11, poctem).         const(poctem).
m_lemma(node31_11, pocet).         const(pocet).
m_tag(node31_11, NNIS7_____A____).         const(NNIS7_____A____).
w_token(node31_11, poctem).         const(poctem).
a_ord(node31_11, 6).         const(6).
a_parent_id(node31_11, a_plzensky51278_txt_001_p5s2W5).         const(a_plzensky51278_txt_001_p5s2W5).
hide(node31_11, hide).         const(hide).
%%%%%%%% node31_12 %%%%%%%%%%%%%%%%%%%
node(node31_12).
deepord(node31_12, 6).         const(6).
functor(node31_12, MAT).         const(MAT).
gram_sempos(node31_12, n_denot).         const(n_denot).
id(node31_12, T_plzensky51278_txt_001_p5s2a7).         const(T_plzensky51278_txt_001_p5s2a7).
nodetype(node31_12, complex).         const(complex).
t_lemma(node31_12, bod).         const(bod).
%%%%%%%% node31_13 %%%%%%%%%%%%%%%%%%%
node(node31_13).
deepord(node31_13, x6_1).         const(x6_1).
a_ref_type(node31_13, tree).         const(tree).
a_afun(node31_13, Atr).         const(Atr).
m_form(node31_13, bodu).         const(bodu).
m_lemma(node31_13, bod).         const(bod).
m_tag(node31_13, NNIP2_____A____).         const(NNIP2_____A____).
w_token(node31_13, bodu).         const(bodu).
a_ord(node31_13, 7).         const(7).
a_parent_id(node31_13, a_plzensky51278_txt_001_p5s2W6).         const(a_plzensky51278_txt_001_p5s2W6).
hide(node31_13, hide).         const(hide).
%%%%%%%% node31_14 %%%%%%%%%%%%%%%%%%%
node(node31_14).
deepord(node31_14, 7).         const(7).
functor(node31_14, TWHEN).         const(TWHEN).
gram_sempos(node31_14, n_quant_def).         const(n_quant_def).
id(node31_14, T_plzensky51278_txt_001_p5s2a8).         const(T_plzensky51278_txt_001_p5s2a8).
nodetype(node31_14, complex).         const(complex).
subfunctor(node31_14, basic).         const(basic).
t_lemma(node31_14, 105).         const(105).
%%%%%%%% node31_15 %%%%%%%%%%%%%%%%%%%
node(node31_15).
deepord(node31_15, x7_1).         const(x7_1).
a_ref_type(node31_15, tree).         const(tree).
a_afun(node31_15, ExD).         const(ExD).
m_form(node31_15, 105).         const(105).
m_lemma(node31_15, 105).         const(105).
m_tag(node31_15, C=_____________).         const(C=_____________).
w_token(node31_15, 105).         const(105).
w_no_space_after(node31_15, 1).         const(1).
a_ord(node31_15, 8).         const(8).
a_parent_id(node31_15, a_plzensky51278_txt_001_p5s2).         const(a_plzensky51278_txt_001_p5s2).
hide(node31_15, hide).         const(hide).
edge(node31_0, node31_1).
edge(node31_1, node31_2).
edge(node31_2, node31_3).
edge(node31_1, node31_4).
edge(node31_4, node31_5).
edge(node31_1, node31_6).
edge(node31_1, node31_7).
edge(node31_7, node31_8).
edge(node31_0, node31_9).
edge(node31_9, node31_10).
edge(node31_9, node31_11).
edge(node31_9, node31_12).
edge(node31_12, node31_13).
edge(node31_0, node31_14).
edge(node31_14, node31_15).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Druhe misto obsadilo druzstvo c. 1 ze 14 ZS Zabelska ulice Plzen s poctem bodu 102 a treti druzstvo c. 11 z 11.ZS v Baarove ulici v Plzen s poctem bodu 101.5. 
tree_root(node32_0).
:- valid_root(node32_0).
%%%%%%%% node32_0 %%%%%%%%%%%%%%%%%%%
node(node32_0).
atree_rf(node32_0, a_a_plzensky51278_txt_001_p5s3).         const(a_a_plzensky51278_txt_001_p5s3).
deepord(node32_0, 0).         const(0).
id(node32_0, T_plzensky51278_txt_001_p5s3).         const(T_plzensky51278_txt_001_p5s3).
nodetype(node32_0, root).         const(root).
sentence(node32_0, Druhe_misto_obsadilo_druzstvo_c__1_ze_14_ZS_Zabelska_ulice_Plzen_s_poctem_bodu_102_a_treti_druzstvo_c__11_z_11_ZS_v_Baarove_ulici_v_Plzen_s_poctem_bodu_101_5__).         const(Druhe_misto_obsadilo_druzstvo_c__1_ze_14_ZS_Zabelska_ulice_Plzen_s_poctem_bodu_102_a_treti_druzstvo_c__11_z_11_ZS_v_Baarove_ulici_v_Plzen_s_poctem_bodu_101_5__).
%%%%%%%% node32_1 %%%%%%%%%%%%%%%%%%%
node(node32_1).
deepord(node32_1, 3).         const(3).
functor(node32_1, PRED).         const(PRED).
gram_sempos(node32_1, v).         const(v).
id(node32_1, T_plzensky51278_txt_001_p5s3a1).         const(T_plzensky51278_txt_001_p5s3a1).
nodetype(node32_1, complex).         const(complex).
t_lemma(node32_1, obsadit).         const(obsadit).
val_frame_rf(node32_1, v_v_w2558f1).         const(v_v_w2558f1).
%%%%%%%% node32_2 %%%%%%%%%%%%%%%%%%%
node(node32_2).
deepord(node32_2, 2).         const(2).
functor(node32_2, PAT).         const(PAT).
gram_sempos(node32_2, n_denot).         const(n_denot).
id(node32_2, T_plzensky51278_txt_001_p5s3a2).         const(T_plzensky51278_txt_001_p5s3a2).
nodetype(node32_2, complex).         const(complex).
t_lemma(node32_2, misto).         const(misto).
%%%%%%%% node32_3 %%%%%%%%%%%%%%%%%%%
node(node32_3).
deepord(node32_3, 1).         const(1).
functor(node32_3, RSTR).         const(RSTR).
gram_sempos(node32_3, adj_quant_def).         const(adj_quant_def).
id(node32_3, T_plzensky51278_txt_001_p5s3a3).         const(T_plzensky51278_txt_001_p5s3a3).
nodetype(node32_3, complex).         const(complex).
t_lemma(node32_3, dva).         const(dva).
%%%%%%%% node32_4 %%%%%%%%%%%%%%%%%%%
node(node32_4).
deepord(node32_4, x1_1).         const(x1_1).
a_ref_type(node32_4, tree).         const(tree).
a_afun(node32_4, Atr).         const(Atr).
m_form(node32_4, Druhe).         const(Druhe).
m_lemma(node32_4, druhy_1___jiny_).         const(druhy_1___jiny_).
m_tag(node32_4, AANS4____1A____).         const(AANS4____1A____).
w_token(node32_4, Druhe).         const(Druhe).
a_ord(node32_4, 1).         const(1).
a_parent_id(node32_4, a_plzensky51278_txt_001_p5s3W2).         const(a_plzensky51278_txt_001_p5s3W2).
hide(node32_4, hide).         const(hide).
%%%%%%%% node32_5 %%%%%%%%%%%%%%%%%%%
node(node32_5).
deepord(node32_5, x2_1).         const(x2_1).
a_ref_type(node32_5, tree).         const(tree).
a_afun(node32_5, Obj).         const(Obj).
m_form(node32_5, misto).         const(misto).
m_lemma(node32_5, misto_1___fyzicke_umisteni_).         const(misto_1___fyzicke_umisteni_).
m_tag(node32_5, NNNS4_____A____).         const(NNNS4_____A____).
w_token(node32_5, misto).         const(misto).
a_ord(node32_5, 2).         const(2).
a_parent_id(node32_5, a_plzensky51278_txt_001_p5s3W3).         const(a_plzensky51278_txt_001_p5s3W3).
hide(node32_5, hide).         const(hide).
%%%%%%%% node32_6 %%%%%%%%%%%%%%%%%%%
node(node32_6).
deepord(node32_6, x3_1).         const(x3_1).
a_ref_type(node32_6, tree).         const(tree).
a_afun(node32_6, Pred).         const(Pred).
m_form(node32_6, obsadilo).         const(obsadilo).
m_lemma(node32_6, obsadit__W).         const(obsadit__W).
m_tag(node32_6, VpNS___XR_AA___).         const(VpNS___XR_AA___).
w_token(node32_6, obsadilo).         const(obsadilo).
a_ord(node32_6, 3).         const(3).
a_parent_id(node32_6, a_plzensky51278_txt_001_p5s3).         const(a_plzensky51278_txt_001_p5s3).
hide(node32_6, hide).         const(hide).
%%%%%%%% node32_7 %%%%%%%%%%%%%%%%%%%
node(node32_7).
deepord(node32_7, 4).         const(4).
functor(node32_7, ACT).         const(ACT).
gram_sempos(node32_7, n_denot).         const(n_denot).
id(node32_7, T_plzensky51278_txt_001_p5s3a4).         const(T_plzensky51278_txt_001_p5s3a4).
nodetype(node32_7, complex).         const(complex).
t_lemma(node32_7, druzstvo).         const(druzstvo).
%%%%%%%% node32_8 %%%%%%%%%%%%%%%%%%%
node(node32_8).
deepord(node32_8, x4_1).         const(x4_1).
a_ref_type(node32_8, tree).         const(tree).
a_afun(node32_8, Sb).         const(Sb).
m_form(node32_8, druzstvo).         const(druzstvo).
m_lemma(node32_8, druzstvo).         const(druzstvo).
m_tag(node32_8, NNNS1_____A____).         const(NNNS1_____A____).
w_token(node32_8, druzstvo).         const(druzstvo).
a_ord(node32_8, 4).         const(4).
a_parent_id(node32_8, a_plzensky51278_txt_001_p5s3W3).         const(a_plzensky51278_txt_001_p5s3W3).
hide(node32_8, hide).         const(hide).
%%%%%%%% node32_9 %%%%%%%%%%%%%%%%%%%
node(node32_9).
deepord(node32_9, 5).         const(5).
functor(node32_9, APP).         const(APP).
gram_sempos(node32_9, n_denot).         const(n_denot).
id(node32_9, T_plzensky51278_txt_001_p5s3a5).         const(T_plzensky51278_txt_001_p5s3a5).
nodetype(node32_9, complex).         const(complex).
t_lemma(node32_9, cislo).         const(cislo).
%%%%%%%% node32_10 %%%%%%%%%%%%%%%%%%%
node(node32_10).
deepord(node32_10, x5_1).         const(x5_1).
a_ref_type(node32_10, tree).         const(tree).
a_afun(node32_10, Atr).         const(Atr).
m_form(node32_10, c_).         const(c_).
m_lemma(node32_10, cislo__B).         const(cislo__B).
m_tag(node32_10, NNNXX_____A___8).         const(NNNXX_____A___8).
w_token(node32_10, c_).         const(c_).
a_ord(node32_10, 5).         const(5).
a_parent_id(node32_10, a_plzensky51278_txt_001_p5s3W4).         const(a_plzensky51278_txt_001_p5s3W4).
hide(node32_10, hide).         const(hide).
%%%%%%%% node32_11 %%%%%%%%%%%%%%%%%%%
node(node32_11).
deepord(node32_11, 6).         const(6).
functor(node32_11, RSTR).         const(RSTR).
gram_sempos(node32_11, adj_quant_def).         const(adj_quant_def).
id(node32_11, T_plzensky51278_txt_001_p5s3a6).         const(T_plzensky51278_txt_001_p5s3a6).
nodetype(node32_11, complex).         const(complex).
t_lemma(node32_11, 1).         const(1).
%%%%%%%% node32_12 %%%%%%%%%%%%%%%%%%%
node(node32_12).
deepord(node32_12, x6_1).         const(x6_1).
a_ref_type(node32_12, tree).         const(tree).
a_afun(node32_12, Atr).         const(Atr).
m_form(node32_12, 1).         const(1).
m_lemma(node32_12, 1).         const(1).
m_tag(node32_12, C=_____________).         const(C=_____________).
w_token(node32_12, 1).         const(1).
a_ord(node32_12, 6).         const(6).
a_parent_id(node32_12, a_plzensky51278_txt_001_p5s3W5).         const(a_plzensky51278_txt_001_p5s3W5).
hide(node32_12, hide).         const(hide).
%%%%%%%% node32_13 %%%%%%%%%%%%%%%%%%%
node(node32_13).
deepord(node32_13, 8).         const(8).
functor(node32_13, DIR1).         const(DIR1).
gram_sempos(node32_13, n_denot).         const(n_denot).
id(node32_13, T_plzensky51278_txt_001_p5s3a8).         const(T_plzensky51278_txt_001_p5s3a8).
nodetype(node32_13, complex).         const(complex).
subfunctor(node32_13, basic).         const(basic).
t_lemma(node32_13, ZS).         const(ZS).
%%%%%%%% node32_14 %%%%%%%%%%%%%%%%%%%
node(node32_14).
deepord(node32_14, 7).         const(7).
functor(node32_14, RSTR).         const(RSTR).
gram_sempos(node32_14, adj_quant_def).         const(adj_quant_def).
id(node32_14, T_plzensky51278_txt_001_p5s3a9).         const(T_plzensky51278_txt_001_p5s3a9).
nodetype(node32_14, complex).         const(complex).
t_lemma(node32_14, 14).         const(14).
%%%%%%%% node32_15 %%%%%%%%%%%%%%%%%%%
node(node32_15).
deepord(node32_15, x7_1).         const(x7_1).
a_ref_type(node32_15, tree).         const(tree).
a_afun(node32_15, Atr).         const(Atr).
m_form(node32_15, 14).         const(14).
m_lemma(node32_15, 14).         const(14).
m_tag(node32_15, C=_____________).         const(C=_____________).
w_token(node32_15, 14).         const(14).
a_ord(node32_15, 8).         const(8).
a_parent_id(node32_15, a_plzensky51278_txt_001_p5s3W9).         const(a_plzensky51278_txt_001_p5s3W9).
hide(node32_15, hide).         const(hide).
%%%%%%%% node32_16 %%%%%%%%%%%%%%%%%%%
node(node32_16).
deepord(node32_16, x8_1).         const(x8_1).
a_ref_type(node32_16, tree).         const(tree).
a_afun(node32_16, AuxP).         const(AuxP).
m_form(node32_16, ze).         const(ze).
m_lemma(node32_16, z_1).         const(z_1).
m_tag(node32_16, RV__2__________).         const(RV__2__________).
w_token(node32_16, ze).         const(ze).
a_ord(node32_16, 7).         const(7).
a_parent_id(node32_16, a_plzensky51278_txt_001_p5s3W3).         const(a_plzensky51278_txt_001_p5s3W3).
hide(node32_16, hide).         const(hide).
%%%%%%%% node32_17 %%%%%%%%%%%%%%%%%%%
node(node32_17).
deepord(node32_17, x8_2).         const(x8_2).
a_ref_type(node32_17, tree).         const(tree).
a_afun(node32_17, Adv).         const(Adv).
m_form(node32_17, ZS).         const(ZS).
m_lemma(node32_17, ZS__B___zakladni_skola_).         const(ZS__B___zakladni_skola_).
m_tag(node32_17, NNFXX_____A____).         const(NNFXX_____A____).
w_token(node32_17, ZS).         const(ZS).
a_ord(node32_17, 9).         const(9).
a_parent_id(node32_17, a_plzensky51278_txt_001_p5s3W7).         const(a_plzensky51278_txt_001_p5s3W7).
hide(node32_17, hide).         const(hide).
%%%%%%%% node32_18 %%%%%%%%%%%%%%%%%%%
node(node32_18).
deepord(node32_18, 15).         const(15).
functor(node32_18, CONJ).         const(CONJ).
id(node32_18, T_plzensky51278_txt_001_p5s3a10).         const(T_plzensky51278_txt_001_p5s3a10).
nodetype(node32_18, coap).         const(coap).
t_lemma(node32_18, a).         const(a).
%%%%%%%% node32_19 %%%%%%%%%%%%%%%%%%%
node(node32_19).
deepord(node32_19, 10).         const(10).
functor(node32_19, RSTR).         const(RSTR).
gram_sempos(node32_19, n_denot).         const(n_denot).
id(node32_19, T_plzensky51278_txt_001_p5s3a11).         const(T_plzensky51278_txt_001_p5s3a11).
is_member(node32_19, 1).         const(1).
nodetype(node32_19, complex).         const(complex).
t_lemma(node32_19, ulice).         const(ulice).
%%%%%%%% node32_20 %%%%%%%%%%%%%%%%%%%
node(node32_20).
deepord(node32_20, 9).         const(9).
functor(node32_20, RSTR).         const(RSTR).
gram_sempos(node32_20, adj_denot).         const(adj_denot).
id(node32_20, T_plzensky51278_txt_001_p5s3a12).         const(T_plzensky51278_txt_001_p5s3a12).
nodetype(node32_20, complex).         const(complex).
t_lemma(node32_20, zabelsky).         const(zabelsky).
%%%%%%%% node32_21 %%%%%%%%%%%%%%%%%%%
node(node32_21).
deepord(node32_21, x9_1).         const(x9_1).
a_ref_type(node32_21, tree).         const(tree).
a_afun(node32_21, Atr).         const(Atr).
m_form(node32_21, Zabelska).         const(Zabelska).
m_lemma(node32_21, zabelsky).         const(zabelsky).
m_tag(node32_21, AAFS1____1A____).         const(AAFS1____1A____).
w_token(node32_21, Zabelska).         const(Zabelska).
a_ord(node32_21, 10).         const(10).
a_parent_id(node32_21, a_plzensky51278_txt_001_p5s3W11).         const(a_plzensky51278_txt_001_p5s3W11).
hide(node32_21, hide).         const(hide).
%%%%%%%% node32_22 %%%%%%%%%%%%%%%%%%%
node(node32_22).
deepord(node32_22, x10_1).         const(x10_1).
a_ref_type(node32_22, tree).         const(tree).
a_afun(node32_22, Atr).         const(Atr).
m_form(node32_22, ulice).         const(ulice).
m_lemma(node32_22, ulice).         const(ulice).
m_tag(node32_22, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node32_22, ulice).         const(ulice).
a_ord(node32_22, 11).         const(11).
a_parent_id(node32_22, a_plzensky51278_txt_001_p5s3W17).         const(a_plzensky51278_txt_001_p5s3W17).
hide(node32_22, hide).         const(hide).
%%%%%%%% node32_23 %%%%%%%%%%%%%%%%%%%
node(node32_23).
deepord(node32_23, 11).         const(11).
functor(node32_23, RSTR).         const(RSTR).
gram_sempos(node32_23, n_denot).         const(n_denot).
id(node32_23, T_plzensky51278_txt_001_p5s3a13).         const(T_plzensky51278_txt_001_p5s3a13).
nodetype(node32_23, complex).         const(complex).
t_lemma(node32_23, Plzen).         const(Plzen).
%%%%%%%% node32_24 %%%%%%%%%%%%%%%%%%%
node(node32_24).
deepord(node32_24, x11_1).         const(x11_1).
a_ref_type(node32_24, tree).         const(tree).
a_afun(node32_24, Atr).         const(Atr).
m_form(node32_24, Plzen).         const(Plzen).
m_lemma(node32_24, Plzen__G).         const(Plzen__G).
m_tag(node32_24, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node32_24, Plzen).         const(Plzen).
a_ord(node32_24, 12).         const(12).
a_parent_id(node32_24, a_plzensky51278_txt_001_p5s3W11).         const(a_plzensky51278_txt_001_p5s3W11).
hide(node32_24, hide).         const(hide).
%%%%%%%% node32_25 %%%%%%%%%%%%%%%%%%%
node(node32_25).
deepord(node32_25, 12).         const(12).
functor(node32_25, ACMP).         const(ACMP).
gram_sempos(node32_25, n_denot).         const(n_denot).
id(node32_25, T_plzensky51278_txt_001_p5s3a15).         const(T_plzensky51278_txt_001_p5s3a15).
nodetype(node32_25, complex).         const(complex).
subfunctor(node32_25, basic).         const(basic).
t_lemma(node32_25, pocet).         const(pocet).
%%%%%%%% node32_26 %%%%%%%%%%%%%%%%%%%
node(node32_26).
deepord(node32_26, x12_1).         const(x12_1).
a_ref_type(node32_26, tree).         const(tree).
a_afun(node32_26, AuxP).         const(AuxP).
m_form(node32_26, s).         const(s).
m_lemma(node32_26, s_1).         const(s_1).
m_tag(node32_26, RR__7__________).         const(RR__7__________).
w_token(node32_26, s).         const(s).
a_ord(node32_26, 13).         const(13).
a_parent_id(node32_26, a_plzensky51278_txt_001_p5s3W11).         const(a_plzensky51278_txt_001_p5s3W11).
hide(node32_26, hide).         const(hide).
%%%%%%%% node32_27 %%%%%%%%%%%%%%%%%%%
node(node32_27).
deepord(node32_27, x12_2).         const(x12_2).
a_ref_type(node32_27, tree).         const(tree).
a_afun(node32_27, Atr).         const(Atr).
m_form(node32_27, poctem).         const(poctem).
m_lemma(node32_27, pocet).         const(pocet).
m_tag(node32_27, NNIS7_____A____).         const(NNIS7_____A____).
w_token(node32_27, poctem).         const(poctem).
a_ord(node32_27, 14).         const(14).
a_parent_id(node32_27, a_plzensky51278_txt_001_p5s3W13).         const(a_plzensky51278_txt_001_p5s3W13).
hide(node32_27, hide).         const(hide).
%%%%%%%% node32_28 %%%%%%%%%%%%%%%%%%%
node(node32_28).
deepord(node32_28, 13).         const(13).
functor(node32_28, MAT).         const(MAT).
gram_sempos(node32_28, n_denot).         const(n_denot).
id(node32_28, T_plzensky51278_txt_001_p5s3a16).         const(T_plzensky51278_txt_001_p5s3a16).
nodetype(node32_28, complex).         const(complex).
t_lemma(node32_28, bod).         const(bod).
%%%%%%%% node32_29 %%%%%%%%%%%%%%%%%%%
node(node32_29).
deepord(node32_29, x13_1).         const(x13_1).
a_ref_type(node32_29, tree).         const(tree).
a_afun(node32_29, Atr).         const(Atr).
m_form(node32_29, bodu).         const(bodu).
m_lemma(node32_29, bod).         const(bod).
m_tag(node32_29, NNIP2_____A____).         const(NNIP2_____A____).
w_token(node32_29, bodu).         const(bodu).
a_ord(node32_29, 15).         const(15).
a_parent_id(node32_29, a_plzensky51278_txt_001_p5s3W14).         const(a_plzensky51278_txt_001_p5s3W14).
hide(node32_29, hide).         const(hide).
%%%%%%%% node32_30 %%%%%%%%%%%%%%%%%%%
node(node32_30).
deepord(node32_30, 14).         const(14).
functor(node32_30, RSTR).         const(RSTR).
gram_sempos(node32_30, adj_quant_def).         const(adj_quant_def).
id(node32_30, T_plzensky51278_txt_001_p5s3a17).         const(T_plzensky51278_txt_001_p5s3a17).
nodetype(node32_30, complex).         const(complex).
t_lemma(node32_30, 102).         const(102).
%%%%%%%% node32_31 %%%%%%%%%%%%%%%%%%%
node(node32_31).
deepord(node32_31, x14_1).         const(x14_1).
a_ref_type(node32_31, tree).         const(tree).
a_afun(node32_31, Atr).         const(Atr).
m_form(node32_31, 102).         const(102).
m_lemma(node32_31, 102).         const(102).
m_tag(node32_31, C=_____________).         const(C=_____________).
w_token(node32_31, 102).         const(102).
a_ord(node32_31, 16).         const(16).
a_parent_id(node32_31, a_plzensky51278_txt_001_p5s3W15).         const(a_plzensky51278_txt_001_p5s3W15).
hide(node32_31, hide).         const(hide).
%%%%%%%% node32_32 %%%%%%%%%%%%%%%%%%%
node(node32_32).
deepord(node32_32, x15_1).         const(x15_1).
a_ref_type(node32_32, tree).         const(tree).
a_afun(node32_32, Coord).         const(Coord).
m_form(node32_32, a).         const(a).
m_lemma(node32_32, a_1).         const(a_1).
m_tag(node32_32, J______________).         const(J______________).
w_token(node32_32, a).         const(a).
a_ord(node32_32, 17).         const(17).
a_parent_id(node32_32, a_plzensky51278_txt_001_p5s3W9).         const(a_plzensky51278_txt_001_p5s3W9).
hide(node32_32, hide).         const(hide).
%%%%%%%% node32_33 %%%%%%%%%%%%%%%%%%%
node(node32_33).
deepord(node32_33, 17).         const(17).
functor(node32_33, RSTR).         const(RSTR).
gram_sempos(node32_33, n_denot).         const(n_denot).
id(node32_33, T_plzensky51278_txt_001_p5s3a18).         const(T_plzensky51278_txt_001_p5s3a18).
is_member(node32_33, 1).         const(1).
nodetype(node32_33, complex).         const(complex).
t_lemma(node32_33, druzstvo).         const(druzstvo).
%%%%%%%% node32_34 %%%%%%%%%%%%%%%%%%%
node(node32_34).
deepord(node32_34, 16).         const(16).
functor(node32_34, RSTR).         const(RSTR).
gram_sempos(node32_34, adj_quant_def).         const(adj_quant_def).
id(node32_34, T_plzensky51278_txt_001_p5s3a19).         const(T_plzensky51278_txt_001_p5s3a19).
nodetype(node32_34, complex).         const(complex).
t_lemma(node32_34, tri).         const(tri).
%%%%%%%% node32_35 %%%%%%%%%%%%%%%%%%%
node(node32_35).
deepord(node32_35, x16_1).         const(x16_1).
a_ref_type(node32_35, tree).         const(tree).
a_afun(node32_35, Atr).         const(Atr).
m_form(node32_35, treti).         const(treti).
m_lemma(node32_35, treti).         const(treti).
m_tag(node32_35, CrNS1__________).         const(CrNS1__________).
w_token(node32_35, treti).         const(treti).
a_ord(node32_35, 18).         const(18).
a_parent_id(node32_35, a_plzensky51278_txt_001_p5s3W19).         const(a_plzensky51278_txt_001_p5s3W19).
hide(node32_35, hide).         const(hide).
%%%%%%%% node32_36 %%%%%%%%%%%%%%%%%%%
node(node32_36).
deepord(node32_36, x17_1).         const(x17_1).
a_ref_type(node32_36, tree).         const(tree).
a_afun(node32_36, Atr).         const(Atr).
m_form(node32_36, druzstvo).         const(druzstvo).
m_lemma(node32_36, druzstvo).         const(druzstvo).
m_tag(node32_36, NNNS1_____A____).         const(NNNS1_____A____).
w_token(node32_36, druzstvo).         const(druzstvo).
a_ord(node32_36, 19).         const(19).
a_parent_id(node32_36, a_plzensky51278_txt_001_p5s3W17).         const(a_plzensky51278_txt_001_p5s3W17).
hide(node32_36, hide).         const(hide).
%%%%%%%% node32_37 %%%%%%%%%%%%%%%%%%%
node(node32_37).
deepord(node32_37, 18).         const(18).
functor(node32_37, APP).         const(APP).
gram_sempos(node32_37, n_denot).         const(n_denot).
id(node32_37, T_plzensky51278_txt_001_p5s3a20).         const(T_plzensky51278_txt_001_p5s3a20).
nodetype(node32_37, complex).         const(complex).
t_lemma(node32_37, cislo).         const(cislo).
%%%%%%%% node32_38 %%%%%%%%%%%%%%%%%%%
node(node32_38).
deepord(node32_38, x18_1).         const(x18_1).
a_ref_type(node32_38, tree).         const(tree).
a_afun(node32_38, Atr).         const(Atr).
m_form(node32_38, c_).         const(c_).
m_lemma(node32_38, cislo__B).         const(cislo__B).
m_tag(node32_38, NNNXX_____A___8).         const(NNNXX_____A___8).
w_token(node32_38, c_).         const(c_).
a_ord(node32_38, 20).         const(20).
a_parent_id(node32_38, a_plzensky51278_txt_001_p5s3W19).         const(a_plzensky51278_txt_001_p5s3W19).
hide(node32_38, hide).         const(hide).
%%%%%%%% node32_39 %%%%%%%%%%%%%%%%%%%
node(node32_39).
deepord(node32_39, 19).         const(19).
functor(node32_39, RSTR).         const(RSTR).
gram_sempos(node32_39, adj_quant_def).         const(adj_quant_def).
id(node32_39, T_plzensky51278_txt_001_p5s3a21).         const(T_plzensky51278_txt_001_p5s3a21).
nodetype(node32_39, complex).         const(complex).
t_lemma(node32_39, 11).         const(11).
%%%%%%%% node32_40 %%%%%%%%%%%%%%%%%%%
node(node32_40).
deepord(node32_40, x19_1).         const(x19_1).
a_ref_type(node32_40, tree).         const(tree).
a_afun(node32_40, Atr).         const(Atr).
m_form(node32_40, 11).         const(11).
m_lemma(node32_40, 11).         const(11).
m_tag(node32_40, C=_____________).         const(C=_____________).
w_token(node32_40, 11).         const(11).
a_ord(node32_40, 21).         const(21).
a_parent_id(node32_40, a_plzensky51278_txt_001_p5s3W9).         const(a_plzensky51278_txt_001_p5s3W9).
hide(node32_40, hide).         const(hide).
%%%%%%%% node32_41 %%%%%%%%%%%%%%%%%%%
node(node32_41).
deepord(node32_41, 20).         const(20).
functor(node32_41, DIR1).         const(DIR1).
gram_sempos(node32_41, n_denot).         const(n_denot).
id(node32_41, T_plzensky51278_txt_001_p5s3a23).         const(T_plzensky51278_txt_001_p5s3a23).
nodetype(node32_41, complex).         const(complex).
subfunctor(node32_41, basic).         const(basic).
t_lemma(node32_41, x11_ZS).         const(x11_ZS).
%%%%%%%% node32_42 %%%%%%%%%%%%%%%%%%%
node(node32_42).
deepord(node32_42, x20_1).         const(x20_1).
a_ref_type(node32_42, tree).         const(tree).
a_afun(node32_42, AuxP).         const(AuxP).
m_form(node32_42, z).         const(z).
m_lemma(node32_42, z_1).         const(z_1).
m_tag(node32_42, RR__2__________).         const(RR__2__________).
w_token(node32_42, z).         const(z).
a_ord(node32_42, 22).         const(22).
a_parent_id(node32_42, a_plzensky51278_txt_001_p5s3W3).         const(a_plzensky51278_txt_001_p5s3W3).
hide(node32_42, hide).         const(hide).
%%%%%%%% node32_43 %%%%%%%%%%%%%%%%%%%
node(node32_43).
deepord(node32_43, x20_2).         const(x20_2).
a_ref_type(node32_43, tree).         const(tree).
a_afun(node32_43, Adv).         const(Adv).
m_form(node32_43, x11_ZS).         const(x11_ZS).
m_lemma(node32_43, x11_ZS).         const(x11_ZS).
m_tag(node32_43, NNIXX_____A____).         const(NNIXX_____A____).
w_token(node32_43, x11_ZS).         const(x11_ZS).
a_ord(node32_43, 23).         const(23).
a_parent_id(node32_43, a_plzensky51278_txt_001_p5s3W22).         const(a_plzensky51278_txt_001_p5s3W22).
hide(node32_43, hide).         const(hide).
%%%%%%%% node32_44 %%%%%%%%%%%%%%%%%%%
node(node32_44).
deepord(node32_44, 22).         const(22).
functor(node32_44, LOC).         const(LOC).
gram_sempos(node32_44, n_denot).         const(n_denot).
id(node32_44, T_plzensky51278_txt_001_p5s3a25).         const(T_plzensky51278_txt_001_p5s3a25).
nodetype(node32_44, complex).         const(complex).
subfunctor(node32_44, basic).         const(basic).
t_lemma(node32_44, ulice).         const(ulice).
%%%%%%%% node32_45 %%%%%%%%%%%%%%%%%%%
node(node32_45).
deepord(node32_45, 21).         const(21).
functor(node32_45, RSTR).         const(RSTR).
gram_sempos(node32_45, n_denot).         const(n_denot).
id(node32_45, T_plzensky51278_txt_001_p5s3a26).         const(T_plzensky51278_txt_001_p5s3a26).
nodetype(node32_45, complex).         const(complex).
t_lemma(node32_45, Baaruv).         const(Baaruv).
%%%%%%%% node32_46 %%%%%%%%%%%%%%%%%%%
node(node32_46).
deepord(node32_46, x21_1).         const(x21_1).
a_ref_type(node32_46, tree).         const(tree).
a_afun(node32_46, Atr).         const(Atr).
m_form(node32_46, Baarove).         const(Baarove).
m_lemma(node32_46, Baaruv__S____2_).         const(Baaruv__S____2_).
m_tag(node32_46, AUFS6M_________).         const(AUFS6M_________).
w_token(node32_46, Baarove).         const(Baarove).
a_ord(node32_46, 25).         const(25).
a_parent_id(node32_46, a_plzensky51278_txt_001_p5s3W26).         const(a_plzensky51278_txt_001_p5s3W26).
hide(node32_46, hide).         const(hide).
%%%%%%%% node32_47 %%%%%%%%%%%%%%%%%%%
node(node32_47).
deepord(node32_47, x22_1).         const(x22_1).
a_ref_type(node32_47, tree).         const(tree).
a_afun(node32_47, AuxP).         const(AuxP).
m_form(node32_47, v).         const(v).
m_lemma(node32_47, v_1).         const(v_1).
m_tag(node32_47, RR__6__________).         const(RR__6__________).
w_token(node32_47, v).         const(v).
a_ord(node32_47, 24).         const(24).
a_parent_id(node32_47, a_plzensky51278_txt_001_p5s3W23).         const(a_plzensky51278_txt_001_p5s3W23).
hide(node32_47, hide).         const(hide).
%%%%%%%% node32_48 %%%%%%%%%%%%%%%%%%%
node(node32_48).
deepord(node32_48, x22_2).         const(x22_2).
a_ref_type(node32_48, tree).         const(tree).
a_afun(node32_48, Atr).         const(Atr).
m_form(node32_48, ulici).         const(ulici).
m_lemma(node32_48, ulice).         const(ulice).
m_tag(node32_48, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node32_48, ulici).         const(ulici).
a_ord(node32_48, 26).         const(26).
a_parent_id(node32_48, a_plzensky51278_txt_001_p5s3W24).         const(a_plzensky51278_txt_001_p5s3W24).
hide(node32_48, hide).         const(hide).
%%%%%%%% node32_49 %%%%%%%%%%%%%%%%%%%
node(node32_49).
deepord(node32_49, 23).         const(23).
functor(node32_49, PAT).         const(PAT).
gram_sempos(node32_49, n_denot).         const(n_denot).
id(node32_49, T_plzensky51278_txt_001_p5s3a28).         const(T_plzensky51278_txt_001_p5s3a28).
nodetype(node32_49, complex).         const(complex).
t_lemma(node32_49, Plzen).         const(Plzen).
%%%%%%%% node32_50 %%%%%%%%%%%%%%%%%%%
node(node32_50).
deepord(node32_50, x23_1).         const(x23_1).
a_ref_type(node32_50, tree).         const(tree).
a_afun(node32_50, AuxP).         const(AuxP).
m_form(node32_50, v).         const(v).
m_lemma(node32_50, v_1).         const(v_1).
m_tag(node32_50, RR__4__________).         const(RR__4__________).
w_token(node32_50, v).         const(v).
a_ord(node32_50, 27).         const(27).
a_parent_id(node32_50, a_plzensky51278_txt_001_p5s3W26).         const(a_plzensky51278_txt_001_p5s3W26).
hide(node32_50, hide).         const(hide).
%%%%%%%% node32_51 %%%%%%%%%%%%%%%%%%%
node(node32_51).
deepord(node32_51, x23_2).         const(x23_2).
a_ref_type(node32_51, tree).         const(tree).
a_afun(node32_51, Atr).         const(Atr).
m_form(node32_51, Plzen).         const(Plzen).
m_lemma(node32_51, Plzen__G).         const(Plzen__G).
m_tag(node32_51, NNFS4_____A____).         const(NNFS4_____A____).
w_token(node32_51, Plzen).         const(Plzen).
a_ord(node32_51, 28).         const(28).
a_parent_id(node32_51, a_plzensky51278_txt_001_p5s3W27).         const(a_plzensky51278_txt_001_p5s3W27).
hide(node32_51, hide).         const(hide).
%%%%%%%% node32_52 %%%%%%%%%%%%%%%%%%%
node(node32_52).
deepord(node32_52, 24).         const(24).
functor(node32_52, ACMP).         const(ACMP).
gram_sempos(node32_52, n_denot).         const(n_denot).
id(node32_52, T_plzensky51278_txt_001_p5s3a30).         const(T_plzensky51278_txt_001_p5s3a30).
nodetype(node32_52, complex).         const(complex).
subfunctor(node32_52, basic).         const(basic).
t_lemma(node32_52, pocet).         const(pocet).
%%%%%%%% node32_53 %%%%%%%%%%%%%%%%%%%
node(node32_53).
deepord(node32_53, x24_1).         const(x24_1).
a_ref_type(node32_53, tree).         const(tree).
a_afun(node32_53, AuxP).         const(AuxP).
m_form(node32_53, s).         const(s).
m_lemma(node32_53, s_1).         const(s_1).
m_tag(node32_53, RR__7__________).         const(RR__7__________).
w_token(node32_53, s).         const(s).
a_ord(node32_53, 29).         const(29).
a_parent_id(node32_53, a_plzensky51278_txt_001_p5s3W28).         const(a_plzensky51278_txt_001_p5s3W28).
hide(node32_53, hide).         const(hide).
%%%%%%%% node32_54 %%%%%%%%%%%%%%%%%%%
node(node32_54).
deepord(node32_54, x24_2).         const(x24_2).
a_ref_type(node32_54, tree).         const(tree).
a_afun(node32_54, Atr).         const(Atr).
m_form(node32_54, poctem).         const(poctem).
m_lemma(node32_54, pocet).         const(pocet).
m_tag(node32_54, NNIS7_____A____).         const(NNIS7_____A____).
w_token(node32_54, poctem).         const(poctem).
a_ord(node32_54, 30).         const(30).
a_parent_id(node32_54, a_plzensky51278_txt_001_p5s3W29).         const(a_plzensky51278_txt_001_p5s3W29).
hide(node32_54, hide).         const(hide).
%%%%%%%% node32_55 %%%%%%%%%%%%%%%%%%%
node(node32_55).
deepord(node32_55, 25).         const(25).
functor(node32_55, MAT).         const(MAT).
gram_sempos(node32_55, n_denot).         const(n_denot).
id(node32_55, T_plzensky51278_txt_001_p5s3a31).         const(T_plzensky51278_txt_001_p5s3a31).
nodetype(node32_55, complex).         const(complex).
t_lemma(node32_55, bod).         const(bod).
%%%%%%%% node32_56 %%%%%%%%%%%%%%%%%%%
node(node32_56).
deepord(node32_56, x25_1).         const(x25_1).
a_ref_type(node32_56, tree).         const(tree).
a_afun(node32_56, Atr).         const(Atr).
m_form(node32_56, bodu).         const(bodu).
m_lemma(node32_56, bod).         const(bod).
m_tag(node32_56, NNIP2_____A____).         const(NNIP2_____A____).
w_token(node32_56, bodu).         const(bodu).
a_ord(node32_56, 31).         const(31).
a_parent_id(node32_56, a_plzensky51278_txt_001_p5s3W30).         const(a_plzensky51278_txt_001_p5s3W30).
hide(node32_56, hide).         const(hide).
%%%%%%%% node32_57 %%%%%%%%%%%%%%%%%%%
node(node32_57).
deepord(node32_57, 26).         const(26).
functor(node32_57, RSTR).         const(RSTR).
gram_sempos(node32_57, adj_quant_def).         const(adj_quant_def).
id(node32_57, T_plzensky51278_txt_001_p5s3a32).         const(T_plzensky51278_txt_001_p5s3a32).
nodetype(node32_57, complex).         const(complex).
t_lemma(node32_57, x101_5).         const(x101_5).
%%%%%%%% node32_58 %%%%%%%%%%%%%%%%%%%
node(node32_58).
deepord(node32_58, x26_1).         const(x26_1).
a_ref_type(node32_58, tree).         const(tree).
a_afun(node32_58, Atr).         const(Atr).
m_form(node32_58, x101_5).         const(x101_5).
m_lemma(node32_58, x101_5).         const(x101_5).
m_tag(node32_58, C=_____________).         const(C=_____________).
w_token(node32_58, x101_5).         const(x101_5).
w_no_space_after(node32_58, 1).         const(1).
a_ord(node32_58, 32).         const(32).
a_parent_id(node32_58, a_plzensky51278_txt_001_p5s3W23).         const(a_plzensky51278_txt_001_p5s3W23).
hide(node32_58, hide).         const(hide).
edge(node32_0, node32_1).
edge(node32_1, node32_2).
edge(node32_2, node32_3).
edge(node32_3, node32_4).
edge(node32_2, node32_5).
edge(node32_1, node32_6).
edge(node32_1, node32_7).
edge(node32_7, node32_8).
edge(node32_7, node32_9).
edge(node32_9, node32_10).
edge(node32_9, node32_11).
edge(node32_11, node32_12).
edge(node32_1, node32_13).
edge(node32_13, node32_14).
edge(node32_14, node32_15).
edge(node32_13, node32_16).
edge(node32_13, node32_17).
edge(node32_13, node32_18).
edge(node32_18, node32_19).
edge(node32_19, node32_20).
edge(node32_20, node32_21).
edge(node32_19, node32_22).
edge(node32_19, node32_23).
edge(node32_23, node32_24).
edge(node32_19, node32_25).
edge(node32_25, node32_26).
edge(node32_25, node32_27).
edge(node32_25, node32_28).
edge(node32_28, node32_29).
edge(node32_28, node32_30).
edge(node32_30, node32_31).
edge(node32_18, node32_32).
edge(node32_18, node32_33).
edge(node32_33, node32_34).
edge(node32_34, node32_35).
edge(node32_33, node32_36).
edge(node32_33, node32_37).
edge(node32_37, node32_38).
edge(node32_13, node32_39).
edge(node32_39, node32_40).
edge(node32_1, node32_41).
edge(node32_41, node32_42).
edge(node32_41, node32_43).
edge(node32_41, node32_44).
edge(node32_44, node32_45).
edge(node32_45, node32_46).
edge(node32_44, node32_47).
edge(node32_44, node32_48).
edge(node32_44, node32_49).
edge(node32_49, node32_50).
edge(node32_49, node32_51).
edge(node32_49, node32_52).
edge(node32_52, node32_53).
edge(node32_52, node32_54).
edge(node32_52, node32_55).
edge(node32_55, node32_56).
edge(node32_41, node32_57).
edge(node32_57, node32_58).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Na ctvrtem miste skoncilo druzstvo c. 10 ze Sportovniho gymnazia a pate druzstvo c. 4 z Gymnazia v Opavske ulici v Plzni. 
tree_root(node33_0).
:- valid_root(node33_0).
%%%%%%%% node33_0 %%%%%%%%%%%%%%%%%%%
node(node33_0).
atree_rf(node33_0, a_a_plzensky51278_txt_001_p5s4).         const(a_a_plzensky51278_txt_001_p5s4).
deepord(node33_0, 0).         const(0).
id(node33_0, T_plzensky51278_txt_001_p5s4).         const(T_plzensky51278_txt_001_p5s4).
nodetype(node33_0, root).         const(root).
sentence(node33_0, Na_ctvrtem_miste_skoncilo_druzstvo_c__10_ze_Sportovniho_gymnazia_a_pate_druzstvo_c__4_z_Gymnazia_v_Opavske_ulici_v_Plzni__).         const(Na_ctvrtem_miste_skoncilo_druzstvo_c__10_ze_Sportovniho_gymnazia_a_pate_druzstvo_c__4_z_Gymnazia_v_Opavske_ulici_v_Plzni__).
%%%%%%%% node33_1 %%%%%%%%%%%%%%%%%%%
node(node33_1).
deepord(node33_1, 3).         const(3).
functor(node33_1, PRED).         const(PRED).
gram_sempos(node33_1, v).         const(v).
id(node33_1, T_plzensky51278_txt_001_p5s4a1).         const(T_plzensky51278_txt_001_p5s4a1).
nodetype(node33_1, complex).         const(complex).
t_lemma(node33_1, skoncit).         const(skoncit).
val_frame_rf(node33_1, v_v_w6123f2).         const(v_v_w6123f2).
%%%%%%%% node33_2 %%%%%%%%%%%%%%%%%%%
node(node33_2).
deepord(node33_2, 2).         const(2).
functor(node33_2, LOC).         const(LOC).
gram_sempos(node33_2, n_denot).         const(n_denot).
id(node33_2, T_plzensky51278_txt_001_p5s4a3).         const(T_plzensky51278_txt_001_p5s4a3).
nodetype(node33_2, complex).         const(complex).
subfunctor(node33_2, basic).         const(basic).
t_lemma(node33_2, misto).         const(misto).
%%%%%%%% node33_3 %%%%%%%%%%%%%%%%%%%
node(node33_3).
deepord(node33_3, 1).         const(1).
functor(node33_3, RSTR).         const(RSTR).
gram_sempos(node33_3, adj_quant_def).         const(adj_quant_def).
id(node33_3, T_plzensky51278_txt_001_p5s4a4).         const(T_plzensky51278_txt_001_p5s4a4).
nodetype(node33_3, complex).         const(complex).
t_lemma(node33_3, ctyri).         const(ctyri).
%%%%%%%% node33_4 %%%%%%%%%%%%%%%%%%%
node(node33_4).
deepord(node33_4, x1_1).         const(x1_1).
a_ref_type(node33_4, tree).         const(tree).
a_afun(node33_4, Atr).         const(Atr).
m_form(node33_4, ctvrtem).         const(ctvrtem).
m_lemma(node33_4, ctvrty).         const(ctvrty).
m_tag(node33_4, CrNS6__________).         const(CrNS6__________).
w_token(node33_4, ctvrtem).         const(ctvrtem).
a_ord(node33_4, 2).         const(2).
a_parent_id(node33_4, a_plzensky51278_txt_001_p5s4W3).         const(a_plzensky51278_txt_001_p5s4W3).
hide(node33_4, hide).         const(hide).
%%%%%%%% node33_5 %%%%%%%%%%%%%%%%%%%
node(node33_5).
deepord(node33_5, x2_1).         const(x2_1).
a_ref_type(node33_5, tree).         const(tree).
a_afun(node33_5, AuxP).         const(AuxP).
m_form(node33_5, Na).         const(Na).
m_lemma(node33_5, na_1).         const(na_1).
m_tag(node33_5, RR__6__________).         const(RR__6__________).
w_token(node33_5, Na).         const(Na).
a_ord(node33_5, 1).         const(1).
a_parent_id(node33_5, a_plzensky51278_txt_001_p5s4W4).         const(a_plzensky51278_txt_001_p5s4W4).
hide(node33_5, hide).         const(hide).
%%%%%%%% node33_6 %%%%%%%%%%%%%%%%%%%
node(node33_6).
deepord(node33_6, x2_2).         const(x2_2).
a_ref_type(node33_6, tree).         const(tree).
a_afun(node33_6, Adv).         const(Adv).
m_form(node33_6, miste).         const(miste).
m_lemma(node33_6, misto_1___fyzicke_umisteni_).         const(misto_1___fyzicke_umisteni_).
m_tag(node33_6, NNNS6_____A____).         const(NNNS6_____A____).
w_token(node33_6, miste).         const(miste).
a_ord(node33_6, 3).         const(3).
a_parent_id(node33_6, a_plzensky51278_txt_001_p5s4W1).         const(a_plzensky51278_txt_001_p5s4W1).
hide(node33_6, hide).         const(hide).
%%%%%%%% node33_7 %%%%%%%%%%%%%%%%%%%
node(node33_7).
deepord(node33_7, x3_1).         const(x3_1).
a_ref_type(node33_7, tree).         const(tree).
a_afun(node33_7, Pred).         const(Pred).
m_form(node33_7, skoncilo).         const(skoncilo).
m_lemma(node33_7, skoncit__W).         const(skoncit__W).
m_tag(node33_7, VpNS___XR_AA___).         const(VpNS___XR_AA___).
w_token(node33_7, skoncilo).         const(skoncilo).
a_ord(node33_7, 4).         const(4).
a_parent_id(node33_7, a_plzensky51278_txt_001_p5s4).         const(a_plzensky51278_txt_001_p5s4).
hide(node33_7, hide).         const(hide).
%%%%%%%% node33_8 %%%%%%%%%%%%%%%%%%%
node(node33_8).
deepord(node33_8, 9).         const(9).
functor(node33_8, CONJ).         const(CONJ).
id(node33_8, T_plzensky51278_txt_001_p5s4a5).         const(T_plzensky51278_txt_001_p5s4a5).
nodetype(node33_8, coap).         const(coap).
t_lemma(node33_8, a).         const(a).
%%%%%%%% node33_9 %%%%%%%%%%%%%%%%%%%
node(node33_9).
deepord(node33_9, 4).         const(4).
functor(node33_9, ACT).         const(ACT).
gram_sempos(node33_9, n_denot).         const(n_denot).
id(node33_9, T_plzensky51278_txt_001_p5s4a6).         const(T_plzensky51278_txt_001_p5s4a6).
is_member(node33_9, 1).         const(1).
nodetype(node33_9, complex).         const(complex).
t_lemma(node33_9, druzstvo).         const(druzstvo).
%%%%%%%% node33_10 %%%%%%%%%%%%%%%%%%%
node(node33_10).
deepord(node33_10, x4_1).         const(x4_1).
a_ref_type(node33_10, tree).         const(tree).
a_afun(node33_10, Sb).         const(Sb).
m_form(node33_10, druzstvo).         const(druzstvo).
m_lemma(node33_10, druzstvo).         const(druzstvo).
m_tag(node33_10, NNNS1_____A____).         const(NNNS1_____A____).
w_token(node33_10, druzstvo).         const(druzstvo).
a_ord(node33_10, 5).         const(5).
a_parent_id(node33_10, a_plzensky51278_txt_001_p5s4W11).         const(a_plzensky51278_txt_001_p5s4W11).
hide(node33_10, hide).         const(hide).
%%%%%%%% node33_11 %%%%%%%%%%%%%%%%%%%
node(node33_11).
deepord(node33_11, 5).         const(5).
functor(node33_11, ACT).         const(ACT).
gram_sempos(node33_11, n_denot).         const(n_denot).
id(node33_11, T_plzensky51278_txt_001_p5s4a7).         const(T_plzensky51278_txt_001_p5s4a7).
is_member(node33_11, 1).         const(1).
nodetype(node33_11, complex).         const(complex).
t_lemma(node33_11, cislo).         const(cislo).
%%%%%%%% node33_12 %%%%%%%%%%%%%%%%%%%
node(node33_12).
deepord(node33_12, x5_1).         const(x5_1).
a_ref_type(node33_12, tree).         const(tree).
a_afun(node33_12, Sb).         const(Sb).
m_form(node33_12, c_).         const(c_).
m_lemma(node33_12, cislo__B).         const(cislo__B).
m_tag(node33_12, NNNXX_____A___8).         const(NNNXX_____A___8).
w_token(node33_12, c_).         const(c_).
a_ord(node33_12, 6).         const(6).
a_parent_id(node33_12, a_plzensky51278_txt_001_p5s4W11).         const(a_plzensky51278_txt_001_p5s4W11).
hide(node33_12, hide).         const(hide).
%%%%%%%% node33_13 %%%%%%%%%%%%%%%%%%%
node(node33_13).
deepord(node33_13, 6).         const(6).
functor(node33_13, RSTR).         const(RSTR).
gram_sempos(node33_13, adj_quant_def).         const(adj_quant_def).
id(node33_13, T_plzensky51278_txt_001_p5s4a8).         const(T_plzensky51278_txt_001_p5s4a8).
nodetype(node33_13, complex).         const(complex).
t_lemma(node33_13, 10).         const(10).
%%%%%%%% node33_14 %%%%%%%%%%%%%%%%%%%
node(node33_14).
deepord(node33_14, x6_1).         const(x6_1).
a_ref_type(node33_14, tree).         const(tree).
a_afun(node33_14, Atr).         const(Atr).
m_form(node33_14, 10).         const(10).
m_lemma(node33_14, 10).         const(10).
m_tag(node33_14, C=_____________).         const(C=_____________).
w_token(node33_14, 10).         const(10).
a_ord(node33_14, 7).         const(7).
a_parent_id(node33_14, a_plzensky51278_txt_001_p5s4W6).         const(a_plzensky51278_txt_001_p5s4W6).
hide(node33_14, hide).         const(hide).
%%%%%%%% node33_15 %%%%%%%%%%%%%%%%%%%
node(node33_15).
deepord(node33_15, 8).         const(8).
functor(node33_15, DIR1).         const(DIR1).
gram_sempos(node33_15, n_denot).         const(n_denot).
id(node33_15, T_plzensky51278_txt_001_p5s4a10).         const(T_plzensky51278_txt_001_p5s4a10).
nodetype(node33_15, complex).         const(complex).
subfunctor(node33_15, basic).         const(basic).
t_lemma(node33_15, gymnazium).         const(gymnazium).
%%%%%%%% node33_16 %%%%%%%%%%%%%%%%%%%
node(node33_16).
deepord(node33_16, 7).         const(7).
functor(node33_16, RSTR).         const(RSTR).
gram_sempos(node33_16, adj_denot).         const(adj_denot).
id(node33_16, T_plzensky51278_txt_001_p5s4a11).         const(T_plzensky51278_txt_001_p5s4a11).
nodetype(node33_16, complex).         const(complex).
t_lemma(node33_16, sportovni).         const(sportovni).
%%%%%%%% node33_17 %%%%%%%%%%%%%%%%%%%
node(node33_17).
deepord(node33_17, x7_1).         const(x7_1).
a_ref_type(node33_17, tree).         const(tree).
a_afun(node33_17, Atr).         const(Atr).
m_form(node33_17, Sportovniho).         const(Sportovniho).
m_lemma(node33_17, sportovni).         const(sportovni).
m_tag(node33_17, AANS2____1A____).         const(AANS2____1A____).
w_token(node33_17, Sportovniho).         const(Sportovniho).
a_ord(node33_17, 9).         const(9).
a_parent_id(node33_17, a_plzensky51278_txt_001_p5s4W10).         const(a_plzensky51278_txt_001_p5s4W10).
hide(node33_17, hide).         const(hide).
%%%%%%%% node33_18 %%%%%%%%%%%%%%%%%%%
node(node33_18).
deepord(node33_18, x8_1).         const(x8_1).
a_ref_type(node33_18, tree).         const(tree).
a_afun(node33_18, AuxP).         const(AuxP).
m_form(node33_18, ze).         const(ze).
m_lemma(node33_18, z_1).         const(z_1).
m_tag(node33_18, RV__2__________).         const(RV__2__________).
w_token(node33_18, ze).         const(ze).
a_ord(node33_18, 8).         const(8).
a_parent_id(node33_18, a_plzensky51278_txt_001_p5s4W6).         const(a_plzensky51278_txt_001_p5s4W6).
hide(node33_18, hide).         const(hide).
%%%%%%%% node33_19 %%%%%%%%%%%%%%%%%%%
node(node33_19).
deepord(node33_19, x8_2).         const(x8_2).
a_ref_type(node33_19, tree).         const(tree).
a_afun(node33_19, Atr).         const(Atr).
m_form(node33_19, gymnazia).         const(gymnazia).
m_lemma(node33_19, gymnazium).         const(gymnazium).
m_tag(node33_19, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node33_19, gymnazia).         const(gymnazia).
a_ord(node33_19, 10).         const(10).
a_parent_id(node33_19, a_plzensky51278_txt_001_p5s4W8).         const(a_plzensky51278_txt_001_p5s4W8).
hide(node33_19, hide).         const(hide).
%%%%%%%% node33_20 %%%%%%%%%%%%%%%%%%%
node(node33_20).
deepord(node33_20, x9_1).         const(x9_1).
a_ref_type(node33_20, tree).         const(tree).
a_afun(node33_20, Coord).         const(Coord).
m_form(node33_20, a).         const(a).
m_lemma(node33_20, a_1).         const(a_1).
m_tag(node33_20, J______________).         const(J______________).
w_token(node33_20, a).         const(a).
a_ord(node33_20, 11).         const(11).
a_parent_id(node33_20, a_plzensky51278_txt_001_p5s4W4).         const(a_plzensky51278_txt_001_p5s4W4).
hide(node33_20, hide).         const(hide).
%%%%%%%% node33_21 %%%%%%%%%%%%%%%%%%%
node(node33_21).
deepord(node33_21, 11).         const(11).
functor(node33_21, ACT).         const(ACT).
gram_sempos(node33_21, n_denot).         const(n_denot).
id(node33_21, T_plzensky51278_txt_001_p5s4a12).         const(T_plzensky51278_txt_001_p5s4a12).
is_member(node33_21, 1).         const(1).
nodetype(node33_21, complex).         const(complex).
t_lemma(node33_21, druzstvo).         const(druzstvo).
%%%%%%%% node33_22 %%%%%%%%%%%%%%%%%%%
node(node33_22).
deepord(node33_22, 10).         const(10).
functor(node33_22, RSTR).         const(RSTR).
gram_sempos(node33_22, adj_quant_def).         const(adj_quant_def).
id(node33_22, T_plzensky51278_txt_001_p5s4a13).         const(T_plzensky51278_txt_001_p5s4a13).
nodetype(node33_22, complex).         const(complex).
t_lemma(node33_22, pet).         const(pet).
%%%%%%%% node33_23 %%%%%%%%%%%%%%%%%%%
node(node33_23).
deepord(node33_23, x10_1).         const(x10_1).
a_ref_type(node33_23, tree).         const(tree).
a_afun(node33_23, Atr).         const(Atr).
m_form(node33_23, pate).         const(pate).
m_lemma(node33_23, paty).         const(paty).
m_tag(node33_23, CrNS1__________).         const(CrNS1__________).
w_token(node33_23, pate).         const(pate).
a_ord(node33_23, 12).         const(12).
a_parent_id(node33_23, a_plzensky51278_txt_001_p5s4W13).         const(a_plzensky51278_txt_001_p5s4W13).
hide(node33_23, hide).         const(hide).
%%%%%%%% node33_24 %%%%%%%%%%%%%%%%%%%
node(node33_24).
deepord(node33_24, x11_1).         const(x11_1).
a_ref_type(node33_24, tree).         const(tree).
a_afun(node33_24, Sb).         const(Sb).
m_form(node33_24, druzstvo).         const(druzstvo).
m_lemma(node33_24, druzstvo).         const(druzstvo).
m_tag(node33_24, NNNS1_____A____).         const(NNNS1_____A____).
w_token(node33_24, druzstvo).         const(druzstvo).
a_ord(node33_24, 13).         const(13).
a_parent_id(node33_24, a_plzensky51278_txt_001_p5s4W11).         const(a_plzensky51278_txt_001_p5s4W11).
hide(node33_24, hide).         const(hide).
%%%%%%%% node33_25 %%%%%%%%%%%%%%%%%%%
node(node33_25).
deepord(node33_25, 12).         const(12).
functor(node33_25, APP).         const(APP).
gram_sempos(node33_25, n_denot).         const(n_denot).
id(node33_25, T_plzensky51278_txt_001_p5s4a14).         const(T_plzensky51278_txt_001_p5s4a14).
nodetype(node33_25, complex).         const(complex).
t_lemma(node33_25, cislo).         const(cislo).
%%%%%%%% node33_26 %%%%%%%%%%%%%%%%%%%
node(node33_26).
deepord(node33_26, x12_1).         const(x12_1).
a_ref_type(node33_26, tree).         const(tree).
a_afun(node33_26, Atr).         const(Atr).
m_form(node33_26, c_).         const(c_).
m_lemma(node33_26, cislo__B).         const(cislo__B).
m_tag(node33_26, NNNXX_____A___8).         const(NNNXX_____A___8).
w_token(node33_26, c_).         const(c_).
a_ord(node33_26, 14).         const(14).
a_parent_id(node33_26, a_plzensky51278_txt_001_p5s4W13).         const(a_plzensky51278_txt_001_p5s4W13).
hide(node33_26, hide).         const(hide).
%%%%%%%% node33_27 %%%%%%%%%%%%%%%%%%%
node(node33_27).
deepord(node33_27, 13).         const(13).
functor(node33_27, RSTR).         const(RSTR).
gram_sempos(node33_27, adj_quant_def).         const(adj_quant_def).
id(node33_27, T_plzensky51278_txt_001_p5s4a15).         const(T_plzensky51278_txt_001_p5s4a15).
nodetype(node33_27, complex).         const(complex).
t_lemma(node33_27, 4).         const(4).
%%%%%%%% node33_28 %%%%%%%%%%%%%%%%%%%
node(node33_28).
deepord(node33_28, x13_1).         const(x13_1).
a_ref_type(node33_28, tree).         const(tree).
a_afun(node33_28, Atr).         const(Atr).
m_form(node33_28, 4).         const(4).
m_lemma(node33_28, 4).         const(4).
m_tag(node33_28, C=_____________).         const(C=_____________).
w_token(node33_28, 4).         const(4).
a_ord(node33_28, 15).         const(15).
a_parent_id(node33_28, a_plzensky51278_txt_001_p5s4W14).         const(a_plzensky51278_txt_001_p5s4W14).
hide(node33_28, hide).         const(hide).
%%%%%%%% node33_29 %%%%%%%%%%%%%%%%%%%
node(node33_29).
deepord(node33_29, 14).         const(14).
functor(node33_29, DIR1).         const(DIR1).
gram_sempos(node33_29, n_denot).         const(n_denot).
id(node33_29, T_plzensky51278_txt_001_p5s4a17).         const(T_plzensky51278_txt_001_p5s4a17).
nodetype(node33_29, complex).         const(complex).
subfunctor(node33_29, basic).         const(basic).
t_lemma(node33_29, gymnazium).         const(gymnazium).
%%%%%%%% node33_30 %%%%%%%%%%%%%%%%%%%
node(node33_30).
deepord(node33_30, x14_1).         const(x14_1).
a_ref_type(node33_30, tree).         const(tree).
a_afun(node33_30, AuxP).         const(AuxP).
m_form(node33_30, z).         const(z).
m_lemma(node33_30, z_1).         const(z_1).
m_tag(node33_30, RR__2__________).         const(RR__2__________).
w_token(node33_30, z).         const(z).
a_ord(node33_30, 16).         const(16).
a_parent_id(node33_30, a_plzensky51278_txt_001_p5s4W11).         const(a_plzensky51278_txt_001_p5s4W11).
hide(node33_30, hide).         const(hide).
%%%%%%%% node33_31 %%%%%%%%%%%%%%%%%%%
node(node33_31).
deepord(node33_31, x14_2).         const(x14_2).
a_ref_type(node33_31, tree).         const(tree).
a_afun(node33_31, Adv).         const(Adv).
m_form(node33_31, Gymnazia).         const(Gymnazia).
m_lemma(node33_31, gymnazium).         const(gymnazium).
m_tag(node33_31, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node33_31, Gymnazia).         const(Gymnazia).
a_ord(node33_31, 17).         const(17).
a_parent_id(node33_31, a_plzensky51278_txt_001_p5s4W16).         const(a_plzensky51278_txt_001_p5s4W16).
hide(node33_31, hide).         const(hide).
%%%%%%%% node33_32 %%%%%%%%%%%%%%%%%%%
node(node33_32).
deepord(node33_32, 16).         const(16).
functor(node33_32, LOC).         const(LOC).
gram_sempos(node33_32, n_denot).         const(n_denot).
id(node33_32, T_plzensky51278_txt_001_p5s4a19).         const(T_plzensky51278_txt_001_p5s4a19).
nodetype(node33_32, complex).         const(complex).
subfunctor(node33_32, basic).         const(basic).
t_lemma(node33_32, ulice).         const(ulice).
%%%%%%%% node33_33 %%%%%%%%%%%%%%%%%%%
node(node33_33).
deepord(node33_33, 15).         const(15).
functor(node33_33, RSTR).         const(RSTR).
gram_sempos(node33_33, adj_denot).         const(adj_denot).
id(node33_33, T_plzensky51278_txt_001_p5s4a20).         const(T_plzensky51278_txt_001_p5s4a20).
nodetype(node33_33, complex).         const(complex).
t_lemma(node33_33, opavsky).         const(opavsky).
%%%%%%%% node33_34 %%%%%%%%%%%%%%%%%%%
node(node33_34).
deepord(node33_34, x15_1).         const(x15_1).
a_ref_type(node33_34, tree).         const(tree).
a_afun(node33_34, Atr).         const(Atr).
m_form(node33_34, Opavske).         const(Opavske).
m_lemma(node33_34, opavsky).         const(opavsky).
m_tag(node33_34, AAFS6____1A____).         const(AAFS6____1A____).
w_token(node33_34, Opavske).         const(Opavske).
a_ord(node33_34, 19).         const(19).
a_parent_id(node33_34, a_plzensky51278_txt_001_p5s4W20).         const(a_plzensky51278_txt_001_p5s4W20).
hide(node33_34, hide).         const(hide).
%%%%%%%% node33_35 %%%%%%%%%%%%%%%%%%%
node(node33_35).
deepord(node33_35, x16_1).         const(x16_1).
a_ref_type(node33_35, tree).         const(tree).
a_afun(node33_35, AuxP).         const(AuxP).
m_form(node33_35, v).         const(v).
m_lemma(node33_35, v_1).         const(v_1).
m_tag(node33_35, RR__6__________).         const(RR__6__________).
w_token(node33_35, v).         const(v).
a_ord(node33_35, 18).         const(18).
a_parent_id(node33_35, a_plzensky51278_txt_001_p5s4W4).         const(a_plzensky51278_txt_001_p5s4W4).
hide(node33_35, hide).         const(hide).
%%%%%%%% node33_36 %%%%%%%%%%%%%%%%%%%
node(node33_36).
deepord(node33_36, x16_2).         const(x16_2).
a_ref_type(node33_36, tree).         const(tree).
a_afun(node33_36, Adv).         const(Adv).
m_form(node33_36, ulici).         const(ulici).
m_lemma(node33_36, ulice).         const(ulice).
m_tag(node33_36, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node33_36, ulici).         const(ulici).
a_ord(node33_36, 20).         const(20).
a_parent_id(node33_36, a_plzensky51278_txt_001_p5s4W18).         const(a_plzensky51278_txt_001_p5s4W18).
hide(node33_36, hide).         const(hide).
%%%%%%%% node33_37 %%%%%%%%%%%%%%%%%%%
node(node33_37).
deepord(node33_37, 17).         const(17).
functor(node33_37, LOC).         const(LOC).
gram_sempos(node33_37, n_denot).         const(n_denot).
id(node33_37, T_plzensky51278_txt_001_p5s4a22).         const(T_plzensky51278_txt_001_p5s4a22).
nodetype(node33_37, complex).         const(complex).
subfunctor(node33_37, basic).         const(basic).
t_lemma(node33_37, Plzen).         const(Plzen).
%%%%%%%% node33_38 %%%%%%%%%%%%%%%%%%%
node(node33_38).
deepord(node33_38, x17_1).         const(x17_1).
a_ref_type(node33_38, tree).         const(tree).
a_afun(node33_38, AuxP).         const(AuxP).
m_form(node33_38, v).         const(v).
m_lemma(node33_38, v_1).         const(v_1).
m_tag(node33_38, RR__6__________).         const(RR__6__________).
w_token(node33_38, v).         const(v).
a_ord(node33_38, 21).         const(21).
a_parent_id(node33_38, a_plzensky51278_txt_001_p5s4W20).         const(a_plzensky51278_txt_001_p5s4W20).
hide(node33_38, hide).         const(hide).
%%%%%%%% node33_39 %%%%%%%%%%%%%%%%%%%
node(node33_39).
deepord(node33_39, x17_2).         const(x17_2).
a_ref_type(node33_39, tree).         const(tree).
a_afun(node33_39, Atr).         const(Atr).
m_form(node33_39, Plzni).         const(Plzni).
m_lemma(node33_39, Plzen__G).         const(Plzen__G).
m_tag(node33_39, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node33_39, Plzni).         const(Plzni).
w_no_space_after(node33_39, 1).         const(1).
a_ord(node33_39, 22).         const(22).
a_parent_id(node33_39, a_plzensky51278_txt_001_p5s4W21).         const(a_plzensky51278_txt_001_p5s4W21).
hide(node33_39, hide).         const(hide).
edge(node33_0, node33_1).
edge(node33_1, node33_2).
edge(node33_2, node33_3).
edge(node33_3, node33_4).
edge(node33_2, node33_5).
edge(node33_2, node33_6).
edge(node33_1, node33_7).
edge(node33_1, node33_8).
edge(node33_8, node33_9).
edge(node33_9, node33_10).
edge(node33_8, node33_11).
edge(node33_11, node33_12).
edge(node33_11, node33_13).
edge(node33_13, node33_14).
edge(node33_11, node33_15).
edge(node33_15, node33_16).
edge(node33_16, node33_17).
edge(node33_15, node33_18).
edge(node33_15, node33_19).
edge(node33_8, node33_20).
edge(node33_8, node33_21).
edge(node33_21, node33_22).
edge(node33_22, node33_23).
edge(node33_21, node33_24).
edge(node33_21, node33_25).
edge(node33_25, node33_26).
edge(node33_25, node33_27).
edge(node33_27, node33_28).
edge(node33_8, node33_29).
edge(node33_29, node33_30).
edge(node33_29, node33_31).
edge(node33_1, node33_32).
edge(node33_32, node33_33).
edge(node33_33, node33_34).
edge(node33_32, node33_35).
edge(node33_32, node33_36).
edge(node33_32, node33_37).
edge(node33_37, node33_38).
edge(node33_37, node33_39).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Souteze se zucastnilo 15 druzstev. 
tree_root(node34_0).
:- valid_root(node34_0).
%%%%%%%% node34_0 %%%%%%%%%%%%%%%%%%%
node(node34_0).
atree_rf(node34_0, a_a_plzensky51278_txt_001_p5s5).         const(a_a_plzensky51278_txt_001_p5s5).
deepord(node34_0, 0).         const(0).
id(node34_0, T_plzensky51278_txt_001_p5s5).         const(T_plzensky51278_txt_001_p5s5).
nodetype(node34_0, root).         const(root).
sentence(node34_0, Souteze_se_zucastnilo_15_druzstev__).         const(Souteze_se_zucastnilo_15_druzstev__).
%%%%%%%% node34_1 %%%%%%%%%%%%%%%%%%%
node(node34_1).
deepord(node34_1, 3).         const(3).
functor(node34_1, PRED).         const(PRED).
gram_sempos(node34_1, v).         const(v).
id(node34_1, T_plzensky51278_txt_001_p5s5a1).         const(T_plzensky51278_txt_001_p5s5a1).
nodetype(node34_1, complex).         const(complex).
t_lemma(node34_1, zucastnit_se).         const(zucastnit_se).
val_frame_rf(node34_1, v_v_w9930f1).         const(v_v_w9930f1).
%%%%%%%% node34_2 %%%%%%%%%%%%%%%%%%%
node(node34_2).
deepord(node34_2, 1).         const(1).
functor(node34_2, ACT).         const(ACT).
gram_sempos(node34_2, n_pron_def_pers).         const(n_pron_def_pers).
id(node34_2, T_plzensky51278_txt_001_p5s5a6).         const(T_plzensky51278_txt_001_p5s5a6).
is_generated(node34_2, 1).         const(1).
nodetype(node34_2, complex).         const(complex).
t_lemma(node34_2, x_PersPron).         const(x_PersPron).
%%%%%%%% node34_3 %%%%%%%%%%%%%%%%%%%
node(node34_3).
deepord(node34_3, 2).         const(2).
functor(node34_3, PAT).         const(PAT).
gram_sempos(node34_3, n_denot).         const(n_denot).
id(node34_3, T_plzensky51278_txt_001_p5s5a2).         const(T_plzensky51278_txt_001_p5s5a2).
nodetype(node34_3, complex).         const(complex).
t_lemma(node34_3, soutez).         const(soutez).
%%%%%%%% node34_4 %%%%%%%%%%%%%%%%%%%
node(node34_4).
deepord(node34_4, x2_1).         const(x2_1).
a_ref_type(node34_4, tree).         const(tree).
a_afun(node34_4, Obj).         const(Obj).
m_form(node34_4, Souteze).         const(Souteze).
m_lemma(node34_4, soutez).         const(soutez).
m_tag(node34_4, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node34_4, Souteze).         const(Souteze).
a_ord(node34_4, 1).         const(1).
a_parent_id(node34_4, a_plzensky51278_txt_001_p5s5W3).         const(a_plzensky51278_txt_001_p5s5W3).
hide(node34_4, hide).         const(hide).
%%%%%%%% node34_5 %%%%%%%%%%%%%%%%%%%
node(node34_5).
deepord(node34_5, x3_1).         const(x3_1).
a_ref_type(node34_5, tree).         const(tree).
a_afun(node34_5, AuxT).         const(AuxT).
m_form(node34_5, se).         const(se).
m_lemma(node34_5, se___zvr__zajmeno_castice_).         const(se___zvr__zajmeno_castice_).
m_tag(node34_5, P7_X4__________).         const(P7_X4__________).
w_token(node34_5, se).         const(se).
a_ord(node34_5, 2).         const(2).
a_parent_id(node34_5, a_plzensky51278_txt_001_p5s5W3).         const(a_plzensky51278_txt_001_p5s5W3).
hide(node34_5, hide).         const(hide).
%%%%%%%% node34_6 %%%%%%%%%%%%%%%%%%%
node(node34_6).
deepord(node34_6, x3_2).         const(x3_2).
a_ref_type(node34_6, tree).         const(tree).
a_afun(node34_6, Pred).         const(Pred).
m_form(node34_6, zucastnilo).         const(zucastnilo).
m_lemma(node34_6, zucastnit__W).         const(zucastnit__W).
m_tag(node34_6, VpNS___XR_AA___).         const(VpNS___XR_AA___).
w_token(node34_6, zucastnilo).         const(zucastnilo).
a_ord(node34_6, 3).         const(3).
a_parent_id(node34_6, a_plzensky51278_txt_001_p5s5).         const(a_plzensky51278_txt_001_p5s5).
hide(node34_6, hide).         const(hide).
%%%%%%%% node34_7 %%%%%%%%%%%%%%%%%%%
node(node34_7).
deepord(node34_7, 5).         const(5).
functor(node34_7, PAT).         const(PAT).
gram_sempos(node34_7, n_denot).         const(n_denot).
id(node34_7, T_plzensky51278_txt_001_p5s5a5).         const(T_plzensky51278_txt_001_p5s5a5).
nodetype(node34_7, complex).         const(complex).
t_lemma(node34_7, druzstvo).         const(druzstvo).
%%%%%%%% node34_8 %%%%%%%%%%%%%%%%%%%
node(node34_8).
deepord(node34_8, 4).         const(4).
functor(node34_8, RSTR).         const(RSTR).
gram_sempos(node34_8, adj_quant_def).         const(adj_quant_def).
id(node34_8, T_plzensky51278_txt_001_p5s5a4).         const(T_plzensky51278_txt_001_p5s5a4).
nodetype(node34_8, complex).         const(complex).
t_lemma(node34_8, 15).         const(15).
%%%%%%%% node34_9 %%%%%%%%%%%%%%%%%%%
node(node34_9).
deepord(node34_9, x4_1).         const(x4_1).
a_ref_type(node34_9, tree).         const(tree).
a_afun(node34_9, Obj).         const(Obj).
m_form(node34_9, 15).         const(15).
m_lemma(node34_9, 15).         const(15).
m_tag(node34_9, C=_____________).         const(C=_____________).
w_token(node34_9, 15).         const(15).
a_ord(node34_9, 4).         const(4).
a_parent_id(node34_9, a_plzensky51278_txt_001_p5s5W3).         const(a_plzensky51278_txt_001_p5s5W3).
hide(node34_9, hide).         const(hide).
%%%%%%%% node34_10 %%%%%%%%%%%%%%%%%%%
node(node34_10).
deepord(node34_10, x5_1).         const(x5_1).
a_ref_type(node34_10, tree).         const(tree).
a_afun(node34_10, Atr).         const(Atr).
m_form(node34_10, druzstev).         const(druzstev).
m_lemma(node34_10, druzstvo).         const(druzstvo).
m_tag(node34_10, NNNP2_____A____).         const(NNNP2_____A____).
w_token(node34_10, druzstev).         const(druzstev).
w_no_space_after(node34_10, 1).         const(1).
a_ord(node34_10, 5).         const(5).
a_parent_id(node34_10, a_plzensky51278_txt_001_p5s5W4).         const(a_plzensky51278_txt_001_p5s5W4).
hide(node34_10, hide).         const(hide).
edge(node34_0, node34_1).
edge(node34_1, node34_2).
edge(node34_1, node34_3).
edge(node34_3, node34_4).
edge(node34_1, node34_5).
edge(node34_1, node34_6).
edge(node34_1, node34_7).
edge(node34_7, node34_8).
edge(node34_8, node34_9).
edge(node34_7, node34_10).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Vyhodnoceni byli take nejlepsi jednotlivci s nejvyssim poctem dosazenych bodu ve znalostnim testu. 
tree_root(node35_0).
:- valid_root(node35_0).
%%%%%%%% node35_0 %%%%%%%%%%%%%%%%%%%
node(node35_0).
atree_rf(node35_0, a_a_plzensky51278_txt_001_p5s6).         const(a_a_plzensky51278_txt_001_p5s6).
deepord(node35_0, 0).         const(0).
id(node35_0, T_plzensky51278_txt_001_p5s6).         const(T_plzensky51278_txt_001_p5s6).
nodetype(node35_0, root).         const(root).
sentence(node35_0, Vyhodnoceni_byli_take_nejlepsi_jednotlivci_s_nejvyssim_poctem_dosazenych_bodu_ve_znalostnim_testu__).         const(Vyhodnoceni_byli_take_nejlepsi_jednotlivci_s_nejvyssim_poctem_dosazenych_bodu_ve_znalostnim_testu__).
%%%%%%%% node35_1 %%%%%%%%%%%%%%%%%%%
node(node35_1).
deepord(node35_1, 2).         const(2).
functor(node35_1, PRED).         const(PRED).
gram_sempos(node35_1, v).         const(v).
id(node35_1, T_plzensky51278_txt_001_p5s6a2).         const(T_plzensky51278_txt_001_p5s6a2).
nodetype(node35_1, complex).         const(complex).
t_lemma(node35_1, vyhodnotit).         const(vyhodnotit).
val_frame_rf(node35_1, v_v_w7911f1).         const(v_v_w7911f1).
%%%%%%%% node35_2 %%%%%%%%%%%%%%%%%%%
node(node35_2).
deepord(node35_2, 1).         const(1).
functor(node35_2, PAT).         const(PAT).
gram_sempos(node35_2, n_pron_def_pers).         const(n_pron_def_pers).
id(node35_2, T_plzensky51278_txt_001_p5s6a14).         const(T_plzensky51278_txt_001_p5s6a14).
is_generated(node35_2, 1).         const(1).
nodetype(node35_2, complex).         const(complex).
t_lemma(node35_2, x_PersPron).         const(x_PersPron).
%%%%%%%% node35_3 %%%%%%%%%%%%%%%%%%%
node(node35_3).
deepord(node35_3, x2_1).         const(x2_1).
a_ref_type(node35_3, tree).         const(tree).
a_afun(node35_3, Pnom).         const(Pnom).
m_form(node35_3, Vyhodnoceni).         const(Vyhodnoceni).
m_lemma(node35_3, vyhodnotit__W).         const(vyhodnotit__W).
m_tag(node35_3, VsMP___XX_AP___).         const(VsMP___XX_AP___).
w_token(node35_3, Vyhodnoceni).         const(Vyhodnoceni).
a_ord(node35_3, 1).         const(1).
a_parent_id(node35_3, a_plzensky51278_txt_001_p5s6W2).         const(a_plzensky51278_txt_001_p5s6W2).
hide(node35_3, hide).         const(hide).
%%%%%%%% node35_4 %%%%%%%%%%%%%%%%%%%
node(node35_4).
deepord(node35_4, x2_2).         const(x2_2).
a_ref_type(node35_4, tree).         const(tree).
a_afun(node35_4, Pred).         const(Pred).
m_form(node35_4, byli).         const(byli).
m_lemma(node35_4, byt).         const(byt).
m_tag(node35_4, VpMP___XR_AA___).         const(VpMP___XR_AA___).
w_token(node35_4, byli).         const(byli).
a_ord(node35_4, 2).         const(2).
a_parent_id(node35_4, a_plzensky51278_txt_001_p5s6).         const(a_plzensky51278_txt_001_p5s6).
hide(node35_4, hide).         const(hide).
%%%%%%%% node35_5 %%%%%%%%%%%%%%%%%%%
node(node35_5).
deepord(node35_5, 3).         const(3).
functor(node35_5, RHEM).         const(RHEM).
id(node35_5, T_plzensky51278_txt_001_p5s6a3).         const(T_plzensky51278_txt_001_p5s6a3).
nodetype(node35_5, atom).         const(atom).
t_lemma(node35_5, take).         const(take).
%%%%%%%% node35_6 %%%%%%%%%%%%%%%%%%%
node(node35_6).
deepord(node35_6, x3_1).         const(x3_1).
a_ref_type(node35_6, tree).         const(tree).
a_afun(node35_6, Adv).         const(Adv).
m_form(node35_6, take).         const(take).
m_lemma(node35_6, take___rovnez_).         const(take___rovnez_).
m_tag(node35_6, Db_____________).         const(Db_____________).
w_token(node35_6, take).         const(take).
a_ord(node35_6, 3).         const(3).
a_parent_id(node35_6, a_plzensky51278_txt_001_p5s6W2).         const(a_plzensky51278_txt_001_p5s6W2).
hide(node35_6, hide).         const(hide).
%%%%%%%% node35_7 %%%%%%%%%%%%%%%%%%%
node(node35_7).
deepord(node35_7, 5).         const(5).
functor(node35_7, ACT).         const(ACT).
gram_sempos(node35_7, n_denot).         const(n_denot).
id(node35_7, T_plzensky51278_txt_001_p5s6a4).         const(T_plzensky51278_txt_001_p5s6a4).
nodetype(node35_7, complex).         const(complex).
t_lemma(node35_7, jednotlivec).         const(jednotlivec).
%%%%%%%% node35_8 %%%%%%%%%%%%%%%%%%%
node(node35_8).
deepord(node35_8, 4).         const(4).
functor(node35_8, RSTR).         const(RSTR).
gram_sempos(node35_8, adj_denot).         const(adj_denot).
id(node35_8, T_plzensky51278_txt_001_p5s6a5).         const(T_plzensky51278_txt_001_p5s6a5).
nodetype(node35_8, complex).         const(complex).
t_lemma(node35_8, dobry).         const(dobry).
%%%%%%%% node35_9 %%%%%%%%%%%%%%%%%%%
node(node35_9).
deepord(node35_9, x4_1).         const(x4_1).
a_ref_type(node35_9, tree).         const(tree).
a_afun(node35_9, Atr).         const(Atr).
m_form(node35_9, nejlepsi).         const(nejlepsi).
m_lemma(node35_9, dobry).         const(dobry).
m_tag(node35_9, AAMP1____3A____).         const(AAMP1____3A____).
w_token(node35_9, nejlepsi).         const(nejlepsi).
a_ord(node35_9, 4).         const(4).
a_parent_id(node35_9, a_plzensky51278_txt_001_p5s6W5).         const(a_plzensky51278_txt_001_p5s6W5).
hide(node35_9, hide).         const(hide).
%%%%%%%% node35_10 %%%%%%%%%%%%%%%%%%%
node(node35_10).
deepord(node35_10, x5_1).         const(x5_1).
a_ref_type(node35_10, tree).         const(tree).
a_afun(node35_10, Sb).         const(Sb).
m_form(node35_10, jednotlivci).         const(jednotlivci).
m_lemma(node35_10, jednotlivec).         const(jednotlivec).
m_tag(node35_10, NNMP1_____A____).         const(NNMP1_____A____).
w_token(node35_10, jednotlivci).         const(jednotlivci).
a_ord(node35_10, 5).         const(5).
a_parent_id(node35_10, a_plzensky51278_txt_001_p5s6W2).         const(a_plzensky51278_txt_001_p5s6W2).
hide(node35_10, hide).         const(hide).
%%%%%%%% node35_11 %%%%%%%%%%%%%%%%%%%
node(node35_11).
deepord(node35_11, 7).         const(7).
functor(node35_11, ACMP).         const(ACMP).
gram_sempos(node35_11, n_denot).         const(n_denot).
id(node35_11, T_plzensky51278_txt_001_p5s6a7).         const(T_plzensky51278_txt_001_p5s6a7).
nodetype(node35_11, complex).         const(complex).
subfunctor(node35_11, basic).         const(basic).
t_lemma(node35_11, pocet).         const(pocet).
%%%%%%%% node35_12 %%%%%%%%%%%%%%%%%%%
node(node35_12).
deepord(node35_12, 6).         const(6).
functor(node35_12, RSTR).         const(RSTR).
gram_sempos(node35_12, adj_denot).         const(adj_denot).
id(node35_12, T_plzensky51278_txt_001_p5s6a8).         const(T_plzensky51278_txt_001_p5s6a8).
nodetype(node35_12, complex).         const(complex).
t_lemma(node35_12, vysoky).         const(vysoky).
%%%%%%%% node35_13 %%%%%%%%%%%%%%%%%%%
node(node35_13).
deepord(node35_13, x6_1).         const(x6_1).
a_ref_type(node35_13, tree).         const(tree).
a_afun(node35_13, Atr).         const(Atr).
m_form(node35_13, nejvyssim).         const(nejvyssim).
m_lemma(node35_13, vysoky).         const(vysoky).
m_tag(node35_13, AAIS7____3A____).         const(AAIS7____3A____).
w_token(node35_13, nejvyssim).         const(nejvyssim).
a_ord(node35_13, 7).         const(7).
a_parent_id(node35_13, a_plzensky51278_txt_001_p5s6W8).         const(a_plzensky51278_txt_001_p5s6W8).
hide(node35_13, hide).         const(hide).
%%%%%%%% node35_14 %%%%%%%%%%%%%%%%%%%
node(node35_14).
deepord(node35_14, x7_1).         const(x7_1).
a_ref_type(node35_14, tree).         const(tree).
a_afun(node35_14, AuxP).         const(AuxP).
m_form(node35_14, s).         const(s).
m_lemma(node35_14, s_1).         const(s_1).
m_tag(node35_14, RR__7__________).         const(RR__7__________).
w_token(node35_14, s).         const(s).
a_ord(node35_14, 6).         const(6).
a_parent_id(node35_14, a_plzensky51278_txt_001_p5s6W5).         const(a_plzensky51278_txt_001_p5s6W5).
hide(node35_14, hide).         const(hide).
%%%%%%%% node35_15 %%%%%%%%%%%%%%%%%%%
node(node35_15).
deepord(node35_15, x7_2).         const(x7_2).
a_ref_type(node35_15, tree).         const(tree).
a_afun(node35_15, Atr).         const(Atr).
m_form(node35_15, poctem).         const(poctem).
m_lemma(node35_15, pocet).         const(pocet).
m_tag(node35_15, NNIS7_____A____).         const(NNIS7_____A____).
w_token(node35_15, poctem).         const(poctem).
a_ord(node35_15, 8).         const(8).
a_parent_id(node35_15, a_plzensky51278_txt_001_p5s6W6).         const(a_plzensky51278_txt_001_p5s6W6).
hide(node35_15, hide).         const(hide).
%%%%%%%% node35_16 %%%%%%%%%%%%%%%%%%%
node(node35_16).
deepord(node35_16, 9).         const(9).
functor(node35_16, MAT).         const(MAT).
gram_sempos(node35_16, n_denot).         const(n_denot).
id(node35_16, T_plzensky51278_txt_001_p5s6a9).         const(T_plzensky51278_txt_001_p5s6a9).
nodetype(node35_16, complex).         const(complex).
t_lemma(node35_16, bod).         const(bod).
%%%%%%%% node35_17 %%%%%%%%%%%%%%%%%%%
node(node35_17).
deepord(node35_17, 8).         const(8).
functor(node35_17, RSTR).         const(RSTR).
gram_sempos(node35_17, adj_denot).         const(adj_denot).
id(node35_17, T_plzensky51278_txt_001_p5s6a10).         const(T_plzensky51278_txt_001_p5s6a10).
nodetype(node35_17, complex).         const(complex).
t_lemma(node35_17, dosazeny).         const(dosazeny).
%%%%%%%% node35_18 %%%%%%%%%%%%%%%%%%%
node(node35_18).
deepord(node35_18, x8_1).         const(x8_1).
a_ref_type(node35_18, tree).         const(tree).
a_afun(node35_18, Atr).         const(Atr).
m_form(node35_18, dosazenych).         const(dosazenych).
m_lemma(node35_18, dosazeny____5ahnout_).         const(dosazeny____5ahnout_).
m_tag(node35_18, AAIP2____1A____).         const(AAIP2____1A____).
w_token(node35_18, dosazenych).         const(dosazenych).
a_ord(node35_18, 9).         const(9).
a_parent_id(node35_18, a_plzensky51278_txt_001_p5s6W10).         const(a_plzensky51278_txt_001_p5s6W10).
hide(node35_18, hide).         const(hide).
%%%%%%%% node35_19 %%%%%%%%%%%%%%%%%%%
node(node35_19).
deepord(node35_19, x9_1).         const(x9_1).
a_ref_type(node35_19, tree).         const(tree).
a_afun(node35_19, Atr).         const(Atr).
m_form(node35_19, bodu).         const(bodu).
m_lemma(node35_19, bod).         const(bod).
m_tag(node35_19, NNIP2_____A____).         const(NNIP2_____A____).
w_token(node35_19, bodu).         const(bodu).
a_ord(node35_19, 10).         const(10).
a_parent_id(node35_19, a_plzensky51278_txt_001_p5s6W8).         const(a_plzensky51278_txt_001_p5s6W8).
hide(node35_19, hide).         const(hide).
%%%%%%%% node35_20 %%%%%%%%%%%%%%%%%%%
node(node35_20).
deepord(node35_20, 11).         const(11).
functor(node35_20, LOC).         const(LOC).
gram_sempos(node35_20, n_denot).         const(n_denot).
id(node35_20, T_plzensky51278_txt_001_p5s6a12).         const(T_plzensky51278_txt_001_p5s6a12).
nodetype(node35_20, complex).         const(complex).
subfunctor(node35_20, basic).         const(basic).
t_lemma(node35_20, test).         const(test).
%%%%%%%% node35_21 %%%%%%%%%%%%%%%%%%%
node(node35_21).
deepord(node35_21, 10).         const(10).
functor(node35_21, RSTR).         const(RSTR).
gram_sempos(node35_21, adj_denot).         const(adj_denot).
id(node35_21, T_plzensky51278_txt_001_p5s6a13).         const(T_plzensky51278_txt_001_p5s6a13).
nodetype(node35_21, complex).         const(complex).
t_lemma(node35_21, znalostni).         const(znalostni).
%%%%%%%% node35_22 %%%%%%%%%%%%%%%%%%%
node(node35_22).
deepord(node35_22, x10_1).         const(x10_1).
a_ref_type(node35_22, tree).         const(tree).
a_afun(node35_22, Atr).         const(Atr).
m_form(node35_22, znalostnim).         const(znalostnim).
m_lemma(node35_22, znalostni).         const(znalostni).
m_tag(node35_22, AAIS6____1A____).         const(AAIS6____1A____).
w_token(node35_22, znalostnim).         const(znalostnim).
a_ord(node35_22, 12).         const(12).
a_parent_id(node35_22, a_plzensky51278_txt_001_p5s6W13).         const(a_plzensky51278_txt_001_p5s6W13).
hide(node35_22, hide).         const(hide).
%%%%%%%% node35_23 %%%%%%%%%%%%%%%%%%%
node(node35_23).
deepord(node35_23, x11_1).         const(x11_1).
a_ref_type(node35_23, tree).         const(tree).
a_afun(node35_23, AuxP).         const(AuxP).
m_form(node35_23, ve).         const(ve).
m_lemma(node35_23, v_1).         const(v_1).
m_tag(node35_23, RV__6__________).         const(RV__6__________).
w_token(node35_23, ve).         const(ve).
a_ord(node35_23, 11).         const(11).
a_parent_id(node35_23, a_plzensky51278_txt_001_p5s6W2).         const(a_plzensky51278_txt_001_p5s6W2).
hide(node35_23, hide).         const(hide).
%%%%%%%% node35_24 %%%%%%%%%%%%%%%%%%%
node(node35_24).
deepord(node35_24, x11_2).         const(x11_2).
a_ref_type(node35_24, tree).         const(tree).
a_afun(node35_24, Adv).         const(Adv).
m_form(node35_24, testu).         const(testu).
m_lemma(node35_24, test).         const(test).
m_tag(node35_24, NNIS6_____A____).         const(NNIS6_____A____).
w_token(node35_24, testu).         const(testu).
w_no_space_after(node35_24, 1).         const(1).
a_ord(node35_24, 13).         const(13).
a_parent_id(node35_24, a_plzensky51278_txt_001_p5s6W11).         const(a_plzensky51278_txt_001_p5s6W11).
hide(node35_24, hide).         const(hide).
edge(node35_0, node35_1).
edge(node35_1, node35_2).
edge(node35_1, node35_3).
edge(node35_1, node35_4).
edge(node35_1, node35_5).
edge(node35_5, node35_6).
edge(node35_1, node35_7).
edge(node35_7, node35_8).
edge(node35_8, node35_9).
edge(node35_7, node35_10).
edge(node35_7, node35_11).
edge(node35_11, node35_12).
edge(node35_12, node35_13).
edge(node35_11, node35_14).
edge(node35_11, node35_15).
edge(node35_11, node35_16).
edge(node35_16, node35_17).
edge(node35_17, node35_18).
edge(node35_16, node35_19).
edge(node35_1, node35_20).
edge(node35_20, node35_21).
edge(node35_21, node35_22).
edge(node35_20, node35_23).
edge(node35_20, node35_24).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Z ucastniku z prvniho stupne zakladnich skol dosahla jako jedina nejvyssiho poctu bodu, deset, Diana Rehackova z druzstva c. 11 z 11. 
tree_root(node36_0).
:- valid_root(node36_0).
%%%%%%%% node36_0 %%%%%%%%%%%%%%%%%%%
node(node36_0).
atree_rf(node36_0, a_a_plzensky51278_txt_001_p5s7).         const(a_a_plzensky51278_txt_001_p5s7).
deepord(node36_0, 0).         const(0).
id(node36_0, T_plzensky51278_txt_001_p5s7).         const(T_plzensky51278_txt_001_p5s7).
nodetype(node36_0, root).         const(root).
sentence(node36_0, Z_ucastniku_z_prvniho_stupne_zakladnich_skol_dosahla_jako_jedina_nejvyssiho_poctu_bodu__deset__Diana_Rehackova_z_druzstva_c__11_z_11__).         const(Z_ucastniku_z_prvniho_stupne_zakladnich_skol_dosahla_jako_jedina_nejvyssiho_poctu_bodu__deset__Diana_Rehackova_z_druzstva_c__11_z_11__).
%%%%%%%% node36_1 %%%%%%%%%%%%%%%%%%%
node(node36_1).
deepord(node36_1, 8).         const(8).
functor(node36_1, PRED).         const(PRED).
gram_sempos(node36_1, v).         const(v).
id(node36_1, T_plzensky51278_txt_001_p5s7a1).         const(T_plzensky51278_txt_001_p5s7a1).
nodetype(node36_1, complex).         const(complex).
t_lemma(node36_1, dosahnout).         const(dosahnout).
val_frame_rf(node36_1, v_v_w714f1).         const(v_v_w714f1).
%%%%%%%% node36_2 %%%%%%%%%%%%%%%%%%%
node(node36_2).
deepord(node36_2, 1).         const(1).
functor(node36_2, PAT).         const(PAT).
id(node36_2, T_plzensky51278_txt_001_p5s7a26).         const(T_plzensky51278_txt_001_p5s7a26).
is_generated(node36_2, 1).         const(1).
nodetype(node36_2, qcomplex).         const(qcomplex).
t_lemma(node36_2, x_Gen).         const(x_Gen).
%%%%%%%% node36_3 %%%%%%%%%%%%%%%%%%%
node(node36_3).
deepord(node36_3, 2).         const(2).
functor(node36_3, ACT).         const(ACT).
gram_sempos(node36_3, n_pron_def_pers).         const(n_pron_def_pers).
id(node36_3, T_plzensky51278_txt_001_p5s7a25).         const(T_plzensky51278_txt_001_p5s7a25).
is_generated(node36_3, 1).         const(1).
nodetype(node36_3, complex).         const(complex).
t_lemma(node36_3, x_PersPron).         const(x_PersPron).
%%%%%%%% node36_4 %%%%%%%%%%%%%%%%%%%
node(node36_4).
deepord(node36_4, 3).         const(3).
functor(node36_4, DIR1).         const(DIR1).
gram_sempos(node36_4, n_denot).         const(n_denot).
id(node36_4, T_plzensky51278_txt_001_p5s7a3).         const(T_plzensky51278_txt_001_p5s7a3).
nodetype(node36_4, complex).         const(complex).
subfunctor(node36_4, basic).         const(basic).
t_lemma(node36_4, ucastnik).         const(ucastnik).
%%%%%%%% node36_5 %%%%%%%%%%%%%%%%%%%
node(node36_5).
deepord(node36_5, x3_1).         const(x3_1).
a_ref_type(node36_5, tree).         const(tree).
a_afun(node36_5, AuxP).         const(AuxP).
m_form(node36_5, Z).         const(Z).
m_lemma(node36_5, z_1).         const(z_1).
m_tag(node36_5, RR__2__________).         const(RR__2__________).
w_token(node36_5, Z).         const(Z).
a_ord(node36_5, 1).         const(1).
a_parent_id(node36_5, a_plzensky51278_txt_001_p5s7W8).         const(a_plzensky51278_txt_001_p5s7W8).
hide(node36_5, hide).         const(hide).
%%%%%%%% node36_6 %%%%%%%%%%%%%%%%%%%
node(node36_6).
deepord(node36_6, x3_2).         const(x3_2).
a_ref_type(node36_6, tree).         const(tree).
a_afun(node36_6, Adv).         const(Adv).
m_form(node36_6, ucastniku).         const(ucastniku).
m_lemma(node36_6, ucastnik).         const(ucastnik).
m_tag(node36_6, NNMP2_____A____).         const(NNMP2_____A____).
w_token(node36_6, ucastniku).         const(ucastniku).
a_ord(node36_6, 2).         const(2).
a_parent_id(node36_6, a_plzensky51278_txt_001_p5s7W1).         const(a_plzensky51278_txt_001_p5s7W1).
hide(node36_6, hide).         const(hide).
%%%%%%%% node36_7 %%%%%%%%%%%%%%%%%%%
node(node36_7).
deepord(node36_7, 5).         const(5).
functor(node36_7, DIR1).         const(DIR1).
gram_sempos(node36_7, n_denot).         const(n_denot).
id(node36_7, T_plzensky51278_txt_001_p5s7a5).         const(T_plzensky51278_txt_001_p5s7a5).
nodetype(node36_7, complex).         const(complex).
subfunctor(node36_7, basic).         const(basic).
t_lemma(node36_7, stupen).         const(stupen).
%%%%%%%% node36_8 %%%%%%%%%%%%%%%%%%%
node(node36_8).
deepord(node36_8, 4).         const(4).
functor(node36_8, RSTR).         const(RSTR).
gram_sempos(node36_8, adj_quant_def).         const(adj_quant_def).
id(node36_8, T_plzensky51278_txt_001_p5s7a6).         const(T_plzensky51278_txt_001_p5s7a6).
nodetype(node36_8, complex).         const(complex).
t_lemma(node36_8, jeden).         const(jeden).
%%%%%%%% node36_9 %%%%%%%%%%%%%%%%%%%
node(node36_9).
deepord(node36_9, x4_1).         const(x4_1).
a_ref_type(node36_9, tree).         const(tree).
a_afun(node36_9, Atr).         const(Atr).
m_form(node36_9, prvniho).         const(prvniho).
m_lemma(node36_9, prvni).         const(prvni).
m_tag(node36_9, CrIS2__________).         const(CrIS2__________).
w_token(node36_9, prvniho).         const(prvniho).
a_ord(node36_9, 4).         const(4).
a_parent_id(node36_9, a_plzensky51278_txt_001_p5s7W5).         const(a_plzensky51278_txt_001_p5s7W5).
hide(node36_9, hide).         const(hide).
%%%%%%%% node36_10 %%%%%%%%%%%%%%%%%%%
node(node36_10).
deepord(node36_10, x5_1).         const(x5_1).
a_ref_type(node36_10, tree).         const(tree).
a_afun(node36_10, AuxP).         const(AuxP).
m_form(node36_10, z).         const(z).
m_lemma(node36_10, z_1).         const(z_1).
m_tag(node36_10, RR__2__________).         const(RR__2__________).
w_token(node36_10, z).         const(z).
a_ord(node36_10, 3).         const(3).
a_parent_id(node36_10, a_plzensky51278_txt_001_p5s7W2).         const(a_plzensky51278_txt_001_p5s7W2).
hide(node36_10, hide).         const(hide).
%%%%%%%% node36_11 %%%%%%%%%%%%%%%%%%%
node(node36_11).
deepord(node36_11, x5_2).         const(x5_2).
a_ref_type(node36_11, tree).         const(tree).
a_afun(node36_11, Atr).         const(Atr).
m_form(node36_11, stupne).         const(stupne).
m_lemma(node36_11, stupen).         const(stupen).
m_tag(node36_11, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node36_11, stupne).         const(stupne).
a_ord(node36_11, 5).         const(5).
a_parent_id(node36_11, a_plzensky51278_txt_001_p5s7W3).         const(a_plzensky51278_txt_001_p5s7W3).
hide(node36_11, hide).         const(hide).
%%%%%%%% node36_12 %%%%%%%%%%%%%%%%%%%
node(node36_12).
deepord(node36_12, 7).         const(7).
functor(node36_12, APP).         const(APP).
gram_sempos(node36_12, n_denot).         const(n_denot).
id(node36_12, T_plzensky51278_txt_001_p5s7a7).         const(T_plzensky51278_txt_001_p5s7a7).
nodetype(node36_12, complex).         const(complex).
t_lemma(node36_12, skola).         const(skola).
%%%%%%%% node36_13 %%%%%%%%%%%%%%%%%%%
node(node36_13).
deepord(node36_13, 6).         const(6).
functor(node36_13, RSTR).         const(RSTR).
gram_sempos(node36_13, adj_denot).         const(adj_denot).
id(node36_13, T_plzensky51278_txt_001_p5s7a8).         const(T_plzensky51278_txt_001_p5s7a8).
nodetype(node36_13, complex).         const(complex).
t_lemma(node36_13, zakladni).         const(zakladni).
%%%%%%%% node36_14 %%%%%%%%%%%%%%%%%%%
node(node36_14).
deepord(node36_14, x6_1).         const(x6_1).
a_ref_type(node36_14, tree).         const(tree).
a_afun(node36_14, Atr).         const(Atr).
m_form(node36_14, zakladnich).         const(zakladnich).
m_lemma(node36_14, zakladni).         const(zakladni).
m_tag(node36_14, AAFP2____1A____).         const(AAFP2____1A____).
w_token(node36_14, zakladnich).         const(zakladnich).
a_ord(node36_14, 6).         const(6).
a_parent_id(node36_14, a_plzensky51278_txt_001_p5s7W7).         const(a_plzensky51278_txt_001_p5s7W7).
hide(node36_14, hide).         const(hide).
%%%%%%%% node36_15 %%%%%%%%%%%%%%%%%%%
node(node36_15).
deepord(node36_15, x7_1).         const(x7_1).
a_ref_type(node36_15, tree).         const(tree).
a_afun(node36_15, Atr).         const(Atr).
m_form(node36_15, skol).         const(skol).
m_lemma(node36_15, skola).         const(skola).
m_tag(node36_15, NNFP2_____A____).         const(NNFP2_____A____).
w_token(node36_15, skol).         const(skol).
a_ord(node36_15, 7).         const(7).
a_parent_id(node36_15, a_plzensky51278_txt_001_p5s7W5).         const(a_plzensky51278_txt_001_p5s7W5).
hide(node36_15, hide).         const(hide).
%%%%%%%% node36_16 %%%%%%%%%%%%%%%%%%%
node(node36_16).
deepord(node36_16, x8_1).         const(x8_1).
a_ref_type(node36_16, tree).         const(tree).
a_afun(node36_16, Pred).         const(Pred).
m_form(node36_16, dosahla).         const(dosahla).
m_lemma(node36_16, dosahnout).         const(dosahnout).
m_tag(node36_16, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node36_16, dosahla).         const(dosahla).
a_ord(node36_16, 8).         const(8).
a_parent_id(node36_16, a_plzensky51278_txt_001_p5s7).         const(a_plzensky51278_txt_001_p5s7).
hide(node36_16, hide).         const(hide).
%%%%%%%% node36_17 %%%%%%%%%%%%%%%%%%%
node(node36_17).
deepord(node36_17, 13).         const(13).
functor(node36_17, RSTR).         const(RSTR).
id(node36_17, T_plzensky51278_txt_001_p5s7a9).         const(T_plzensky51278_txt_001_p5s7a9).
nodetype(node36_17, complex).         const(complex).
t_lemma(node36_17, x_Comma).         const(x_Comma).
%%%%%%%% node36_18 %%%%%%%%%%%%%%%%%%%
node(node36_18).
deepord(node36_18, 12).         const(12).
functor(node36_18, MAT).         const(MAT).
gram_sempos(node36_18, n_denot).         const(n_denot).
id(node36_18, T_plzensky51278_txt_001_p5s7a14).         const(T_plzensky51278_txt_001_p5s7a14).
nodetype(node36_18, complex).         const(complex).
t_lemma(node36_18, bod).         const(bod).
%%%%%%%% node36_19 %%%%%%%%%%%%%%%%%%%
node(node36_19).
deepord(node36_19, 11).         const(11).
functor(node36_19, PAT).         const(PAT).
gram_sempos(node36_19, n_denot).         const(n_denot).
id(node36_19, T_plzensky51278_txt_001_p5s7a12).         const(T_plzensky51278_txt_001_p5s7a12).
nodetype(node36_19, complex).         const(complex).
t_lemma(node36_19, pocet).         const(pocet).
%%%%%%%% node36_20 %%%%%%%%%%%%%%%%%%%
node(node36_20).
deepord(node36_20, 9).         const(9).
functor(node36_20, RSTR).         const(RSTR).
gram_sempos(node36_20, adj_denot).         const(adj_denot).
id(node36_20, T_plzensky51278_txt_001_p5s7a10).         const(T_plzensky51278_txt_001_p5s7a10).
nodetype(node36_20, complex).         const(complex).
t_lemma(node36_20, jediny).         const(jediny).
%%%%%%%% node36_21 %%%%%%%%%%%%%%%%%%%
node(node36_21).
deepord(node36_21, x9_1).         const(x9_1).
a_ref_type(node36_21, tree).         const(tree).
a_afun(node36_21, AuxY).         const(AuxY).
m_form(node36_21, jako).         const(jako).
m_lemma(node36_21, jako).         const(jako).
m_tag(node36_21, J______________).         const(J______________).
w_token(node36_21, jako).         const(jako).
a_ord(node36_21, 9).         const(9).
a_parent_id(node36_21, a_plzensky51278_txt_001_p5s7W10).         const(a_plzensky51278_txt_001_p5s7W10).
hide(node36_21, hide).         const(hide).
%%%%%%%% node36_22 %%%%%%%%%%%%%%%%%%%
node(node36_22).
deepord(node36_22, x9_2).         const(x9_2).
a_ref_type(node36_22, tree).         const(tree).
a_afun(node36_22, Sb).         const(Sb).
a_is_member(node36_22, 1).         const(1).
m_form(node36_22, jedina).         const(jedina).
m_lemma(node36_22, jediny).         const(jediny).
m_tag(node36_22, AAFS1____1A____).         const(AAFS1____1A____).
w_token(node36_22, jedina).         const(jedina).
a_ord(node36_22, 10).         const(10).
a_parent_id(node36_22, a_plzensky51278_txt_001_p5s7W14).         const(a_plzensky51278_txt_001_p5s7W14).
hide(node36_22, hide).         const(hide).
%%%%%%%% node36_23 %%%%%%%%%%%%%%%%%%%
node(node36_23).
deepord(node36_23, 10).         const(10).
functor(node36_23, RSTR).         const(RSTR).
gram_sempos(node36_23, adj_denot).         const(adj_denot).
id(node36_23, T_plzensky51278_txt_001_p5s7a13).         const(T_plzensky51278_txt_001_p5s7a13).
nodetype(node36_23, complex).         const(complex).
t_lemma(node36_23, vysoky).         const(vysoky).
%%%%%%%% node36_24 %%%%%%%%%%%%%%%%%%%
node(node36_24).
deepord(node36_24, x10_1).         const(x10_1).
a_ref_type(node36_24, tree).         const(tree).
a_afun(node36_24, Atr).         const(Atr).
m_form(node36_24, nejvyssiho).         const(nejvyssiho).
m_lemma(node36_24, vysoky).         const(vysoky).
m_tag(node36_24, AAIS2____3A____).         const(AAIS2____3A____).
w_token(node36_24, nejvyssiho).         const(nejvyssiho).
a_ord(node36_24, 11).         const(11).
a_parent_id(node36_24, a_plzensky51278_txt_001_p5s7W12).         const(a_plzensky51278_txt_001_p5s7W12).
hide(node36_24, hide).         const(hide).
%%%%%%%% node36_25 %%%%%%%%%%%%%%%%%%%
node(node36_25).
deepord(node36_25, x11_1).         const(x11_1).
a_ref_type(node36_25, tree).         const(tree).
a_afun(node36_25, Obj).         const(Obj).
m_form(node36_25, poctu).         const(poctu).
m_lemma(node36_25, pocet).         const(pocet).
m_tag(node36_25, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node36_25, poctu).         const(poctu).
a_ord(node36_25, 12).         const(12).
a_parent_id(node36_25, a_plzensky51278_txt_001_p5s7W10).         const(a_plzensky51278_txt_001_p5s7W10).
hide(node36_25, hide).         const(hide).
%%%%%%%% node36_26 %%%%%%%%%%%%%%%%%%%
node(node36_26).
deepord(node36_26, x12_1).         const(x12_1).
a_ref_type(node36_26, tree).         const(tree).
a_afun(node36_26, Atr).         const(Atr).
m_form(node36_26, bodu).         const(bodu).
m_lemma(node36_26, bod).         const(bod).
m_tag(node36_26, NNIP2_____A____).         const(NNIP2_____A____).
w_token(node36_26, bodu).         const(bodu).
w_no_space_after(node36_26, 1).         const(1).
a_ord(node36_26, 13).         const(13).
a_parent_id(node36_26, a_plzensky51278_txt_001_p5s7W12).         const(a_plzensky51278_txt_001_p5s7W12).
hide(node36_26, hide).         const(hide).
%%%%%%%% node36_27 %%%%%%%%%%%%%%%%%%%
node(node36_27).
deepord(node36_27, x13_1).         const(x13_1).
a_ref_type(node36_27, tree).         const(tree).
a_afun(node36_27, AuxX).         const(AuxX).
m_form(node36_27, x_).         const(x_).
m_lemma(node36_27, x_).         const(x_).
m_tag(node36_27, Z______________).         const(Z______________).
w_token(node36_27, x_).         const(x_).
a_ord(node36_27, 14).         const(14).
a_parent_id(node36_27, a_plzensky51278_txt_001_p5s7W8).         const(a_plzensky51278_txt_001_p5s7W8).
hide(node36_27, hide).         const(hide).
%%%%%%%% node36_28 %%%%%%%%%%%%%%%%%%%
node(node36_28).
deepord(node36_28, 14).         const(14).
functor(node36_28, RSTR).         const(RSTR).
gram_sempos(node36_28, adj_quant_def).         const(adj_quant_def).
id(node36_28, T_plzensky51278_txt_001_p5s7a15).         const(T_plzensky51278_txt_001_p5s7a15).
nodetype(node36_28, complex).         const(complex).
t_lemma(node36_28, deset).         const(deset).
%%%%%%%% node36_29 %%%%%%%%%%%%%%%%%%%
node(node36_29).
deepord(node36_29, x14_1).         const(x14_1).
a_ref_type(node36_29, tree).         const(tree).
a_afun(node36_29, Sb).         const(Sb).
a_is_member(node36_29, 1).         const(1).
m_form(node36_29, deset).         const(deset).
m_lemma(node36_29, deset_10).         const(deset_10).
m_tag(node36_29, Cn_S1__________).         const(Cn_S1__________).
w_token(node36_29, deset).         const(deset).
w_no_space_after(node36_29, 1).         const(1).
a_ord(node36_29, 15).         const(15).
a_parent_id(node36_29, a_plzensky51278_txt_001_p5s7W14).         const(a_plzensky51278_txt_001_p5s7W14).
hide(node36_29, hide).         const(hide).
%%%%%%%% node36_30 %%%%%%%%%%%%%%%%%%%
node(node36_30).
deepord(node36_30, 16).         const(16).
functor(node36_30, RSTR).         const(RSTR).
gram_sempos(node36_30, n_denot).         const(n_denot).
id(node36_30, T_plzensky51278_txt_001_p5s7a17).         const(T_plzensky51278_txt_001_p5s7a17).
nodetype(node36_30, complex).         const(complex).
t_lemma(node36_30, Rehackova).         const(Rehackova).
%%%%%%%% node36_31 %%%%%%%%%%%%%%%%%%%
node(node36_31).
deepord(node36_31, 15).         const(15).
functor(node36_31, RSTR).         const(RSTR).
gram_sempos(node36_31, n_denot).         const(n_denot).
id(node36_31, T_plzensky51278_txt_001_p5s7a18).         const(T_plzensky51278_txt_001_p5s7a18).
nodetype(node36_31, complex).         const(complex).
t_lemma(node36_31, Diana).         const(Diana).
%%%%%%%% node36_32 %%%%%%%%%%%%%%%%%%%
node(node36_32).
deepord(node36_32, x15_1).         const(x15_1).
a_ref_type(node36_32, tree).         const(tree).
a_afun(node36_32, Atr).         const(Atr).
m_form(node36_32, Diana).         const(Diana).
m_lemma(node36_32, Diana__Y).         const(Diana__Y).
m_tag(node36_32, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node36_32, Diana).         const(Diana).
a_ord(node36_32, 17).         const(17).
a_parent_id(node36_32, a_plzensky51278_txt_001_p5s7W18).         const(a_plzensky51278_txt_001_p5s7W18).
hide(node36_32, hide).         const(hide).
%%%%%%%% node36_33 %%%%%%%%%%%%%%%%%%%
node(node36_33).
deepord(node36_33, x16_1).         const(x16_1).
a_ref_type(node36_33, tree).         const(tree).
a_afun(node36_33, Sb).         const(Sb).
a_is_member(node36_33, 1).         const(1).
m_form(node36_33, Rehackova).         const(Rehackova).
m_lemma(node36_33, Rehackova__S).         const(Rehackova__S).
m_tag(node36_33, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node36_33, Rehackova).         const(Rehackova).
a_ord(node36_33, 18).         const(18).
a_parent_id(node36_33, a_plzensky51278_txt_001_p5s7W14).         const(a_plzensky51278_txt_001_p5s7W14).
hide(node36_33, hide).         const(hide).
%%%%%%%% node36_34 %%%%%%%%%%%%%%%%%%%
node(node36_34).
deepord(node36_34, 17).         const(17).
functor(node36_34, DIR1).         const(DIR1).
gram_sempos(node36_34, n_denot).         const(n_denot).
id(node36_34, T_plzensky51278_txt_001_p5s7a20).         const(T_plzensky51278_txt_001_p5s7a20).
nodetype(node36_34, complex).         const(complex).
subfunctor(node36_34, basic).         const(basic).
t_lemma(node36_34, druzstvo).         const(druzstvo).
%%%%%%%% node36_35 %%%%%%%%%%%%%%%%%%%
node(node36_35).
deepord(node36_35, x17_1).         const(x17_1).
a_ref_type(node36_35, tree).         const(tree).
a_afun(node36_35, AuxP).         const(AuxP).
m_form(node36_35, z).         const(z).
m_lemma(node36_35, z_1).         const(z_1).
m_tag(node36_35, RR__2__________).         const(RR__2__________).
w_token(node36_35, z).         const(z).
a_ord(node36_35, 19).         const(19).
a_parent_id(node36_35, a_plzensky51278_txt_001_p5s7W18).         const(a_plzensky51278_txt_001_p5s7W18).
hide(node36_35, hide).         const(hide).
%%%%%%%% node36_36 %%%%%%%%%%%%%%%%%%%
node(node36_36).
deepord(node36_36, x17_2).         const(x17_2).
a_ref_type(node36_36, tree).         const(tree).
a_afun(node36_36, Atr).         const(Atr).
m_form(node36_36, druzstva).         const(druzstva).
m_lemma(node36_36, druzstvo).         const(druzstvo).
m_tag(node36_36, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node36_36, druzstva).         const(druzstva).
a_ord(node36_36, 20).         const(20).
a_parent_id(node36_36, a_plzensky51278_txt_001_p5s7W19).         const(a_plzensky51278_txt_001_p5s7W19).
hide(node36_36, hide).         const(hide).
%%%%%%%% node36_37 %%%%%%%%%%%%%%%%%%%
node(node36_37).
deepord(node36_37, 18).         const(18).
functor(node36_37, RSTR).         const(RSTR).
gram_sempos(node36_37, n_denot).         const(n_denot).
id(node36_37, T_plzensky51278_txt_001_p5s7a21).         const(T_plzensky51278_txt_001_p5s7a21).
nodetype(node36_37, complex).         const(complex).
t_lemma(node36_37, cislo).         const(cislo).
%%%%%%%% node36_38 %%%%%%%%%%%%%%%%%%%
node(node36_38).
deepord(node36_38, x18_1).         const(x18_1).
a_ref_type(node36_38, tree).         const(tree).
a_afun(node36_38, Atr).         const(Atr).
m_form(node36_38, c_).         const(c_).
m_lemma(node36_38, cislo__B).         const(cislo__B).
m_tag(node36_38, NNNXX_____A___8).         const(NNNXX_____A___8).
w_token(node36_38, c_).         const(c_).
a_ord(node36_38, 21).         const(21).
a_parent_id(node36_38, a_plzensky51278_txt_001_p5s7W18).         const(a_plzensky51278_txt_001_p5s7W18).
hide(node36_38, hide).         const(hide).
%%%%%%%% node36_39 %%%%%%%%%%%%%%%%%%%
node(node36_39).
deepord(node36_39, 19).         const(19).
functor(node36_39, RSTR).         const(RSTR).
gram_sempos(node36_39, adj_quant_def).         const(adj_quant_def).
id(node36_39, T_plzensky51278_txt_001_p5s7a22).         const(T_plzensky51278_txt_001_p5s7a22).
nodetype(node36_39, complex).         const(complex).
t_lemma(node36_39, 11).         const(11).
%%%%%%%% node36_40 %%%%%%%%%%%%%%%%%%%
node(node36_40).
deepord(node36_40, x19_1).         const(x19_1).
a_ref_type(node36_40, tree).         const(tree).
a_afun(node36_40, Atr).         const(Atr).
m_form(node36_40, 11).         const(11).
m_lemma(node36_40, 11).         const(11).
m_tag(node36_40, C=_____________).         const(C=_____________).
w_token(node36_40, 11).         const(11).
a_ord(node36_40, 22).         const(22).
a_parent_id(node36_40, a_plzensky51278_txt_001_p5s7W21).         const(a_plzensky51278_txt_001_p5s7W21).
hide(node36_40, hide).         const(hide).
%%%%%%%% node36_41 %%%%%%%%%%%%%%%%%%%
node(node36_41).
deepord(node36_41, 20).         const(20).
functor(node36_41, RSTR).         const(RSTR).
id(node36_41, T_plzensky51278_txt_001_p5s7a23).         const(T_plzensky51278_txt_001_p5s7a23).
nodetype(node36_41, complex).         const(complex).
t_lemma(node36_41, z).         const(z).
%%%%%%%% node36_42 %%%%%%%%%%%%%%%%%%%
node(node36_42).
deepord(node36_42, x20_1).         const(x20_1).
a_ref_type(node36_42, tree).         const(tree).
a_afun(node36_42, AuxP).         const(AuxP).
m_form(node36_42, z).         const(z).
m_lemma(node36_42, z_1).         const(z_1).
m_tag(node36_42, RR__2__________).         const(RR__2__________).
w_token(node36_42, z).         const(z).
a_ord(node36_42, 23).         const(23).
a_parent_id(node36_42, a_plzensky51278_txt_001_p5s7W14).         const(a_plzensky51278_txt_001_p5s7W14).
hide(node36_42, hide).         const(hide).
%%%%%%%% node36_43 %%%%%%%%%%%%%%%%%%%
node(node36_43).
deepord(node36_43, 21).         const(21).
functor(node36_43, RSTR).         const(RSTR).
gram_sempos(node36_43, adj_quant_def).         const(adj_quant_def).
id(node36_43, T_plzensky51278_txt_001_p5s7a24).         const(T_plzensky51278_txt_001_p5s7a24).
nodetype(node36_43, complex).         const(complex).
t_lemma(node36_43, 11).         const(11).
%%%%%%%% node36_44 %%%%%%%%%%%%%%%%%%%
node(node36_44).
deepord(node36_44, x21_1).         const(x21_1).
a_ref_type(node36_44, tree).         const(tree).
a_afun(node36_44, Adv).         const(Adv).
m_form(node36_44, 11).         const(11).
m_lemma(node36_44, 11).         const(11).
m_tag(node36_44, C=_____________).         const(C=_____________).
w_token(node36_44, 11).         const(11).
w_no_space_after(node36_44, 1).         const(1).
a_ord(node36_44, 24).         const(24).
a_parent_id(node36_44, a_plzensky51278_txt_001_p5s7W23).         const(a_plzensky51278_txt_001_p5s7W23).
hide(node36_44, hide).         const(hide).
edge(node36_0, node36_1).
edge(node36_1, node36_2).
edge(node36_1, node36_3).
edge(node36_1, node36_4).
edge(node36_4, node36_5).
edge(node36_4, node36_6).
edge(node36_4, node36_7).
edge(node36_7, node36_8).
edge(node36_8, node36_9).
edge(node36_7, node36_10).
edge(node36_7, node36_11).
edge(node36_7, node36_12).
edge(node36_12, node36_13).
edge(node36_13, node36_14).
edge(node36_12, node36_15).
edge(node36_1, node36_16).
edge(node36_1, node36_17).
edge(node36_17, node36_18).
edge(node36_18, node36_19).
edge(node36_19, node36_20).
edge(node36_20, node36_21).
edge(node36_20, node36_22).
edge(node36_19, node36_23).
edge(node36_23, node36_24).
edge(node36_19, node36_25).
edge(node36_18, node36_26).
edge(node36_17, node36_27).
edge(node36_17, node36_28).
edge(node36_28, node36_29).
edge(node36_17, node36_30).
edge(node36_30, node36_31).
edge(node36_31, node36_32).
edge(node36_30, node36_33).
edge(node36_30, node36_34).
edge(node36_34, node36_35).
edge(node36_34, node36_36).
edge(node36_30, node36_37).
edge(node36_37, node36_38).
edge(node36_37, node36_39).
edge(node36_39, node36_40).
edge(node36_17, node36_41).
edge(node36_41, node36_42).
edge(node36_41, node36_43).
edge(node36_43, node36_44).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% ZS Baarova ul. Plzen. 
tree_root(node37_0).
:- valid_root(node37_0).
%%%%%%%% node37_0 %%%%%%%%%%%%%%%%%%%
node(node37_0).
atree_rf(node37_0, a_a_plzensky51278_txt_001_p5s8).         const(a_a_plzensky51278_txt_001_p5s8).
deepord(node37_0, 0).         const(0).
id(node37_0, T_plzensky51278_txt_001_p5s8).         const(T_plzensky51278_txt_001_p5s8).
nodetype(node37_0, root).         const(root).
sentence(node37_0, ZS_Baarova_ul__Plzen__).         const(ZS_Baarova_ul__Plzen__).
%%%%%%%% node37_1 %%%%%%%%%%%%%%%%%%%
node(node37_1).
deepord(node37_1, 3).         const(3).
functor(node37_1, ACT).         const(ACT).
gram_sempos(node37_1, n_denot).         const(n_denot).
id(node37_1, T_plzensky51278_txt_001_p5s8a1).         const(T_plzensky51278_txt_001_p5s8a1).
nodetype(node37_1, complex).         const(complex).
t_lemma(node37_1, ulice).         const(ulice).
%%%%%%%% node37_2 %%%%%%%%%%%%%%%%%%%
node(node37_2).
deepord(node37_2, 1).         const(1).
functor(node37_2, FPHR).         const(FPHR).
id(node37_2, T_plzensky51278_txt_001_p5s8a2).         const(T_plzensky51278_txt_001_p5s8a2).
nodetype(node37_2, fphr).         const(fphr).
t_lemma(node37_2, ZS).         const(ZS).
%%%%%%%% node37_3 %%%%%%%%%%%%%%%%%%%
node(node37_3).
deepord(node37_3, x1_1).         const(x1_1).
a_ref_type(node37_3, tree).         const(tree).
a_afun(node37_3, Atr).         const(Atr).
m_form(node37_3, ZS).         const(ZS).
m_lemma(node37_3, ZS__B___zakladni_skola_).         const(ZS__B___zakladni_skola_).
m_tag(node37_3, NNFXX_____A____).         const(NNFXX_____A____).
w_token(node37_3, ZS).         const(ZS).
a_ord(node37_3, 1).         const(1).
a_parent_id(node37_3, a_plzensky51278_txt_001_p5s8W3).         const(a_plzensky51278_txt_001_p5s8W3).
hide(node37_3, hide).         const(hide).
%%%%%%%% node37_4 %%%%%%%%%%%%%%%%%%%
node(node37_4).
deepord(node37_4, 2).         const(2).
functor(node37_4, RSTR).         const(RSTR).
gram_sempos(node37_4, n_denot).         const(n_denot).
id(node37_4, T_plzensky51278_txt_001_p5s8a3).         const(T_plzensky51278_txt_001_p5s8a3).
nodetype(node37_4, complex).         const(complex).
t_lemma(node37_4, Baaruv).         const(Baaruv).
%%%%%%%% node37_5 %%%%%%%%%%%%%%%%%%%
node(node37_5).
deepord(node37_5, x2_1).         const(x2_1).
a_ref_type(node37_5, tree).         const(tree).
a_afun(node37_5, Atr).         const(Atr).
m_form(node37_5, Baarova).         const(Baarova).
m_lemma(node37_5, Baaruv__S____2_).         const(Baaruv__S____2_).
m_tag(node37_5, AUFS1M_________).         const(AUFS1M_________).
w_token(node37_5, Baarova).         const(Baarova).
a_ord(node37_5, 2).         const(2).
a_parent_id(node37_5, a_plzensky51278_txt_001_p5s8W3).         const(a_plzensky51278_txt_001_p5s8W3).
hide(node37_5, hide).         const(hide).
%%%%%%%% node37_6 %%%%%%%%%%%%%%%%%%%
node(node37_6).
deepord(node37_6, x3_1).         const(x3_1).
a_ref_type(node37_6, tree).         const(tree).
a_afun(node37_6, ExD).         const(ExD).
m_form(node37_6, ul_).         const(ul_).
m_lemma(node37_6, ulice__B).         const(ulice__B).
m_tag(node37_6, NNFXX_____A___8).         const(NNFXX_____A___8).
w_token(node37_6, ul_).         const(ul_).
a_ord(node37_6, 3).         const(3).
a_parent_id(node37_6, a_plzensky51278_txt_001_p5s8).         const(a_plzensky51278_txt_001_p5s8).
hide(node37_6, hide).         const(hide).
%%%%%%%% node37_7 %%%%%%%%%%%%%%%%%%%
node(node37_7).
deepord(node37_7, 4).         const(4).
functor(node37_7, RSTR).         const(RSTR).
gram_sempos(node37_7, n_denot).         const(n_denot).
id(node37_7, T_plzensky51278_txt_001_p5s8a4).         const(T_plzensky51278_txt_001_p5s8a4).
nodetype(node37_7, complex).         const(complex).
t_lemma(node37_7, Plzen).         const(Plzen).
%%%%%%%% node37_8 %%%%%%%%%%%%%%%%%%%
node(node37_8).
deepord(node37_8, x4_1).         const(x4_1).
a_ref_type(node37_8, tree).         const(tree).
a_afun(node37_8, Atr).         const(Atr).
m_form(node37_8, Plzen).         const(Plzen).
m_lemma(node37_8, Plzen__G).         const(Plzen__G).
m_tag(node37_8, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node37_8, Plzen).         const(Plzen).
w_no_space_after(node37_8, 1).         const(1).
a_ord(node37_8, 4).         const(4).
a_parent_id(node37_8, a_plzensky51278_txt_001_p5s8W3).         const(a_plzensky51278_txt_001_p5s8W3).
hide(node37_8, hide).         const(hide).
edge(node37_0, node37_1).
edge(node37_1, node37_2).
edge(node37_2, node37_3).
edge(node37_1, node37_4).
edge(node37_4, node37_5).
edge(node37_1, node37_6).
edge(node37_1, node37_7).
edge(node37_7, node37_8).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Nejlepsim jednotlivcem z druheho stupne byl Jan Zdebor z druzstva c. 4 z Gymnazia v Opavske ulici, ktery ziskal devet bodu. 
tree_root(node38_0).
:- valid_root(node38_0).
%%%%%%%% node38_0 %%%%%%%%%%%%%%%%%%%
node(node38_0).
atree_rf(node38_0, a_a_plzensky51278_txt_001_p5s9).         const(a_a_plzensky51278_txt_001_p5s9).
deepord(node38_0, 0).         const(0).
id(node38_0, T_plzensky51278_txt_001_p5s9).         const(T_plzensky51278_txt_001_p5s9).
nodetype(node38_0, root).         const(root).
sentence(node38_0, Nejlepsim_jednotlivcem_z_druheho_stupne_byl_Jan_Zdebor_z_druzstva_c__4_z_Gymnazia_v_Opavske_ulici__ktery_ziskal_devet_bodu__).         const(Nejlepsim_jednotlivcem_z_druheho_stupne_byl_Jan_Zdebor_z_druzstva_c__4_z_Gymnazia_v_Opavske_ulici__ktery_ziskal_devet_bodu__).
%%%%%%%% node38_1 %%%%%%%%%%%%%%%%%%%
node(node38_1).
deepord(node38_1, 5).         const(5).
functor(node38_1, PRED).         const(PRED).
gram_sempos(node38_1, v).         const(v).
id(node38_1, T_plzensky51278_txt_001_p5s9a1).         const(T_plzensky51278_txt_001_p5s9a1).
nodetype(node38_1, complex).         const(complex).
t_lemma(node38_1, byt).         const(byt).
val_frame_rf(node38_1, v_v_w243f2).         const(v_v_w243f2).
%%%%%%%% node38_2 %%%%%%%%%%%%%%%%%%%
node(node38_2).
deepord(node38_2, 2).         const(2).
functor(node38_2, PAT).         const(PAT).
gram_sempos(node38_2, n_denot).         const(n_denot).
id(node38_2, T_plzensky51278_txt_001_p5s9a2).         const(T_plzensky51278_txt_001_p5s9a2).
nodetype(node38_2, complex).         const(complex).
t_lemma(node38_2, jednotlivec).         const(jednotlivec).
%%%%%%%% node38_3 %%%%%%%%%%%%%%%%%%%
node(node38_3).
deepord(node38_3, 1).         const(1).
functor(node38_3, RSTR).         const(RSTR).
gram_sempos(node38_3, adj_denot).         const(adj_denot).
id(node38_3, T_plzensky51278_txt_001_p5s9a3).         const(T_plzensky51278_txt_001_p5s9a3).
nodetype(node38_3, complex).         const(complex).
t_lemma(node38_3, dobry).         const(dobry).
%%%%%%%% node38_4 %%%%%%%%%%%%%%%%%%%
node(node38_4).
deepord(node38_4, x1_1).         const(x1_1).
a_ref_type(node38_4, tree).         const(tree).
a_afun(node38_4, Atr).         const(Atr).
m_form(node38_4, Nejlepsim).         const(Nejlepsim).
m_lemma(node38_4, dobry).         const(dobry).
m_tag(node38_4, AAMS7____3A____).         const(AAMS7____3A____).
w_token(node38_4, Nejlepsim).         const(Nejlepsim).
a_ord(node38_4, 1).         const(1).
a_parent_id(node38_4, a_plzensky51278_txt_001_p5s9W2).         const(a_plzensky51278_txt_001_p5s9W2).
hide(node38_4, hide).         const(hide).
%%%%%%%% node38_5 %%%%%%%%%%%%%%%%%%%
node(node38_5).
deepord(node38_5, x2_1).         const(x2_1).
a_ref_type(node38_5, tree).         const(tree).
a_afun(node38_5, Pnom).         const(Pnom).
m_form(node38_5, jednotlivcem).         const(jednotlivcem).
m_lemma(node38_5, jednotlivec).         const(jednotlivec).
m_tag(node38_5, NNMS7_____A____).         const(NNMS7_____A____).
w_token(node38_5, jednotlivcem).         const(jednotlivcem).
a_ord(node38_5, 2).         const(2).
a_parent_id(node38_5, a_plzensky51278_txt_001_p5s9W6).         const(a_plzensky51278_txt_001_p5s9W6).
hide(node38_5, hide).         const(hide).
%%%%%%%% node38_6 %%%%%%%%%%%%%%%%%%%
node(node38_6).
deepord(node38_6, 4).         const(4).
functor(node38_6, DIR1).         const(DIR1).
gram_sempos(node38_6, n_denot).         const(n_denot).
id(node38_6, T_plzensky51278_txt_001_p5s9a5).         const(T_plzensky51278_txt_001_p5s9a5).
nodetype(node38_6, complex).         const(complex).
subfunctor(node38_6, basic).         const(basic).
t_lemma(node38_6, stupen).         const(stupen).
%%%%%%%% node38_7 %%%%%%%%%%%%%%%%%%%
node(node38_7).
deepord(node38_7, 3).         const(3).
functor(node38_7, RSTR).         const(RSTR).
gram_sempos(node38_7, adj_quant_def).         const(adj_quant_def).
id(node38_7, T_plzensky51278_txt_001_p5s9a6).         const(T_plzensky51278_txt_001_p5s9a6).
nodetype(node38_7, complex).         const(complex).
t_lemma(node38_7, dva).         const(dva).
%%%%%%%% node38_8 %%%%%%%%%%%%%%%%%%%
node(node38_8).
deepord(node38_8, x3_1).         const(x3_1).
a_ref_type(node38_8, tree).         const(tree).
a_afun(node38_8, Atr).         const(Atr).
m_form(node38_8, druheho).         const(druheho).
m_lemma(node38_8, druhy_1___jiny_).         const(druhy_1___jiny_).
m_tag(node38_8, AAIS2____1A____).         const(AAIS2____1A____).
w_token(node38_8, druheho).         const(druheho).
a_ord(node38_8, 4).         const(4).
a_parent_id(node38_8, a_plzensky51278_txt_001_p5s9W5).         const(a_plzensky51278_txt_001_p5s9W5).
hide(node38_8, hide).         const(hide).
%%%%%%%% node38_9 %%%%%%%%%%%%%%%%%%%
node(node38_9).
deepord(node38_9, x4_1).         const(x4_1).
a_ref_type(node38_9, tree).         const(tree).
a_afun(node38_9, AuxP).         const(AuxP).
m_form(node38_9, z).         const(z).
m_lemma(node38_9, z_1).         const(z_1).
m_tag(node38_9, RR__2__________).         const(RR__2__________).
w_token(node38_9, z).         const(z).
a_ord(node38_9, 3).         const(3).
a_parent_id(node38_9, a_plzensky51278_txt_001_p5s9W2).         const(a_plzensky51278_txt_001_p5s9W2).
hide(node38_9, hide).         const(hide).
%%%%%%%% node38_10 %%%%%%%%%%%%%%%%%%%
node(node38_10).
deepord(node38_10, x4_2).         const(x4_2).
a_ref_type(node38_10, tree).         const(tree).
a_afun(node38_10, Atr).         const(Atr).
m_form(node38_10, stupne).         const(stupne).
m_lemma(node38_10, stupen).         const(stupen).
m_tag(node38_10, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node38_10, stupne).         const(stupne).
a_ord(node38_10, 5).         const(5).
a_parent_id(node38_10, a_plzensky51278_txt_001_p5s9W3).         const(a_plzensky51278_txt_001_p5s9W3).
hide(node38_10, hide).         const(hide).
%%%%%%%% node38_11 %%%%%%%%%%%%%%%%%%%
node(node38_11).
deepord(node38_11, x5_1).         const(x5_1).
a_ref_type(node38_11, tree).         const(tree).
a_afun(node38_11, Pred).         const(Pred).
m_form(node38_11, byl).         const(byl).
m_lemma(node38_11, byt).         const(byt).
m_tag(node38_11, VpYS___XR_AA___).         const(VpYS___XR_AA___).
w_token(node38_11, byl).         const(byl).
a_ord(node38_11, 6).         const(6).
a_parent_id(node38_11, a_plzensky51278_txt_001_p5s9).         const(a_plzensky51278_txt_001_p5s9).
hide(node38_11, hide).         const(hide).
%%%%%%%% node38_12 %%%%%%%%%%%%%%%%%%%
node(node38_12).
deepord(node38_12, 7).         const(7).
functor(node38_12, ACT).         const(ACT).
gram_sempos(node38_12, n_denot).         const(n_denot).
id(node38_12, T_plzensky51278_txt_001_p5s9a7).         const(T_plzensky51278_txt_001_p5s9a7).
nodetype(node38_12, complex).         const(complex).
t_lemma(node38_12, Zdebor).         const(Zdebor).
%%%%%%%% node38_13 %%%%%%%%%%%%%%%%%%%
node(node38_13).
deepord(node38_13, 6).         const(6).
functor(node38_13, RSTR).         const(RSTR).
gram_sempos(node38_13, n_denot).         const(n_denot).
id(node38_13, T_plzensky51278_txt_001_p5s9a8).         const(T_plzensky51278_txt_001_p5s9a8).
nodetype(node38_13, complex).         const(complex).
t_lemma(node38_13, Jan).         const(Jan).
%%%%%%%% node38_14 %%%%%%%%%%%%%%%%%%%
node(node38_14).
deepord(node38_14, x6_1).         const(x6_1).
a_ref_type(node38_14, tree).         const(tree).
a_afun(node38_14, Atr).         const(Atr).
m_form(node38_14, Jan).         const(Jan).
m_lemma(node38_14, Jan__Y).         const(Jan__Y).
m_tag(node38_14, NNMS1_____A____).         const(NNMS1_____A____).
w_token(node38_14, Jan).         const(Jan).
a_ord(node38_14, 7).         const(7).
a_parent_id(node38_14, a_plzensky51278_txt_001_p5s9W8).         const(a_plzensky51278_txt_001_p5s9W8).
hide(node38_14, hide).         const(hide).
%%%%%%%% node38_15 %%%%%%%%%%%%%%%%%%%
node(node38_15).
deepord(node38_15, x7_1).         const(x7_1).
a_ref_type(node38_15, tree).         const(tree).
a_afun(node38_15, Sb).         const(Sb).
m_form(node38_15, Zdebor).         const(Zdebor).
m_lemma(node38_15, Zdebor).         const(Zdebor).
m_tag(node38_15, NNMS1_____A____).         const(NNMS1_____A____).
w_token(node38_15, Zdebor).         const(Zdebor).
a_ord(node38_15, 8).         const(8).
a_parent_id(node38_15, a_plzensky51278_txt_001_p5s9W6).         const(a_plzensky51278_txt_001_p5s9W6).
hide(node38_15, hide).         const(hide).
%%%%%%%% node38_16 %%%%%%%%%%%%%%%%%%%
node(node38_16).
deepord(node38_16, 8).         const(8).
functor(node38_16, DIR1).         const(DIR1).
gram_sempos(node38_16, n_denot).         const(n_denot).
id(node38_16, T_plzensky51278_txt_001_p5s9a10).         const(T_plzensky51278_txt_001_p5s9a10).
nodetype(node38_16, complex).         const(complex).
subfunctor(node38_16, basic).         const(basic).
t_lemma(node38_16, druzstvo).         const(druzstvo).
%%%%%%%% node38_17 %%%%%%%%%%%%%%%%%%%
node(node38_17).
deepord(node38_17, x8_1).         const(x8_1).
a_ref_type(node38_17, tree).         const(tree).
a_afun(node38_17, AuxP).         const(AuxP).
m_form(node38_17, z).         const(z).
m_lemma(node38_17, z_1).         const(z_1).
m_tag(node38_17, RR__2__________).         const(RR__2__________).
w_token(node38_17, z).         const(z).
a_ord(node38_17, 9).         const(9).
a_parent_id(node38_17, a_plzensky51278_txt_001_p5s9W8).         const(a_plzensky51278_txt_001_p5s9W8).
hide(node38_17, hide).         const(hide).
%%%%%%%% node38_18 %%%%%%%%%%%%%%%%%%%
node(node38_18).
deepord(node38_18, x8_2).         const(x8_2).
a_ref_type(node38_18, tree).         const(tree).
a_afun(node38_18, Atr).         const(Atr).
m_form(node38_18, druzstva).         const(druzstva).
m_lemma(node38_18, druzstvo).         const(druzstvo).
m_tag(node38_18, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node38_18, druzstva).         const(druzstva).
a_ord(node38_18, 10).         const(10).
a_parent_id(node38_18, a_plzensky51278_txt_001_p5s9W9).         const(a_plzensky51278_txt_001_p5s9W9).
hide(node38_18, hide).         const(hide).
%%%%%%%% node38_19 %%%%%%%%%%%%%%%%%%%
node(node38_19).
deepord(node38_19, 9).         const(9).
functor(node38_19, RSTR).         const(RSTR).
gram_sempos(node38_19, n_denot).         const(n_denot).
id(node38_19, T_plzensky51278_txt_001_p5s9a11).         const(T_plzensky51278_txt_001_p5s9a11).
nodetype(node38_19, complex).         const(complex).
t_lemma(node38_19, c).         const(c).
%%%%%%%% node38_20 %%%%%%%%%%%%%%%%%%%
node(node38_20).
deepord(node38_20, x9_1).         const(x9_1).
a_ref_type(node38_20, tree).         const(tree).
a_afun(node38_20, Atr).         const(Atr).
m_form(node38_20, c_).         const(c_).
m_lemma(node38_20, c_3___oznaceni_pomoci_pismene_).         const(c_3___oznaceni_pomoci_pismene_).
m_tag(node38_20, NNNXX_____A____).         const(NNNXX_____A____).
w_token(node38_20, c_).         const(c_).
a_ord(node38_20, 11).         const(11).
a_parent_id(node38_20, a_plzensky51278_txt_001_p5s9W8).         const(a_plzensky51278_txt_001_p5s9W8).
hide(node38_20, hide).         const(hide).
%%%%%%%% node38_21 %%%%%%%%%%%%%%%%%%%
node(node38_21).
deepord(node38_21, 10).         const(10).
functor(node38_21, RSTR).         const(RSTR).
gram_sempos(node38_21, adj_quant_def).         const(adj_quant_def).
id(node38_21, T_plzensky51278_txt_001_p5s9a12).         const(T_plzensky51278_txt_001_p5s9a12).
nodetype(node38_21, complex).         const(complex).
t_lemma(node38_21, 4).         const(4).
%%%%%%%% node38_22 %%%%%%%%%%%%%%%%%%%
node(node38_22).
deepord(node38_22, x10_1).         const(x10_1).
a_ref_type(node38_22, tree).         const(tree).
a_afun(node38_22, Atr).         const(Atr).
m_form(node38_22, 4).         const(4).
m_lemma(node38_22, 4).         const(4).
m_tag(node38_22, C=_____________).         const(C=_____________).
w_token(node38_22, 4).         const(4).
a_ord(node38_22, 12).         const(12).
a_parent_id(node38_22, a_plzensky51278_txt_001_p5s9W11).         const(a_plzensky51278_txt_001_p5s9W11).
hide(node38_22, hide).         const(hide).
%%%%%%%% node38_23 %%%%%%%%%%%%%%%%%%%
node(node38_23).
deepord(node38_23, 11).         const(11).
functor(node38_23, DIR1).         const(DIR1).
gram_sempos(node38_23, n_denot).         const(n_denot).
id(node38_23, T_plzensky51278_txt_001_p5s9a14).         const(T_plzensky51278_txt_001_p5s9a14).
nodetype(node38_23, complex).         const(complex).
subfunctor(node38_23, basic).         const(basic).
t_lemma(node38_23, gymnazium).         const(gymnazium).
%%%%%%%% node38_24 %%%%%%%%%%%%%%%%%%%
node(node38_24).
deepord(node38_24, x11_1).         const(x11_1).
a_ref_type(node38_24, tree).         const(tree).
a_afun(node38_24, AuxP).         const(AuxP).
m_form(node38_24, z).         const(z).
m_lemma(node38_24, z_1).         const(z_1).
m_tag(node38_24, RR__2__________).         const(RR__2__________).
w_token(node38_24, z).         const(z).
a_ord(node38_24, 13).         const(13).
a_parent_id(node38_24, a_plzensky51278_txt_001_p5s9W8).         const(a_plzensky51278_txt_001_p5s9W8).
hide(node38_24, hide).         const(hide).
%%%%%%%% node38_25 %%%%%%%%%%%%%%%%%%%
node(node38_25).
deepord(node38_25, x11_2).         const(x11_2).
a_ref_type(node38_25, tree).         const(tree).
a_afun(node38_25, Atr).         const(Atr).
m_form(node38_25, Gymnazia).         const(Gymnazia).
m_lemma(node38_25, gymnazium).         const(gymnazium).
m_tag(node38_25, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node38_25, Gymnazia).         const(Gymnazia).
a_ord(node38_25, 14).         const(14).
a_parent_id(node38_25, a_plzensky51278_txt_001_p5s9W13).         const(a_plzensky51278_txt_001_p5s9W13).
hide(node38_25, hide).         const(hide).
%%%%%%%% node38_26 %%%%%%%%%%%%%%%%%%%
node(node38_26).
deepord(node38_26, 13).         const(13).
functor(node38_26, LOC).         const(LOC).
gram_sempos(node38_26, n_denot).         const(n_denot).
id(node38_26, T_plzensky51278_txt_001_p5s9a16).         const(T_plzensky51278_txt_001_p5s9a16).
nodetype(node38_26, complex).         const(complex).
subfunctor(node38_26, basic).         const(basic).
t_lemma(node38_26, ulice).         const(ulice).
%%%%%%%% node38_27 %%%%%%%%%%%%%%%%%%%
node(node38_27).
deepord(node38_27, 12).         const(12).
functor(node38_27, RSTR).         const(RSTR).
gram_sempos(node38_27, adj_denot).         const(adj_denot).
id(node38_27, T_plzensky51278_txt_001_p5s9a17).         const(T_plzensky51278_txt_001_p5s9a17).
nodetype(node38_27, complex).         const(complex).
t_lemma(node38_27, opavsky).         const(opavsky).
%%%%%%%% node38_28 %%%%%%%%%%%%%%%%%%%
node(node38_28).
deepord(node38_28, x12_1).         const(x12_1).
a_ref_type(node38_28, tree).         const(tree).
a_afun(node38_28, Atr).         const(Atr).
m_form(node38_28, Opavske).         const(Opavske).
m_lemma(node38_28, opavsky).         const(opavsky).
m_tag(node38_28, AAFS6____1A____).         const(AAFS6____1A____).
w_token(node38_28, Opavske).         const(Opavske).
a_ord(node38_28, 16).         const(16).
a_parent_id(node38_28, a_plzensky51278_txt_001_p5s9W17).         const(a_plzensky51278_txt_001_p5s9W17).
hide(node38_28, hide).         const(hide).
%%%%%%%% node38_29 %%%%%%%%%%%%%%%%%%%
node(node38_29).
deepord(node38_29, x13_1).         const(x13_1).
a_ref_type(node38_29, tree).         const(tree).
a_afun(node38_29, AuxP).         const(AuxP).
m_form(node38_29, v).         const(v).
m_lemma(node38_29, v_1).         const(v_1).
m_tag(node38_29, RR__6__________).         const(RR__6__________).
w_token(node38_29, v).         const(v).
a_ord(node38_29, 15).         const(15).
a_parent_id(node38_29, a_plzensky51278_txt_001_p5s9W6).         const(a_plzensky51278_txt_001_p5s9W6).
hide(node38_29, hide).         const(hide).
%%%%%%%% node38_30 %%%%%%%%%%%%%%%%%%%
node(node38_30).
deepord(node38_30, x13_2).         const(x13_2).
a_ref_type(node38_30, tree).         const(tree).
a_afun(node38_30, Adv).         const(Adv).
m_form(node38_30, ulici).         const(ulici).
m_lemma(node38_30, ulice).         const(ulice).
m_tag(node38_30, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node38_30, ulici).         const(ulici).
w_no_space_after(node38_30, 1).         const(1).
a_ord(node38_30, 17).         const(17).
a_parent_id(node38_30, a_plzensky51278_txt_001_p5s9W15).         const(a_plzensky51278_txt_001_p5s9W15).
hide(node38_30, hide).         const(hide).
%%%%%%%% node38_31 %%%%%%%%%%%%%%%%%%%
node(node38_31).
deepord(node38_31, 15).         const(15).
functor(node38_31, RSTR).         const(RSTR).
gram_sempos(node38_31, v).         const(v).
id(node38_31, T_plzensky51278_txt_001_p5s9a18).         const(T_plzensky51278_txt_001_p5s9a18).
nodetype(node38_31, complex).         const(complex).
t_lemma(node38_31, ziskat).         const(ziskat).
val_frame_rf(node38_31, v_v_w9501f2).         const(v_v_w9501f2).
%%%%%%%% node38_32 %%%%%%%%%%%%%%%%%%%
node(node38_32).
deepord(node38_32, 14).         const(14).
functor(node38_32, ACT).         const(ACT).
gram_sempos(node38_32, n_pron_indef).         const(n_pron_indef).
id(node38_32, T_plzensky51278_txt_001_p5s9a20).         const(T_plzensky51278_txt_001_p5s9a20).
nodetype(node38_32, complex).         const(complex).
t_lemma(node38_32, ktery).         const(ktery).
%%%%%%%% node38_33 %%%%%%%%%%%%%%%%%%%
node(node38_33).
deepord(node38_33, x14_1).         const(x14_1).
a_ref_type(node38_33, tree).         const(tree).
a_afun(node38_33, Sb).         const(Sb).
m_form(node38_33, ktery).         const(ktery).
m_lemma(node38_33, ktery).         const(ktery).
m_tag(node38_33, P4YS1__________).         const(P4YS1__________).
w_token(node38_33, ktery).         const(ktery).
a_ord(node38_33, 19).         const(19).
a_parent_id(node38_33, a_plzensky51278_txt_001_p5s9W20).         const(a_plzensky51278_txt_001_p5s9W20).
hide(node38_33, hide).         const(hide).
%%%%%%%% node38_34 %%%%%%%%%%%%%%%%%%%
node(node38_34).
deepord(node38_34, x15_1).         const(x15_1).
a_ref_type(node38_34, tree).         const(tree).
a_afun(node38_34, Atr).         const(Atr).
m_form(node38_34, ziskal).         const(ziskal).
m_lemma(node38_34, ziskat__W).         const(ziskat__W).
m_tag(node38_34, VpYS___XR_AA___).         const(VpYS___XR_AA___).
w_token(node38_34, ziskal).         const(ziskal).
a_ord(node38_34, 20).         const(20).
a_parent_id(node38_34, a_plzensky51278_txt_001_p5s9W17).         const(a_plzensky51278_txt_001_p5s9W17).
hide(node38_34, hide).         const(hide).
%%%%%%%% node38_35 %%%%%%%%%%%%%%%%%%%
node(node38_35).
deepord(node38_35, 17).         const(17).
functor(node38_35, PAT).         const(PAT).
gram_sempos(node38_35, n_denot).         const(n_denot).
id(node38_35, T_plzensky51278_txt_001_p5s9a22).         const(T_plzensky51278_txt_001_p5s9a22).
nodetype(node38_35, complex).         const(complex).
t_lemma(node38_35, bod).         const(bod).
%%%%%%%% node38_36 %%%%%%%%%%%%%%%%%%%
node(node38_36).
deepord(node38_36, 16).         const(16).
functor(node38_36, RSTR).         const(RSTR).
gram_sempos(node38_36, adj_quant_def).         const(adj_quant_def).
id(node38_36, T_plzensky51278_txt_001_p5s9a21).         const(T_plzensky51278_txt_001_p5s9a21).
nodetype(node38_36, complex).         const(complex).
t_lemma(node38_36, devet).         const(devet).
%%%%%%%% node38_37 %%%%%%%%%%%%%%%%%%%
node(node38_37).
deepord(node38_37, x16_1).         const(x16_1).
a_ref_type(node38_37, tree).         const(tree).
a_afun(node38_37, Obj).         const(Obj).
m_form(node38_37, devet).         const(devet).
m_lemma(node38_37, devet_9).         const(devet_9).
m_tag(node38_37, Cn_S4__________).         const(Cn_S4__________).
w_token(node38_37, devet).         const(devet).
a_ord(node38_37, 21).         const(21).
a_parent_id(node38_37, a_plzensky51278_txt_001_p5s9W20).         const(a_plzensky51278_txt_001_p5s9W20).
hide(node38_37, hide).         const(hide).
%%%%%%%% node38_38 %%%%%%%%%%%%%%%%%%%
node(node38_38).
deepord(node38_38, x17_1).         const(x17_1).
a_ref_type(node38_38, tree).         const(tree).
a_afun(node38_38, Atr).         const(Atr).
m_form(node38_38, bodu).         const(bodu).
m_lemma(node38_38, bod).         const(bod).
m_tag(node38_38, NNIP2_____A____).         const(NNIP2_____A____).
w_token(node38_38, bodu).         const(bodu).
w_no_space_after(node38_38, 1).         const(1).
a_ord(node38_38, 22).         const(22).
a_parent_id(node38_38, a_plzensky51278_txt_001_p5s9W21).         const(a_plzensky51278_txt_001_p5s9W21).
hide(node38_38, hide).         const(hide).
edge(node38_0, node38_1).
edge(node38_1, node38_2).
edge(node38_2, node38_3).
edge(node38_3, node38_4).
edge(node38_2, node38_5).
edge(node38_2, node38_6).
edge(node38_6, node38_7).
edge(node38_7, node38_8).
edge(node38_6, node38_9).
edge(node38_6, node38_10).
edge(node38_1, node38_11).
edge(node38_1, node38_12).
edge(node38_12, node38_13).
edge(node38_13, node38_14).
edge(node38_12, node38_15).
edge(node38_12, node38_16).
edge(node38_16, node38_17).
edge(node38_16, node38_18).
edge(node38_12, node38_19).
edge(node38_19, node38_20).
edge(node38_19, node38_21).
edge(node38_21, node38_22).
edge(node38_12, node38_23).
edge(node38_23, node38_24).
edge(node38_23, node38_25).
edge(node38_1, node38_26).
edge(node38_26, node38_27).
edge(node38_27, node38_28).
edge(node38_26, node38_29).
edge(node38_26, node38_30).
edge(node38_26, node38_31).
edge(node38_31, node38_32).
edge(node38_32, node38_33).
edge(node38_31, node38_34).
edge(node38_31, node38_35).
edge(node38_35, node38_36).
edge(node38_36, node38_37).
edge(node38_35, node38_38).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Na unik alarmem upozornilo obsluhu bazenu detekcni zarizeni. 
tree_root(node39_0).
:- valid_root(node39_0).
%%%%%%%% node39_0 %%%%%%%%%%%%%%%%%%%
node(node39_0).
atree_rf(node39_0, a_a_plzensky58468_txt_001_p1s1).         const(a_a_plzensky58468_txt_001_p1s1).
deepord(node39_0, 0).         const(0).
id(node39_0, T_plzensky58468_txt_001_p1s1).         const(T_plzensky58468_txt_001_p1s1).
nodetype(node39_0, root).         const(root).
sentence(node39_0, Na_unik_alarmem_upozornilo_obsluhu_bazenu_detekcni_zarizeni__).         const(Na_unik_alarmem_upozornilo_obsluhu_bazenu_detekcni_zarizeni__).
%%%%%%%% node39_1 %%%%%%%%%%%%%%%%%%%
node(node39_1).
deepord(node39_1, 4).         const(4).
functor(node39_1, PRED).         const(PRED).
gram_sempos(node39_1, v).         const(v).
id(node39_1, T_plzensky58468_txt_001_p1s1a1).         const(T_plzensky58468_txt_001_p1s1a1).
nodetype(node39_1, complex).         const(complex).
t_lemma(node39_1, upozornit).         const(upozornit).
val_frame_rf(node39_1, v_v_w7228f1).         const(v_v_w7228f1).
%%%%%%%% node39_2 %%%%%%%%%%%%%%%%%%%
node(node39_2).
deepord(node39_2, 1).         const(1).
functor(node39_2, PAT).         const(PAT).
id(node39_2, T_plzensky58468_txt_001_p1s1a9).         const(T_plzensky58468_txt_001_p1s1a9).
is_generated(node39_2, 1).         const(1).
nodetype(node39_2, qcomplex).         const(qcomplex).
t_lemma(node39_2, x_Gen).         const(x_Gen).
%%%%%%%% node39_3 %%%%%%%%%%%%%%%%%%%
node(node39_3).
deepord(node39_3, 2).         const(2).
functor(node39_3, ACT).         const(ACT).
gram_sempos(node39_3, n_denot).         const(n_denot).
id(node39_3, T_plzensky58468_txt_001_p1s1a3).         const(T_plzensky58468_txt_001_p1s1a3).
nodetype(node39_3, complex).         const(complex).
t_lemma(node39_3, unik).         const(unik).
%%%%%%%% node39_4 %%%%%%%%%%%%%%%%%%%
node(node39_4).
deepord(node39_4, x2_1).         const(x2_1).
a_ref_type(node39_4, tree).         const(tree).
a_afun(node39_4, AuxP).         const(AuxP).
m_form(node39_4, Na).         const(Na).
m_lemma(node39_4, na_1).         const(na_1).
m_tag(node39_4, RR__4__________).         const(RR__4__________).
w_token(node39_4, Na).         const(Na).
a_ord(node39_4, 1).         const(1).
a_parent_id(node39_4, a_plzensky58468_txt_001_p1s1W4).         const(a_plzensky58468_txt_001_p1s1W4).
hide(node39_4, hide).         const(hide).
%%%%%%%% node39_5 %%%%%%%%%%%%%%%%%%%
node(node39_5).
deepord(node39_5, x2_2).         const(x2_2).
a_ref_type(node39_5, tree).         const(tree).
a_afun(node39_5, Adv).         const(Adv).
m_form(node39_5, unik).         const(unik).
m_lemma(node39_5, unik).         const(unik).
m_tag(node39_5, NNIS4_____A____).         const(NNIS4_____A____).
w_token(node39_5, unik).         const(unik).
a_ord(node39_5, 2).         const(2).
a_parent_id(node39_5, a_plzensky58468_txt_001_p1s1W1).         const(a_plzensky58468_txt_001_p1s1W1).
hide(node39_5, hide).         const(hide).
%%%%%%%% node39_6 %%%%%%%%%%%%%%%%%%%
node(node39_6).
deepord(node39_6, 3).         const(3).
functor(node39_6, MEANS).         const(MEANS).
gram_sempos(node39_6, n_denot).         const(n_denot).
id(node39_6, T_plzensky58468_txt_001_p1s1a4).         const(T_plzensky58468_txt_001_p1s1a4).
nodetype(node39_6, complex).         const(complex).
t_lemma(node39_6, alarm).         const(alarm).
%%%%%%%% node39_7 %%%%%%%%%%%%%%%%%%%
node(node39_7).
deepord(node39_7, x3_1).         const(x3_1).
a_ref_type(node39_7, tree).         const(tree).
a_afun(node39_7, Adv).         const(Adv).
m_form(node39_7, alarmem).         const(alarmem).
m_lemma(node39_7, alarm).         const(alarm).
m_tag(node39_7, NNIS7_____A____).         const(NNIS7_____A____).
w_token(node39_7, alarmem).         const(alarmem).
a_ord(node39_7, 3).         const(3).
a_parent_id(node39_7, a_plzensky58468_txt_001_p1s1W4).         const(a_plzensky58468_txt_001_p1s1W4).
hide(node39_7, hide).         const(hide).
%%%%%%%% node39_8 %%%%%%%%%%%%%%%%%%%
node(node39_8).
deepord(node39_8, x4_1).         const(x4_1).
a_ref_type(node39_8, tree).         const(tree).
a_afun(node39_8, Pred).         const(Pred).
m_form(node39_8, upozornilo).         const(upozornilo).
m_lemma(node39_8, upozornit__W).         const(upozornit__W).
m_tag(node39_8, VpNS___XR_AA___).         const(VpNS___XR_AA___).
w_token(node39_8, upozornilo).         const(upozornilo).
a_ord(node39_8, 4).         const(4).
a_parent_id(node39_8, a_plzensky58468_txt_001_p1s1).         const(a_plzensky58468_txt_001_p1s1).
hide(node39_8, hide).         const(hide).
%%%%%%%% node39_9 %%%%%%%%%%%%%%%%%%%
node(node39_9).
deepord(node39_9, 5).         const(5).
functor(node39_9, ADDR).         const(ADDR).
gram_sempos(node39_9, n_denot).         const(n_denot).
id(node39_9, T_plzensky58468_txt_001_p1s1a5).         const(T_plzensky58468_txt_001_p1s1a5).
nodetype(node39_9, complex).         const(complex).
t_lemma(node39_9, obsluha).         const(obsluha).
%%%%%%%% node39_10 %%%%%%%%%%%%%%%%%%%
node(node39_10).
deepord(node39_10, x5_1).         const(x5_1).
a_ref_type(node39_10, tree).         const(tree).
a_afun(node39_10, Obj).         const(Obj).
m_form(node39_10, obsluhu).         const(obsluhu).
m_lemma(node39_10, obsluha).         const(obsluha).
m_tag(node39_10, NNFS4_____A____).         const(NNFS4_____A____).
w_token(node39_10, obsluhu).         const(obsluhu).
a_ord(node39_10, 5).         const(5).
a_parent_id(node39_10, a_plzensky58468_txt_001_p1s1W4).         const(a_plzensky58468_txt_001_p1s1W4).
hide(node39_10, hide).         const(hide).
%%%%%%%% node39_11 %%%%%%%%%%%%%%%%%%%
node(node39_11).
deepord(node39_11, 6).         const(6).
functor(node39_11, PAT).         const(PAT).
gram_sempos(node39_11, n_denot).         const(n_denot).
id(node39_11, T_plzensky58468_txt_001_p1s1a6).         const(T_plzensky58468_txt_001_p1s1a6).
nodetype(node39_11, complex).         const(complex).
t_lemma(node39_11, bazen).         const(bazen).
%%%%%%%% node39_12 %%%%%%%%%%%%%%%%%%%
node(node39_12).
deepord(node39_12, x6_1).         const(x6_1).
a_ref_type(node39_12, tree).         const(tree).
a_afun(node39_12, Atr).         const(Atr).
m_form(node39_12, bazenu).         const(bazenu).
m_lemma(node39_12, bazen).         const(bazen).
m_tag(node39_12, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node39_12, bazenu).         const(bazenu).
a_ord(node39_12, 6).         const(6).
a_parent_id(node39_12, a_plzensky58468_txt_001_p1s1W5).         const(a_plzensky58468_txt_001_p1s1W5).
hide(node39_12, hide).         const(hide).
%%%%%%%% node39_13 %%%%%%%%%%%%%%%%%%%
node(node39_13).
deepord(node39_13, 8).         const(8).
functor(node39_13, ACT).         const(ACT).
gram_sempos(node39_13, n_denot_neg).         const(n_denot_neg).
id(node39_13, T_plzensky58468_txt_001_p1s1a7).         const(T_plzensky58468_txt_001_p1s1a7).
nodetype(node39_13, complex).         const(complex).
t_lemma(node39_13, zarizeni).         const(zarizeni).
val_frame_rf(node39_13, v_v_w9107f1).         const(v_v_w9107f1).
%%%%%%%% node39_14 %%%%%%%%%%%%%%%%%%%
node(node39_14).
deepord(node39_14, 7).         const(7).
functor(node39_14, RSTR).         const(RSTR).
gram_sempos(node39_14, adj_denot).         const(adj_denot).
id(node39_14, T_plzensky58468_txt_001_p1s1a8).         const(T_plzensky58468_txt_001_p1s1a8).
nodetype(node39_14, complex).         const(complex).
t_lemma(node39_14, detekcni).         const(detekcni).
%%%%%%%% node39_15 %%%%%%%%%%%%%%%%%%%
node(node39_15).
deepord(node39_15, x7_1).         const(x7_1).
a_ref_type(node39_15, tree).         const(tree).
a_afun(node39_15, Atr).         const(Atr).
m_form(node39_15, detekcni).         const(detekcni).
m_lemma(node39_15, detekcni).         const(detekcni).
m_tag(node39_15, AANS1____1A____).         const(AANS1____1A____).
w_token(node39_15, detekcni).         const(detekcni).
a_ord(node39_15, 7).         const(7).
a_parent_id(node39_15, a_plzensky58468_txt_001_p1s1W8).         const(a_plzensky58468_txt_001_p1s1W8).
hide(node39_15, hide).         const(hide).
%%%%%%%% node39_16 %%%%%%%%%%%%%%%%%%%
node(node39_16).
deepord(node39_16, x8_1).         const(x8_1).
a_ref_type(node39_16, tree).         const(tree).
a_afun(node39_16, Sb).         const(Sb).
m_form(node39_16, zarizeni).         const(zarizeni).
m_lemma(node39_16, zarizeni____4dit_).         const(zarizeni____4dit_).
m_tag(node39_16, NNNS1_____A____).         const(NNNS1_____A____).
w_token(node39_16, zarizeni).         const(zarizeni).
w_no_space_after(node39_16, 1).         const(1).
a_ord(node39_16, 8).         const(8).
a_parent_id(node39_16, a_plzensky58468_txt_001_p1s1W4).         const(a_plzensky58468_txt_001_p1s1W4).
hide(node39_16, hide).         const(hide).
edge(node39_0, node39_1).
edge(node39_1, node39_2).
edge(node39_1, node39_3).
edge(node39_3, node39_4).
edge(node39_3, node39_5).
edge(node39_1, node39_6).
edge(node39_6, node39_7).
edge(node39_1, node39_8).
edge(node39_1, node39_9).
edge(node39_9, node39_10).
edge(node39_9, node39_11).
edge(node39_11, node39_12).
edge(node39_1, node39_13).
edge(node39_13, node39_14).
edge(node39_14, node39_15).
edge(node39_13, node39_16).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Obsluha si okamzite oblekla ochranne prostredky a vypnula celou technologii. 
tree_root(node40_0).
:- valid_root(node40_0).
%%%%%%%% node40_0 %%%%%%%%%%%%%%%%%%%
node(node40_0).
atree_rf(node40_0, a_a_plzensky58468_txt_001_p1s2).         const(a_a_plzensky58468_txt_001_p1s2).
deepord(node40_0, 0).         const(0).
id(node40_0, T_plzensky58468_txt_001_p1s2).         const(T_plzensky58468_txt_001_p1s2).
nodetype(node40_0, root).         const(root).
sentence(node40_0, Obsluha_si_okamzite_oblekla_ochranne_prostredky_a_vypnula_celou_technologii__).         const(Obsluha_si_okamzite_oblekla_ochranne_prostredky_a_vypnula_celou_technologii__).
%%%%%%%% node40_1 %%%%%%%%%%%%%%%%%%%
node(node40_1).
deepord(node40_1, 6).         const(6).
functor(node40_1, CONJ).         const(CONJ).
id(node40_1, T_plzensky58468_txt_001_p1s2a1).         const(T_plzensky58468_txt_001_p1s2a1).
nodetype(node40_1, coap).         const(coap).
t_lemma(node40_1, a).         const(a).
%%%%%%%% node40_2 %%%%%%%%%%%%%%%%%%%
node(node40_2).
deepord(node40_2, 1).         const(1).
functor(node40_2, ACT).         const(ACT).
gram_sempos(node40_2, n_denot).         const(n_denot).
id(node40_2, T_plzensky58468_txt_001_p1s2a2).         const(T_plzensky58468_txt_001_p1s2a2).
nodetype(node40_2, complex).         const(complex).
t_lemma(node40_2, obsluha).         const(obsluha).
%%%%%%%% node40_3 %%%%%%%%%%%%%%%%%%%
node(node40_3).
deepord(node40_3, x1_1).         const(x1_1).
a_ref_type(node40_3, tree).         const(tree).
a_afun(node40_3, Sb).         const(Sb).
m_form(node40_3, Obsluha).         const(Obsluha).
m_lemma(node40_3, obsluha).         const(obsluha).
m_tag(node40_3, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node40_3, Obsluha).         const(Obsluha).
a_ord(node40_3, 1).         const(1).
a_parent_id(node40_3, a_plzensky58468_txt_001_p1s2W7).         const(a_plzensky58468_txt_001_p1s2W7).
hide(node40_3, hide).         const(hide).
%%%%%%%% node40_4 %%%%%%%%%%%%%%%%%%%
node(node40_4).
deepord(node40_4, 3).         const(3).
functor(node40_4, PRED).         const(PRED).
gram_sempos(node40_4, v).         const(v).
id(node40_4, T_plzensky58468_txt_001_p1s2a3).         const(T_plzensky58468_txt_001_p1s2a3).
is_member(node40_4, 1).         const(1).
nodetype(node40_4, complex).         const(complex).
t_lemma(node40_4, obleceny).         const(obleceny).
val_frame_rf(node40_4, v_v_w2512f1).         const(v_v_w2512f1).
%%%%%%%% node40_5 %%%%%%%%%%%%%%%%%%%
node(node40_5).
deepord(node40_5, 2).         const(2).
functor(node40_5, TWHEN).         const(TWHEN).
gram_sempos(node40_5, adj_denot).         const(adj_denot).
id(node40_5, T_plzensky58468_txt_001_p1s2a5).         const(T_plzensky58468_txt_001_p1s2a5).
nodetype(node40_5, complex).         const(complex).
subfunctor(node40_5, basic).         const(basic).
t_lemma(node40_5, okamzity).         const(okamzity).
%%%%%%%% node40_6 %%%%%%%%%%%%%%%%%%%
node(node40_6).
deepord(node40_6, x2_1).         const(x2_1).
a_ref_type(node40_6, tree).         const(tree).
a_afun(node40_6, Adv).         const(Adv).
m_form(node40_6, okamzite).         const(okamzite).
m_lemma(node40_6, okamzite____1y_).         const(okamzite____1y_).
m_tag(node40_6, Dg_______1A____).         const(Dg_______1A____).
w_token(node40_6, okamzite).         const(okamzite).
a_ord(node40_6, 3).         const(3).
a_parent_id(node40_6, a_plzensky58468_txt_001_p1s2W4).         const(a_plzensky58468_txt_001_p1s2W4).
hide(node40_6, hide).         const(hide).
%%%%%%%% node40_7 %%%%%%%%%%%%%%%%%%%
node(node40_7).
deepord(node40_7, x3_1).         const(x3_1).
a_ref_type(node40_7, tree).         const(tree).
a_afun(node40_7, AuxT).         const(AuxT).
m_form(node40_7, si).         const(si).
m_lemma(node40_7, se___zvr__zajmeno_castice_).         const(se___zvr__zajmeno_castice_).
m_tag(node40_7, P7_X3__________).         const(P7_X3__________).
w_token(node40_7, si).         const(si).
a_ord(node40_7, 2).         const(2).
a_parent_id(node40_7, a_plzensky58468_txt_001_p1s2W4).         const(a_plzensky58468_txt_001_p1s2W4).
hide(node40_7, hide).         const(hide).
%%%%%%%% node40_8 %%%%%%%%%%%%%%%%%%%
node(node40_8).
deepord(node40_8, x3_2).         const(x3_2).
a_ref_type(node40_8, tree).         const(tree).
a_afun(node40_8, Pred).         const(Pred).
m_form(node40_8, oblekla).         const(oblekla).
m_lemma(node40_8, obleci).         const(obleci).
m_tag(node40_8, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node40_8, oblekla).         const(oblekla).
a_ord(node40_8, 4).         const(4).
a_parent_id(node40_8, a_plzensky58468_txt_001_p1s2W7).         const(a_plzensky58468_txt_001_p1s2W7).
hide(node40_8, hide).         const(hide).
%%%%%%%% node40_9 %%%%%%%%%%%%%%%%%%%
node(node40_9).
deepord(node40_9, 5).         const(5).
functor(node40_9, PAT).         const(PAT).
gram_sempos(node40_9, n_denot).         const(n_denot).
id(node40_9, T_plzensky58468_txt_001_p1s2a6).         const(T_plzensky58468_txt_001_p1s2a6).
nodetype(node40_9, complex).         const(complex).
t_lemma(node40_9, prostredek).         const(prostredek).
%%%%%%%% node40_10 %%%%%%%%%%%%%%%%%%%
node(node40_10).
deepord(node40_10, 4).         const(4).
functor(node40_10, RSTR).         const(RSTR).
gram_sempos(node40_10, adj_denot).         const(adj_denot).
id(node40_10, T_plzensky58468_txt_001_p1s2a7).         const(T_plzensky58468_txt_001_p1s2a7).
nodetype(node40_10, complex).         const(complex).
t_lemma(node40_10, ochranny).         const(ochranny).
%%%%%%%% node40_11 %%%%%%%%%%%%%%%%%%%
node(node40_11).
deepord(node40_11, x4_1).         const(x4_1).
a_ref_type(node40_11, tree).         const(tree).
a_afun(node40_11, Atr).         const(Atr).
m_form(node40_11, ochranne).         const(ochranne).
m_lemma(node40_11, ochranny).         const(ochranny).
m_tag(node40_11, AAIP4____1A____).         const(AAIP4____1A____).
w_token(node40_11, ochranne).         const(ochranne).
a_ord(node40_11, 5).         const(5).
a_parent_id(node40_11, a_plzensky58468_txt_001_p1s2W6).         const(a_plzensky58468_txt_001_p1s2W6).
hide(node40_11, hide).         const(hide).
%%%%%%%% node40_12 %%%%%%%%%%%%%%%%%%%
node(node40_12).
deepord(node40_12, x5_1).         const(x5_1).
a_ref_type(node40_12, tree).         const(tree).
a_afun(node40_12, Obj).         const(Obj).
m_form(node40_12, prostredky).         const(prostredky).
m_lemma(node40_12, prostredek_1___stred_).         const(prostredek_1___stred_).
m_tag(node40_12, NNIP4_____A____).         const(NNIP4_____A____).
w_token(node40_12, prostredky).         const(prostredky).
a_ord(node40_12, 6).         const(6).
a_parent_id(node40_12, a_plzensky58468_txt_001_p1s2W4).         const(a_plzensky58468_txt_001_p1s2W4).
hide(node40_12, hide).         const(hide).
%%%%%%%% node40_13 %%%%%%%%%%%%%%%%%%%
node(node40_13).
deepord(node40_13, x6_1).         const(x6_1).
a_ref_type(node40_13, tree).         const(tree).
a_afun(node40_13, Coord).         const(Coord).
m_form(node40_13, a).         const(a).
m_lemma(node40_13, a_1).         const(a_1).
m_tag(node40_13, J______________).         const(J______________).
w_token(node40_13, a).         const(a).
a_ord(node40_13, 7).         const(7).
a_parent_id(node40_13, a_plzensky58468_txt_001_p1s2).         const(a_plzensky58468_txt_001_p1s2).
hide(node40_13, hide).         const(hide).
%%%%%%%% node40_14 %%%%%%%%%%%%%%%%%%%
node(node40_14).
deepord(node40_14, 7).         const(7).
functor(node40_14, PRED).         const(PRED).
gram_sempos(node40_14, v).         const(v).
id(node40_14, T_plzensky58468_txt_001_p1s2a8).         const(T_plzensky58468_txt_001_p1s2a8).
is_member(node40_14, 1).         const(1).
nodetype(node40_14, complex).         const(complex).
t_lemma(node40_14, vypnout).         const(vypnout).
val_frame_rf(node40_14, v_v_w8208f1).         const(v_v_w8208f1).
%%%%%%%% node40_15 %%%%%%%%%%%%%%%%%%%
node(node40_15).
deepord(node40_15, x7_1).         const(x7_1).
a_ref_type(node40_15, tree).         const(tree).
a_afun(node40_15, Pred).         const(Pred).
m_form(node40_15, vypnula).         const(vypnula).
m_lemma(node40_15, vypnout).         const(vypnout).
m_tag(node40_15, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node40_15, vypnula).         const(vypnula).
a_ord(node40_15, 8).         const(8).
a_parent_id(node40_15, a_plzensky58468_txt_001_p1s2W7).         const(a_plzensky58468_txt_001_p1s2W7).
hide(node40_15, hide).         const(hide).
%%%%%%%% node40_16 %%%%%%%%%%%%%%%%%%%
node(node40_16).
deepord(node40_16, 9).         const(9).
functor(node40_16, PAT).         const(PAT).
gram_sempos(node40_16, n_denot).         const(n_denot).
id(node40_16, T_plzensky58468_txt_001_p1s2a9).         const(T_plzensky58468_txt_001_p1s2a9).
nodetype(node40_16, complex).         const(complex).
t_lemma(node40_16, technologie).         const(technologie).
%%%%%%%% node40_17 %%%%%%%%%%%%%%%%%%%
node(node40_17).
deepord(node40_17, 8).         const(8).
functor(node40_17, RSTR).         const(RSTR).
gram_sempos(node40_17, adj_denot).         const(adj_denot).
id(node40_17, T_plzensky58468_txt_001_p1s2a10).         const(T_plzensky58468_txt_001_p1s2a10).
nodetype(node40_17, complex).         const(complex).
t_lemma(node40_17, cely).         const(cely).
%%%%%%%% node40_18 %%%%%%%%%%%%%%%%%%%
node(node40_18).
deepord(node40_18, x8_1).         const(x8_1).
a_ref_type(node40_18, tree).         const(tree).
a_afun(node40_18, Atr).         const(Atr).
m_form(node40_18, celou).         const(celou).
m_lemma(node40_18, cely).         const(cely).
m_tag(node40_18, AAFS4____1A____).         const(AAFS4____1A____).
w_token(node40_18, celou).         const(celou).
a_ord(node40_18, 9).         const(9).
a_parent_id(node40_18, a_plzensky58468_txt_001_p1s2W10).         const(a_plzensky58468_txt_001_p1s2W10).
hide(node40_18, hide).         const(hide).
%%%%%%%% node40_19 %%%%%%%%%%%%%%%%%%%
node(node40_19).
deepord(node40_19, x9_1).         const(x9_1).
a_ref_type(node40_19, tree).         const(tree).
a_afun(node40_19, Obj).         const(Obj).
m_form(node40_19, technologii).         const(technologii).
m_lemma(node40_19, technologie).         const(technologie).
m_tag(node40_19, NNFS4_____A____).         const(NNFS4_____A____).
w_token(node40_19, technologii).         const(technologii).
w_no_space_after(node40_19, 1).         const(1).
a_ord(node40_19, 10).         const(10).
a_parent_id(node40_19, a_plzensky58468_txt_001_p1s2W8).         const(a_plzensky58468_txt_001_p1s2W8).
hide(node40_19, hide).         const(hide).
edge(node40_0, node40_1).
edge(node40_1, node40_2).
edge(node40_2, node40_3).
edge(node40_1, node40_4).
edge(node40_4, node40_5).
edge(node40_5, node40_6).
edge(node40_4, node40_7).
edge(node40_4, node40_8).
edge(node40_4, node40_9).
edge(node40_9, node40_10).
edge(node40_10, node40_11).
edge(node40_9, node40_12).
edge(node40_1, node40_13).
edge(node40_1, node40_14).
edge(node40_14, node40_15).
edge(node40_14, node40_16).
edge(node40_16, node40_17).
edge(node40_17, node40_18).
edge(node40_16, node40_19).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Doslo take k odvetrani prostor. 
tree_root(node41_0).
:- valid_root(node41_0).
%%%%%%%% node41_0 %%%%%%%%%%%%%%%%%%%
node(node41_0).
atree_rf(node41_0, a_a_plzensky58468_txt_001_p1s3).         const(a_a_plzensky58468_txt_001_p1s3).
deepord(node41_0, 0).         const(0).
id(node41_0, T_plzensky58468_txt_001_p1s3).         const(T_plzensky58468_txt_001_p1s3).
nodetype(node41_0, root).         const(root).
sentence(node41_0, Doslo_take_k_odvetrani_prostor__).         const(Doslo_take_k_odvetrani_prostor__).
%%%%%%%% node41_1 %%%%%%%%%%%%%%%%%%%
node(node41_1).
deepord(node41_1, 2).         const(2).
functor(node41_1, PRED).         const(PRED).
gram_sempos(node41_1, v).         const(v).
id(node41_1, T_plzensky58468_txt_001_p1s3a1).         const(T_plzensky58468_txt_001_p1s3a1).
nodetype(node41_1, complex).         const(complex).
t_lemma(node41_1, dojit).         const(dojit).
val_frame_rf(node41_1, v_v_w582f1).         const(v_v_w582f1).
%%%%%%%% node41_2 %%%%%%%%%%%%%%%%%%%
node(node41_2).
deepord(node41_2, 1).         const(1).
functor(node41_2, ACT).         const(ACT).
gram_sempos(node41_2, n_pron_def_pers).         const(n_pron_def_pers).
id(node41_2, T_plzensky58468_txt_001_p1s3a6).         const(T_plzensky58468_txt_001_p1s3a6).
is_generated(node41_2, 1).         const(1).
nodetype(node41_2, complex).         const(complex).
t_lemma(node41_2, x_PersPron).         const(x_PersPron).
%%%%%%%% node41_3 %%%%%%%%%%%%%%%%%%%
node(node41_3).
deepord(node41_3, x2_1).         const(x2_1).
a_ref_type(node41_3, tree).         const(tree).
a_afun(node41_3, Pred).         const(Pred).
m_form(node41_3, Doslo).         const(Doslo).
m_lemma(node41_3, dojit).         const(dojit).
m_tag(node41_3, VpNS___XR_AA___).         const(VpNS___XR_AA___).
w_token(node41_3, Doslo).         const(Doslo).
a_ord(node41_3, 1).         const(1).
a_parent_id(node41_3, a_plzensky58468_txt_001_p1s3).         const(a_plzensky58468_txt_001_p1s3).
hide(node41_3, hide).         const(hide).
%%%%%%%% node41_4 %%%%%%%%%%%%%%%%%%%
node(node41_4).
deepord(node41_4, 3).         const(3).
functor(node41_4, RHEM).         const(RHEM).
id(node41_4, T_plzensky58468_txt_001_p1s3a2).         const(T_plzensky58468_txt_001_p1s3a2).
nodetype(node41_4, atom).         const(atom).
t_lemma(node41_4, take).         const(take).
%%%%%%%% node41_5 %%%%%%%%%%%%%%%%%%%
node(node41_5).
deepord(node41_5, x3_1).         const(x3_1).
a_ref_type(node41_5, tree).         const(tree).
a_afun(node41_5, Adv).         const(Adv).
m_form(node41_5, take).         const(take).
m_lemma(node41_5, take___rovnez_).         const(take___rovnez_).
m_tag(node41_5, Db_____________).         const(Db_____________).
w_token(node41_5, take).         const(take).
a_ord(node41_5, 2).         const(2).
a_parent_id(node41_5, a_plzensky58468_txt_001_p1s3W1).         const(a_plzensky58468_txt_001_p1s3W1).
hide(node41_5, hide).         const(hide).
%%%%%%%% node41_6 %%%%%%%%%%%%%%%%%%%
node(node41_6).
deepord(node41_6, 4).         const(4).
functor(node41_6, AIM).         const(AIM).
gram_sempos(node41_6, n_denot).         const(n_denot).
id(node41_6, T_plzensky58468_txt_001_p1s3a4).         const(T_plzensky58468_txt_001_p1s3a4).
nodetype(node41_6, complex).         const(complex).
t_lemma(node41_6, odvetrani).         const(odvetrani).
%%%%%%%% node41_7 %%%%%%%%%%%%%%%%%%%
node(node41_7).
deepord(node41_7, x4_1).         const(x4_1).
a_ref_type(node41_7, tree).         const(tree).
a_afun(node41_7, AuxP).         const(AuxP).
m_form(node41_7, k).         const(k).
m_lemma(node41_7, k_1).         const(k_1).
m_tag(node41_7, RR__3__________).         const(RR__3__________).
w_token(node41_7, k).         const(k).
a_ord(node41_7, 3).         const(3).
a_parent_id(node41_7, a_plzensky58468_txt_001_p1s3W1).         const(a_plzensky58468_txt_001_p1s3W1).
hide(node41_7, hide).         const(hide).
%%%%%%%% node41_8 %%%%%%%%%%%%%%%%%%%
node(node41_8).
deepord(node41_8, x4_2).         const(x4_2).
a_ref_type(node41_8, tree).         const(tree).
a_afun(node41_8, Adv).         const(Adv).
m_form(node41_8, odvetrani).         const(odvetrani).
m_lemma(node41_8, odvetrani____3at_).         const(odvetrani____3at_).
m_tag(node41_8, NNNS3_____A____).         const(NNNS3_____A____).
w_token(node41_8, odvetrani).         const(odvetrani).
a_ord(node41_8, 4).         const(4).
a_parent_id(node41_8, a_plzensky58468_txt_001_p1s3W3).         const(a_plzensky58468_txt_001_p1s3W3).
hide(node41_8, hide).         const(hide).
%%%%%%%% node41_9 %%%%%%%%%%%%%%%%%%%
node(node41_9).
deepord(node41_9, 5).         const(5).
functor(node41_9, ID).         const(ID).
gram_sempos(node41_9, n_denot).         const(n_denot).
id(node41_9, T_plzensky58468_txt_001_p1s3a5).         const(T_plzensky58468_txt_001_p1s3a5).
nodetype(node41_9, complex).         const(complex).
t_lemma(node41_9, prostor).         const(prostor).
%%%%%%%% node41_10 %%%%%%%%%%%%%%%%%%%
node(node41_10).
deepord(node41_10, x5_1).         const(x5_1).
a_ref_type(node41_10, tree).         const(tree).
a_afun(node41_10, Atr).         const(Atr).
m_form(node41_10, prostor).         const(prostor).
m_lemma(node41_10, prostor).         const(prostor).
m_tag(node41_10, NNIS1_____A____).         const(NNIS1_____A____).
w_token(node41_10, prostor).         const(prostor).
w_no_space_after(node41_10, 1).         const(1).
a_ord(node41_10, 5).         const(5).
a_parent_id(node41_10, a_plzensky58468_txt_001_p1s3W4).         const(a_plzensky58468_txt_001_p1s3W4).
hide(node41_10, hide).         const(hide).
edge(node41_0, node41_1).
edge(node41_1, node41_2).
edge(node41_1, node41_3).
edge(node41_1, node41_4).
edge(node41_4, node41_5).
edge(node41_1, node41_6).
edge(node41_6, node41_7).
edge(node41_6, node41_8).
edge(node41_6, node41_9).
edge(node41_9, node41_10).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Koncentrace chloru v mistnosti, o rozmeru asi 2 x 1 metr, kde doslo k uniku, cinila dle obsluhy v dobe zjisteni uniku 21 ppm. 
tree_root(node42_0).
:- valid_root(node42_0).
%%%%%%%% node42_0 %%%%%%%%%%%%%%%%%%%
node(node42_0).
atree_rf(node42_0, a_a_plzensky58468_txt_001_p1s4).         const(a_a_plzensky58468_txt_001_p1s4).
deepord(node42_0, 0).         const(0).
id(node42_0, T_plzensky58468_txt_001_p1s4).         const(T_plzensky58468_txt_001_p1s4).
nodetype(node42_0, root).         const(root).
sentence(node42_0, Koncentrace_chloru_v_mistnosti__o_rozmeru_asi_2_x_1_metr__kde_doslo_k_uniku__cinila_dle_obsluhy_v_dobe_zjisteni_uniku_21_ppm__).         const(Koncentrace_chloru_v_mistnosti__o_rozmeru_asi_2_x_1_metr__kde_doslo_k_uniku__cinila_dle_obsluhy_v_dobe_zjisteni_uniku_21_ppm__).
%%%%%%%% node42_1 %%%%%%%%%%%%%%%%%%%
node(node42_1).
deepord(node42_1, 14).         const(14).
functor(node42_1, PRED).         const(PRED).
gram_sempos(node42_1, v).         const(v).
id(node42_1, T_plzensky58468_txt_001_p1s4a1).         const(T_plzensky58468_txt_001_p1s4a1).
nodetype(node42_1, complex).         const(complex).
t_lemma(node42_1, cinit).         const(cinit).
val_frame_rf(node42_1, v_v_w327f1).         const(v_v_w327f1).
%%%%%%%% node42_2 %%%%%%%%%%%%%%%%%%%
node(node42_2).
deepord(node42_2, 1).         const(1).
functor(node42_2, ACT).         const(ACT).
gram_sempos(node42_2, n_denot).         const(n_denot).
id(node42_2, T_plzensky58468_txt_001_p1s4a2).         const(T_plzensky58468_txt_001_p1s4a2).
nodetype(node42_2, complex).         const(complex).
t_lemma(node42_2, koncentrace).         const(koncentrace).
%%%%%%%% node42_3 %%%%%%%%%%%%%%%%%%%
node(node42_3).
deepord(node42_3, x1_1).         const(x1_1).
a_ref_type(node42_3, tree).         const(tree).
a_afun(node42_3, Sb).         const(Sb).
m_form(node42_3, Koncentrace).         const(Koncentrace).
m_lemma(node42_3, koncentrace).         const(koncentrace).
m_tag(node42_3, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node42_3, Koncentrace).         const(Koncentrace).
a_ord(node42_3, 1).         const(1).
a_parent_id(node42_3, a_plzensky58468_txt_001_p1s4W19).         const(a_plzensky58468_txt_001_p1s4W19).
hide(node42_3, hide).         const(hide).
%%%%%%%% node42_4 %%%%%%%%%%%%%%%%%%%
node(node42_4).
deepord(node42_4, 2).         const(2).
functor(node42_4, APP).         const(APP).
gram_sempos(node42_4, n_denot).         const(n_denot).
id(node42_4, T_plzensky58468_txt_001_p1s4a3).         const(T_plzensky58468_txt_001_p1s4a3).
nodetype(node42_4, complex).         const(complex).
t_lemma(node42_4, chlor).         const(chlor).
%%%%%%%% node42_5 %%%%%%%%%%%%%%%%%%%
node(node42_5).
deepord(node42_5, x2_1).         const(x2_1).
a_ref_type(node42_5, tree).         const(tree).
a_afun(node42_5, Atr).         const(Atr).
m_form(node42_5, chloru).         const(chloru).
m_lemma(node42_5, chlor).         const(chlor).
m_tag(node42_5, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node42_5, chloru).         const(chloru).
a_ord(node42_5, 2).         const(2).
a_parent_id(node42_5, a_plzensky58468_txt_001_p1s4W1).         const(a_plzensky58468_txt_001_p1s4W1).
hide(node42_5, hide).         const(hide).
%%%%%%%% node42_6 %%%%%%%%%%%%%%%%%%%
node(node42_6).
deepord(node42_6, 4).         const(4).
functor(node42_6, RSTR).         const(RSTR).
id(node42_6, T_plzensky58468_txt_001_p1s4a4).         const(T_plzensky58468_txt_001_p1s4a4).
nodetype(node42_6, complex).         const(complex).
t_lemma(node42_6, x_Comma).         const(x_Comma).
%%%%%%%% node42_7 %%%%%%%%%%%%%%%%%%%
node(node42_7).
deepord(node42_7, 3).         const(3).
functor(node42_7, LOC).         const(LOC).
gram_sempos(node42_7, n_denot).         const(n_denot).
id(node42_7, T_plzensky58468_txt_001_p1s4a6).         const(T_plzensky58468_txt_001_p1s4a6).
nodetype(node42_7, complex).         const(complex).
subfunctor(node42_7, basic).         const(basic).
t_lemma(node42_7, mistnost).         const(mistnost).
%%%%%%%% node42_8 %%%%%%%%%%%%%%%%%%%
node(node42_8).
deepord(node42_8, x3_1).         const(x3_1).
a_ref_type(node42_8, tree).         const(tree).
a_afun(node42_8, AuxP).         const(AuxP).
m_form(node42_8, v).         const(v).
m_lemma(node42_8, v_1).         const(v_1).
m_tag(node42_8, RR__6__________).         const(RR__6__________).
w_token(node42_8, v).         const(v).
a_ord(node42_8, 3).         const(3).
a_parent_id(node42_8, a_plzensky58468_txt_001_p1s4W5).         const(a_plzensky58468_txt_001_p1s4W5).
hide(node42_8, hide).         const(hide).
%%%%%%%% node42_9 %%%%%%%%%%%%%%%%%%%
node(node42_9).
deepord(node42_9, x3_2).         const(x3_2).
a_ref_type(node42_9, tree).         const(tree).
a_afun(node42_9, Atr).         const(Atr).
m_form(node42_9, mistnosti).         const(mistnosti).
m_lemma(node42_9, mistnost).         const(mistnost).
m_tag(node42_9, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node42_9, mistnosti).         const(mistnosti).
w_no_space_after(node42_9, 1).         const(1).
a_ord(node42_9, 4).         const(4).
a_parent_id(node42_9, a_plzensky58468_txt_001_p1s4W3).         const(a_plzensky58468_txt_001_p1s4W3).
hide(node42_9, hide).         const(hide).
%%%%%%%% node42_10 %%%%%%%%%%%%%%%%%%%
node(node42_10).
deepord(node42_10, x4_1).         const(x4_1).
a_ref_type(node42_10, tree).         const(tree).
a_afun(node42_10, AuxX).         const(AuxX).
m_form(node42_10, x_).         const(x_).
m_lemma(node42_10, x_).         const(x_).
m_tag(node42_10, Z______________).         const(Z______________).
w_token(node42_10, x_).         const(x_).
a_ord(node42_10, 5).         const(5).
a_parent_id(node42_10, a_plzensky58468_txt_001_p1s4W1).         const(a_plzensky58468_txt_001_p1s4W1).
hide(node42_10, hide).         const(hide).
%%%%%%%% node42_11 %%%%%%%%%%%%%%%%%%%
node(node42_11).
deepord(node42_11, 5).         const(5).
functor(node42_11, PAT).         const(PAT).
gram_sempos(node42_11, n_denot).         const(n_denot).
id(node42_11, T_plzensky58468_txt_001_p1s4a8).         const(T_plzensky58468_txt_001_p1s4a8).
nodetype(node42_11, complex).         const(complex).
t_lemma(node42_11, rozmer).         const(rozmer).
%%%%%%%% node42_12 %%%%%%%%%%%%%%%%%%%
node(node42_12).
deepord(node42_12, x5_1).         const(x5_1).
a_ref_type(node42_12, tree).         const(tree).
a_afun(node42_12, AuxP).         const(AuxP).
m_form(node42_12, o).         const(o).
m_lemma(node42_12, o_1).         const(o_1).
m_tag(node42_12, RR__6__________).         const(RR__6__________).
w_token(node42_12, o).         const(o).
a_ord(node42_12, 6).         const(6).
a_parent_id(node42_12, a_plzensky58468_txt_001_p1s4W5).         const(a_plzensky58468_txt_001_p1s4W5).
hide(node42_12, hide).         const(hide).
%%%%%%%% node42_13 %%%%%%%%%%%%%%%%%%%
node(node42_13).
deepord(node42_13, x5_2).         const(x5_2).
a_ref_type(node42_13, tree).         const(tree).
a_afun(node42_13, Atr).         const(Atr).
m_form(node42_13, rozmeru).         const(rozmeru).
m_lemma(node42_13, rozmer).         const(rozmer).
m_tag(node42_13, NNIS6_____A____).         const(NNIS6_____A____).
w_token(node42_13, rozmeru).         const(rozmeru).
a_ord(node42_13, 7).         const(7).
a_parent_id(node42_13, a_plzensky58468_txt_001_p1s4W6).         const(a_plzensky58468_txt_001_p1s4W6).
hide(node42_13, hide).         const(hide).
%%%%%%%% node42_14 %%%%%%%%%%%%%%%%%%%
node(node42_14).
deepord(node42_14, 8).         const(8).
functor(node42_14, OPER).         const(OPER).
id(node42_14, T_plzensky58468_txt_001_p1s4a9).         const(T_plzensky58468_txt_001_p1s4a9).
nodetype(node42_14, coap).         const(coap).
t_lemma(node42_14, x).         const(x).
%%%%%%%% node42_15 %%%%%%%%%%%%%%%%%%%
node(node42_15).
deepord(node42_15, 6).         const(6).
functor(node42_15, EXT).         const(EXT).
gram_sempos(node42_15, adv_denot_ngrad_nneg).         const(adv_denot_ngrad_nneg).
id(node42_15, T_plzensky58468_txt_001_p1s4a10).         const(T_plzensky58468_txt_001_p1s4a10).
nodetype(node42_15, complex).         const(complex).
subfunctor(node42_15, basic).         const(basic).
t_lemma(node42_15, asi).         const(asi).
%%%%%%%% node42_16 %%%%%%%%%%%%%%%%%%%
node(node42_16).
deepord(node42_16, x6_1).         const(x6_1).
a_ref_type(node42_16, tree).         const(tree).
a_afun(node42_16, AuxZ).         const(AuxZ).
m_form(node42_16, asi).         const(asi).
m_lemma(node42_16, asi).         const(asi).
m_tag(node42_16, TT_____________).         const(TT_____________).
w_token(node42_16, asi).         const(asi).
a_ord(node42_16, 8).         const(8).
a_parent_id(node42_16, a_plzensky58468_txt_001_p1s4W10).         const(a_plzensky58468_txt_001_p1s4W10).
hide(node42_16, hide).         const(hide).
%%%%%%%% node42_17 %%%%%%%%%%%%%%%%%%%
node(node42_17).
deepord(node42_17, 7).         const(7).
functor(node42_17, RSTR).         const(RSTR).
gram_sempos(node42_17, adj_quant_def).         const(adj_quant_def).
id(node42_17, T_plzensky58468_txt_001_p1s4a11).         const(T_plzensky58468_txt_001_p1s4a11).
is_member(node42_17, 1).         const(1).
nodetype(node42_17, complex).         const(complex).
t_lemma(node42_17, 2).         const(2).
%%%%%%%% node42_18 %%%%%%%%%%%%%%%%%%%
node(node42_18).
deepord(node42_18, x7_1).         const(x7_1).
a_ref_type(node42_18, tree).         const(tree).
a_afun(node42_18, Atr).         const(Atr).
m_form(node42_18, 2).         const(2).
m_lemma(node42_18, 2).         const(2).
m_tag(node42_18, C=_____________).         const(C=_____________).
w_token(node42_18, 2).         const(2).
a_ord(node42_18, 9).         const(9).
a_parent_id(node42_18, a_plzensky58468_txt_001_p1s4W10).         const(a_plzensky58468_txt_001_p1s4W10).
hide(node42_18, hide).         const(hide).
%%%%%%%% node42_19 %%%%%%%%%%%%%%%%%%%
node(node42_19).
deepord(node42_19, x8_1).         const(x8_1).
a_ref_type(node42_19, tree).         const(tree).
a_afun(node42_19, Coord).         const(Coord).
m_form(node42_19, x).         const(x).
m_lemma(node42_19, x_5___nahr__symbolu_krat__mat__symbol_).         const(x_5___nahr__symbolu_krat__mat__symbol_).
m_tag(node42_19, J______________).         const(J______________).
w_token(node42_19, x).         const(x).
a_ord(node42_19, 10).         const(10).
a_parent_id(node42_19, a_plzensky58468_txt_001_p1s4W7).         const(a_plzensky58468_txt_001_p1s4W7).
hide(node42_19, hide).         const(hide).
%%%%%%%% node42_20 %%%%%%%%%%%%%%%%%%%
node(node42_20).
deepord(node42_20, 9).         const(9).
functor(node42_20, RSTR).         const(RSTR).
gram_sempos(node42_20, adj_quant_def).         const(adj_quant_def).
id(node42_20, T_plzensky58468_txt_001_p1s4a12).         const(T_plzensky58468_txt_001_p1s4a12).
is_member(node42_20, 1).         const(1).
nodetype(node42_20, complex).         const(complex).
t_lemma(node42_20, 1).         const(1).
%%%%%%%% node42_21 %%%%%%%%%%%%%%%%%%%
node(node42_21).
deepord(node42_21, x9_1).         const(x9_1).
a_ref_type(node42_21, tree).         const(tree).
a_afun(node42_21, Atr).         const(Atr).
m_form(node42_21, 1).         const(1).
m_lemma(node42_21, 1).         const(1).
m_tag(node42_21, C=_____________).         const(C=_____________).
w_token(node42_21, 1).         const(1).
a_ord(node42_21, 11).         const(11).
a_parent_id(node42_21, a_plzensky58468_txt_001_p1s4W10).         const(a_plzensky58468_txt_001_p1s4W10).
hide(node42_21, hide).         const(hide).
%%%%%%%% node42_22 %%%%%%%%%%%%%%%%%%%
node(node42_22).
deepord(node42_22, 10).         const(10).
functor(node42_22, RSTR).         const(RSTR).
gram_sempos(node42_22, n_denot).         const(n_denot).
id(node42_22, T_plzensky58468_txt_001_p1s4a13).         const(T_plzensky58468_txt_001_p1s4a13).
nodetype(node42_22, complex).         const(complex).
t_lemma(node42_22, metr).         const(metr).
%%%%%%%% node42_23 %%%%%%%%%%%%%%%%%%%
node(node42_23).
deepord(node42_23, x10_1).         const(x10_1).
a_ref_type(node42_23, tree).         const(tree).
a_afun(node42_23, Atr).         const(Atr).
m_form(node42_23, metr).         const(metr).
m_lemma(node42_23, metr).         const(metr).
m_tag(node42_23, NNIS1_____A____).         const(NNIS1_____A____).
w_token(node42_23, metr).         const(metr).
w_no_space_after(node42_23, 1).         const(1).
a_ord(node42_23, 12).         const(12).
a_parent_id(node42_23, a_plzensky58468_txt_001_p1s4W5).         const(a_plzensky58468_txt_001_p1s4W5).
hide(node42_23, hide).         const(hide).
%%%%%%%% node42_24 %%%%%%%%%%%%%%%%%%%
node(node42_24).
deepord(node42_24, 12).         const(12).
functor(node42_24, RSTR).         const(RSTR).
gram_sempos(node42_24, v).         const(v).
id(node42_24, T_plzensky58468_txt_001_p1s4a14).         const(T_plzensky58468_txt_001_p1s4a14).
nodetype(node42_24, complex).         const(complex).
t_lemma(node42_24, dojit).         const(dojit).
val_frame_rf(node42_24, v_v_w582f1).         const(v_v_w582f1).
%%%%%%%% node42_25 %%%%%%%%%%%%%%%%%%%
node(node42_25).
deepord(node42_25, 11).         const(11).
functor(node42_25, LOC).         const(LOC).
gram_sempos(node42_25, adv_pron_indef).         const(adv_pron_indef).
id(node42_25, T_plzensky58468_txt_001_p1s4a16).         const(T_plzensky58468_txt_001_p1s4a16).
nodetype(node42_25, complex).         const(complex).
subfunctor(node42_25, basic).         const(basic).
t_lemma(node42_25, kde).         const(kde).
%%%%%%%% node42_26 %%%%%%%%%%%%%%%%%%%
node(node42_26).
deepord(node42_26, x11_1).         const(x11_1).
a_ref_type(node42_26, tree).         const(tree).
a_afun(node42_26, Adv).         const(Adv).
m_form(node42_26, kde).         const(kde).
m_lemma(node42_26, kde).         const(kde).
m_tag(node42_26, Db_____________).         const(Db_____________).
w_token(node42_26, kde).         const(kde).
a_ord(node42_26, 14).         const(14).
a_parent_id(node42_26, a_plzensky58468_txt_001_p1s4W15).         const(a_plzensky58468_txt_001_p1s4W15).
hide(node42_26, hide).         const(hide).
%%%%%%%% node42_27 %%%%%%%%%%%%%%%%%%%
node(node42_27).
deepord(node42_27, x12_1).         const(x12_1).
a_ref_type(node42_27, tree).         const(tree).
a_afun(node42_27, Atr).         const(Atr).
m_form(node42_27, doslo).         const(doslo).
m_lemma(node42_27, dojit).         const(dojit).
m_tag(node42_27, VpNS___XR_AA___).         const(VpNS___XR_AA___).
w_token(node42_27, doslo).         const(doslo).
a_ord(node42_27, 15).         const(15).
a_parent_id(node42_27, a_plzensky58468_txt_001_p1s4W12).         const(a_plzensky58468_txt_001_p1s4W12).
hide(node42_27, hide).         const(hide).
%%%%%%%% node42_28 %%%%%%%%%%%%%%%%%%%
node(node42_28).
deepord(node42_28, 13).         const(13).
functor(node42_28, ACT).         const(ACT).
gram_sempos(node42_28, n_denot).         const(n_denot).
id(node42_28, T_plzensky58468_txt_001_p1s4a18).         const(T_plzensky58468_txt_001_p1s4a18).
nodetype(node42_28, complex).         const(complex).
t_lemma(node42_28, unik).         const(unik).
%%%%%%%% node42_29 %%%%%%%%%%%%%%%%%%%
node(node42_29).
deepord(node42_29, x13_1).         const(x13_1).
a_ref_type(node42_29, tree).         const(tree).
a_afun(node42_29, AuxP).         const(AuxP).
m_form(node42_29, k).         const(k).
m_lemma(node42_29, k_1).         const(k_1).
m_tag(node42_29, RR__3__________).         const(RR__3__________).
w_token(node42_29, k).         const(k).
a_ord(node42_29, 16).         const(16).
a_parent_id(node42_29, a_plzensky58468_txt_001_p1s4W15).         const(a_plzensky58468_txt_001_p1s4W15).
hide(node42_29, hide).         const(hide).
%%%%%%%% node42_30 %%%%%%%%%%%%%%%%%%%
node(node42_30).
deepord(node42_30, x13_2).         const(x13_2).
a_ref_type(node42_30, tree).         const(tree).
a_afun(node42_30, Adv).         const(Adv).
m_form(node42_30, uniku).         const(uniku).
m_lemma(node42_30, unik).         const(unik).
m_tag(node42_30, NNIS3_____A____).         const(NNIS3_____A____).
w_token(node42_30, uniku).         const(uniku).
w_no_space_after(node42_30, 1).         const(1).
a_ord(node42_30, 17).         const(17).
a_parent_id(node42_30, a_plzensky58468_txt_001_p1s4W16).         const(a_plzensky58468_txt_001_p1s4W16).
hide(node42_30, hide).         const(hide).
%%%%%%%% node42_31 %%%%%%%%%%%%%%%%%%%
node(node42_31).
deepord(node42_31, x14_1).         const(x14_1).
a_ref_type(node42_31, tree).         const(tree).
a_afun(node42_31, Pred).         const(Pred).
m_form(node42_31, cinila).         const(cinila).
m_lemma(node42_31, cinit__T).         const(cinit__T).
m_tag(node42_31, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node42_31, cinila).         const(cinila).
a_ord(node42_31, 19).         const(19).
a_parent_id(node42_31, a_plzensky58468_txt_001_p1s4).         const(a_plzensky58468_txt_001_p1s4).
hide(node42_31, hide).         const(hide).
%%%%%%%% node42_32 %%%%%%%%%%%%%%%%%%%
node(node42_32).
deepord(node42_32, 15).         const(15).
functor(node42_32, CRIT).         const(CRIT).
gram_sempos(node42_32, n_denot).         const(n_denot).
id(node42_32, T_plzensky58468_txt_001_p1s4a21).         const(T_plzensky58468_txt_001_p1s4a21).
nodetype(node42_32, complex).         const(complex).
t_lemma(node42_32, obsluha).         const(obsluha).
%%%%%%%% node42_33 %%%%%%%%%%%%%%%%%%%
node(node42_33).
deepord(node42_33, x15_1).         const(x15_1).
a_ref_type(node42_33, tree).         const(tree).
a_afun(node42_33, AuxP).         const(AuxP).
m_form(node42_33, dle).         const(dle).
m_lemma(node42_33, dle).         const(dle).
m_tag(node42_33, RR__2__________).         const(RR__2__________).
w_token(node42_33, dle).         const(dle).
a_ord(node42_33, 20).         const(20).
a_parent_id(node42_33, a_plzensky58468_txt_001_p1s4W19).         const(a_plzensky58468_txt_001_p1s4W19).
hide(node42_33, hide).         const(hide).
%%%%%%%% node42_34 %%%%%%%%%%%%%%%%%%%
node(node42_34).
deepord(node42_34, x15_2).         const(x15_2).
a_ref_type(node42_34, tree).         const(tree).
a_afun(node42_34, Adv).         const(Adv).
m_form(node42_34, obsluhy).         const(obsluhy).
m_lemma(node42_34, obsluha).         const(obsluha).
m_tag(node42_34, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node42_34, obsluhy).         const(obsluhy).
a_ord(node42_34, 21).         const(21).
a_parent_id(node42_34, a_plzensky58468_txt_001_p1s4W20).         const(a_plzensky58468_txt_001_p1s4W20).
hide(node42_34, hide).         const(hide).
%%%%%%%% node42_35 %%%%%%%%%%%%%%%%%%%
node(node42_35).
deepord(node42_35, 16).         const(16).
functor(node42_35, TWHEN).         const(TWHEN).
gram_sempos(node42_35, n_denot).         const(n_denot).
id(node42_35, T_plzensky58468_txt_001_p1s4a23).         const(T_plzensky58468_txt_001_p1s4a23).
nodetype(node42_35, complex).         const(complex).
subfunctor(node42_35, basic).         const(basic).
t_lemma(node42_35, doba).         const(doba).
%%%%%%%% node42_36 %%%%%%%%%%%%%%%%%%%
node(node42_36).
deepord(node42_36, x16_1).         const(x16_1).
a_ref_type(node42_36, tree).         const(tree).
a_afun(node42_36, AuxP).         const(AuxP).
m_form(node42_36, v).         const(v).
m_lemma(node42_36, v_1).         const(v_1).
m_tag(node42_36, RR__6__________).         const(RR__6__________).
w_token(node42_36, v).         const(v).
a_ord(node42_36, 22).         const(22).
a_parent_id(node42_36, a_plzensky58468_txt_001_p1s4W19).         const(a_plzensky58468_txt_001_p1s4W19).
hide(node42_36, hide).         const(hide).
%%%%%%%% node42_37 %%%%%%%%%%%%%%%%%%%
node(node42_37).
deepord(node42_37, x16_2).         const(x16_2).
a_ref_type(node42_37, tree).         const(tree).
a_afun(node42_37, Adv).         const(Adv).
m_form(node42_37, dobe).         const(dobe).
m_lemma(node42_37, doba).         const(doba).
m_tag(node42_37, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node42_37, dobe).         const(dobe).
a_ord(node42_37, 23).         const(23).
a_parent_id(node42_37, a_plzensky58468_txt_001_p1s4W22).         const(a_plzensky58468_txt_001_p1s4W22).
hide(node42_37, hide).         const(hide).
%%%%%%%% node42_38 %%%%%%%%%%%%%%%%%%%
node(node42_38).
deepord(node42_38, 17).         const(17).
functor(node42_38, EXT).         const(EXT).
gram_sempos(node42_38, n_denot_neg).         const(n_denot_neg).
id(node42_38, T_plzensky58468_txt_001_p1s4a24).         const(T_plzensky58468_txt_001_p1s4a24).
nodetype(node42_38, complex).         const(complex).
subfunctor(node42_38, basic).         const(basic).
t_lemma(node42_38, zjisteni).         const(zjisteni).
val_frame_rf(node42_38, v_v_w9516f2).         const(v_v_w9516f2).
%%%%%%%% node42_39 %%%%%%%%%%%%%%%%%%%
node(node42_39).
deepord(node42_39, x17_1).         const(x17_1).
a_ref_type(node42_39, tree).         const(tree).
a_afun(node42_39, Obj).         const(Obj).
m_form(node42_39, zjisteni).         const(zjisteni).
m_lemma(node42_39, zjisteni____5stit_).         const(zjisteni____5stit_).
m_tag(node42_39, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node42_39, zjisteni).         const(zjisteni).
a_ord(node42_39, 24).         const(24).
a_parent_id(node42_39, a_plzensky58468_txt_001_p1s4W19).         const(a_plzensky58468_txt_001_p1s4W19).
hide(node42_39, hide).         const(hide).
%%%%%%%% node42_40 %%%%%%%%%%%%%%%%%%%
node(node42_40).
deepord(node42_40, 18).         const(18).
functor(node42_40, PAT).         const(PAT).
gram_sempos(node42_40, n_denot).         const(n_denot).
id(node42_40, T_plzensky58468_txt_001_p1s4a25).         const(T_plzensky58468_txt_001_p1s4a25).
nodetype(node42_40, complex).         const(complex).
t_lemma(node42_40, unik).         const(unik).
%%%%%%%% node42_41 %%%%%%%%%%%%%%%%%%%
node(node42_41).
deepord(node42_41, x18_1).         const(x18_1).
a_ref_type(node42_41, tree).         const(tree).
a_afun(node42_41, Atr).         const(Atr).
m_form(node42_41, uniku).         const(uniku).
m_lemma(node42_41, unik).         const(unik).
m_tag(node42_41, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node42_41, uniku).         const(uniku).
a_ord(node42_41, 25).         const(25).
a_parent_id(node42_41, a_plzensky58468_txt_001_p1s4W24).         const(a_plzensky58468_txt_001_p1s4W24).
hide(node42_41, hide).         const(hide).
%%%%%%%% node42_42 %%%%%%%%%%%%%%%%%%%
node(node42_42).
deepord(node42_42, 20).         const(20).
functor(node42_42, EXT).         const(EXT).
gram_sempos(node42_42, n_denot).         const(n_denot).
id(node42_42, T_plzensky58468_txt_001_p1s4a27).         const(T_plzensky58468_txt_001_p1s4a27).
nodetype(node42_42, complex).         const(complex).
subfunctor(node42_42, basic).         const(basic).
t_lemma(node42_42, ppm).         const(ppm).
%%%%%%%% node42_43 %%%%%%%%%%%%%%%%%%%
node(node42_43).
deepord(node42_43, 19).         const(19).
functor(node42_43, RSTR).         const(RSTR).
gram_sempos(node42_43, adj_quant_def).         const(adj_quant_def).
id(node42_43, T_plzensky58468_txt_001_p1s4a26).         const(T_plzensky58468_txt_001_p1s4a26).
nodetype(node42_43, complex).         const(complex).
t_lemma(node42_43, 21).         const(21).
%%%%%%%% node42_44 %%%%%%%%%%%%%%%%%%%
node(node42_44).
deepord(node42_44, x19_1).         const(x19_1).
a_ref_type(node42_44, tree).         const(tree).
a_afun(node42_44, Obj).         const(Obj).
m_form(node42_44, 21).         const(21).
m_lemma(node42_44, 21).         const(21).
m_tag(node42_44, C=_____________).         const(C=_____________).
w_token(node42_44, 21).         const(21).
a_ord(node42_44, 26).         const(26).
a_parent_id(node42_44, a_plzensky58468_txt_001_p1s4W19).         const(a_plzensky58468_txt_001_p1s4W19).
hide(node42_44, hide).         const(hide).
%%%%%%%% node42_45 %%%%%%%%%%%%%%%%%%%
node(node42_45).
deepord(node42_45, x20_1).         const(x20_1).
a_ref_type(node42_45, tree).         const(tree).
a_afun(node42_45, Atr).         const(Atr).
m_form(node42_45, ppm).         const(ppm).
m_lemma(node42_45, ppm__B___partes_per_milion_).         const(ppm__B___partes_per_milion_).
m_tag(node42_45, NNFXX_____A___8).         const(NNFXX_____A___8).
w_token(node42_45, ppm).         const(ppm).
w_no_space_after(node42_45, 1).         const(1).
a_ord(node42_45, 27).         const(27).
a_parent_id(node42_45, a_plzensky58468_txt_001_p1s4W26).         const(a_plzensky58468_txt_001_p1s4W26).
hide(node42_45, hide).         const(hide).
edge(node42_0, node42_1).
edge(node42_1, node42_2).
edge(node42_2, node42_3).
edge(node42_2, node42_4).
edge(node42_4, node42_5).
edge(node42_2, node42_6).
edge(node42_6, node42_7).
edge(node42_7, node42_8).
edge(node42_7, node42_9).
edge(node42_6, node42_10).
edge(node42_6, node42_11).
edge(node42_11, node42_12).
edge(node42_11, node42_13).
edge(node42_11, node42_14).
edge(node42_14, node42_15).
edge(node42_15, node42_16).
edge(node42_14, node42_17).
edge(node42_17, node42_18).
edge(node42_14, node42_19).
edge(node42_14, node42_20).
edge(node42_20, node42_21).
edge(node42_6, node42_22).
edge(node42_22, node42_23).
edge(node42_22, node42_24).
edge(node42_24, node42_25).
edge(node42_25, node42_26).
edge(node42_24, node42_27).
edge(node42_24, node42_28).
edge(node42_28, node42_29).
edge(node42_28, node42_30).
edge(node42_1, node42_31).
edge(node42_1, node42_32).
edge(node42_32, node42_33).
edge(node42_32, node42_34).
edge(node42_1, node42_35).
edge(node42_35, node42_36).
edge(node42_35, node42_37).
edge(node42_1, node42_38).
edge(node42_38, node42_39).
edge(node42_38, node42_40).
edge(node42_40, node42_41).
edge(node42_1, node42_42).
edge(node42_42, node42_43).
edge(node42_43, node42_44).
edge(node42_42, node42_45).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% K bazenu vyjeli ihned mistni profesionalni hasici. 
tree_root(node43_0).
:- valid_root(node43_0).
%%%%%%%% node43_0 %%%%%%%%%%%%%%%%%%%
node(node43_0).
atree_rf(node43_0, a_a_plzensky58468_txt_001_p1s5).         const(a_a_plzensky58468_txt_001_p1s5).
deepord(node43_0, 0).         const(0).
id(node43_0, T_plzensky58468_txt_001_p1s5).         const(T_plzensky58468_txt_001_p1s5).
nodetype(node43_0, root).         const(root).
sentence(node43_0, K_bazenu_vyjeli_ihned_mistni_profesionalni_hasici__).         const(K_bazenu_vyjeli_ihned_mistni_profesionalni_hasici__).
%%%%%%%% node43_1 %%%%%%%%%%%%%%%%%%%
node(node43_1).
deepord(node43_1, 2).         const(2).
functor(node43_1, PRED).         const(PRED).
gram_sempos(node43_1, v).         const(v).
id(node43_1, T_plzensky58468_txt_001_p1s5a1).         const(T_plzensky58468_txt_001_p1s5a1).
nodetype(node43_1, complex).         const(complex).
t_lemma(node43_1, vyjet).         const(vyjet).
val_frame_rf(node43_1, v_v_w7984f1).         const(v_v_w7984f1).
%%%%%%%% node43_2 %%%%%%%%%%%%%%%%%%%
node(node43_2).
deepord(node43_2, 1).         const(1).
functor(node43_2, PAT).         const(PAT).
gram_sempos(node43_2, n_denot).         const(n_denot).
id(node43_2, T_plzensky58468_txt_001_p1s5a3).         const(T_plzensky58468_txt_001_p1s5a3).
nodetype(node43_2, complex).         const(complex).
t_lemma(node43_2, bazen).         const(bazen).
%%%%%%%% node43_3 %%%%%%%%%%%%%%%%%%%
node(node43_3).
deepord(node43_3, x1_1).         const(x1_1).
a_ref_type(node43_3, tree).         const(tree).
a_afun(node43_3, AuxP).         const(AuxP).
m_form(node43_3, K).         const(K).
m_lemma(node43_3, k_1).         const(k_1).
m_tag(node43_3, RR__3__________).         const(RR__3__________).
w_token(node43_3, K).         const(K).
a_ord(node43_3, 1).         const(1).
a_parent_id(node43_3, a_plzensky58468_txt_001_p1s5W3).         const(a_plzensky58468_txt_001_p1s5W3).
hide(node43_3, hide).         const(hide).
%%%%%%%% node43_4 %%%%%%%%%%%%%%%%%%%
node(node43_4).
deepord(node43_4, x1_2).         const(x1_2).
a_ref_type(node43_4, tree).         const(tree).
a_afun(node43_4, Adv).         const(Adv).
m_form(node43_4, bazenu).         const(bazenu).
m_lemma(node43_4, bazen).         const(bazen).
m_tag(node43_4, NNIS3_____A____).         const(NNIS3_____A____).
w_token(node43_4, bazenu).         const(bazenu).
a_ord(node43_4, 2).         const(2).
a_parent_id(node43_4, a_plzensky58468_txt_001_p1s5W1).         const(a_plzensky58468_txt_001_p1s5W1).
hide(node43_4, hide).         const(hide).
%%%%%%%% node43_5 %%%%%%%%%%%%%%%%%%%
node(node43_5).
deepord(node43_5, x2_1).         const(x2_1).
a_ref_type(node43_5, tree).         const(tree).
a_afun(node43_5, Pred).         const(Pred).
m_form(node43_5, vyjeli).         const(vyjeli).
m_lemma(node43_5, vyjet).         const(vyjet).
m_tag(node43_5, VpMP___XR_AA___).         const(VpMP___XR_AA___).
w_token(node43_5, vyjeli).         const(vyjeli).
a_ord(node43_5, 3).         const(3).
a_parent_id(node43_5, a_plzensky58468_txt_001_p1s5).         const(a_plzensky58468_txt_001_p1s5).
hide(node43_5, hide).         const(hide).
%%%%%%%% node43_6 %%%%%%%%%%%%%%%%%%%
node(node43_6).
deepord(node43_6, 3).         const(3).
functor(node43_6, RHEM).         const(RHEM).
id(node43_6, T_plzensky58468_txt_001_p1s5a5).         const(T_plzensky58468_txt_001_p1s5a5).
nodetype(node43_6, atom).         const(atom).
t_lemma(node43_6, ihned).         const(ihned).
%%%%%%%% node43_7 %%%%%%%%%%%%%%%%%%%
node(node43_7).
deepord(node43_7, x3_1).         const(x3_1).
a_ref_type(node43_7, tree).         const(tree).
a_afun(node43_7, AuxZ).         const(AuxZ).
m_form(node43_7, ihned).         const(ihned).
m_lemma(node43_7, ihned).         const(ihned).
m_tag(node43_7, Db_____________).         const(Db_____________).
w_token(node43_7, ihned).         const(ihned).
a_ord(node43_7, 4).         const(4).
a_parent_id(node43_7, a_plzensky58468_txt_001_p1s5W7).         const(a_plzensky58468_txt_001_p1s5W7).
hide(node43_7, hide).         const(hide).
%%%%%%%% node43_8 %%%%%%%%%%%%%%%%%%%
node(node43_8).
deepord(node43_8, 6).         const(6).
functor(node43_8, ACT).         const(ACT).
gram_sempos(node43_8, n_denot).         const(n_denot).
id(node43_8, T_plzensky58468_txt_001_p1s5a4).         const(T_plzensky58468_txt_001_p1s5a4).
nodetype(node43_8, complex).         const(complex).
t_lemma(node43_8, hasic).         const(hasic).
%%%%%%%% node43_9 %%%%%%%%%%%%%%%%%%%
node(node43_9).
deepord(node43_9, 4).         const(4).
functor(node43_9, RSTR).         const(RSTR).
gram_sempos(node43_9, adj_denot).         const(adj_denot).
id(node43_9, T_plzensky58468_txt_001_p1s5a6).         const(T_plzensky58468_txt_001_p1s5a6).
nodetype(node43_9, complex).         const(complex).
t_lemma(node43_9, mistni).         const(mistni).
%%%%%%%% node43_10 %%%%%%%%%%%%%%%%%%%
node(node43_10).
deepord(node43_10, x4_1).         const(x4_1).
a_ref_type(node43_10, tree).         const(tree).
a_afun(node43_10, Atr).         const(Atr).
m_form(node43_10, mistni).         const(mistni).
m_lemma(node43_10, mistni).         const(mistni).
m_tag(node43_10, AAMP1____1A____).         const(AAMP1____1A____).
w_token(node43_10, mistni).         const(mistni).
a_ord(node43_10, 5).         const(5).
a_parent_id(node43_10, a_plzensky58468_txt_001_p1s5W7).         const(a_plzensky58468_txt_001_p1s5W7).
hide(node43_10, hide).         const(hide).
%%%%%%%% node43_11 %%%%%%%%%%%%%%%%%%%
node(node43_11).
deepord(node43_11, 5).         const(5).
functor(node43_11, RSTR).         const(RSTR).
gram_sempos(node43_11, adj_denot).         const(adj_denot).
id(node43_11, T_plzensky58468_txt_001_p1s5a7).         const(T_plzensky58468_txt_001_p1s5a7).
nodetype(node43_11, complex).         const(complex).
t_lemma(node43_11, profesionalni).         const(profesionalni).
%%%%%%%% node43_12 %%%%%%%%%%%%%%%%%%%
node(node43_12).
deepord(node43_12, x5_1).         const(x5_1).
a_ref_type(node43_12, tree).         const(tree).
a_afun(node43_12, Atr).         const(Atr).
m_form(node43_12, profesionalni).         const(profesionalni).
m_lemma(node43_12, profesionalni).         const(profesionalni).
m_tag(node43_12, AAMP1____1A____).         const(AAMP1____1A____).
w_token(node43_12, profesionalni).         const(profesionalni).
a_ord(node43_12, 6).         const(6).
a_parent_id(node43_12, a_plzensky58468_txt_001_p1s5W7).         const(a_plzensky58468_txt_001_p1s5W7).
hide(node43_12, hide).         const(hide).
%%%%%%%% node43_13 %%%%%%%%%%%%%%%%%%%
node(node43_13).
deepord(node43_13, x6_1).         const(x6_1).
a_ref_type(node43_13, tree).         const(tree).
a_afun(node43_13, Sb).         const(Sb).
m_form(node43_13, hasici).         const(hasici).
m_lemma(node43_13, hasic).         const(hasic).
m_tag(node43_13, NNMP1_____A____).         const(NNMP1_____A____).
w_token(node43_13, hasici).         const(hasici).
w_no_space_after(node43_13, 1).         const(1).
a_ord(node43_13, 7).         const(7).
a_parent_id(node43_13, a_plzensky58468_txt_001_p1s5W3).         const(a_plzensky58468_txt_001_p1s5W3).
hide(node43_13, hide).         const(hide).
edge(node43_0, node43_1).
edge(node43_1, node43_2).
edge(node43_2, node43_3).
edge(node43_2, node43_4).
edge(node43_1, node43_5).
edge(node43_1, node43_6).
edge(node43_6, node43_7).
edge(node43_1, node43_8).
edge(node43_8, node43_9).
edge(node43_9, node43_10).
edge(node43_8, node43_11).
edge(node43_11, node43_12).
edge(node43_8, node43_13).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Po prijezdu provedli v dychaci technice pruzkum a mereni koncentrace chloru v mistnosti s negativnim vysledkem. 
tree_root(node44_0).
:- valid_root(node44_0).
%%%%%%%% node44_0 %%%%%%%%%%%%%%%%%%%
node(node44_0).
atree_rf(node44_0, a_a_plzensky58468_txt_001_p1s6).         const(a_a_plzensky58468_txt_001_p1s6).
deepord(node44_0, 0).         const(0).
id(node44_0, T_plzensky58468_txt_001_p1s6).         const(T_plzensky58468_txt_001_p1s6).
nodetype(node44_0, root).         const(root).
sentence(node44_0, Po_prijezdu_provedli_v_dychaci_technice_pruzkum_a_mereni_koncentrace_chloru_v_mistnosti_s_negativnim_vysledkem__).         const(Po_prijezdu_provedli_v_dychaci_technice_pruzkum_a_mereni_koncentrace_chloru_v_mistnosti_s_negativnim_vysledkem__).
%%%%%%%% node44_1 %%%%%%%%%%%%%%%%%%%
node(node44_1).
deepord(node44_1, 2).         const(2).
functor(node44_1, PRED).         const(PRED).
gram_sempos(node44_1, v).         const(v).
id(node44_1, T_plzensky58468_txt_001_p1s6a1).         const(T_plzensky58468_txt_001_p1s6a1).
nodetype(node44_1, complex).         const(complex).
t_lemma(node44_1, provest).         const(provest).
val_frame_rf(node44_1, v_v_w4616f1).         const(v_v_w4616f1).
%%%%%%%% node44_2 %%%%%%%%%%%%%%%%%%%
node(node44_2).
deepord(node44_2, 1).         const(1).
functor(node44_2, TWHEN).         const(TWHEN).
gram_sempos(node44_2, n_denot).         const(n_denot).
id(node44_2, T_plzensky58468_txt_001_p1s6a3).         const(T_plzensky58468_txt_001_p1s6a3).
nodetype(node44_2, complex).         const(complex).
subfunctor(node44_2, after).         const(after).
t_lemma(node44_2, prijezd).         const(prijezd).
%%%%%%%% node44_3 %%%%%%%%%%%%%%%%%%%
node(node44_3).
deepord(node44_3, x1_1).         const(x1_1).
a_ref_type(node44_3, tree).         const(tree).
a_afun(node44_3, AuxP).         const(AuxP).
m_form(node44_3, Po).         const(Po).
m_lemma(node44_3, po_1).         const(po_1).
m_tag(node44_3, RR__6__________).         const(RR__6__________).
w_token(node44_3, Po).         const(Po).
a_ord(node44_3, 1).         const(1).
a_parent_id(node44_3, a_plzensky58468_txt_001_p1s6W3).         const(a_plzensky58468_txt_001_p1s6W3).
hide(node44_3, hide).         const(hide).
%%%%%%%% node44_4 %%%%%%%%%%%%%%%%%%%
node(node44_4).
deepord(node44_4, x1_2).         const(x1_2).
a_ref_type(node44_4, tree).         const(tree).
a_afun(node44_4, Adv).         const(Adv).
m_form(node44_4, prijezdu).         const(prijezdu).
m_lemma(node44_4, prijezd).         const(prijezd).
m_tag(node44_4, NNIS6_____A___1).         const(NNIS6_____A___1).
w_token(node44_4, prijezdu).         const(prijezdu).
a_ord(node44_4, 2).         const(2).
a_parent_id(node44_4, a_plzensky58468_txt_001_p1s6W1).         const(a_plzensky58468_txt_001_p1s6W1).
hide(node44_4, hide).         const(hide).
%%%%%%%% node44_5 %%%%%%%%%%%%%%%%%%%
node(node44_5).
deepord(node44_5, x2_1).         const(x2_1).
a_ref_type(node44_5, tree).         const(tree).
a_afun(node44_5, Pred).         const(Pred).
m_form(node44_5, provedli).         const(provedli).
m_lemma(node44_5, provest).         const(provest).
m_tag(node44_5, VpMP___XR_AA___).         const(VpMP___XR_AA___).
w_token(node44_5, provedli).         const(provedli).
a_ord(node44_5, 3).         const(3).
a_parent_id(node44_5, a_plzensky58468_txt_001_p1s6).         const(a_plzensky58468_txt_001_p1s6).
hide(node44_5, hide).         const(hide).
%%%%%%%% node44_6 %%%%%%%%%%%%%%%%%%%
node(node44_6).
deepord(node44_6, 6).         const(6).
functor(node44_6, CONJ).         const(CONJ).
id(node44_6, T_plzensky58468_txt_001_p1s6a5).         const(T_plzensky58468_txt_001_p1s6a5).
nodetype(node44_6, coap).         const(coap).
t_lemma(node44_6, a).         const(a).
%%%%%%%% node44_7 %%%%%%%%%%%%%%%%%%%
node(node44_7).
deepord(node44_7, 4).         const(4).
functor(node44_7, ACT).         const(ACT).
gram_sempos(node44_7, n_denot).         const(n_denot).
id(node44_7, T_plzensky58468_txt_001_p1s6a6).         const(T_plzensky58468_txt_001_p1s6a6).
is_member(node44_7, 1).         const(1).
nodetype(node44_7, complex).         const(complex).
t_lemma(node44_7, technika).         const(technika).
%%%%%%%% node44_8 %%%%%%%%%%%%%%%%%%%
node(node44_8).
deepord(node44_8, 3).         const(3).
functor(node44_8, RSTR).         const(RSTR).
gram_sempos(node44_8, adj_denot).         const(adj_denot).
id(node44_8, T_plzensky58468_txt_001_p1s6a7).         const(T_plzensky58468_txt_001_p1s6a7).
nodetype(node44_8, complex).         const(complex).
t_lemma(node44_8, dychaci).         const(dychaci).
%%%%%%%% node44_9 %%%%%%%%%%%%%%%%%%%
node(node44_9).
deepord(node44_9, x3_1).         const(x3_1).
a_ref_type(node44_9, tree).         const(tree).
a_afun(node44_9, Atr).         const(Atr).
m_form(node44_9, dychaci).         const(dychaci).
m_lemma(node44_9, dychaci____2t_).         const(dychaci____2t_).
m_tag(node44_9, AAFS6____1A____).         const(AAFS6____1A____).
w_token(node44_9, dychaci).         const(dychaci).
a_ord(node44_9, 5).         const(5).
a_parent_id(node44_9, a_plzensky58468_txt_001_p1s6W6).         const(a_plzensky58468_txt_001_p1s6W6).
hide(node44_9, hide).         const(hide).
%%%%%%%% node44_10 %%%%%%%%%%%%%%%%%%%
node(node44_10).
deepord(node44_10, x4_1).         const(x4_1).
a_ref_type(node44_10, tree).         const(tree).
a_afun(node44_10, Adv).         const(Adv).
m_form(node44_10, technice).         const(technice).
m_lemma(node44_10, technika).         const(technika).
m_tag(node44_10, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node44_10, technice).         const(technice).
a_ord(node44_10, 6).         const(6).
a_parent_id(node44_10, a_plzensky58468_txt_001_p1s6W8).         const(a_plzensky58468_txt_001_p1s6W8).
hide(node44_10, hide).         const(hide).
%%%%%%%% node44_11 %%%%%%%%%%%%%%%%%%%
node(node44_11).
deepord(node44_11, 5).         const(5).
functor(node44_11, ID).         const(ID).
gram_sempos(node44_11, n_denot).         const(n_denot).
id(node44_11, T_plzensky58468_txt_001_p1s6a8).         const(T_plzensky58468_txt_001_p1s6a8).
nodetype(node44_11, complex).         const(complex).
t_lemma(node44_11, pruzkum).         const(pruzkum).
%%%%%%%% node44_12 %%%%%%%%%%%%%%%%%%%
node(node44_12).
deepord(node44_12, x5_1).         const(x5_1).
a_ref_type(node44_12, tree).         const(tree).
a_afun(node44_12, Atr).         const(Atr).
m_form(node44_12, pruzkum).         const(pruzkum).
m_lemma(node44_12, pruzkum).         const(pruzkum).
m_tag(node44_12, NNIS1_____A____).         const(NNIS1_____A____).
w_token(node44_12, pruzkum).         const(pruzkum).
a_ord(node44_12, 7).         const(7).
a_parent_id(node44_12, a_plzensky58468_txt_001_p1s6W6).         const(a_plzensky58468_txt_001_p1s6W6).
hide(node44_12, hide).         const(hide).
%%%%%%%% node44_13 %%%%%%%%%%%%%%%%%%%
node(node44_13).
deepord(node44_13, x6_1).         const(x6_1).
a_ref_type(node44_13, tree).         const(tree).
a_afun(node44_13, Coord).         const(Coord).
m_form(node44_13, a).         const(a).
m_lemma(node44_13, a_1).         const(a_1).
m_tag(node44_13, J______________).         const(J______________).
w_token(node44_13, a).         const(a).
a_ord(node44_13, 8).         const(8).
a_parent_id(node44_13, a_plzensky58468_txt_001_p1s6W4).         const(a_plzensky58468_txt_001_p1s6W4).
hide(node44_13, hide).         const(hide).
%%%%%%%% node44_14 %%%%%%%%%%%%%%%%%%%
node(node44_14).
deepord(node44_14, 8).         const(8).
functor(node44_14, ACT).         const(ACT).
gram_sempos(node44_14, n_denot_neg).         const(n_denot_neg).
id(node44_14, T_plzensky58468_txt_001_p1s6a9).         const(T_plzensky58468_txt_001_p1s6a9).
is_member(node44_14, 1).         const(1).
nodetype(node44_14, complex).         const(complex).
t_lemma(node44_14, mereni).         const(mereni).
val_frame_rf(node44_14, v_v_w1817f1).         const(v_v_w1817f1).
%%%%%%%% node44_15 %%%%%%%%%%%%%%%%%%%
node(node44_15).
deepord(node44_15, 7).         const(7).
functor(node44_15, ACT).         const(ACT).
id(node44_15, T_plzensky58468_txt_001_p1s6a17).         const(T_plzensky58468_txt_001_p1s6a17).
is_generated(node44_15, 1).         const(1).
nodetype(node44_15, qcomplex).         const(qcomplex).
t_lemma(node44_15, x_Gen).         const(x_Gen).
%%%%%%%% node44_16 %%%%%%%%%%%%%%%%%%%
node(node44_16).
deepord(node44_16, x8_1).         const(x8_1).
a_ref_type(node44_16, tree).         const(tree).
a_afun(node44_16, Sb).         const(Sb).
m_form(node44_16, mereni).         const(mereni).
m_lemma(node44_16, mereni____3it_).         const(mereni____3it_).
m_tag(node44_16, NNNS1_____A____).         const(NNNS1_____A____).
w_token(node44_16, mereni).         const(mereni).
a_ord(node44_16, 9).         const(9).
a_parent_id(node44_16, a_plzensky58468_txt_001_p1s6W8).         const(a_plzensky58468_txt_001_p1s6W8).
hide(node44_16, hide).         const(hide).
%%%%%%%% node44_17 %%%%%%%%%%%%%%%%%%%
node(node44_17).
deepord(node44_17, 9).         const(9).
functor(node44_17, PAT).         const(PAT).
gram_sempos(node44_17, n_denot).         const(n_denot).
id(node44_17, T_plzensky58468_txt_001_p1s6a10).         const(T_plzensky58468_txt_001_p1s6a10).
nodetype(node44_17, complex).         const(complex).
t_lemma(node44_17, koncentrace).         const(koncentrace).
%%%%%%%% node44_18 %%%%%%%%%%%%%%%%%%%
node(node44_18).
deepord(node44_18, x9_1).         const(x9_1).
a_ref_type(node44_18, tree).         const(tree).
a_afun(node44_18, Atr).         const(Atr).
m_form(node44_18, koncentrace).         const(koncentrace).
m_lemma(node44_18, koncentrace).         const(koncentrace).
m_tag(node44_18, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node44_18, koncentrace).         const(koncentrace).
a_ord(node44_18, 10).         const(10).
a_parent_id(node44_18, a_plzensky58468_txt_001_p1s6W9).         const(a_plzensky58468_txt_001_p1s6W9).
hide(node44_18, hide).         const(hide).
%%%%%%%% node44_19 %%%%%%%%%%%%%%%%%%%
node(node44_19).
deepord(node44_19, 10).         const(10).
functor(node44_19, APP).         const(APP).
gram_sempos(node44_19, n_denot).         const(n_denot).
id(node44_19, T_plzensky58468_txt_001_p1s6a11).         const(T_plzensky58468_txt_001_p1s6a11).
nodetype(node44_19, complex).         const(complex).
t_lemma(node44_19, chlor).         const(chlor).
%%%%%%%% node44_20 %%%%%%%%%%%%%%%%%%%
node(node44_20).
deepord(node44_20, x10_1).         const(x10_1).
a_ref_type(node44_20, tree).         const(tree).
a_afun(node44_20, Atr).         const(Atr).
m_form(node44_20, chloru).         const(chloru).
m_lemma(node44_20, chlor).         const(chlor).
m_tag(node44_20, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node44_20, chloru).         const(chloru).
a_ord(node44_20, 11).         const(11).
a_parent_id(node44_20, a_plzensky58468_txt_001_p1s6W10).         const(a_plzensky58468_txt_001_p1s6W10).
hide(node44_20, hide).         const(hide).
%%%%%%%% node44_21 %%%%%%%%%%%%%%%%%%%
node(node44_21).
deepord(node44_21, 11).         const(11).
functor(node44_21, LOC).         const(LOC).
gram_sempos(node44_21, n_denot).         const(n_denot).
id(node44_21, T_plzensky58468_txt_001_p1s6a13).         const(T_plzensky58468_txt_001_p1s6a13).
nodetype(node44_21, complex).         const(complex).
subfunctor(node44_21, basic).         const(basic).
t_lemma(node44_21, mistnost).         const(mistnost).
%%%%%%%% node44_22 %%%%%%%%%%%%%%%%%%%
node(node44_22).
deepord(node44_22, x11_1).         const(x11_1).
a_ref_type(node44_22, tree).         const(tree).
a_afun(node44_22, AuxP).         const(AuxP).
m_form(node44_22, v).         const(v).
m_lemma(node44_22, v_1).         const(v_1).
m_tag(node44_22, RR__6__________).         const(RR__6__________).
w_token(node44_22, v).         const(v).
a_ord(node44_22, 12).         const(12).
a_parent_id(node44_22, a_plzensky58468_txt_001_p1s6W10).         const(a_plzensky58468_txt_001_p1s6W10).
hide(node44_22, hide).         const(hide).
%%%%%%%% node44_23 %%%%%%%%%%%%%%%%%%%
node(node44_23).
deepord(node44_23, x11_2).         const(x11_2).
a_ref_type(node44_23, tree).         const(tree).
a_afun(node44_23, Atr).         const(Atr).
m_form(node44_23, mistnosti).         const(mistnosti).
m_lemma(node44_23, mistnost).         const(mistnost).
m_tag(node44_23, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node44_23, mistnosti).         const(mistnosti).
a_ord(node44_23, 13).         const(13).
a_parent_id(node44_23, a_plzensky58468_txt_001_p1s6W12).         const(a_plzensky58468_txt_001_p1s6W12).
hide(node44_23, hide).         const(hide).
%%%%%%%% node44_24 %%%%%%%%%%%%%%%%%%%
node(node44_24).
deepord(node44_24, 13).         const(13).
functor(node44_24, ACMP).         const(ACMP).
gram_sempos(node44_24, n_denot).         const(n_denot).
id(node44_24, T_plzensky58468_txt_001_p1s6a15).         const(T_plzensky58468_txt_001_p1s6a15).
nodetype(node44_24, complex).         const(complex).
subfunctor(node44_24, basic).         const(basic).
t_lemma(node44_24, vysledek).         const(vysledek).
%%%%%%%% node44_25 %%%%%%%%%%%%%%%%%%%
node(node44_25).
deepord(node44_25, 12).         const(12).
functor(node44_25, RSTR).         const(RSTR).
gram_sempos(node44_25, adj_denot).         const(adj_denot).
id(node44_25, T_plzensky58468_txt_001_p1s6a16).         const(T_plzensky58468_txt_001_p1s6a16).
nodetype(node44_25, complex).         const(complex).
t_lemma(node44_25, negativni).         const(negativni).
%%%%%%%% node44_26 %%%%%%%%%%%%%%%%%%%
node(node44_26).
deepord(node44_26, x12_1).         const(x12_1).
a_ref_type(node44_26, tree).         const(tree).
a_afun(node44_26, Atr).         const(Atr).
m_form(node44_26, negativnim).         const(negativnim).
m_lemma(node44_26, negativni).         const(negativni).
m_tag(node44_26, AAIS7____1A____).         const(AAIS7____1A____).
w_token(node44_26, negativnim).         const(negativnim).
a_ord(node44_26, 15).         const(15).
a_parent_id(node44_26, a_plzensky58468_txt_001_p1s6W16).         const(a_plzensky58468_txt_001_p1s6W16).
hide(node44_26, hide).         const(hide).
%%%%%%%% node44_27 %%%%%%%%%%%%%%%%%%%
node(node44_27).
deepord(node44_27, x13_1).         const(x13_1).
a_ref_type(node44_27, tree).         const(tree).
a_afun(node44_27, AuxP).         const(AuxP).
m_form(node44_27, s).         const(s).
m_lemma(node44_27, s_1).         const(s_1).
m_tag(node44_27, RR__7__________).         const(RR__7__________).
w_token(node44_27, s).         const(s).
a_ord(node44_27, 14).         const(14).
a_parent_id(node44_27, a_plzensky58468_txt_001_p1s6W9).         const(a_plzensky58468_txt_001_p1s6W9).
hide(node44_27, hide).         const(hide).
%%%%%%%% node44_28 %%%%%%%%%%%%%%%%%%%
node(node44_28).
deepord(node44_28, x13_2).         const(x13_2).
a_ref_type(node44_28, tree).         const(tree).
a_afun(node44_28, Atr).         const(Atr).
m_form(node44_28, vysledkem).         const(vysledkem).
m_lemma(node44_28, vysledek).         const(vysledek).
m_tag(node44_28, NNIS7_____A____).         const(NNIS7_____A____).
w_token(node44_28, vysledkem).         const(vysledkem).
w_no_space_after(node44_28, 1).         const(1).
a_ord(node44_28, 16).         const(16).
a_parent_id(node44_28, a_plzensky58468_txt_001_p1s6W14).         const(a_plzensky58468_txt_001_p1s6W14).
hide(node44_28, hide).         const(hide).
edge(node44_0, node44_1).
edge(node44_1, node44_2).
edge(node44_2, node44_3).
edge(node44_2, node44_4).
edge(node44_1, node44_5).
edge(node44_1, node44_6).
edge(node44_6, node44_7).
edge(node44_7, node44_8).
edge(node44_8, node44_9).
edge(node44_7, node44_10).
edge(node44_7, node44_11).
edge(node44_11, node44_12).
edge(node44_6, node44_13).
edge(node44_6, node44_14).
edge(node44_14, node44_15).
edge(node44_14, node44_16).
edge(node44_14, node44_17).
edge(node44_17, node44_18).
edge(node44_17, node44_19).
edge(node44_19, node44_20).
edge(node44_17, node44_21).
edge(node44_21, node44_22).
edge(node44_21, node44_23).
edge(node44_14, node44_24).
edge(node44_24, node44_25).
edge(node44_25, node44_26).
edge(node44_24, node44_27).
edge(node44_24, node44_28).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Po zjisteni mista drobneho uniku byla informovana servisni firma, ktera provede opravu Do budovy bazenu se dostavil starosta mesta i zastupce odboru zivotniho prostredi. 
tree_root(node45_0).
:- valid_root(node45_0).
%%%%%%%% node45_0 %%%%%%%%%%%%%%%%%%%
node(node45_0).
atree_rf(node45_0, a_a_plzensky58468_txt_001_p1s7).         const(a_a_plzensky58468_txt_001_p1s7).
deepord(node45_0, 0).         const(0).
id(node45_0, T_plzensky58468_txt_001_p1s7).         const(T_plzensky58468_txt_001_p1s7).
nodetype(node45_0, root).         const(root).
sentence(node45_0, Po_zjisteni_mista_drobneho_uniku_byla_informovana_servisni_firma__ktera_provede_opravu_Do_budovy_bazenu_se_dostavil_starosta_mesta_i_zastupce_odboru_zivotniho_prostredi__).         const(Po_zjisteni_mista_drobneho_uniku_byla_informovana_servisni_firma__ktera_provede_opravu_Do_budovy_bazenu_se_dostavil_starosta_mesta_i_zastupce_odboru_zivotniho_prostredi__).
%%%%%%%% node45_1 %%%%%%%%%%%%%%%%%%%
node(node45_1).
deepord(node45_1, 8).         const(8).
functor(node45_1, PRED).         const(PRED).
gram_sempos(node45_1, v).         const(v).
id(node45_1, T_plzensky58468_txt_001_p1s7a1).         const(T_plzensky58468_txt_001_p1s7a1).
nodetype(node45_1, complex).         const(complex).
t_lemma(node45_1, informovat).         const(informovat).
val_frame_rf(node45_1, v_v_w1254f1).         const(v_v_w1254f1).
%%%%%%%% node45_2 %%%%%%%%%%%%%%%%%%%
node(node45_2).
deepord(node45_2, 1).         const(1).
functor(node45_2, PAT).         const(PAT).
gram_sempos(node45_2, n_pron_def_pers).         const(n_pron_def_pers).
id(node45_2, T_plzensky58468_txt_001_p1s7a27).         const(T_plzensky58468_txt_001_p1s7a27).
is_generated(node45_2, 1).         const(1).
nodetype(node45_2, complex).         const(complex).
t_lemma(node45_2, x_PersPron).         const(x_PersPron).
%%%%%%%% node45_3 %%%%%%%%%%%%%%%%%%%
node(node45_3).
deepord(node45_3, 3).         const(3).
functor(node45_3, ACT).         const(ACT).
id(node45_3, T_plzensky58468_txt_001_p1s7a26).         const(T_plzensky58468_txt_001_p1s7a26).
is_generated(node45_3, 1).         const(1).
nodetype(node45_3, qcomplex).         const(qcomplex).
t_lemma(node45_3, x_Gen).         const(x_Gen).
%%%%%%%% node45_4 %%%%%%%%%%%%%%%%%%%
node(node45_4).
deepord(node45_4, 4).         const(4).
functor(node45_4, TWHEN).         const(TWHEN).
gram_sempos(node45_4, n_denot_neg).         const(n_denot_neg).
id(node45_4, T_plzensky58468_txt_001_p1s7a3).         const(T_plzensky58468_txt_001_p1s7a3).
nodetype(node45_4, complex).         const(complex).
subfunctor(node45_4, after).         const(after).
t_lemma(node45_4, zjisteni).         const(zjisteni).
%%%%%%%% node45_5 %%%%%%%%%%%%%%%%%%%
node(node45_5).
deepord(node45_5, 2).         const(2).
functor(node45_5, PAT).         const(PAT).
id(node45_5, T_plzensky58468_txt_001_p1s7a28).         const(T_plzensky58468_txt_001_p1s7a28).
is_generated(node45_5, 1).         const(1).
nodetype(node45_5, qcomplex).         const(qcomplex).
t_lemma(node45_5, x_Gen).         const(x_Gen).
%%%%%%%% node45_6 %%%%%%%%%%%%%%%%%%%
node(node45_6).
deepord(node45_6, x4_1).         const(x4_1).
a_ref_type(node45_6, tree).         const(tree).
a_afun(node45_6, AuxP).         const(AuxP).
m_form(node45_6, Po).         const(Po).
m_lemma(node45_6, po_1).         const(po_1).
m_tag(node45_6, RR__6__________).         const(RR__6__________).
w_token(node45_6, Po).         const(Po).
a_ord(node45_6, 1).         const(1).
a_parent_id(node45_6, a_plzensky58468_txt_001_p1s7W7).         const(a_plzensky58468_txt_001_p1s7W7).
hide(node45_6, hide).         const(hide).
%%%%%%%% node45_7 %%%%%%%%%%%%%%%%%%%
node(node45_7).
deepord(node45_7, x4_2).         const(x4_2).
a_ref_type(node45_7, tree).         const(tree).
a_afun(node45_7, Adv).         const(Adv).
m_form(node45_7, zjisteni).         const(zjisteni).
m_lemma(node45_7, zjisteni____5stit_).         const(zjisteni____5stit_).
m_tag(node45_7, NNNS6_____A____).         const(NNNS6_____A____).
w_token(node45_7, zjisteni).         const(zjisteni).
a_ord(node45_7, 2).         const(2).
a_parent_id(node45_7, a_plzensky58468_txt_001_p1s7W1).         const(a_plzensky58468_txt_001_p1s7W1).
hide(node45_7, hide).         const(hide).
%%%%%%%% node45_8 %%%%%%%%%%%%%%%%%%%
node(node45_8).
deepord(node45_8, 5).         const(5).
functor(node45_8, TWHEN).         const(TWHEN).
gram_sempos(node45_8, n_denot).         const(n_denot).
id(node45_8, T_plzensky58468_txt_001_p1s7a4).         const(T_plzensky58468_txt_001_p1s7a4).
nodetype(node45_8, complex).         const(complex).
subfunctor(node45_8, basic).         const(basic).
t_lemma(node45_8, misto).         const(misto).
%%%%%%%% node45_9 %%%%%%%%%%%%%%%%%%%
node(node45_9).
deepord(node45_9, x5_1).         const(x5_1).
a_ref_type(node45_9, tree).         const(tree).
a_afun(node45_9, Adv).         const(Adv).
m_form(node45_9, mista).         const(mista).
m_lemma(node45_9, misto_1___fyzicke_umisteni_).         const(misto_1___fyzicke_umisteni_).
m_tag(node45_9, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node45_9, mista).         const(mista).
a_ord(node45_9, 3).         const(3).
a_parent_id(node45_9, a_plzensky58468_txt_001_p1s7W7).         const(a_plzensky58468_txt_001_p1s7W7).
hide(node45_9, hide).         const(hide).
%%%%%%%% node45_10 %%%%%%%%%%%%%%%%%%%
node(node45_10).
deepord(node45_10, 7).         const(7).
functor(node45_10, APP).         const(APP).
gram_sempos(node45_10, n_denot).         const(n_denot).
id(node45_10, T_plzensky58468_txt_001_p1s7a5).         const(T_plzensky58468_txt_001_p1s7a5).
nodetype(node45_10, complex).         const(complex).
t_lemma(node45_10, unik).         const(unik).
%%%%%%%% node45_11 %%%%%%%%%%%%%%%%%%%
node(node45_11).
deepord(node45_11, 6).         const(6).
functor(node45_11, RSTR).         const(RSTR).
gram_sempos(node45_11, adj_denot).         const(adj_denot).
id(node45_11, T_plzensky58468_txt_001_p1s7a6).         const(T_plzensky58468_txt_001_p1s7a6).
nodetype(node45_11, complex).         const(complex).
t_lemma(node45_11, drobny).         const(drobny).
%%%%%%%% node45_12 %%%%%%%%%%%%%%%%%%%
node(node45_12).
deepord(node45_12, x6_1).         const(x6_1).
a_ref_type(node45_12, tree).         const(tree).
a_afun(node45_12, Atr).         const(Atr).
m_form(node45_12, drobneho).         const(drobneho).
m_lemma(node45_12, drobny).         const(drobny).
m_tag(node45_12, AAIS2____1A____).         const(AAIS2____1A____).
w_token(node45_12, drobneho).         const(drobneho).
a_ord(node45_12, 4).         const(4).
a_parent_id(node45_12, a_plzensky58468_txt_001_p1s7W5).         const(a_plzensky58468_txt_001_p1s7W5).
hide(node45_12, hide).         const(hide).
%%%%%%%% node45_13 %%%%%%%%%%%%%%%%%%%
node(node45_13).
deepord(node45_13, x7_1).         const(x7_1).
a_ref_type(node45_13, tree).         const(tree).
a_afun(node45_13, Atr).         const(Atr).
m_form(node45_13, uniku).         const(uniku).
m_lemma(node45_13, unik).         const(unik).
m_tag(node45_13, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node45_13, uniku).         const(uniku).
a_ord(node45_13, 5).         const(5).
a_parent_id(node45_13, a_plzensky58468_txt_001_p1s7W3).         const(a_plzensky58468_txt_001_p1s7W3).
hide(node45_13, hide).         const(hide).
%%%%%%%% node45_14 %%%%%%%%%%%%%%%%%%%
node(node45_14).
deepord(node45_14, x8_1).         const(x8_1).
a_ref_type(node45_14, tree).         const(tree).
a_afun(node45_14, AuxV).         const(AuxV).
m_form(node45_14, byla).         const(byla).
m_lemma(node45_14, byt).         const(byt).
m_tag(node45_14, VpQW___XR_AA___).         const(VpQW___XR_AA___).
w_token(node45_14, byla).         const(byla).
a_ord(node45_14, 6).         const(6).
a_parent_id(node45_14, a_plzensky58468_txt_001_p1s7W7).         const(a_plzensky58468_txt_001_p1s7W7).
hide(node45_14, hide).         const(hide).
%%%%%%%% node45_15 %%%%%%%%%%%%%%%%%%%
node(node45_15).
deepord(node45_15, x8_2).         const(x8_2).
a_ref_type(node45_15, tree).         const(tree).
a_afun(node45_15, Pred).         const(Pred).
m_form(node45_15, informovana).         const(informovana).
m_lemma(node45_15, informovat__T__W).         const(informovat__T__W).
m_tag(node45_15, VsQW___XX_AP___).         const(VsQW___XX_AP___).
w_token(node45_15, informovana).         const(informovana).
a_ord(node45_15, 7).         const(7).
a_parent_id(node45_15, a_plzensky58468_txt_001_p1s7).         const(a_plzensky58468_txt_001_p1s7).
hide(node45_15, hide).         const(hide).
%%%%%%%% node45_16 %%%%%%%%%%%%%%%%%%%
node(node45_16).
deepord(node45_16, 10).         const(10).
functor(node45_16, ADDR).         const(ADDR).
gram_sempos(node45_16, n_denot).         const(n_denot).
id(node45_16, T_plzensky58468_txt_001_p1s7a8).         const(T_plzensky58468_txt_001_p1s7a8).
nodetype(node45_16, complex).         const(complex).
t_lemma(node45_16, firma).         const(firma).
%%%%%%%% node45_17 %%%%%%%%%%%%%%%%%%%
node(node45_17).
deepord(node45_17, 9).         const(9).
functor(node45_17, RSTR).         const(RSTR).
gram_sempos(node45_17, adj_denot).         const(adj_denot).
id(node45_17, T_plzensky58468_txt_001_p1s7a9).         const(T_plzensky58468_txt_001_p1s7a9).
nodetype(node45_17, complex).         const(complex).
t_lemma(node45_17, servisni).         const(servisni).
%%%%%%%% node45_18 %%%%%%%%%%%%%%%%%%%
node(node45_18).
deepord(node45_18, x9_1).         const(x9_1).
a_ref_type(node45_18, tree).         const(tree).
a_afun(node45_18, Atr).         const(Atr).
m_form(node45_18, servisni).         const(servisni).
m_lemma(node45_18, servisni).         const(servisni).
m_tag(node45_18, AAFS1____1A____).         const(AAFS1____1A____).
w_token(node45_18, servisni).         const(servisni).
a_ord(node45_18, 8).         const(8).
a_parent_id(node45_18, a_plzensky58468_txt_001_p1s7W9).         const(a_plzensky58468_txt_001_p1s7W9).
hide(node45_18, hide).         const(hide).
%%%%%%%% node45_19 %%%%%%%%%%%%%%%%%%%
node(node45_19).
deepord(node45_19, x10_1).         const(x10_1).
a_ref_type(node45_19, tree).         const(tree).
a_afun(node45_19, Sb).         const(Sb).
m_form(node45_19, firma).         const(firma).
m_lemma(node45_19, firma).         const(firma).
m_tag(node45_19, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node45_19, firma).         const(firma).
w_no_space_after(node45_19, 1).         const(1).
a_ord(node45_19, 9).         const(9).
a_parent_id(node45_19, a_plzensky58468_txt_001_p1s7W7).         const(a_plzensky58468_txt_001_p1s7W7).
hide(node45_19, hide).         const(hide).
%%%%%%%% node45_20 %%%%%%%%%%%%%%%%%%%
node(node45_20).
deepord(node45_20, 17).         const(17).
functor(node45_20, RSTR).         const(RSTR).
gram_sempos(node45_20, v).         const(v).
id(node45_20, T_plzensky58468_txt_001_p1s7a10).         const(T_plzensky58468_txt_001_p1s7a10).
nodetype(node45_20, complex).         const(complex).
t_lemma(node45_20, dostavit_se).         const(dostavit_se).
val_frame_rf(node45_20, v_v_w740f1).         const(v_v_w740f1).
%%%%%%%% node45_21 %%%%%%%%%%%%%%%%%%%
node(node45_21).
deepord(node45_21, 11).         const(11).
functor(node45_21, ACT).         const(ACT).
gram_sempos(node45_21, n_pron_indef).         const(n_pron_indef).
id(node45_21, T_plzensky58468_txt_001_p1s7a12).         const(T_plzensky58468_txt_001_p1s7a12).
nodetype(node45_21, complex).         const(complex).
t_lemma(node45_21, ktery).         const(ktery).
%%%%%%%% node45_22 %%%%%%%%%%%%%%%%%%%
node(node45_22).
deepord(node45_22, x11_1).         const(x11_1).
a_ref_type(node45_22, tree).         const(tree).
a_afun(node45_22, Sb).         const(Sb).
m_form(node45_22, ktera).         const(ktera).
m_lemma(node45_22, ktery).         const(ktery).
m_tag(node45_22, P4FS1__________).         const(P4FS1__________).
w_token(node45_22, ktera).         const(ktera).
a_ord(node45_22, 11).         const(11).
a_parent_id(node45_22, a_plzensky58468_txt_001_p1s7W18).         const(a_plzensky58468_txt_001_p1s7W18).
hide(node45_22, hide).         const(hide).
%%%%%%%% node45_23 %%%%%%%%%%%%%%%%%%%
node(node45_23).
deepord(node45_23, 13).         const(13).
functor(node45_23, PAT).         const(PAT).
gram_sempos(node45_23, v).         const(v).
id(node45_23, T_plzensky58468_txt_001_p1s7a13).         const(T_plzensky58468_txt_001_p1s7a13).
nodetype(node45_23, complex).         const(complex).
t_lemma(node45_23, provest).         const(provest).
val_frame_rf(node45_23, v_v_w4616f1).         const(v_v_w4616f1).
%%%%%%%% node45_24 %%%%%%%%%%%%%%%%%%%
node(node45_24).
deepord(node45_24, 12).         const(12).
functor(node45_24, ACT).         const(ACT).
gram_sempos(node45_24, n_pron_def_pers).         const(n_pron_def_pers).
id(node45_24, T_plzensky58468_txt_001_p1s7a29).         const(T_plzensky58468_txt_001_p1s7a29).
is_generated(node45_24, 1).         const(1).
nodetype(node45_24, complex).         const(complex).
t_lemma(node45_24, x_PersPron).         const(x_PersPron).
%%%%%%%% node45_25 %%%%%%%%%%%%%%%%%%%
node(node45_25).
deepord(node45_25, x13_1).         const(x13_1).
a_ref_type(node45_25, tree).         const(tree).
a_afun(node45_25, Obj).         const(Obj).
m_form(node45_25, provede).         const(provede).
m_lemma(node45_25, provest).         const(provest).
m_tag(node45_25, VB_S___3P_AA___).         const(VB_S___3P_AA___).
w_token(node45_25, provede).         const(provede).
a_ord(node45_25, 12).         const(12).
a_parent_id(node45_25, a_plzensky58468_txt_001_p1s7W18).         const(a_plzensky58468_txt_001_p1s7W18).
hide(node45_25, hide).         const(hide).
%%%%%%%% node45_26 %%%%%%%%%%%%%%%%%%%
node(node45_26).
deepord(node45_26, 14).         const(14).
functor(node45_26, PAT).         const(PAT).
gram_sempos(node45_26, n_denot).         const(n_denot).
id(node45_26, T_plzensky58468_txt_001_p1s7a14).         const(T_plzensky58468_txt_001_p1s7a14).
nodetype(node45_26, complex).         const(complex).
t_lemma(node45_26, oprava).         const(oprava).
%%%%%%%% node45_27 %%%%%%%%%%%%%%%%%%%
node(node45_27).
deepord(node45_27, x14_1).         const(x14_1).
a_ref_type(node45_27, tree).         const(tree).
a_afun(node45_27, Obj).         const(Obj).
m_form(node45_27, opravu).         const(opravu).
m_lemma(node45_27, oprava).         const(oprava).
m_tag(node45_27, NNFS4_____A____).         const(NNFS4_____A____).
w_token(node45_27, opravu).         const(opravu).
a_ord(node45_27, 13).         const(13).
a_parent_id(node45_27, a_plzensky58468_txt_001_p1s7W12).         const(a_plzensky58468_txt_001_p1s7W12).
hide(node45_27, hide).         const(hide).
%%%%%%%% node45_28 %%%%%%%%%%%%%%%%%%%
node(node45_28).
deepord(node45_28, 15).         const(15).
functor(node45_28, DIR3).         const(DIR3).
gram_sempos(node45_28, n_denot).         const(n_denot).
id(node45_28, T_plzensky58468_txt_001_p1s7a16).         const(T_plzensky58468_txt_001_p1s7a16).
nodetype(node45_28, complex).         const(complex).
subfunctor(node45_28, basic).         const(basic).
t_lemma(node45_28, budova).         const(budova).
%%%%%%%% node45_29 %%%%%%%%%%%%%%%%%%%
node(node45_29).
deepord(node45_29, x15_1).         const(x15_1).
a_ref_type(node45_29, tree).         const(tree).
a_afun(node45_29, AuxP).         const(AuxP).
m_form(node45_29, Do).         const(Do).
m_lemma(node45_29, do_1).         const(do_1).
m_tag(node45_29, RR__2__________).         const(RR__2__________).
w_token(node45_29, Do).         const(Do).
a_ord(node45_29, 14).         const(14).
a_parent_id(node45_29, a_plzensky58468_txt_001_p1s7W18).         const(a_plzensky58468_txt_001_p1s7W18).
hide(node45_29, hide).         const(hide).
%%%%%%%% node45_30 %%%%%%%%%%%%%%%%%%%
node(node45_30).
deepord(node45_30, x15_2).         const(x15_2).
a_ref_type(node45_30, tree).         const(tree).
a_afun(node45_30, Adv).         const(Adv).
m_form(node45_30, budovy).         const(budovy).
m_lemma(node45_30, budova).         const(budova).
m_tag(node45_30, NNFS2_____A____).         const(NNFS2_____A____).
w_token(node45_30, budovy).         const(budovy).
a_ord(node45_30, 15).         const(15).
a_parent_id(node45_30, a_plzensky58468_txt_001_p1s7W14).         const(a_plzensky58468_txt_001_p1s7W14).
hide(node45_30, hide).         const(hide).
%%%%%%%% node45_31 %%%%%%%%%%%%%%%%%%%
node(node45_31).
deepord(node45_31, 16).         const(16).
functor(node45_31, APP).         const(APP).
gram_sempos(node45_31, n_denot).         const(n_denot).
id(node45_31, T_plzensky58468_txt_001_p1s7a17).         const(T_plzensky58468_txt_001_p1s7a17).
nodetype(node45_31, complex).         const(complex).
t_lemma(node45_31, bazen).         const(bazen).
%%%%%%%% node45_32 %%%%%%%%%%%%%%%%%%%
node(node45_32).
deepord(node45_32, x16_1).         const(x16_1).
a_ref_type(node45_32, tree).         const(tree).
a_afun(node45_32, Atr).         const(Atr).
m_form(node45_32, bazenu).         const(bazenu).
m_lemma(node45_32, bazen).         const(bazen).
m_tag(node45_32, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node45_32, bazenu).         const(bazenu).
a_ord(node45_32, 16).         const(16).
a_parent_id(node45_32, a_plzensky58468_txt_001_p1s7W15).         const(a_plzensky58468_txt_001_p1s7W15).
hide(node45_32, hide).         const(hide).
%%%%%%%% node45_33 %%%%%%%%%%%%%%%%%%%
node(node45_33).
deepord(node45_33, x17_1).         const(x17_1).
a_ref_type(node45_33, tree).         const(tree).
a_afun(node45_33, AuxT).         const(AuxT).
m_form(node45_33, se).         const(se).
m_lemma(node45_33, se___zvr__zajmeno_castice_).         const(se___zvr__zajmeno_castice_).
m_tag(node45_33, P7_X4__________).         const(P7_X4__________).
w_token(node45_33, se).         const(se).
a_ord(node45_33, 17).         const(17).
a_parent_id(node45_33, a_plzensky58468_txt_001_p1s7W18).         const(a_plzensky58468_txt_001_p1s7W18).
hide(node45_33, hide).         const(hide).
%%%%%%%% node45_34 %%%%%%%%%%%%%%%%%%%
node(node45_34).
deepord(node45_34, x17_2).         const(x17_2).
a_ref_type(node45_34, tree).         const(tree).
a_afun(node45_34, Atr).         const(Atr).
m_form(node45_34, dostavil).         const(dostavil).
m_lemma(node45_34, dostavit__W___se___na_dane_misto_).         const(dostavit__W___se___na_dane_misto_).
m_tag(node45_34, VpYS___XR_AA___).         const(VpYS___XR_AA___).
w_token(node45_34, dostavil).         const(dostavil).
a_ord(node45_34, 18).         const(18).
a_parent_id(node45_34, a_plzensky58468_txt_001_p1s7W9).         const(a_plzensky58468_txt_001_p1s7W9).
hide(node45_34, hide).         const(hide).
%%%%%%%% node45_35 %%%%%%%%%%%%%%%%%%%
node(node45_35).
deepord(node45_35, 21).         const(21).
functor(node45_35, PAT).         const(PAT).
gram_sempos(node45_35, n_denot).         const(n_denot).
id(node45_35, T_plzensky58468_txt_001_p1s7a19).         const(T_plzensky58468_txt_001_p1s7a19).
nodetype(node45_35, complex).         const(complex).
t_lemma(node45_35, zastupce).         const(zastupce).
%%%%%%%% node45_36 %%%%%%%%%%%%%%%%%%%
node(node45_36).
deepord(node45_36, 18).         const(18).
functor(node45_36, PAT).         const(PAT).
gram_sempos(node45_36, n_denot).         const(n_denot).
id(node45_36, T_plzensky58468_txt_001_p1s7a20).         const(T_plzensky58468_txt_001_p1s7a20).
nodetype(node45_36, complex).         const(complex).
t_lemma(node45_36, starosta).         const(starosta).
%%%%%%%% node45_37 %%%%%%%%%%%%%%%%%%%
node(node45_37).
deepord(node45_37, x18_1).         const(x18_1).
a_ref_type(node45_37, tree).         const(tree).
a_afun(node45_37, Atr).         const(Atr).
m_form(node45_37, starosta).         const(starosta).
m_lemma(node45_37, starosta).         const(starosta).
m_tag(node45_37, NNMS1_____A____).         const(NNMS1_____A____).
w_token(node45_37, starosta).         const(starosta).
a_ord(node45_37, 19).         const(19).
a_parent_id(node45_37, a_plzensky58468_txt_001_p1s7W22).         const(a_plzensky58468_txt_001_p1s7W22).
hide(node45_37, hide).         const(hide).
%%%%%%%% node45_38 %%%%%%%%%%%%%%%%%%%
node(node45_38).
deepord(node45_38, 19).         const(19).
functor(node45_38, APP).         const(APP).
gram_sempos(node45_38, n_denot).         const(n_denot).
id(node45_38, T_plzensky58468_txt_001_p1s7a21).         const(T_plzensky58468_txt_001_p1s7a21).
nodetype(node45_38, complex).         const(complex).
t_lemma(node45_38, mesto).         const(mesto).
%%%%%%%% node45_39 %%%%%%%%%%%%%%%%%%%
node(node45_39).
deepord(node45_39, x19_1).         const(x19_1).
a_ref_type(node45_39, tree).         const(tree).
a_afun(node45_39, Atr).         const(Atr).
m_form(node45_39, mesta).         const(mesta).
m_lemma(node45_39, mesto).         const(mesto).
m_tag(node45_39, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node45_39, mesta).         const(mesta).
a_ord(node45_39, 20).         const(20).
a_parent_id(node45_39, a_plzensky58468_txt_001_p1s7W19).         const(a_plzensky58468_txt_001_p1s7W19).
hide(node45_39, hide).         const(hide).
%%%%%%%% node45_40 %%%%%%%%%%%%%%%%%%%
node(node45_40).
deepord(node45_40, 20).         const(20).
functor(node45_40, CONJ).         const(CONJ).
id(node45_40, T_plzensky58468_txt_001_p1s7a22).         const(T_plzensky58468_txt_001_p1s7a22).
nodetype(node45_40, coap).         const(coap).
t_lemma(node45_40, i).         const(i).
%%%%%%%% node45_41 %%%%%%%%%%%%%%%%%%%
node(node45_41).
deepord(node45_41, x20_1).         const(x20_1).
a_ref_type(node45_41, tree).         const(tree).
a_afun(node45_41, Coord).         const(Coord).
m_form(node45_41, i).         const(i).
m_lemma(node45_41, i_1).         const(i_1).
m_tag(node45_41, J______________).         const(J______________).
w_token(node45_41, i).         const(i).
a_ord(node45_41, 21).         const(21).
a_parent_id(node45_41, a_plzensky58468_txt_001_p1s7W22).         const(a_plzensky58468_txt_001_p1s7W22).
hide(node45_41, hide).         const(hide).
%%%%%%%% node45_42 %%%%%%%%%%%%%%%%%%%
node(node45_42).
deepord(node45_42, x21_1).         const(x21_1).
a_ref_type(node45_42, tree).         const(tree).
a_afun(node45_42, Obj).         const(Obj).
m_form(node45_42, zastupce).         const(zastupce).
m_lemma(node45_42, zastupce).         const(zastupce).
m_tag(node45_42, NNMS2_____A____).         const(NNMS2_____A____).
w_token(node45_42, zastupce).         const(zastupce).
a_ord(node45_42, 22).         const(22).
a_parent_id(node45_42, a_plzensky58468_txt_001_p1s7W18).         const(a_plzensky58468_txt_001_p1s7W18).
hide(node45_42, hide).         const(hide).
%%%%%%%% node45_43 %%%%%%%%%%%%%%%%%%%
node(node45_43).
deepord(node45_43, 22).         const(22).
functor(node45_43, PAT).         const(PAT).
gram_sempos(node45_43, n_denot).         const(n_denot).
id(node45_43, T_plzensky58468_txt_001_p1s7a23).         const(T_plzensky58468_txt_001_p1s7a23).
nodetype(node45_43, complex).         const(complex).
t_lemma(node45_43, odbor).         const(odbor).
%%%%%%%% node45_44 %%%%%%%%%%%%%%%%%%%
node(node45_44).
deepord(node45_44, x22_1).         const(x22_1).
a_ref_type(node45_44, tree).         const(tree).
a_afun(node45_44, Atr).         const(Atr).
m_form(node45_44, odboru).         const(odboru).
m_lemma(node45_44, odbor___na_urade_).         const(odbor___na_urade_).
m_tag(node45_44, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node45_44, odboru).         const(odboru).
a_ord(node45_44, 23).         const(23).
a_parent_id(node45_44, a_plzensky58468_txt_001_p1s7W22).         const(a_plzensky58468_txt_001_p1s7W22).
hide(node45_44, hide).         const(hide).
%%%%%%%% node45_45 %%%%%%%%%%%%%%%%%%%
node(node45_45).
deepord(node45_45, 24).         const(24).
functor(node45_45, APP).         const(APP).
gram_sempos(node45_45, n_denot).         const(n_denot).
id(node45_45, T_plzensky58468_txt_001_p1s7a24).         const(T_plzensky58468_txt_001_p1s7a24).
nodetype(node45_45, complex).         const(complex).
t_lemma(node45_45, prostredi).         const(prostredi).
%%%%%%%% node45_46 %%%%%%%%%%%%%%%%%%%
node(node45_46).
deepord(node45_46, 23).         const(23).
functor(node45_46, RSTR).         const(RSTR).
gram_sempos(node45_46, adj_denot).         const(adj_denot).
id(node45_46, T_plzensky58468_txt_001_p1s7a25).         const(T_plzensky58468_txt_001_p1s7a25).
nodetype(node45_46, complex).         const(complex).
t_lemma(node45_46, zivotni).         const(zivotni).
%%%%%%%% node45_47 %%%%%%%%%%%%%%%%%%%
node(node45_47).
deepord(node45_47, x23_1).         const(x23_1).
a_ref_type(node45_47, tree).         const(tree).
a_afun(node45_47, Atr).         const(Atr).
m_form(node45_47, zivotniho).         const(zivotniho).
m_lemma(node45_47, zivotni___souvisi_se_zivotem__prostredi_____).         const(zivotni___souvisi_se_zivotem__prostredi_____).
m_tag(node45_47, AANS2____1A____).         const(AANS2____1A____).
w_token(node45_47, zivotniho).         const(zivotniho).
a_ord(node45_47, 24).         const(24).
a_parent_id(node45_47, a_plzensky58468_txt_001_p1s7W25).         const(a_plzensky58468_txt_001_p1s7W25).
hide(node45_47, hide).         const(hide).
%%%%%%%% node45_48 %%%%%%%%%%%%%%%%%%%
node(node45_48).
deepord(node45_48, x24_1).         const(x24_1).
a_ref_type(node45_48, tree).         const(tree).
a_afun(node45_48, Atr).         const(Atr).
m_form(node45_48, prostredi).         const(prostredi).
m_lemma(node45_48, prostredi).         const(prostredi).
m_tag(node45_48, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node45_48, prostredi).         const(prostredi).
w_no_space_after(node45_48, 1).         const(1).
a_ord(node45_48, 25).         const(25).
a_parent_id(node45_48, a_plzensky58468_txt_001_p1s7W23).         const(a_plzensky58468_txt_001_p1s7W23).
hide(node45_48, hide).         const(hide).
edge(node45_0, node45_1).
edge(node45_1, node45_2).
edge(node45_1, node45_3).
edge(node45_1, node45_4).
edge(node45_4, node45_5).
edge(node45_4, node45_6).
edge(node45_4, node45_7).
edge(node45_1, node45_8).
edge(node45_8, node45_9).
edge(node45_8, node45_10).
edge(node45_10, node45_11).
edge(node45_11, node45_12).
edge(node45_10, node45_13).
edge(node45_1, node45_14).
edge(node45_1, node45_15).
edge(node45_1, node45_16).
edge(node45_16, node45_17).
edge(node45_17, node45_18).
edge(node45_16, node45_19).
edge(node45_16, node45_20).
edge(node45_20, node45_21).
edge(node45_21, node45_22).
edge(node45_20, node45_23).
edge(node45_23, node45_24).
edge(node45_23, node45_25).
edge(node45_23, node45_26).
edge(node45_26, node45_27).
edge(node45_20, node45_28).
edge(node45_28, node45_29).
edge(node45_28, node45_30).
edge(node45_28, node45_31).
edge(node45_31, node45_32).
edge(node45_20, node45_33).
edge(node45_20, node45_34).
edge(node45_20, node45_35).
edge(node45_35, node45_36).
edge(node45_36, node45_37).
edge(node45_36, node45_38).
edge(node45_38, node45_39).
edge(node45_35, node45_40).
edge(node45_40, node45_41).
edge(node45_35, node45_42).
edge(node45_35, node45_43).
edge(node45_43, node45_44).
edge(node45_43, node45_45).
edge(node45_45, node45_46).
edge(node45_46, node45_47).
edge(node45_45, node45_48).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Po predani mista spravci bazenu v 8.43 se hasici vratili na stanici. 
tree_root(node46_0).
:- valid_root(node46_0).
%%%%%%%% node46_0 %%%%%%%%%%%%%%%%%%%
node(node46_0).
atree_rf(node46_0, a_a_plzensky58468_txt_001_p1s8).         const(a_a_plzensky58468_txt_001_p1s8).
deepord(node46_0, 0).         const(0).
id(node46_0, T_plzensky58468_txt_001_p1s8).         const(T_plzensky58468_txt_001_p1s8).
nodetype(node46_0, root).         const(root).
sentence(node46_0, Po_predani_mista_spravci_bazenu_v_8_43_se_hasici_vratili_na_stanici__).         const(Po_predani_mista_spravci_bazenu_v_8_43_se_hasici_vratili_na_stanici__).
%%%%%%%% node46_1 %%%%%%%%%%%%%%%%%%%
node(node46_1).
deepord(node46_1, 9).         const(9).
functor(node46_1, PRED).         const(PRED).
gram_sempos(node46_1, v).         const(v).
id(node46_1, T_plzensky58468_txt_001_p1s8a1).         const(T_plzensky58468_txt_001_p1s8a1).
nodetype(node46_1, complex).         const(complex).
t_lemma(node46_1, vratit_se).         const(vratit_se).
val_frame_rf(node46_1, v_v_w7706f1).         const(v_v_w7706f1).
%%%%%%%% node46_2 %%%%%%%%%%%%%%%%%%%
node(node46_2).
deepord(node46_2, 3).         const(3).
functor(node46_2, TWHEN).         const(TWHEN).
gram_sempos(node46_2, n_denot_neg).         const(n_denot_neg).
id(node46_2, T_plzensky58468_txt_001_p1s8a3).         const(T_plzensky58468_txt_001_p1s8a3).
nodetype(node46_2, complex).         const(complex).
subfunctor(node46_2, after).         const(after).
t_lemma(node46_2, predani).         const(predani).
val_frame_rf(node46_2, v_v_w4692f1).         const(v_v_w4692f1).
%%%%%%%% node46_3 %%%%%%%%%%%%%%%%%%%
node(node46_3).
deepord(node46_3, 1).         const(1).
functor(node46_3, ADDR).         const(ADDR).
id(node46_3, T_plzensky58468_txt_001_p1s8a14).         const(T_plzensky58468_txt_001_p1s8a14).
is_generated(node46_3, 1).         const(1).
nodetype(node46_3, qcomplex).         const(qcomplex).
t_lemma(node46_3, x_Gen).         const(x_Gen).
%%%%%%%% node46_4 %%%%%%%%%%%%%%%%%%%
node(node46_4).
deepord(node46_4, 2).         const(2).
functor(node46_4, ACT).         const(ACT).
id(node46_4, T_plzensky58468_txt_001_p1s8a13).         const(T_plzensky58468_txt_001_p1s8a13).
is_generated(node46_4, 1).         const(1).
nodetype(node46_4, qcomplex).         const(qcomplex).
t_lemma(node46_4, x_Gen).         const(x_Gen).
%%%%%%%% node46_5 %%%%%%%%%%%%%%%%%%%
node(node46_5).
deepord(node46_5, x3_1).         const(x3_1).
a_ref_type(node46_5, tree).         const(tree).
a_afun(node46_5, AuxP).         const(AuxP).
m_form(node46_5, Po).         const(Po).
m_lemma(node46_5, po_1).         const(po_1).
m_tag(node46_5, RR__6__________).         const(RR__6__________).
w_token(node46_5, Po).         const(Po).
a_ord(node46_5, 1).         const(1).
a_parent_id(node46_5, a_plzensky58468_txt_001_p1s8W10).         const(a_plzensky58468_txt_001_p1s8W10).
hide(node46_5, hide).         const(hide).
%%%%%%%% node46_6 %%%%%%%%%%%%%%%%%%%
node(node46_6).
deepord(node46_6, x3_2).         const(x3_2).
a_ref_type(node46_6, tree).         const(tree).
a_afun(node46_6, Adv).         const(Adv).
m_form(node46_6, predani).         const(predani).
m_lemma(node46_6, predani_1__a___prist____5at_1_).         const(predani_1__a___prist____5at_1_).
m_tag(node46_6, NNNS6_____A____).         const(NNNS6_____A____).
w_token(node46_6, predani).         const(predani).
a_ord(node46_6, 2).         const(2).
a_parent_id(node46_6, a_plzensky58468_txt_001_p1s8W1).         const(a_plzensky58468_txt_001_p1s8W1).
hide(node46_6, hide).         const(hide).
%%%%%%%% node46_7 %%%%%%%%%%%%%%%%%%%
node(node46_7).
deepord(node46_7, 4).         const(4).
functor(node46_7, PAT).         const(PAT).
gram_sempos(node46_7, n_denot).         const(n_denot).
id(node46_7, T_plzensky58468_txt_001_p1s8a4).         const(T_plzensky58468_txt_001_p1s8a4).
nodetype(node46_7, complex).         const(complex).
t_lemma(node46_7, misto).         const(misto).
%%%%%%%% node46_8 %%%%%%%%%%%%%%%%%%%
node(node46_8).
deepord(node46_8, x4_1).         const(x4_1).
a_ref_type(node46_8, tree).         const(tree).
a_afun(node46_8, Atr).         const(Atr).
m_form(node46_8, mista).         const(mista).
m_lemma(node46_8, misto_1___fyzicke_umisteni_).         const(misto_1___fyzicke_umisteni_).
m_tag(node46_8, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node46_8, mista).         const(mista).
a_ord(node46_8, 3).         const(3).
a_parent_id(node46_8, a_plzensky58468_txt_001_p1s8W2).         const(a_plzensky58468_txt_001_p1s8W2).
hide(node46_8, hide).         const(hide).
%%%%%%%% node46_9 %%%%%%%%%%%%%%%%%%%
node(node46_9).
deepord(node46_9, 5).         const(5).
functor(node46_9, ID).         const(ID).
gram_sempos(node46_9, n_denot).         const(n_denot).
id(node46_9, T_plzensky58468_txt_001_p1s8a5).         const(T_plzensky58468_txt_001_p1s8a5).
nodetype(node46_9, complex).         const(complex).
t_lemma(node46_9, spravce).         const(spravce).
%%%%%%%% node46_10 %%%%%%%%%%%%%%%%%%%
node(node46_10).
deepord(node46_10, x5_1).         const(x5_1).
a_ref_type(node46_10, tree).         const(tree).
a_afun(node46_10, Atr).         const(Atr).
m_form(node46_10, spravci).         const(spravci).
m_lemma(node46_10, spravce).         const(spravce).
m_tag(node46_10, NNMP1_____A____).         const(NNMP1_____A____).
w_token(node46_10, spravci).         const(spravci).
a_ord(node46_10, 4).         const(4).
a_parent_id(node46_10, a_plzensky58468_txt_001_p1s8W2).         const(a_plzensky58468_txt_001_p1s8W2).
hide(node46_10, hide).         const(hide).
%%%%%%%% node46_11 %%%%%%%%%%%%%%%%%%%
node(node46_11).
deepord(node46_11, 6).         const(6).
functor(node46_11, PAT).         const(PAT).
gram_sempos(node46_11, n_denot).         const(n_denot).
id(node46_11, T_plzensky58468_txt_001_p1s8a6).         const(T_plzensky58468_txt_001_p1s8a6).
nodetype(node46_11, complex).         const(complex).
t_lemma(node46_11, bazen).         const(bazen).
%%%%%%%% node46_12 %%%%%%%%%%%%%%%%%%%
node(node46_12).
deepord(node46_12, x6_1).         const(x6_1).
a_ref_type(node46_12, tree).         const(tree).
a_afun(node46_12, Atr).         const(Atr).
m_form(node46_12, bazenu).         const(bazenu).
m_lemma(node46_12, bazen).         const(bazen).
m_tag(node46_12, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node46_12, bazenu).         const(bazenu).
a_ord(node46_12, 5).         const(5).
a_parent_id(node46_12, a_plzensky58468_txt_001_p1s8W4).         const(a_plzensky58468_txt_001_p1s8W4).
hide(node46_12, hide).         const(hide).
%%%%%%%% node46_13 %%%%%%%%%%%%%%%%%%%
node(node46_13).
deepord(node46_13, 7).         const(7).
functor(node46_13, RSTR).         const(RSTR).
gram_sempos(node46_13, adj_quant_def).         const(adj_quant_def).
id(node46_13, T_plzensky58468_txt_001_p1s8a8).         const(T_plzensky58468_txt_001_p1s8a8).
nodetype(node46_13, complex).         const(complex).
t_lemma(node46_13, x8_43).         const(x8_43).
%%%%%%%% node46_14 %%%%%%%%%%%%%%%%%%%
node(node46_14).
deepord(node46_14, x7_1).         const(x7_1).
a_ref_type(node46_14, tree).         const(tree).
a_afun(node46_14, AuxP).         const(AuxP).
m_form(node46_14, v).         const(v).
m_lemma(node46_14, v_1).         const(v_1).
m_tag(node46_14, RR__4__________).         const(RR__4__________).
w_token(node46_14, v).         const(v).
a_ord(node46_14, 6).         const(6).
a_parent_id(node46_14, a_plzensky58468_txt_001_p1s8W10).         const(a_plzensky58468_txt_001_p1s8W10).
hide(node46_14, hide).         const(hide).
%%%%%%%% node46_15 %%%%%%%%%%%%%%%%%%%
node(node46_15).
deepord(node46_15, x7_2).         const(x7_2).
a_ref_type(node46_15, tree).         const(tree).
a_afun(node46_15, Adv).         const(Adv).
m_form(node46_15, x8_43).         const(x8_43).
m_lemma(node46_15, x8_43).         const(x8_43).
m_tag(node46_15, C=_____________).         const(C=_____________).
w_token(node46_15, x8_43).         const(x8_43).
a_ord(node46_15, 7).         const(7).
a_parent_id(node46_15, a_plzensky58468_txt_001_p1s8W6).         const(a_plzensky58468_txt_001_p1s8W6).
hide(node46_15, hide).         const(hide).
%%%%%%%% node46_16 %%%%%%%%%%%%%%%%%%%
node(node46_16).
deepord(node46_16, 8).         const(8).
functor(node46_16, ACT).         const(ACT).
gram_sempos(node46_16, n_denot).         const(n_denot).
id(node46_16, T_plzensky58468_txt_001_p1s8a10).         const(T_plzensky58468_txt_001_p1s8a10).
nodetype(node46_16, complex).         const(complex).
t_lemma(node46_16, hasic).         const(hasic).
%%%%%%%% node46_17 %%%%%%%%%%%%%%%%%%%
node(node46_17).
deepord(node46_17, x8_1).         const(x8_1).
a_ref_type(node46_17, tree).         const(tree).
a_afun(node46_17, Sb).         const(Sb).
m_form(node46_17, hasici).         const(hasici).
m_lemma(node46_17, hasic).         const(hasic).
m_tag(node46_17, NNMP1_____A____).         const(NNMP1_____A____).
w_token(node46_17, hasici).         const(hasici).
a_ord(node46_17, 9).         const(9).
a_parent_id(node46_17, a_plzensky58468_txt_001_p1s8W10).         const(a_plzensky58468_txt_001_p1s8W10).
hide(node46_17, hide).         const(hide).
%%%%%%%% node46_18 %%%%%%%%%%%%%%%%%%%
node(node46_18).
deepord(node46_18, x9_1).         const(x9_1).
a_ref_type(node46_18, tree).         const(tree).
a_afun(node46_18, AuxT).         const(AuxT).
m_form(node46_18, se).         const(se).
m_lemma(node46_18, se___zvr__zajmeno_castice_).         const(se___zvr__zajmeno_castice_).
m_tag(node46_18, P7_X4__________).         const(P7_X4__________).
w_token(node46_18, se).         const(se).
a_ord(node46_18, 8).         const(8).
a_parent_id(node46_18, a_plzensky58468_txt_001_p1s8W10).         const(a_plzensky58468_txt_001_p1s8W10).
hide(node46_18, hide).         const(hide).
%%%%%%%% node46_19 %%%%%%%%%%%%%%%%%%%
node(node46_19).
deepord(node46_19, x9_2).         const(x9_2).
a_ref_type(node46_19, tree).         const(tree).
a_afun(node46_19, Pred).         const(Pred).
m_form(node46_19, vratili).         const(vratili).
m_lemma(node46_19, vratit__W).         const(vratit__W).
m_tag(node46_19, VpMP___XR_AA___).         const(VpMP___XR_AA___).
w_token(node46_19, vratili).         const(vratili).
a_ord(node46_19, 10).         const(10).
a_parent_id(node46_19, a_plzensky58468_txt_001_p1s8).         const(a_plzensky58468_txt_001_p1s8).
hide(node46_19, hide).         const(hide).
%%%%%%%% node46_20 %%%%%%%%%%%%%%%%%%%
node(node46_20).
deepord(node46_20, 10).         const(10).
functor(node46_20, MEANS).         const(MEANS).
gram_sempos(node46_20, n_denot).         const(n_denot).
id(node46_20, T_plzensky58468_txt_001_p1s8a12).         const(T_plzensky58468_txt_001_p1s8a12).
nodetype(node46_20, complex).         const(complex).
t_lemma(node46_20, stanice).         const(stanice).
%%%%%%%% node46_21 %%%%%%%%%%%%%%%%%%%
node(node46_21).
deepord(node46_21, x10_1).         const(x10_1).
a_ref_type(node46_21, tree).         const(tree).
a_afun(node46_21, AuxP).         const(AuxP).
m_form(node46_21, na).         const(na).
m_lemma(node46_21, na_1).         const(na_1).
m_tag(node46_21, RR__6__________).         const(RR__6__________).
w_token(node46_21, na).         const(na).
a_ord(node46_21, 11).         const(11).
a_parent_id(node46_21, a_plzensky58468_txt_001_p1s8W10).         const(a_plzensky58468_txt_001_p1s8W10).
hide(node46_21, hide).         const(hide).
%%%%%%%% node46_22 %%%%%%%%%%%%%%%%%%%
node(node46_22).
deepord(node46_22, x10_2).         const(x10_2).
a_ref_type(node46_22, tree).         const(tree).
a_afun(node46_22, Adv).         const(Adv).
m_form(node46_22, stanici).         const(stanici).
m_lemma(node46_22, stanice).         const(stanice).
m_tag(node46_22, NNFS6_____A____).         const(NNFS6_____A____).
w_token(node46_22, stanici).         const(stanici).
w_no_space_after(node46_22, 1).         const(1).
a_ord(node46_22, 12).         const(12).
a_parent_id(node46_22, a_plzensky58468_txt_001_p1s8W11).         const(a_plzensky58468_txt_001_p1s8W11).
hide(node46_22, hide).         const(hide).
edge(node46_0, node46_1).
edge(node46_1, node46_2).
edge(node46_2, node46_3).
edge(node46_2, node46_4).
edge(node46_2, node46_5).
edge(node46_2, node46_6).
edge(node46_2, node46_7).
edge(node46_7, node46_8).
edge(node46_2, node46_9).
edge(node46_9, node46_10).
edge(node46_9, node46_11).
edge(node46_11, node46_12).
edge(node46_1, node46_13).
edge(node46_13, node46_14).
edge(node46_13, node46_15).
edge(node46_1, node46_16).
edge(node46_16, node46_17).
edge(node46_1, node46_18).
edge(node46_1, node46_19).
edge(node46_1, node46_20).
edge(node46_20, node46_21).
edge(node46_20, node46_22).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Prehled zasahu (v pdf) ( 74kb ) 
tree_root(node47_0).
:- valid_root(node47_0).
%%%%%%%% node47_0 %%%%%%%%%%%%%%%%%%%
node(node47_0).
atree_rf(node47_0, a_a_plzensky81415_txt_001_p1s1).         const(a_a_plzensky81415_txt_001_p1s1).
deepord(node47_0, 0).         const(0).
id(node47_0, T_plzensky81415_txt_001_p1s1).         const(T_plzensky81415_txt_001_p1s1).
nodetype(node47_0, root).         const(root).
sentence(node47_0, Prehled_zasahu__v_pdf____74kb___).         const(Prehled_zasahu__v_pdf____74kb___).
%%%%%%%% node47_1 %%%%%%%%%%%%%%%%%%%
node(node47_1).
deepord(node47_1, 1).         const(1).
functor(node47_1, DENOM).         const(DENOM).
gram_sempos(node47_1, n_denot).         const(n_denot).
id(node47_1, T_plzensky81415_txt_001_p1s1a1).         const(T_plzensky81415_txt_001_p1s1a1).
nodetype(node47_1, complex).         const(complex).
t_lemma(node47_1, prehled).         const(prehled).
%%%%%%%% node47_2 %%%%%%%%%%%%%%%%%%%
node(node47_2).
deepord(node47_2, x1_1).         const(x1_1).
a_ref_type(node47_2, tree).         const(tree).
a_afun(node47_2, ExD).         const(ExD).
m_form(node47_2, Prehled).         const(Prehled).
m_lemma(node47_2, prehled).         const(prehled).
m_tag(node47_2, NNIS1_____A____).         const(NNIS1_____A____).
w_token(node47_2, Prehled).         const(Prehled).
a_ord(node47_2, 1).         const(1).
a_parent_id(node47_2, a_plzensky81415_txt_001_p1s1).         const(a_plzensky81415_txt_001_p1s1).
hide(node47_2, hide).         const(hide).
%%%%%%%% node47_3 %%%%%%%%%%%%%%%%%%%
node(node47_3).
deepord(node47_3, 2).         const(2).
functor(node47_3, APP).         const(APP).
gram_sempos(node47_3, n_denot).         const(n_denot).
id(node47_3, T_plzensky81415_txt_001_p1s1a2).         const(T_plzensky81415_txt_001_p1s1a2).
nodetype(node47_3, complex).         const(complex).
t_lemma(node47_3, zasah).         const(zasah).
%%%%%%%% node47_4 %%%%%%%%%%%%%%%%%%%
node(node47_4).
deepord(node47_4, x2_1).         const(x2_1).
a_ref_type(node47_4, tree).         const(tree).
a_afun(node47_4, Atr).         const(Atr).
m_form(node47_4, zasahu).         const(zasahu).
m_lemma(node47_4, zasah).         const(zasah).
m_tag(node47_4, NNIP2_____A____).         const(NNIP2_____A____).
w_token(node47_4, zasahu).         const(zasahu).
a_ord(node47_4, 2).         const(2).
a_parent_id(node47_4, a_plzensky81415_txt_001_p1s1W1).         const(a_plzensky81415_txt_001_p1s1W1).
hide(node47_4, hide).         const(hide).
%%%%%%%% node47_5 %%%%%%%%%%%%%%%%%%%
node(node47_5).
deepord(node47_5, 3).         const(3).
functor(node47_5, LOC).         const(LOC).
gram_sempos(node47_5, n_denot).         const(n_denot).
id(node47_5, T_plzensky81415_txt_001_p1s1a5).         const(T_plzensky81415_txt_001_p1s1a5).
nodetype(node47_5, complex).         const(complex).
subfunctor(node47_5, basic).         const(basic).
t_lemma(node47_5, pdf).         const(pdf).
%%%%%%%% node47_6 %%%%%%%%%%%%%%%%%%%
node(node47_6).
deepord(node47_6, x3_1).         const(x3_1).
a_ref_type(node47_6, tree).         const(tree).
a_afun(node47_6, AuxP).         const(AuxP).
m_form(node47_6, v).         const(v).
m_lemma(node47_6, v_1).         const(v_1).
m_tag(node47_6, RR__6__________).         const(RR__6__________).
w_token(node47_6, v).         const(v).
a_ord(node47_6, 4).         const(4).
a_parent_id(node47_6, a_plzensky81415_txt_001_p1s1).         const(a_plzensky81415_txt_001_p1s1).
hide(node47_6, hide).         const(hide).
%%%%%%%% node47_7 %%%%%%%%%%%%%%%%%%%
node(node47_7).
deepord(node47_7, x3_2).         const(x3_2).
a_ref_type(node47_7, tree).         const(tree).
a_afun(node47_7, ExD).         const(ExD).
m_form(node47_7, pdf).         const(pdf).
m_lemma(node47_7, pdf).         const(pdf).
m_tag(node47_7, NNXXX_____A____).         const(NNXXX_____A____).
w_token(node47_7, pdf).         const(pdf).
w_no_space_after(node47_7, 1).         const(1).
a_ord(node47_7, 5).         const(5).
a_parent_id(node47_7, a_plzensky81415_txt_001_p1s1W4).         const(a_plzensky81415_txt_001_p1s1W4).
hide(node47_7, hide).         const(hide).
%%%%%%%% node47_8 %%%%%%%%%%%%%%%%%%%
node(node47_8).
deepord(node47_8, 4).         const(4).
functor(node47_8, PAR).         const(PAR).
gram_sempos(node47_8, n_denot).         const(n_denot).
id(node47_8, T_plzensky81415_txt_001_p1s1a8).         const(T_plzensky81415_txt_001_p1s1a8).
nodetype(node47_8, complex).         const(complex).
t_lemma(node47_8, x74kb).         const(x74kb).
%%%%%%%% node47_9 %%%%%%%%%%%%%%%%%%%
node(node47_9).
deepord(node47_9, x4_1).         const(x4_1).
a_ref_type(node47_9, tree).         const(tree).
a_afun(node47_9, ExD).         const(ExD).
m_form(node47_9, x74kb).         const(x74kb).
m_lemma(node47_9, x74kb).         const(x74kb).
m_tag(node47_9, NNXXX_____A____).         const(NNXXX_____A____).
w_token(node47_9, x74kb).         const(x74kb).
a_ord(node47_9, 8).         const(8).
a_parent_id(node47_9, a_plzensky81415_txt_001_p1s1).         const(a_plzensky81415_txt_001_p1s1).
hide(node47_9, hide).         const(hide).
edge(node47_0, node47_1).
edge(node47_1, node47_2).
edge(node47_1, node47_3).
edge(node47_3, node47_4).
edge(node47_0, node47_5).
edge(node47_5, node47_6).
edge(node47_5, node47_7).
edge(node47_0, node47_8).
edge(node47_8, node47_9).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Prohlidkou mista hasici zjistili, ze se uvnitr nachazi mrtva, dvaasedmdesatileta zena.. 
tree_root(node48_0).
:- valid_root(node48_0).
%%%%%%%% node48_0 %%%%%%%%%%%%%%%%%%%
node(node48_0).
atree_rf(node48_0, a_a_plzensky79543_txt_001_p1s1).         const(a_a_plzensky79543_txt_001_p1s1).
deepord(node48_0, 0).         const(0).
id(node48_0, T_plzensky79543_txt_001_p1s1).         const(T_plzensky79543_txt_001_p1s1).
nodetype(node48_0, root).         const(root).
sentence(node48_0, Prohlidkou_mista_hasici_zjistili__ze_se_uvnitr_nachazi_mrtva__dvaasedmdesatileta_zena___).         const(Prohlidkou_mista_hasici_zjistili__ze_se_uvnitr_nachazi_mrtva__dvaasedmdesatileta_zena___).
%%%%%%%% node48_1 %%%%%%%%%%%%%%%%%%%
node(node48_1).
deepord(node48_1, 5).         const(5).
functor(node48_1, PRED).         const(PRED).
gram_sempos(node48_1, v).         const(v).
id(node48_1, T_plzensky79543_txt_001_p1s1a1).         const(T_plzensky79543_txt_001_p1s1a1).
nodetype(node48_1, complex).         const(complex).
t_lemma(node48_1, zjistit).         const(zjistit).
val_frame_rf(node48_1, v_v_w9515f1).         const(v_v_w9515f1).
%%%%%%%% node48_2 %%%%%%%%%%%%%%%%%%%
node(node48_2).
deepord(node48_2, 1).         const(1).
functor(node48_2, CAUS).         const(CAUS).
id(node48_2, T_plzensky79543_txt_001_p1s1a14).         const(T_plzensky79543_txt_001_p1s1a14).
is_generated(node48_2, 1).         const(1).
nodetype(node48_2, complex).         const(complex).
t_lemma(node48_2, x___).         const(x___).
%%%%%%%% node48_3 %%%%%%%%%%%%%%%%%%%
node(node48_3).
deepord(node48_3, 2).         const(2).
functor(node48_3, MEANS).         const(MEANS).
gram_sempos(node48_3, n_denot).         const(n_denot).
id(node48_3, T_plzensky79543_txt_001_p1s1a2).         const(T_plzensky79543_txt_001_p1s1a2).
nodetype(node48_3, complex).         const(complex).
t_lemma(node48_3, prohlidka).         const(prohlidka).
%%%%%%%% node48_4 %%%%%%%%%%%%%%%%%%%
node(node48_4).
deepord(node48_4, x2_1).         const(x2_1).
a_ref_type(node48_4, tree).         const(tree).
a_afun(node48_4, Adv).         const(Adv).
m_form(node48_4, Prohlidkou).         const(Prohlidkou).
m_lemma(node48_4, prohlidka).         const(prohlidka).
m_tag(node48_4, NNFS7_____A____).         const(NNFS7_____A____).
w_token(node48_4, Prohlidkou).         const(Prohlidkou).
a_ord(node48_4, 1).         const(1).
a_parent_id(node48_4, a_plzensky79543_txt_001_p1s1W4).         const(a_plzensky79543_txt_001_p1s1W4).
hide(node48_4, hide).         const(hide).
%%%%%%%% node48_5 %%%%%%%%%%%%%%%%%%%
node(node48_5).
deepord(node48_5, 3).         const(3).
functor(node48_5, PAT).         const(PAT).
gram_sempos(node48_5, n_denot).         const(n_denot).
id(node48_5, T_plzensky79543_txt_001_p1s1a3).         const(T_plzensky79543_txt_001_p1s1a3).
nodetype(node48_5, complex).         const(complex).
t_lemma(node48_5, misto).         const(misto).
%%%%%%%% node48_6 %%%%%%%%%%%%%%%%%%%
node(node48_6).
deepord(node48_6, x3_1).         const(x3_1).
a_ref_type(node48_6, tree).         const(tree).
a_afun(node48_6, Atr).         const(Atr).
m_form(node48_6, mista).         const(mista).
m_lemma(node48_6, misto_1___fyzicke_umisteni_).         const(misto_1___fyzicke_umisteni_).
m_tag(node48_6, NNNS2_____A____).         const(NNNS2_____A____).
w_token(node48_6, mista).         const(mista).
a_ord(node48_6, 2).         const(2).
a_parent_id(node48_6, a_plzensky79543_txt_001_p1s1W1).         const(a_plzensky79543_txt_001_p1s1W1).
hide(node48_6, hide).         const(hide).
%%%%%%%% node48_7 %%%%%%%%%%%%%%%%%%%
node(node48_7).
deepord(node48_7, 4).         const(4).
functor(node48_7, ACT).         const(ACT).
gram_sempos(node48_7, n_denot).         const(n_denot).
id(node48_7, T_plzensky79543_txt_001_p1s1a4).         const(T_plzensky79543_txt_001_p1s1a4).
nodetype(node48_7, complex).         const(complex).
t_lemma(node48_7, hasic).         const(hasic).
%%%%%%%% node48_8 %%%%%%%%%%%%%%%%%%%
node(node48_8).
deepord(node48_8, x4_1).         const(x4_1).
a_ref_type(node48_8, tree).         const(tree).
a_afun(node48_8, Sb).         const(Sb).
m_form(node48_8, hasici).         const(hasici).
m_lemma(node48_8, hasic).         const(hasic).
m_tag(node48_8, NNMP1_____A____).         const(NNMP1_____A____).
w_token(node48_8, hasici).         const(hasici).
a_ord(node48_8, 3).         const(3).
a_parent_id(node48_8, a_plzensky79543_txt_001_p1s1W4).         const(a_plzensky79543_txt_001_p1s1W4).
hide(node48_8, hide).         const(hide).
%%%%%%%% node48_9 %%%%%%%%%%%%%%%%%%%
node(node48_9).
deepord(node48_9, x5_1).         const(x5_1).
a_ref_type(node48_9, tree).         const(tree).
a_afun(node48_9, Pred).         const(Pred).
m_form(node48_9, zjistili).         const(zjistili).
m_lemma(node48_9, zjistit__W).         const(zjistit__W).
m_tag(node48_9, VpMP___XR_AA___).         const(VpMP___XR_AA___).
w_token(node48_9, zjistili).         const(zjistili).
w_no_space_after(node48_9, 1).         const(1).
a_ord(node48_9, 4).         const(4).
a_parent_id(node48_9, a_plzensky79543_txt_001_p1s1).         const(a_plzensky79543_txt_001_p1s1).
hide(node48_9, hide).         const(hide).
%%%%%%%% node48_10 %%%%%%%%%%%%%%%%%%%
node(node48_10).
deepord(node48_10, 7).         const(7).
functor(node48_10, PAT).         const(PAT).
gram_sempos(node48_10, v).         const(v).
id(node48_10, T_plzensky79543_txt_001_p1s1a7).         const(T_plzensky79543_txt_001_p1s1a7).
nodetype(node48_10, complex).         const(complex).
t_lemma(node48_10, nachazet_se).         const(nachazet_se).
val_frame_rf(node48_10, v_v_w2024f1).         const(v_v_w2024f1).
%%%%%%%% node48_11 %%%%%%%%%%%%%%%%%%%
node(node48_11).
deepord(node48_11, 6).         const(6).
functor(node48_11, TWHEN).         const(TWHEN).
gram_sempos(node48_11, adv_denot_ngrad_nneg).         const(adv_denot_ngrad_nneg).
id(node48_11, T_plzensky79543_txt_001_p1s1a9).         const(T_plzensky79543_txt_001_p1s1a9).
nodetype(node48_11, complex).         const(complex).
subfunctor(node48_11, basic).         const(basic).
t_lemma(node48_11, uvnitr).         const(uvnitr).
%%%%%%%% node48_12 %%%%%%%%%%%%%%%%%%%
node(node48_12).
deepord(node48_12, x6_1).         const(x6_1).
a_ref_type(node48_12, tree).         const(tree).
a_afun(node48_12, Adv).         const(Adv).
m_form(node48_12, uvnitr).         const(uvnitr).
m_lemma(node48_12, uvnitr_2).         const(uvnitr_2).
m_tag(node48_12, Db_____________).         const(Db_____________).
w_token(node48_12, uvnitr).         const(uvnitr).
a_ord(node48_12, 8).         const(8).
a_parent_id(node48_12, a_plzensky79543_txt_001_p1s1W9).         const(a_plzensky79543_txt_001_p1s1W9).
hide(node48_12, hide).         const(hide).
%%%%%%%% node48_13 %%%%%%%%%%%%%%%%%%%
node(node48_13).
deepord(node48_13, x7_1).         const(x7_1).
a_ref_type(node48_13, tree).         const(tree).
a_afun(node48_13, AuxC).         const(AuxC).
m_form(node48_13, ze).         const(ze).
m_lemma(node48_13, ze).         const(ze).
m_tag(node48_13, J______________).         const(J______________).
w_token(node48_13, ze).         const(ze).
a_ord(node48_13, 6).         const(6).
a_parent_id(node48_13, a_plzensky79543_txt_001_p1s1W4).         const(a_plzensky79543_txt_001_p1s1W4).
hide(node48_13, hide).         const(hide).
%%%%%%%% node48_14 %%%%%%%%%%%%%%%%%%%
node(node48_14).
deepord(node48_14, x7_2).         const(x7_2).
a_ref_type(node48_14, tree).         const(tree).
a_afun(node48_14, AuxT).         const(AuxT).
m_form(node48_14, se).         const(se).
m_lemma(node48_14, se___zvr__zajmeno_castice_).         const(se___zvr__zajmeno_castice_).
m_tag(node48_14, P7_X4__________).         const(P7_X4__________).
w_token(node48_14, se).         const(se).
a_ord(node48_14, 7).         const(7).
a_parent_id(node48_14, a_plzensky79543_txt_001_p1s1W9).         const(a_plzensky79543_txt_001_p1s1W9).
hide(node48_14, hide).         const(hide).
%%%%%%%% node48_15 %%%%%%%%%%%%%%%%%%%
node(node48_15).
deepord(node48_15, x7_3).         const(x7_3).
a_ref_type(node48_15, tree).         const(tree).
a_afun(node48_15, Adv).         const(Adv).
m_form(node48_15, nachazi).         const(nachazi).
m_lemma(node48_15, nachazet__T).         const(nachazet__T).
m_tag(node48_15, VB_S___3P_AA___).         const(VB_S___3P_AA___).
w_token(node48_15, nachazi).         const(nachazi).
a_ord(node48_15, 9).         const(9).
a_parent_id(node48_15, a_plzensky79543_txt_001_p1s1W6).         const(a_plzensky79543_txt_001_p1s1W6).
hide(node48_15, hide).         const(hide).
%%%%%%%% node48_16 %%%%%%%%%%%%%%%%%%%
node(node48_16).
deepord(node48_16, 8).         const(8).
functor(node48_16, ACT).         const(ACT).
gram_sempos(node48_16, n_denot).         const(n_denot).
id(node48_16, T_plzensky79543_txt_001_p1s1a10).         const(T_plzensky79543_txt_001_p1s1a10).
nodetype(node48_16, complex).         const(complex).
t_lemma(node48_16, mrtvy).         const(mrtvy).
%%%%%%%% node48_17 %%%%%%%%%%%%%%%%%%%
node(node48_17).
deepord(node48_17, x8_1).         const(x8_1).
a_ref_type(node48_17, tree).         const(tree).
a_afun(node48_17, Sb).         const(Sb).
m_form(node48_17, mrtva).         const(mrtva).
m_lemma(node48_17, mrtvy).         const(mrtvy).
m_tag(node48_17, AAFS1____1A____).         const(AAFS1____1A____).
w_token(node48_17, mrtva).         const(mrtva).
w_no_space_after(node48_17, 1).         const(1).
a_ord(node48_17, 10).         const(10).
a_parent_id(node48_17, a_plzensky79543_txt_001_p1s1W9).         const(a_plzensky79543_txt_001_p1s1W9).
hide(node48_17, hide).         const(hide).
%%%%%%%% node48_18 %%%%%%%%%%%%%%%%%%%
node(node48_18).
deepord(node48_18, 10).         const(10).
functor(node48_18, ACT).         const(ACT).
gram_sempos(node48_18, n_denot).         const(n_denot).
id(node48_18, T_plzensky79543_txt_001_p1s1a12).         const(T_plzensky79543_txt_001_p1s1a12).
nodetype(node48_18, complex).         const(complex).
t_lemma(node48_18, zena).         const(zena).
%%%%%%%% node48_19 %%%%%%%%%%%%%%%%%%%
node(node48_19).
deepord(node48_19, 9).         const(9).
functor(node48_19, RSTR).         const(RSTR).
gram_sempos(node48_19, adj_denot).         const(adj_denot).
id(node48_19, T_plzensky79543_txt_001_p1s1a13).         const(T_plzensky79543_txt_001_p1s1a13).
nodetype(node48_19, complex).         const(complex).
t_lemma(node48_19, dvaasedmdesatilety).         const(dvaasedmdesatilety).
%%%%%%%% node48_20 %%%%%%%%%%%%%%%%%%%
node(node48_20).
deepord(node48_20, x9_1).         const(x9_1).
a_ref_type(node48_20, tree).         const(tree).
a_afun(node48_20, Atr).         const(Atr).
m_form(node48_20, dvaasedmdesatileta).         const(dvaasedmdesatileta).
m_lemma(node48_20, dvaasedmdesatilety).         const(dvaasedmdesatilety).
m_tag(node48_20, AAFS1____1A____).         const(AAFS1____1A____).
w_token(node48_20, dvaasedmdesatileta).         const(dvaasedmdesatileta).
a_ord(node48_20, 12).         const(12).
a_parent_id(node48_20, a_plzensky79543_txt_001_p1s1W13).         const(a_plzensky79543_txt_001_p1s1W13).
hide(node48_20, hide).         const(hide).
%%%%%%%% node48_21 %%%%%%%%%%%%%%%%%%%
node(node48_21).
deepord(node48_21, x10_1).         const(x10_1).
a_ref_type(node48_21, tree).         const(tree).
a_afun(node48_21, Sb).         const(Sb).
m_form(node48_21, zena).         const(zena).
m_lemma(node48_21, zena).         const(zena).
m_tag(node48_21, NNFS1_____A____).         const(NNFS1_____A____).
w_token(node48_21, zena).         const(zena).
w_no_space_after(node48_21, 1).         const(1).
a_ord(node48_21, 13).         const(13).
a_parent_id(node48_21, a_plzensky79543_txt_001_p1s1W9).         const(a_plzensky79543_txt_001_p1s1W9).
hide(node48_21, hide).         const(hide).
edge(node48_0, node48_1).
edge(node48_1, node48_2).
edge(node48_1, node48_3).
edge(node48_3, node48_4).
edge(node48_3, node48_5).
edge(node48_5, node48_6).
edge(node48_1, node48_7).
edge(node48_7, node48_8).
edge(node48_1, node48_9).
edge(node48_1, node48_10).
edge(node48_10, node48_11).
edge(node48_11, node48_12).
edge(node48_10, node48_13).
edge(node48_10, node48_14).
edge(node48_10, node48_15).
edge(node48_10, node48_16).
edge(node48_16, node48_17).
edge(node48_10, node48_18).
edge(node48_18, node48_19).
edge(node48_19, node48_20).
edge(node48_18, node48_21).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Byt byl zakouren. 
tree_root(node49_0).
:- valid_root(node49_0).
%%%%%%%% node49_0 %%%%%%%%%%%%%%%%%%%
node(node49_0).
atree_rf(node49_0, a_a_plzensky79543_txt_001_p1s2).         const(a_a_plzensky79543_txt_001_p1s2).
deepord(node49_0, 0).         const(0).
id(node49_0, T_plzensky79543_txt_001_p1s2).         const(T_plzensky79543_txt_001_p1s2).
nodetype(node49_0, root).         const(root).
sentence(node49_0, Byt_byl_zakouren__).         const(Byt_byl_zakouren__).
%%%%%%%% node49_1 %%%%%%%%%%%%%%%%%%%
node(node49_1).
deepord(node49_1, 3).         const(3).
functor(node49_1, PRED).         const(PRED).
gram_sempos(node49_1, v).         const(v).
id(node49_1, T_plzensky79543_txt_001_p1s2a1).         const(T_plzensky79543_txt_001_p1s2a1).
nodetype(node49_1, complex).         const(complex).
t_lemma(node49_1, zakourit).         const(zakourit).
%%%%%%%% node49_2 %%%%%%%%%%%%%%%%%%%
node(node49_2).
deepord(node49_2, 1).         const(1).
functor(node49_2, ACT).         const(ACT).
id(node49_2, T_plzensky79543_txt_001_p1s2a3).         const(T_plzensky79543_txt_001_p1s2a3).
is_generated(node49_2, 1).         const(1).
nodetype(node49_2, qcomplex).         const(qcomplex).
t_lemma(node49_2, x_Gen).         const(x_Gen).
%%%%%%%% node49_3 %%%%%%%%%%%%%%%%%%%
node(node49_3).
deepord(node49_3, 2).         const(2).
functor(node49_3, PAT).         const(PAT).
gram_sempos(node49_3, n_denot).         const(n_denot).
id(node49_3, T_plzensky79543_txt_001_p1s2a2).         const(T_plzensky79543_txt_001_p1s2a2).
nodetype(node49_3, complex).         const(complex).
t_lemma(node49_3, byt).         const(byt).
%%%%%%%% node49_4 %%%%%%%%%%%%%%%%%%%
node(node49_4).
deepord(node49_4, x2_1).         const(x2_1).
a_ref_type(node49_4, tree).         const(tree).
a_afun(node49_4, Sb).         const(Sb).
m_form(node49_4, Byt).         const(Byt).
m_lemma(node49_4, byt___misto_k_bydleni_).         const(byt___misto_k_bydleni_).
m_tag(node49_4, NNIS1_____A____).         const(NNIS1_____A____).
w_token(node49_4, Byt).         const(Byt).
a_ord(node49_4, 1).         const(1).
a_parent_id(node49_4, a_plzensky79543_txt_001_p1s2W3).         const(a_plzensky79543_txt_001_p1s2W3).
hide(node49_4, hide).         const(hide).
%%%%%%%% node49_5 %%%%%%%%%%%%%%%%%%%
node(node49_5).
deepord(node49_5, x3_1).         const(x3_1).
a_ref_type(node49_5, tree).         const(tree).
a_afun(node49_5, AuxV).         const(AuxV).
m_form(node49_5, byl).         const(byl).
m_lemma(node49_5, byt).         const(byt).
m_tag(node49_5, VpYS___XR_AA___).         const(VpYS___XR_AA___).
w_token(node49_5, byl).         const(byl).
a_ord(node49_5, 2).         const(2).
a_parent_id(node49_5, a_plzensky79543_txt_001_p1s2W3).         const(a_plzensky79543_txt_001_p1s2W3).
hide(node49_5, hide).         const(hide).
%%%%%%%% node49_6 %%%%%%%%%%%%%%%%%%%
node(node49_6).
deepord(node49_6, x3_2).         const(x3_2).
a_ref_type(node49_6, tree).         const(tree).
a_afun(node49_6, Pred).         const(Pred).
m_form(node49_6, zakouren).         const(zakouren).
m_lemma(node49_6, zakourit).         const(zakourit).
m_tag(node49_6, VsYS___XX_AP___).         const(VsYS___XX_AP___).
w_token(node49_6, zakouren).         const(zakouren).
w_no_space_after(node49_6, 1).         const(1).
a_ord(node49_6, 3).         const(3).
a_parent_id(node49_6, a_plzensky79543_txt_001_p1s2).         const(a_plzensky79543_txt_001_p1s2).
hide(node49_6, hide).         const(hide).
edge(node49_0, node49_1).
edge(node49_1, node49_2).
edge(node49_1, node49_3).
edge(node49_3, node49_4).
edge(node49_1, node49_5).
edge(node49_1, node49_6).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Na miste jiz nehorelo, doslo k samo uhaseni pozaru. 
tree_root(node50_0).
:- valid_root(node50_0).
%%%%%%%% node50_0 %%%%%%%%%%%%%%%%%%%
node(node50_0).
atree_rf(node50_0, a_a_plzensky79543_txt_001_p1s3).         const(a_a_plzensky79543_txt_001_p1s3).
deepord(node50_0, 0).         const(0).
id(node50_0, T_plzensky79543_txt_001_p1s3).         const(T_plzensky79543_txt_001_p1s3).
nodetype(node50_0, root).         const(root).
sentence(node50_0, Na_miste_jiz_nehorelo__doslo_k_samo_uhaseni_pozaru__).         const(Na_miste_jiz_nehorelo__doslo_k_samo_uhaseni_pozaru__).
%%%%%%%% node50_1 %%%%%%%%%%%%%%%%%%%
node(node50_1).
deepord(node50_1, 6).         const(6).
functor(node50_1, PRED).         const(PRED).
gram_sempos(node50_1, v).         const(v).
id(node50_1, T_plzensky79543_txt_001_p1s3a1).         const(T_plzensky79543_txt_001_p1s3a1).
nodetype(node50_1, complex).         const(complex).
t_lemma(node50_1, dojit).         const(dojit).
val_frame_rf(node50_1, v_v_w582f1).         const(v_v_w582f1).
%%%%%%%% node50_2 %%%%%%%%%%%%%%%%%%%
node(node50_2).
deepord(node50_2, 1).         const(1).
functor(node50_2, LOC).         const(LOC).
gram_sempos(node50_2, n_denot).         const(n_denot).
id(node50_2, T_plzensky79543_txt_001_p1s3a3).         const(T_plzensky79543_txt_001_p1s3a3).
nodetype(node50_2, complex).         const(complex).
subfunctor(node50_2, basic).         const(basic).
t_lemma(node50_2, misto).         const(misto).
%%%%%%%% node50_3 %%%%%%%%%%%%%%%%%%%
node(node50_3).
deepord(node50_3, x1_1).         const(x1_1).
a_ref_type(node50_3, tree).         const(tree).
a_afun(node50_3, AuxP).         const(AuxP).
m_form(node50_3, Na).         const(Na).
m_lemma(node50_3, na_1).         const(na_1).
m_tag(node50_3, RR__6__________).         const(RR__6__________).
w_token(node50_3, Na).         const(Na).
a_ord(node50_3, 1).         const(1).
a_parent_id(node50_3, a_plzensky79543_txt_001_p1s3W6).         const(a_plzensky79543_txt_001_p1s3W6).
hide(node50_3, hide).         const(hide).
%%%%%%%% node50_4 %%%%%%%%%%%%%%%%%%%
node(node50_4).
deepord(node50_4, x1_2).         const(x1_2).
a_ref_type(node50_4, tree).         const(tree).
a_afun(node50_4, Adv).         const(Adv).
m_form(node50_4, miste).         const(miste).
m_lemma(node50_4, misto_1___fyzicke_umisteni_).         const(misto_1___fyzicke_umisteni_).
m_tag(node50_4, NNNS6_____A____).         const(NNNS6_____A____).
w_token(node50_4, miste).         const(miste).
a_ord(node50_4, 2).         const(2).
a_parent_id(node50_4, a_plzensky79543_txt_001_p1s3W1).         const(a_plzensky79543_txt_001_p1s3W1).
hide(node50_4, hide).         const(hide).
%%%%%%%% node50_5 %%%%%%%%%%%%%%%%%%%
node(node50_5).
deepord(node50_5, 5).         const(5).
functor(node50_5, TWHEN).         const(TWHEN).
gram_sempos(node50_5, v).         const(v).
id(node50_5, T_plzensky79543_txt_001_p1s3a4).         const(T_plzensky79543_txt_001_p1s3a4).
nodetype(node50_5, complex).         const(complex).
subfunctor(node50_5, basic).         const(basic).
t_lemma(node50_5, horet).         const(horet).
val_frame_rf(node50_5, v_v_w1096f1).         const(v_v_w1096f1).
%%%%%%%% node50_6 %%%%%%%%%%%%%%%%%%%
node(node50_6).
deepord(node50_6, 2).         const(2).
functor(node50_6, RHEM).         const(RHEM).
id(node50_6, T_plzensky79543_txt_001_p1s3a12).         const(T_plzensky79543_txt_001_p1s3a12).
is_generated(node50_6, 1).         const(1).
nodetype(node50_6, atom).         const(atom).
t_lemma(node50_6, x_Neg).         const(x_Neg).
%%%%%%%% node50_7 %%%%%%%%%%%%%%%%%%%
node(node50_7).
deepord(node50_7, 3).         const(3).
functor(node50_7, ACT).         const(ACT).
gram_sempos(node50_7, n_pron_def_pers).         const(n_pron_def_pers).
id(node50_7, T_plzensky79543_txt_001_p1s3a11).         const(T_plzensky79543_txt_001_p1s3a11).
is_generated(node50_7, 1).         const(1).
nodetype(node50_7, complex).         const(complex).
t_lemma(node50_7, x_PersPron).         const(x_PersPron).
%%%%%%%% node50_8 %%%%%%%%%%%%%%%%%%%
node(node50_8).
deepord(node50_8, 4).         const(4).
functor(node50_8, PAT).         const(PAT).
gram_sempos(node50_8, n_pron_indef).         const(n_pron_indef).
id(node50_8, T_plzensky79543_txt_001_p1s3a5).         const(T_plzensky79543_txt_001_p1s3a5).
nodetype(node50_8, complex).         const(complex).
t_lemma(node50_8, ktery).         const(ktery).
%%%%%%%% node50_9 %%%%%%%%%%%%%%%%%%%
node(node50_9).
deepord(node50_9, x4_1).         const(x4_1).
a_ref_type(node50_9, tree).         const(tree).
a_afun(node50_9, Obj).         const(Obj).
m_form(node50_9, jiz).         const(jiz).
m_lemma(node50_9, jenz___ktery__ve_vedl_vete__).         const(jenz___ktery__ve_vedl_vete__).
m_tag(node50_9, PJFS2__________).         const(PJFS2__________).
w_token(node50_9, jiz).         const(jiz).
a_ord(node50_9, 3).         const(3).
a_parent_id(node50_9, a_plzensky79543_txt_001_p1s3W4).         const(a_plzensky79543_txt_001_p1s3W4).
hide(node50_9, hide).         const(hide).
%%%%%%%% node50_10 %%%%%%%%%%%%%%%%%%%
node(node50_10).
deepord(node50_10, x5_1).         const(x5_1).
a_ref_type(node50_10, tree).         const(tree).
a_afun(node50_10, Obj).         const(Obj).
m_form(node50_10, nehorelo).         const(nehorelo).
m_lemma(node50_10, horet).         const(horet).
m_tag(node50_10, VpNS___XR_NA___).         const(VpNS___XR_NA___).
w_token(node50_10, nehorelo).         const(nehorelo).
w_no_space_after(node50_10, 1).         const(1).
a_ord(node50_10, 4).         const(4).
a_parent_id(node50_10, a_plzensky79543_txt_001_p1s3W6).         const(a_plzensky79543_txt_001_p1s3W6).
hide(node50_10, hide).         const(hide).
%%%%%%%% node50_11 %%%%%%%%%%%%%%%%%%%
node(node50_11).
deepord(node50_11, x6_1).         const(x6_1).
a_ref_type(node50_11, tree).         const(tree).
a_afun(node50_11, Pred).         const(Pred).
m_form(node50_11, doslo).         const(doslo).
m_lemma(node50_11, dojit).         const(dojit).
m_tag(node50_11, VpNS___XR_AA___).         const(VpNS___XR_AA___).
w_token(node50_11, doslo).         const(doslo).
a_ord(node50_11, 6).         const(6).
a_parent_id(node50_11, a_plzensky79543_txt_001_p1s3).         const(a_plzensky79543_txt_001_p1s3).
hide(node50_11, hide).         const(hide).
%%%%%%%% node50_12 %%%%%%%%%%%%%%%%%%%
node(node50_12).
deepord(node50_12, 8).         const(8).
functor(node50_12, ACT).         const(ACT).
gram_sempos(node50_12, n_denot).         const(n_denot).
id(node50_12, T_plzensky79543_txt_001_p1s3a8).         const(T_plzensky79543_txt_001_p1s3a8).
nodetype(node50_12, complex).         const(complex).
t_lemma(node50_12, uhaseni).         const(uhaseni).
%%%%%%%% node50_13 %%%%%%%%%%%%%%%%%%%
node(node50_13).
deepord(node50_13, 7).         const(7).
functor(node50_13, RSTR).         const(RSTR).
gram_sempos(node50_13, adj_pron_def_demon).         const(adj_pron_def_demon).
id(node50_13, T_plzensky79543_txt_001_p1s3a9).         const(T_plzensky79543_txt_001_p1s3a9).
nodetype(node50_13, complex).         const(complex).
t_lemma(node50_13, sam).         const(sam).
%%%%%%%% node50_14 %%%%%%%%%%%%%%%%%%%
node(node50_14).
deepord(node50_14, x7_1).         const(x7_1).
a_ref_type(node50_14, tree).         const(tree).
a_afun(node50_14, Atv).         const(Atv).
m_form(node50_14, samo).         const(samo).
m_lemma(node50_14, sam___samotny_).         const(sam___samotny_).
m_tag(node50_14, PLNS1__________).         const(PLNS1__________).
w_token(node50_14, samo).         const(samo).
a_ord(node50_14, 8).         const(8).
a_parent_id(node50_14, a_plzensky79543_txt_001_p1s3W9).         const(a_plzensky79543_txt_001_p1s3W9).
hide(node50_14, hide).         const(hide).
%%%%%%%% node50_15 %%%%%%%%%%%%%%%%%%%
node(node50_15).
deepord(node50_15, x8_1).         const(x8_1).
a_ref_type(node50_15, tree).         const(tree).
a_afun(node50_15, AuxP).         const(AuxP).
m_form(node50_15, k).         const(k).
m_lemma(node50_15, k_1).         const(k_1).
m_tag(node50_15, RR__3__________).         const(RR__3__________).
w_token(node50_15, k).         const(k).
a_ord(node50_15, 7).         const(7).
a_parent_id(node50_15, a_plzensky79543_txt_001_p1s3W6).         const(a_plzensky79543_txt_001_p1s3W6).
hide(node50_15, hide).         const(hide).
%%%%%%%% node50_16 %%%%%%%%%%%%%%%%%%%
node(node50_16).
deepord(node50_16, x8_2).         const(x8_2).
a_ref_type(node50_16, tree).         const(tree).
a_afun(node50_16, ExD).         const(ExD).
m_form(node50_16, uhaseni).         const(uhaseni).
m_lemma(node50_16, uhaseni____4sit_).         const(uhaseni____4sit_).
m_tag(node50_16, NNNS1_____A____).         const(NNNS1_____A____).
w_token(node50_16, uhaseni).         const(uhaseni).
a_ord(node50_16, 9).         const(9).
a_parent_id(node50_16, a_plzensky79543_txt_001_p1s3W7).         const(a_plzensky79543_txt_001_p1s3W7).
hide(node50_16, hide).         const(hide).
%%%%%%%% node50_17 %%%%%%%%%%%%%%%%%%%
node(node50_17).
deepord(node50_17, 9).         const(9).
functor(node50_17, PAT).         const(PAT).
gram_sempos(node50_17, n_denot).         const(n_denot).
id(node50_17, T_plzensky79543_txt_001_p1s3a10).         const(T_plzensky79543_txt_001_p1s3a10).
nodetype(node50_17, complex).         const(complex).
t_lemma(node50_17, pozar).         const(pozar).
%%%%%%%% node50_18 %%%%%%%%%%%%%%%%%%%
node(node50_18).
deepord(node50_18, x9_1).         const(x9_1).
a_ref_type(node50_18, tree).         const(tree).
a_afun(node50_18, Atr).         const(Atr).
m_form(node50_18, pozaru).         const(pozaru).
m_lemma(node50_18, pozar).         const(pozar).
m_tag(node50_18, NNIS2_____A____).         const(NNIS2_____A____).
w_token(node50_18, pozaru).         const(pozaru).
w_no_space_after(node50_18, 1).         const(1).
a_ord(node50_18, 10).         const(10).
a_parent_id(node50_18, a_plzensky79543_txt_001_p1s3W9).         const(a_plzensky79543_txt_001_p1s3W9).
hide(node50_18, hide).         const(hide).
edge(node50_0, node50_1).
edge(node50_1, node50_2).
edge(node50_2, node50_3).
edge(node50_2, node50_4).
edge(node50_1, node50_5).
edge(node50_5, node50_6).
edge(node50_5, node50_7).
edge(node50_5, node50_8).
edge(node50_8, node50_9).
edge(node50_5, node50_10).
edge(node50_1, node50_11).
edge(node50_1, node50_12).
edge(node50_12, node50_13).
edge(node50_13, node50_14).
edge(node50_12, node50_15).
edge(node50_12, node50_16).
edge(node50_12, node50_17).
edge(node50_17, node50_18).
