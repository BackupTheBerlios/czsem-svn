%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: tree.pdf
%%Creator: Adobe Acrobat 8.0
%%For: dedek
%%CreationDate: 30.1.2009, 15:12:07
%%BoundingBox: 0 0 266 173
%%HiResBoundingBox: 0 0 265.7428 172.0955
%%CropBox: 0 0 265.7428 172.0955
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 5110 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c316 44.253921, Sun Oct 01 2006 17:14:39">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
    xmlns:xap="http://ns.adobe.com/xap/1.0/"
    xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   pdf:Producer="Acrobat Distiller 8.1.0 (Windows)"
   pdfx:Company="KSI MFF UK"
   pdfx:SourceModified="D:20090130140815"
   xap:CreatorTool="Acrobat PDFMaker 8.1 for Word"
   xap:ModifyDate="2009-01-30T15:11:59+01:00"
   xap:CreateDate="2009-01-30T15:10:40+01:00"
   xap:MetadataDate="2009-01-30T15:11:59+01:00"
   xapMM:DocumentID="uuid:1fc3669f-da00-425a-91cd-f8dee8b7cb15"
   xapMM:InstanceID="uuid:a1d2d27a-4c3a-4965-9e8a-0b406bc9dc44"
   dc:format="application/pdf">
   <xapMM:subject>
    <rdf:Seq>
     <rdf:li>8</rdf:li>
    </rdf:Seq>
   </xapMM:subject>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Jan Ddek</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
<< /0 
[/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]

/CSA add_res
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -172.095 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
1.52588e-5 0 mo
1.52588e-5 172.095 li
265.743 172.095 li
265.743 0 li
cp
clp
[1 0 0 1 -133.362 0 ]ct
.689 lw
2 lc
0 lj
282 ml
[] 0 dsh
false sadj
144.18 55.3561 mo
306.48 14.9761 li
false sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 1 colr
@
204.78 55.3561 mo
306.48 14.9761 li
@
241.68 55.3561 mo
306.48 14.9761 li
@
292.56 55.3561 mo
306.48 14.9761 li
@
339.18 55.3561 mo
306.48 14.9761 li
@
320.4 95.7361 mo
339.18 55.3561 li
@
374.7 95.7361 mo
339.18 55.3561 li
@
377.52 96.0361 mo
377.52 97.4161 376.44 98.4961 375.06 98.4961 cv
373.68 98.4961 372.6 97.4161 372.6 96.0361 cv
372.6 94.7161 373.68 93.636 375.06 93.636 cv
376.44 93.636 377.52 94.7161 377.52 96.0361 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 1 1 colr
f
377.16 96.0361 mo
377.16 97.2361 376.2 98.136 375.06 98.136 cv
373.92 98.136 373.02 97.2361 373.02 96.0361 cv
373.02 94.8961 373.92 93.9961 375.06 93.9961 cv
376.2 93.9961 377.16 94.8961 377.16 96.0361 cv
cp
377.82 96.0361 mo
377.82 94.5361 376.56 93.2761 375.06 93.2761 cv
373.56 93.2761 372.3 94.5361 372.3 96.0361 cv
372.3 97.5961 373.56 98.8561 375.06 98.8561 cv
376.56 98.8561 377.82 97.5961 377.82 96.0361 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 1 colr
f
372.48 110.316 mo
372.48 105.336 li
373.44 105.336 li
374.64 108.876 li
374.76 109.236 374.82 109.476 374.88 109.656 cv
374.94 109.416 375 109.176 375.18 108.816 cv
376.32 105.336 li
377.22 105.336 li
377.22 110.316 li
376.62 110.316 li
376.62 106.176 li
375.12 110.316 li
374.58 110.316 li
373.08 106.116 li
373.08 110.316 li
372.48 110.316 li
/1 
[/DeviceGray] /CSA add_res
0 gry
f
377.76 110.316 mo
379.68 105.336 li
380.4 105.336 li
382.44 110.316 li
381.66 110.316 li
381.06 108.816 li
379.02 108.816 li
378.42 110.316 li
377.76 110.316 li
cp
379.2 108.276 mo
380.88 108.276 li
380.34 106.896 li
380.22 106.476 380.1 106.116 379.98 105.876 cv
379.92 106.176 379.86 106.536 379.74 106.836 cv
379.2 108.276 li
f
384.18 110.316 mo
384.18 105.936 li
382.56 105.936 li
382.56 105.336 li
386.52 105.336 li
386.52 105.936 li
384.9 105.936 li
384.9 110.316 li
384.18 110.316 li
f
372.42 117.996 mo
372.42 112.956 li
373.02 112.956 li
373.02 115.836 li
374.52 114.336 li
375.3 114.336 li
373.92 115.716 li
375.42 117.996 li
374.64 117.996 li
373.44 116.136 li
373.02 116.556 li
373.02 117.996 li
372.42 117.996 li
f
375.66 116.196 mo
375.66 115.536 375.9 114.996 376.26 114.696 cv
376.56 114.396 376.92 114.276 377.4 114.276 cv
377.88 114.276 378.3 114.456 378.6 114.756 cv
378.9 115.116 379.08 115.536 379.08 116.136 cv
379.08 116.616 379.02 116.916 378.9 117.216 cv
378.72 117.456 378.54 117.696 378.24 117.816 cv
378 117.996 377.7 118.056 377.4 118.056 cv
376.86 118.056 376.44 117.876 376.14 117.576 cv
375.84 117.216 375.66 116.796 375.66 116.196 cv
cp
376.32 116.196 mo
376.32 116.616 376.44 116.976 376.62 117.216 cv
376.8 117.456 377.1 117.576 377.4 117.576 cv
377.7 117.576 377.94 117.456 378.12 117.216 cv
378.36 116.976 378.42 116.616 378.42 116.136 cv
378.42 115.716 378.36 115.356 378.12 115.116 cv
377.94 114.936 377.7 114.816 377.4 114.816 cv
377.1 114.816 376.8 114.936 376.62 115.116 cv
376.44 115.356 376.32 115.716 376.32 116.196 cv
f
379.8 117.996 mo
379.8 114.336 li
380.34 114.336 li
380.34 114.936 li
380.52 114.636 380.64 114.456 380.76 114.396 cv
380.88 114.336 381 114.276 381.12 114.276 cv
381.36 114.276 381.54 114.336 381.78 114.456 cv
381.54 115.056 li
381.42 114.936 381.24 114.936 381.12 114.936 cv
380.94 114.936 380.88 114.936 380.76 115.056 cv
380.64 115.116 380.58 115.236 380.52 115.356 cv
380.46 115.596 380.4 115.836 380.4 116.076 cv
380.4 117.996 li
379.8 117.996 li
f
384.48 117.996 mo
384.48 117.456 li
384.24 117.876 383.88 118.056 383.34 118.056 cv
383.16 118.056 382.92 118.056 382.74 117.936 cv
382.56 117.876 382.44 117.756 382.38 117.636 cv
382.26 117.516 382.2 117.336 382.14 117.156 cv
382.14 117.036 382.14 116.856 382.14 116.616 cv
382.14 114.336 li
382.74 114.336 li
382.74 116.376 li
382.74 116.676 382.74 116.916 382.8 117.036 cv
382.8 117.156 382.92 117.276 383.04 117.396 cv
383.16 117.456 383.28 117.516 383.46 117.516 cv
383.7 117.516 383.88 117.456 384 117.396 cv
384.18 117.276 384.3 117.156 384.36 116.976 cv
384.42 116.856 384.42 116.616 384.42 116.316 cv
384.42 114.336 li
385.08 114.336 li
385.08 117.996 li
384.48 117.996 li
f
386.04 117.996 mo
386.04 114.336 li
386.58 114.336 li
386.58 114.876 li
386.88 114.456 387.24 114.276 387.72 114.276 cv
387.96 114.276 388.14 114.336 388.32 114.396 cv
388.5 114.456 388.68 114.576 388.74 114.696 cv
388.8 114.816 388.92 114.996 388.92 115.176 cv
388.98 115.296 388.98 115.476 388.98 115.776 cv
388.98 117.996 li
388.38 117.996 li
388.38 115.776 li
388.38 115.536 388.32 115.356 388.32 115.236 cv
388.26 115.116 388.14 114.996 388.02 114.936 cv
387.9 114.876 387.78 114.816 387.6 114.816 cv
387.36 114.816 387.12 114.876 386.94 115.056 cv
386.76 115.236 386.64 115.536 386.64 116.016 cv
386.64 117.996 li
386.04 117.996 li
f
392.28 117.516 mo
392.04 117.756 391.8 117.876 391.62 117.936 cv
391.44 118.056 391.2 118.056 390.96 118.056 cv
390.54 118.056 390.24 117.996 390.06 117.756 cv
389.82 117.576 389.7 117.336 389.7 117.036 cv
389.7 116.856 389.76 116.676 389.82 116.556 cv
389.94 116.376 390 116.256 390.18 116.196 cv
390.3 116.076 390.42 116.016 390.6 115.956 cv
390.72 115.956 390.9 115.896 391.14 115.896 cv
391.62 115.836 391.98 115.776 392.22 115.656 cv
392.22 115.596 392.22 115.536 392.22 115.536 cv
392.22 115.296 392.16 115.116 392.04 114.996 cv
391.92 114.876 391.68 114.816 391.38 114.816 cv
391.08 114.816 390.84 114.816 390.72 114.936 cv
390.6 115.056 390.48 115.236 390.42 115.476 cv
389.82 115.416 li
389.88 115.116 389.94 114.936 390.12 114.756 cv
390.24 114.636 390.36 114.516 390.6 114.396 cv
390.84 114.336 391.14 114.276 391.44 114.276 cv
391.8 114.276 391.98 114.336 392.22 114.396 cv
392.4 114.456 392.52 114.576 392.64 114.636 cv
392.7 114.756 392.76 114.936 392.82 115.116 cv
392.82 115.176 392.88 115.356 392.88 115.656 cv
392.88 116.496 li
392.88 117.036 392.88 117.396 392.88 117.516 cv
392.94 117.696 393 117.816 393.06 117.996 cv
392.4 117.996 li
392.34 117.876 392.28 117.696 392.28 117.516 cv
cp
392.22 116.136 mo
391.98 116.256 391.68 116.316 391.26 116.376 cv
390.96 116.436 390.78 116.496 390.72 116.496 cv
390.6 116.556 390.48 116.616 390.42 116.736 cv
390.36 116.796 390.36 116.916 390.36 116.976 cv
390.36 117.156 390.42 117.276 390.54 117.396 cv
390.66 117.516 390.84 117.576 391.08 117.576 cv
391.32 117.576 391.56 117.516 391.74 117.396 cv
391.92 117.336 392.04 117.156 392.1 116.976 cv
392.22 116.856 392.22 116.676 392.22 116.376 cv
392.22 116.136 li
f
372.42 125.616 mo
372.42 122.016 li
372.96 122.016 li
372.96 122.556 li
373.2 122.136 373.62 121.896 374.1 121.896 cv
374.34 121.896 374.52 121.956 374.7 122.016 cv
374.88 122.136 375.06 122.256 375.12 122.376 cv
375.24 122.496 375.3 122.616 375.3 122.796 cv
375.36 122.916 375.36 123.096 375.36 123.396 cv
375.36 125.616 li
374.76 125.616 li
374.76 123.396 li
374.76 123.156 374.7 122.976 374.64 122.856 cv
374.64 122.736 374.52 122.616 374.4 122.556 cv
374.28 122.496 374.16 122.436 373.98 122.436 cv
373.74 122.436 373.5 122.556 373.32 122.676 cv
373.14 122.856 373.02 123.156 373.02 123.636 cv
373.02 125.616 li
372.42 125.616 li
f
376.44 125.616 mo
377.16 125.616 li
377.16 124.896 li
376.44 124.896 li
cp
f
380.58 125.616 mo
380.58 125.196 li
380.34 125.496 380.04 125.676 379.56 125.676 cv
379.32 125.676 379.02 125.616 378.78 125.436 cv
378.54 125.316 378.36 125.076 378.24 124.776 cv
378.06 124.536 378 124.176 378 123.816 cv
378 123.456 378.06 123.096 378.18 122.856 cv
378.3 122.556 378.48 122.316 378.72 122.136 cv
378.96 122.016 379.26 121.896 379.56 121.896 cv
379.74 121.896 379.98 121.956 380.16 122.076 cv
380.28 122.136 380.46 122.256 380.58 122.436 cv
380.58 120.636 li
381.18 120.636 li
381.18 125.616 li
380.58 125.616 li
cp
378.66 123.816 mo
378.66 124.296 378.72 124.596 378.96 124.836 cv
379.14 125.076 379.38 125.196 379.62 125.196 cv
379.92 125.196 380.16 125.076 380.34 124.896 cv
380.52 124.656 380.58 124.296 380.58 123.876 cv
380.58 123.396 380.52 122.976 380.34 122.796 cv
380.1 122.556 379.86 122.436 379.62 122.436 cv
379.32 122.436 379.14 122.556 378.9 122.736 cv
378.72 122.976 378.66 123.336 378.66 123.816 cv
f
384.6 124.476 mo
385.26 124.536 li
385.14 124.896 384.96 125.196 384.66 125.376 cv
384.42 125.616 384.06 125.676 383.64 125.676 cv
383.1 125.676 382.68 125.556 382.38 125.196 cv
382.08 124.896 381.9 124.416 381.9 123.876 cv
381.9 123.216 382.08 122.736 382.38 122.436 cv
382.68 122.076 383.1 121.896 383.64 121.896 cv
384.06 121.896 384.48 122.076 384.78 122.436 cv
385.08 122.736 385.26 123.216 385.26 123.816 cv
385.26 123.876 385.26 123.876 385.26 123.996 cv
382.56 123.996 li
382.56 124.356 382.68 124.656 382.86 124.896 cv
383.1 125.076 383.34 125.196 383.64 125.196 cv
383.88 125.196 384.06 125.136 384.24 125.016 cv
384.36 124.896 384.48 124.716 384.6 124.476 cv
cp
382.56 123.456 mo
384.6 123.456 li
384.6 123.156 384.48 122.916 384.36 122.796 cv
384.18 122.556 383.94 122.436 383.64 122.436 cv
383.34 122.436 383.1 122.556 382.92 122.676 cv
382.68 122.916 382.62 123.156 382.56 123.456 cv
f
385.98 125.616 mo
385.98 122.016 li
386.58 122.016 li
386.58 122.556 li
386.82 122.136 387.18 121.896 387.72 121.896 cv
387.9 121.896 388.14 121.956 388.32 122.016 cv
388.5 122.136 388.62 122.256 388.74 122.376 cv
388.8 122.496 388.86 122.616 388.92 122.796 cv
388.92 122.916 388.92 123.096 388.92 123.396 cv
388.92 125.616 li
388.32 125.616 li
388.32 123.396 li
388.32 123.156 388.32 122.976 388.26 122.856 cv
388.2 122.736 388.14 122.616 388.02 122.556 cv
387.9 122.496 387.72 122.436 387.6 122.436 cv
387.3 122.436 387.12 122.556 386.94 122.676 cv
386.7 122.856 386.64 123.156 386.64 123.636 cv
386.64 125.616 li
385.98 125.616 li
f
389.64 123.816 mo
389.64 123.156 389.88 122.616 390.24 122.316 cv
390.54 122.076 390.9 121.896 391.38 121.896 cv
391.86 121.896 392.28 122.076 392.58 122.436 cv
392.88 122.736 393.06 123.216 393.06 123.756 cv
393.06 124.236 393 124.596 392.82 124.836 cv
392.7 125.136 392.52 125.316 392.22 125.496 cv
391.98 125.616 391.68 125.676 391.38 125.676 cv
390.84 125.676 390.42 125.556 390.12 125.196 cv
389.82 124.896 389.64 124.416 389.64 123.816 cv
cp
390.3 123.816 mo
390.3 124.296 390.36 124.596 390.6 124.836 cv
390.78 125.076 391.08 125.196 391.38 125.196 cv
391.68 125.196 391.92 125.076 392.1 124.836 cv
392.34 124.596 392.4 124.236 392.4 123.816 cv
392.4 123.336 392.34 122.976 392.1 122.796 cv
391.92 122.556 391.68 122.436 391.38 122.436 cv
391.08 122.436 390.78 122.556 390.6 122.796 cv
390.36 122.976 390.3 123.336 390.3 123.816 cv
f
395.1 125.076 mo
395.22 125.616 li
395.04 125.616 394.86 125.676 394.74 125.676 cv
394.5 125.676 394.32 125.616 394.2 125.556 cv
394.08 125.496 394.02 125.436 393.96 125.316 cv
393.9 125.196 393.9 124.956 393.9 124.536 cv
393.9 122.496 li
393.42 122.496 li
393.42 122.016 li
393.9 122.016 li
393.9 121.116 li
394.5 120.756 li
394.5 122.016 li
395.1 122.016 li
395.1 122.496 li
394.5 122.496 li
394.5 124.596 li
394.5 124.776 394.5 124.896 394.56 124.956 cv
394.56 125.016 394.62 125.016 394.62 125.076 cv
394.68 125.076 394.74 125.076 394.86 125.076 cv
394.92 125.076 394.98 125.076 395.1 125.076 cv
f
323.16 96.0361 mo
323.16 97.4161 322.08 98.4961 320.76 98.4961 cv
319.38 98.4961 318.3 97.4161 318.3 96.0361 cv
318.3 94.7161 319.38 93.636 320.76 93.636 cv
322.08 93.636 323.16 94.7161 323.16 96.0361 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 1 1 colr
f
322.86 96.0361 mo
322.86 97.2361 321.9 98.136 320.76 98.136 cv
319.56 98.136 318.66 97.2361 318.66 96.0361 cv
318.66 94.8961 319.56 93.9961 320.76 93.9961 cv
321.9 93.9961 322.86 94.8961 322.86 96.0361 cv
cp
323.52 96.0361 mo
323.52 94.5361 322.26 93.2761 320.76 93.2761 cv
319.2 93.2761 317.94 94.5361 317.94 96.0361 cv
317.94 97.5961 319.2 98.8561 320.76 98.8561 cv
322.26 98.8561 323.52 97.5961 323.52 96.0361 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 1 colr
f
318.18 110.316 mo
318.18 105.336 li
320.4 105.336 li
320.82 105.336 321.18 105.396 321.42 105.516 cv
321.6 105.576 321.78 105.696 321.96 105.936 cv
322.08 106.176 322.14 106.416 322.14 106.716 cv
322.14 107.076 322.02 107.376 321.78 107.616 cv
321.6 107.856 321.24 108.036 320.76 108.096 cv
320.94 108.156 321.06 108.216 321.18 108.336 cv
321.36 108.456 321.54 108.696 321.72 108.996 cv
322.56 110.316 li
321.72 110.316 li
321.06 109.296 li
320.88 108.996 320.7 108.756 320.58 108.636 cv
320.46 108.456 320.34 108.336 320.28 108.276 cv
320.16 108.216 320.04 108.156 319.98 108.156 cv
319.92 108.156 319.8 108.156 319.62 108.156 cv
318.84 108.156 li
318.84 110.316 li
318.18 110.316 li
cp
318.84 107.556 mo
320.22 107.556 li
320.52 107.556 320.76 107.496 320.94 107.436 cv
321.12 107.376 321.24 107.316 321.36 107.136 cv
321.42 107.016 321.48 106.896 321.48 106.716 cv
321.48 106.476 321.42 106.296 321.24 106.116 cv
321.06 105.996 320.76 105.876 320.4 105.876 cv
318.84 105.876 li
318.84 107.556 li
0 gry
f
322.98 108.756 mo
323.58 108.696 li
323.64 108.936 323.7 109.116 323.82 109.296 cv
323.88 109.476 324.06 109.596 324.3 109.716 cv
324.54 109.776 324.78 109.836 325.08 109.836 cv
325.32 109.836 325.56 109.776 325.74 109.716 cv
325.92 109.656 326.1 109.536 326.16 109.416 cv
326.28 109.296 326.28 109.116 326.28 108.996 cv
326.28 108.816 326.28 108.696 326.16 108.576 cv
326.1 108.456 325.92 108.396 325.74 108.276 cv
325.62 108.216 325.32 108.156 324.84 108.036 cv
324.36 107.916 324.06 107.796 323.88 107.736 cv
323.64 107.616 323.46 107.436 323.34 107.256 cv
323.22 107.076 323.16 106.896 323.16 106.656 cv
323.16 106.416 323.22 106.176 323.34 105.936 cv
323.52 105.696 323.7 105.576 324 105.456 cv
324.3 105.336 324.6 105.276 324.9 105.276 cv
325.26 105.276 325.62 105.336 325.92 105.456 cv
326.16 105.576 326.4 105.756 326.52 105.936 cv
326.7 106.176 326.76 106.476 326.82 106.776 cv
326.16 106.836 li
326.16 106.476 326.04 106.236 325.8 106.056 cv
325.62 105.936 325.32 105.816 324.96 105.816 cv
324.54 105.816 324.24 105.936 324.06 106.056 cv
323.88 106.236 323.82 106.416 323.82 106.596 cv
323.82 106.776 323.88 106.956 324 107.016 cv
324.12 107.136 324.48 107.256 324.96 107.376 cv
325.5 107.496 325.92 107.616 326.1 107.736 cv
326.4 107.856 326.58 108.036 326.76 108.216 cv
326.88 108.396 326.94 108.636 326.94 108.936 cv
326.94 109.176 326.88 109.476 326.7 109.716 cv
326.58 109.896 326.34 110.076 326.1 110.196 cv
325.8 110.376 325.44 110.436 325.08 110.436 cv
324.66 110.436 324.3 110.376 323.94 110.196 cv
323.64 110.076 323.4 109.896 323.22 109.656 cv
323.04 109.356 322.98 109.056 322.98 108.756 cv
f
329.1 110.316 mo
329.1 105.936 li
327.48 105.936 li
327.48 105.336 li
331.44 105.336 li
331.44 105.936 li
329.76 105.936 li
329.76 110.316 li
329.1 110.316 li
f
332.16 110.316 mo
332.16 105.336 li
334.32 105.336 li
334.8 105.336 335.1 105.396 335.34 105.516 cv
335.58 105.576 335.76 105.696 335.88 105.936 cv
336.06 106.176 336.12 106.416 336.12 106.716 cv
336.12 107.076 336 107.376 335.76 107.616 cv
335.52 107.856 335.22 108.036 334.74 108.096 cv
334.86 108.156 335.04 108.216 335.1 108.336 cv
335.34 108.456 335.52 108.696 335.64 108.996 cv
336.54 110.316 li
335.7 110.316 li
335.04 109.296 li
334.86 108.996 334.68 108.756 334.56 108.636 cv
334.44 108.456 334.32 108.336 334.2 108.276 cv
334.14 108.216 334.02 108.156 333.96 108.156 cv
333.84 108.156 333.72 108.156 333.54 108.156 cv
332.76 108.156 li
332.76 110.316 li
332.16 110.316 li
cp
332.76 107.556 mo
334.2 107.556 li
334.5 107.556 334.74 107.496 334.92 107.436 cv
335.1 107.376 335.22 107.316 335.34 107.136 cv
335.4 107.016 335.46 106.896 335.46 106.716 cv
335.46 106.476 335.34 106.296 335.16 106.116 cv
335.04 105.996 334.74 105.876 334.38 105.876 cv
332.76 105.876 li
332.76 107.556 li
f
317.88 116.196 mo
317.88 115.536 318.06 114.996 318.42 114.696 cv
318.72 114.396 319.08 114.276 319.56 114.276 cv
320.04 114.276 320.46 114.456 320.76 114.756 cv
321.06 115.116 321.24 115.536 321.24 116.136 cv
321.24 116.616 321.18 116.916 321.06 117.216 cv
320.88 117.456 320.7 117.696 320.4 117.816 cv
320.16 117.996 319.86 118.056 319.56 118.056 cv
319.02 118.056 318.6 117.876 318.3 117.576 cv
318 117.216 317.88 116.796 317.88 116.196 cv
cp
318.48 116.196 mo
318.48 116.616 318.6 116.976 318.78 117.216 cv
318.96 117.456 319.26 117.576 319.56 117.576 cv
319.86 117.576 320.1 117.456 320.28 117.216 cv
320.52 116.976 320.58 116.616 320.58 116.136 cv
320.58 115.716 320.52 115.356 320.28 115.116 cv
320.1 114.936 319.86 114.816 319.56 114.816 cv
319.26 114.816 318.96 114.936 318.78 115.116 cv
318.6 115.356 318.48 115.716 318.48 116.196 cv
f
321.72 116.916 mo
322.32 116.796 li
322.38 117.036 322.44 117.216 322.62 117.336 cv
322.8 117.516 322.98 117.576 323.28 117.576 cv
323.52 117.576 323.76 117.516 323.88 117.396 cv
324.06 117.276 324.12 117.156 324.12 116.976 cv
324.12 116.856 324.06 116.736 323.94 116.676 cv
323.82 116.616 323.64 116.556 323.28 116.436 cv
322.86 116.316 322.56 116.256 322.38 116.136 cv
322.2 116.076 322.02 115.956 321.96 115.776 cv
321.84 115.656 321.84 115.536 321.84 115.356 cv
321.84 115.176 321.84 114.996 321.96 114.876 cv
322.02 114.756 322.14 114.636 322.26 114.516 cv
322.32 114.456 322.44 114.396 322.62 114.336 cv
322.8 114.276 322.98 114.276 323.16 114.276 cv
323.46 114.276 323.7 114.336 323.88 114.396 cv
324.12 114.456 324.3 114.576 324.42 114.756 cv
324.48 114.876 324.54 115.056 324.6 115.296 cv
324 115.416 li
324 115.176 323.88 115.056 323.76 114.936 cv
323.64 114.816 323.46 114.816 323.22 114.816 cv
322.92 114.816 322.74 114.816 322.62 114.936 cv
322.5 114.996 322.44 115.116 322.44 115.236 cv
322.44 115.356 322.44 115.416 322.5 115.476 cv
322.56 115.536 322.62 115.596 322.74 115.596 cv
322.8 115.656 322.98 115.716 323.28 115.776 cv
323.7 115.896 324 116.016 324.18 116.076 cv
324.36 116.136 324.48 116.256 324.6 116.376 cv
324.66 116.556 324.72 116.736 324.72 116.916 cv
324.72 117.096 324.66 117.336 324.54 117.516 cv
324.42 117.696 324.24 117.816 324.06 117.936 cv
323.82 117.996 323.58 118.056 323.28 118.056 cv
322.8 118.056 322.44 117.996 322.2 117.756 cv
321.96 117.576 321.78 117.276 321.72 116.916 cv
f
325.5 117.996 mo
325.5 114.336 li
326.04 114.336 li
326.04 114.876 li
326.16 114.696 326.28 114.576 326.46 114.456 cv
326.64 114.336 326.88 114.276 327.12 114.276 cv
327.42 114.276 327.6 114.336 327.78 114.456 cv
327.96 114.576 328.08 114.696 328.14 114.936 cv
328.44 114.516 328.8 114.276 329.28 114.276 cv
329.64 114.276 329.88 114.396 330.06 114.576 cv
330.3 114.756 330.36 115.116 330.36 115.536 cv
330.36 117.996 li
329.76 117.996 li
329.76 115.716 li
329.76 115.476 329.76 115.296 329.7 115.176 cv
329.64 115.056 329.58 114.996 329.46 114.936 cv
329.4 114.876 329.28 114.816 329.16 114.816 cv
328.86 114.816 328.68 114.876 328.5 115.056 cv
328.32 115.236 328.26 115.536 328.26 115.896 cv
328.26 117.996 li
327.66 117.996 li
327.66 115.596 li
327.66 115.356 327.6 115.176 327.48 114.996 cv
327.36 114.876 327.24 114.816 327 114.816 cv
326.82 114.816 326.64 114.876 326.52 114.936 cv
326.34 115.056 326.22 115.176 326.16 115.356 cv
326.16 115.536 326.1 115.776 326.1 116.076 cv
326.1 117.996 li
325.5 117.996 li
f
320.46 125.196 mo
320.22 125.376 319.98 125.496 319.8 125.556 cv
319.56 125.676 319.32 125.676 319.08 125.676 cv
318.72 125.676 318.42 125.616 318.18 125.436 cv
318 125.196 317.88 124.956 317.88 124.656 cv
317.88 124.476 317.94 124.296 318 124.176 cv
318.06 124.056 318.18 123.936 318.3 123.816 cv
318.42 123.756 318.6 123.696 318.72 123.636 cv
318.84 123.576 319.02 123.576 319.32 123.516 cv
319.8 123.456 320.16 123.396 320.4 123.336 cv
320.4 123.216 320.4 123.216 320.4 123.156 cv
320.4 122.916 320.34 122.736 320.22 122.616 cv
320.04 122.496 319.86 122.436 319.5 122.436 cv
319.26 122.436 319.02 122.496 318.9 122.616 cv
318.72 122.676 318.66 122.856 318.54 123.096 cv
318 123.036 li
318.06 122.796 318.12 122.556 318.24 122.436 cv
318.36 122.256 318.54 122.136 318.78 122.076 cv
319.02 121.956 319.32 121.896 319.62 121.896 cv
319.92 121.896 320.16 121.956 320.34 122.016 cv
320.58 122.136 320.7 122.196 320.76 122.316 cv
320.88 122.436 320.94 122.556 321 122.736 cv
321 122.796 321 123.036 321 123.276 cv
321 124.116 li
321 124.656 321 125.016 321.06 125.196 cv
321.06 125.376 321.12 125.496 321.18 125.616 cv
320.58 125.616 li
320.52 125.496 320.46 125.376 320.46 125.196 cv
cp
320.4 123.816 mo
320.16 123.876 319.86 123.996 319.38 124.056 cv
319.14 124.056 318.96 124.116 318.84 124.176 cv
318.72 124.176 318.66 124.236 318.6 124.356 cv
318.54 124.416 318.54 124.536 318.54 124.656 cv
318.54 124.836 318.6 124.956 318.72 125.076 cv
318.84 125.196 319.02 125.256 319.26 125.256 cv
319.5 125.256 319.68 125.196 319.92 125.076 cv
320.04 124.956 320.22 124.836 320.28 124.656 cv
320.34 124.476 320.4 124.296 320.4 124.056 cv
320.4 123.816 li
f
324.3 125.616 mo
324.3 125.196 li
324.06 125.496 323.76 125.676 323.28 125.676 cv
323.04 125.676 322.74 125.616 322.5 125.436 cv
322.26 125.316 322.08 125.076 321.96 124.776 cv
321.78 124.536 321.72 124.176 321.72 123.816 cv
321.72 123.456 321.78 123.096 321.9 122.856 cv
322.02 122.556 322.2 122.316 322.44 122.136 cv
322.68 122.016 322.98 121.896 323.28 121.896 cv
323.46 121.896 323.7 121.956 323.82 122.076 cv
324 122.136 324.18 122.256 324.3 122.436 cv
324.3 120.636 li
324.84 120.636 li
324.84 125.616 li
324.3 125.616 li
cp
322.38 123.816 mo
322.38 124.296 322.44 124.596 322.68 124.836 cv
322.86 125.076 323.1 125.196 323.34 125.196 cv
323.64 125.196 323.82 125.076 324.06 124.896 cv
324.24 124.656 324.3 124.296 324.3 123.876 cv
324.3 123.396 324.24 122.976 324.06 122.796 cv
323.82 122.556 323.58 122.436 323.34 122.436 cv
323.04 122.436 322.86 122.556 322.62 122.736 cv
322.44 122.976 322.38 123.336 322.38 123.816 cv
f
326.46 121.356 mo
325.86 121.356 li
325.86 120.636 li
326.46 120.636 li
cp
325.86 121.356 mo
cp
325.08 126.996 mo
325.14 126.516 li
325.32 126.516 325.38 126.576 325.44 126.576 cv
325.56 126.576 325.68 126.516 325.74 126.456 cv
325.8 126.336 325.86 126.156 325.86 125.796 cv
325.86 122.016 li
326.46 122.016 li
326.46 125.796 li
326.46 126.276 326.4 126.576 326.28 126.756 cv
326.16 126.936 325.86 127.056 325.56 127.056 cv
325.38 127.056 325.2 127.056 325.08 126.996 cv
f
327.54 125.616 mo
328.26 125.616 li
328.26 124.896 li
327.54 124.896 li
cp
f
331.62 126.996 mo
331.62 125.256 li
331.56 125.376 331.38 125.496 331.2 125.556 cv
331.08 125.676 330.84 125.676 330.72 125.676 cv
330.24 125.676 329.88 125.496 329.58 125.196 cv
329.28 124.836 329.1 124.356 329.1 123.756 cv
329.1 123.396 329.16 123.096 329.28 122.796 cv
329.4 122.496 329.58 122.316 329.82 122.136 cv
330.06 122.016 330.36 121.896 330.66 121.896 cv
331.08 121.896 331.44 122.136 331.68 122.496 cv
331.68 122.016 li
332.28 122.016 li
332.28 126.996 li
331.62 126.996 li
cp
329.76 123.816 mo
329.76 124.236 329.82 124.596 330.06 124.836 cv
330.24 125.076 330.48 125.196 330.72 125.196 cv
331.02 125.196 331.2 125.076 331.38 124.896 cv
331.62 124.656 331.68 124.296 331.68 123.876 cv
331.68 123.396 331.62 123.036 331.38 122.736 cv
331.2 122.556 330.96 122.436 330.72 122.436 cv
330.42 122.436 330.18 122.556 330 122.736 cv
329.82 122.976 329.76 123.336 329.76 123.816 cv
f
335.58 125.616 mo
335.58 125.076 li
335.28 125.496 334.92 125.676 334.44 125.676 cv
334.2 125.676 334.02 125.676 333.84 125.556 cv
333.66 125.496 333.54 125.376 333.42 125.256 cv
333.36 125.136 333.24 125.016 333.24 124.836 cv
333.18 124.716 333.18 124.476 333.18 124.236 cv
333.18 122.016 li
333.84 122.016 li
333.84 123.996 li
333.84 124.296 333.84 124.536 333.84 124.656 cv
333.9 124.836 333.96 124.956 334.08 125.016 cv
334.2 125.136 334.38 125.196 334.56 125.196 cv
334.74 125.196 334.92 125.136 335.1 125.016 cv
335.22 124.956 335.34 124.836 335.4 124.656 cv
335.46 124.476 335.52 124.236 335.52 123.936 cv
335.52 122.016 li
336.12 122.016 li
336.12 125.616 li
335.58 125.616 li
f
339.42 125.196 mo
339.24 125.376 339 125.496 338.76 125.556 cv
338.58 125.676 338.34 125.676 338.1 125.676 cv
337.74 125.676 337.38 125.616 337.2 125.436 cv
337.02 125.196 336.9 124.956 336.9 124.656 cv
336.9 124.476 336.9 124.296 337.02 124.176 cv
337.08 124.056 337.2 123.936 337.32 123.816 cv
337.44 123.756 337.62 123.696 337.74 123.636 cv
337.86 123.576 338.04 123.576 338.28 123.516 cv
338.82 123.456 339.18 123.396 339.42 123.336 cv
339.42 123.216 339.42 123.216 339.42 123.156 cv
339.42 122.916 339.36 122.736 339.24 122.616 cv
339.06 122.496 338.82 122.436 338.52 122.436 cv
338.22 122.436 338.04 122.496 337.86 122.616 cv
337.74 122.676 337.62 122.856 337.56 123.096 cv
337.02 123.036 li
337.02 122.796 337.14 122.556 337.26 122.436 cv
337.38 122.256 337.56 122.136 337.8 122.076 cv
338.04 121.956 338.34 121.896 338.64 121.896 cv
338.94 121.896 339.18 121.956 339.36 122.016 cv
339.54 122.136 339.72 122.196 339.78 122.316 cv
339.9 122.436 339.96 122.556 340.02 122.736 cv
340.02 122.796 340.02 123.036 340.02 123.276 cv
340.02 124.116 li
340.02 124.656 340.02 125.016 340.08 125.196 cv
340.08 125.376 340.14 125.496 340.2 125.616 cv
339.6 125.616 li
339.48 125.496 339.48 125.376 339.42 125.196 cv
cp
339.42 123.816 mo
339.18 123.876 338.82 123.996 338.4 124.056 cv
338.16 124.056 337.98 124.116 337.86 124.176 cv
337.74 124.176 337.68 124.236 337.62 124.356 cv
337.56 124.416 337.5 124.536 337.5 124.656 cv
337.5 124.836 337.62 124.956 337.74 125.076 cv
337.86 125.196 338.04 125.256 338.28 125.256 cv
338.52 125.256 338.7 125.196 338.88 125.076 cv
339.06 124.956 339.18 124.836 339.3 124.656 cv
339.36 124.476 339.42 124.296 339.42 124.056 cv
339.42 123.816 li
f
340.98 125.616 mo
340.98 122.016 li
341.52 122.016 li
341.52 122.556 li
341.82 122.136 342.18 121.896 342.66 121.896 cv
342.9 121.896 343.08 121.956 343.26 122.016 cv
343.44 122.136 343.56 122.256 343.68 122.376 cv
343.74 122.496 343.86 122.616 343.86 122.796 cv
343.92 122.916 343.92 123.096 343.92 123.396 cv
343.92 125.616 li
343.32 125.616 li
343.32 123.396 li
343.32 123.156 343.26 122.976 343.26 122.856 cv
343.2 122.736 343.08 122.616 342.96 122.556 cv
342.84 122.496 342.72 122.436 342.54 122.436 cv
342.3 122.436 342.06 122.556 341.88 122.676 cv
341.7 122.856 341.58 123.156 341.58 123.636 cv
341.58 125.616 li
340.98 125.616 li
f
346.2 125.076 mo
346.26 125.616 li
346.08 125.616 345.96 125.676 345.84 125.676 cv
345.6 125.676 345.42 125.616 345.3 125.556 cv
345.18 125.496 345.06 125.436 345 125.316 cv
345 125.196 344.94 124.956 344.94 124.536 cv
344.94 122.496 li
344.52 122.496 li
344.52 122.016 li
344.94 122.016 li
344.94 121.116 li
345.54 120.756 li
345.54 122.016 li
346.2 122.016 li
346.2 122.496 li
345.54 122.496 li
345.54 124.596 li
345.54 124.776 345.6 124.896 345.6 124.956 cv
345.6 125.016 345.66 125.016 345.72 125.076 cv
345.78 125.076 345.84 125.076 345.9 125.076 cv
345.96 125.076 346.08 125.076 346.2 125.076 cv
f
346.98 125.616 mo
347.64 125.616 li
347.64 124.896 li
346.98 124.896 li
cp
f
351.06 125.616 mo
351.06 125.196 li
350.88 125.496 350.52 125.676 350.04 125.676 cv
349.74 125.676 349.5 125.616 349.26 125.436 cv
349.02 125.316 348.84 125.076 348.72 124.776 cv
348.54 124.536 348.48 124.176 348.48 123.816 cv
348.48 123.456 348.54 123.096 348.66 122.856 cv
348.78 122.556 348.96 122.316 349.26 122.136 cv
349.5 122.016 349.74 121.896 350.04 121.896 cv
350.28 121.896 350.46 121.956 350.64 122.076 cv
350.82 122.136 350.94 122.256 351.06 122.436 cv
351.06 120.636 li
351.66 120.636 li
351.66 125.616 li
351.06 125.616 li
cp
349.14 123.816 mo
349.14 124.296 349.26 124.596 349.44 124.836 cv
349.62 125.076 349.86 125.196 350.1 125.196 cv
350.4 125.196 350.64 125.076 350.82 124.896 cv
351 124.656 351.12 124.296 351.12 123.876 cv
351.12 123.396 351 122.976 350.82 122.796 cv
350.64 122.556 350.4 122.436 350.1 122.436 cv
349.8 122.436 349.62 122.556 349.44 122.736 cv
349.26 122.976 349.14 123.336 349.14 123.816 cv
f
355.08 124.476 mo
355.74 124.536 li
355.62 124.896 355.44 125.196 355.14 125.376 cv
354.9 125.616 354.54 125.676 354.12 125.676 cv
353.58 125.676 353.16 125.556 352.86 125.196 cv
352.56 124.896 352.38 124.416 352.38 123.876 cv
352.38 123.216 352.56 122.736 352.86 122.436 cv
353.16 122.076 353.58 121.896 354.12 121.896 cv
354.6 121.896 354.96 122.076 355.26 122.436 cv
355.62 122.736 355.74 123.216 355.74 123.816 cv
355.74 123.876 355.74 123.876 355.74 123.996 cv
353.04 123.996 li
353.04 124.356 353.16 124.656 353.4 124.896 cv
353.58 125.076 353.82 125.196 354.12 125.196 cv
354.36 125.196 354.54 125.136 354.72 125.016 cv
354.84 124.896 355.02 124.716 355.08 124.476 cv
cp
353.04 123.456 mo
355.08 123.456 li
355.08 123.156 354.96 122.916 354.84 122.796 cv
354.66 122.556 354.42 122.436 354.12 122.436 cv
353.82 122.436 353.58 122.556 353.4 122.676 cv
353.22 122.916 353.1 123.156 353.04 123.456 cv
f
356.64 125.616 mo
356.64 122.496 li
356.1 122.496 li
356.1 122.016 li
356.64 122.016 li
356.64 121.596 li
356.64 121.356 356.64 121.176 356.7 121.116 cv
356.76 120.936 356.88 120.816 357 120.696 cv
357.18 120.576 357.36 120.576 357.6 120.576 cv
357.78 120.576 358.02 120.576 358.2 120.636 cv
358.14 121.176 li
357.96 121.116 357.84 121.116 357.78 121.116 cv
357.54 121.116 357.42 121.176 357.36 121.236 cv
357.3 121.296 357.24 121.476 357.24 121.656 cv
357.24 122.016 li
357.96 122.016 li
357.96 122.496 li
357.24 122.496 li
357.24 125.616 li
356.64 125.616 li
f
342 55.7161 mo
342 57.0961 340.92 58.1761 339.54 58.1761 cv
338.16 58.1761 337.08 57.0961 337.08 55.7161 cv
337.08 54.3961 338.16 53.256 339.54 53.256 cv
340.92 53.256 342 54.3961 342 55.7161 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 1 1 colr
f
341.64 55.7161 mo
341.64 56.8561 340.68 57.756 339.54 57.756 cv
338.4 57.756 337.44 56.8561 337.44 55.7161 cv
337.44 54.576 338.4 53.6161 339.54 53.6161 cv
340.68 53.6161 341.64 54.576 341.64 55.7161 cv
cp
342.3 55.7161 mo
342.3 54.2161 341.04 52.9561 339.54 52.9561 cv
338.04 52.9561 336.78 54.2161 336.78 55.7161 cv
336.78 57.2761 338.04 58.4761 339.54 58.4761 cv
341.04 58.4761 342.3 57.2761 342.3 55.7161 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 1 colr
f
340.5 68.196 mo
341.22 68.376 li
341.04 68.916 340.8 69.3361 340.44 69.636 cv
340.08 69.936 339.66 70.056 339.12 70.056 cv
338.58 70.056 338.16 69.936 337.8 69.756 cv
337.44 69.5161 337.2 69.2161 337.02 68.796 cv
336.84 68.376 336.78 67.8961 336.78 67.416 cv
336.78 66.936 336.9 66.4561 337.08 66.0961 cv
337.26 65.676 337.56 65.376 337.92 65.196 cv
338.28 65.0161 338.7 64.8961 339.12 64.8961 cv
339.66 64.8961 340.08 65.0161 340.38 65.256 cv
340.74 65.556 340.98 65.856 341.1 66.3361 cv
340.44 66.5161 li
340.32 66.1561 340.2 65.856 339.96 65.736 cv
339.72 65.556 339.48 65.496 339.12 65.496 cv
338.7 65.496 338.4 65.556 338.16 65.736 cv
337.92 65.916 337.74 66.1561 337.62 66.4561 cv
337.5 66.816 337.44 67.116 337.44 67.416 cv
337.44 67.8361 337.5 68.256 337.62 68.556 cv
337.74 68.856 337.98 69.0961 338.22 69.2761 cv
338.46 69.3961 338.76 69.5161 339.06 69.5161 cv
339.42 69.5161 339.78 69.3961 340.02 69.1561 cv
340.26 68.9761 340.44 68.616 340.5 68.196 cv
0 gry
f
342 69.9961 mo
342 64.9561 li
343.86 64.9561 li
344.22 64.9561 344.46 65.0161 344.64 65.0161 cv
344.88 65.0761 345.12 65.1361 345.24 65.2561 cv
345.42 65.3761 345.54 65.5561 345.66 65.7361 cv
345.78 65.9161 345.84 66.1561 345.84 66.3961 cv
345.84 66.8761 345.66 67.2361 345.42 67.4761 cv
345.12 67.7761 344.64 67.9561 343.92 67.9561 cv
342.66 67.9561 li
342.66 69.9961 li
342 69.9961 li
cp
342.66 67.3561 mo
343.98 67.3561 li
344.4 67.3561 344.7 67.2361 344.88 67.1161 cv
345.06 66.9361 345.12 66.7561 345.12 66.4561 cv
345.12 66.2161 345.06 66.0361 344.94 65.9161 cv
344.88 65.7961 344.76 65.6761 344.58 65.6161 cv
344.46 65.6161 344.22 65.5561 343.92 65.5561 cv
342.66 65.5561 li
342.66 67.3561 li
f
346.68 69.9961 mo
346.68 64.9561 li
348.9 64.9561 li
349.32 64.9561 349.68 65.0161 349.92 65.1361 cv
350.16 65.1961 350.34 65.3761 350.46 65.6161 cv
350.58 65.7961 350.64 66.0361 350.64 66.3361 cv
350.64 66.6961 350.58 66.9961 350.34 67.2361 cv
350.1 67.4761 349.74 67.6561 349.26 67.7161 cv
349.44 67.7761 349.56 67.8961 349.62 67.9561 cv
349.86 68.1361 350.04 68.3761 350.22 68.6161 cv
351.06 69.9961 li
350.22 69.9961 li
349.62 68.9161 li
349.38 68.6161 349.26 68.4361 349.08 68.2561 cv
348.96 68.0761 348.84 67.9561 348.78 67.8961 cv
348.66 67.8361 348.54 67.7761 348.48 67.7761 cv
348.36 67.7761 348.24 67.7761 348.12 67.7761 cv
347.34 67.7761 li
347.34 69.9961 li
346.68 69.9961 li
cp
347.34 67.1761 mo
348.78 67.1761 li
349.08 67.1761 349.32 67.1761 349.5 67.1161 cv
349.62 67.0561 349.74 66.9361 349.86 66.8161 cv
349.92 66.6361 349.98 66.5161 349.98 66.3361 cv
349.98 66.0961 349.92 65.9161 349.74 65.7961 cv
349.56 65.6161 349.32 65.5561 348.9 65.5561 cv
347.34 65.5561 li
347.34 67.1761 li
f
338.22 77.076 mo
338.34 77.616 li
338.16 77.616 337.98 77.676 337.86 77.676 cv
337.62 77.676 337.44 77.616 337.32 77.556 cv
337.2 77.496 337.14 77.376 337.08 77.256 cv
337.02 77.136 337.02 76.9561 337.02 76.5361 cv
337.02 74.436 li
336.54 74.436 li
336.54 74.0161 li
337.02 74.0161 li
337.02 73.116 li
337.62 72.756 li
337.62 74.0161 li
338.22 74.0161 li
338.22 74.436 li
337.62 74.436 li
337.62 76.5961 li
337.62 76.7761 337.62 76.8961 337.62 76.9561 cv
337.68 76.9561 337.68 77.0161 337.74 77.076 cv
337.8 77.076 337.86 77.076 337.98 77.076 cv
338.04 77.076 338.1 77.076 338.22 77.076 cv
f
339.42 73.2961 mo
338.82 73.2961 li
338.82 72.6361 li
339.42 72.6361 li
cp
338.82 73.2961 mo
cp
339.42 77.6161 mo
338.82 77.6161 li
338.82 74.0161 li
339.42 74.0161 li
cp
f
340.14 76.5361 mo
340.74 76.4161 li
340.74 76.6561 340.86 76.8961 340.98 77.0161 cv
341.16 77.136 341.4 77.196 341.64 77.196 cv
341.94 77.196 342.12 77.136 342.3 77.0161 cv
342.42 76.8961 342.48 76.7761 342.48 76.5961 cv
342.48 76.4761 342.42 76.3561 342.3 76.2961 cv
342.24 76.2361 342 76.1761 341.7 76.0561 cv
341.22 75.9361 340.92 75.8761 340.74 75.756 cv
340.56 75.696 340.44 75.576 340.32 75.4561 cv
340.26 75.2761 340.2 75.1561 340.2 74.9761 cv
340.2 74.7961 340.26 74.6161 340.32 74.4961 cv
340.38 74.3761 340.5 74.256 340.62 74.196 cv
340.74 74.076 340.86 74.0161 341.04 74.0161 cv
341.16 73.9561 341.34 73.8961 341.58 73.8961 cv
341.82 73.8961 342.06 73.9561 342.3 74.0161 cv
342.48 74.136 342.66 74.256 342.78 74.3761 cv
342.9 74.4961 342.96 74.6761 342.96 74.9161 cv
342.36 75.0361 li
342.36 74.7961 342.24 74.6761 342.12 74.5561 cv
342 74.4361 341.82 74.4361 341.58 74.4361 cv
341.34 74.4361 341.1 74.4361 340.98 74.5561 cv
340.86 74.6761 340.8 74.7361 340.8 74.8561 cv
340.8 74.9761 340.8 75.0361 340.86 75.0961 cv
340.92 75.1561 340.98 75.2161 341.1 75.2761 cv
341.16 75.2761 341.34 75.3361 341.64 75.3961 cv
342.06 75.5161 342.42 75.636 342.54 75.696 cv
342.72 75.756 342.9 75.8761 342.96 75.9961 cv
343.08 76.1761 343.14 76.3561 343.14 76.5361 cv
343.14 76.7761 343.08 76.9561 342.96 77.136 cv
342.84 77.3161 342.66 77.4361 342.42 77.5561 cv
342.18 77.6161 341.94 77.6761 341.64 77.6761 cv
341.16 77.6761 340.8 77.6161 340.56 77.3761 cv
340.32 77.196 340.2 76.8961 340.14 76.5361 cv
f
344.7 77.6161 mo
344.1 77.6161 li
344.1 74.0161 li
344.7 74.0161 li
cp
344.1 77.6161 mo
cp
344.04 73.5361 mo
344.52 72.5761 li
345.3 72.5761 li
344.58 73.5361 li
344.04 73.5361 li
f
348.12 76.2961 mo
348.78 76.3561 li
348.66 76.7761 348.54 77.1361 348.24 77.3161 cv
348 77.5561 347.64 77.6761 347.22 77.6761 cv
346.74 77.6761 346.38 77.5561 346.08 77.1961 cv
345.72 76.8961 345.6 76.4161 345.6 75.8161 cv
345.6 75.4561 345.66 75.0961 345.78 74.7961 cv
345.9 74.4961 346.14 74.3161 346.38 74.1361 cv
346.62 74.0161 346.92 73.8961 347.22 73.8961 cv
347.64 73.8961 348 74.0161 348.18 74.1961 cv
348.48 74.3761 348.6 74.6761 348.72 75.0361 cv
348.06 75.1561 li
348.06 74.9161 347.94 74.7361 347.82 74.6161 cv
347.64 74.4961 347.46 74.4361 347.28 74.4361 cv
346.98 74.4361 346.68 74.4961 346.5 74.7361 cv
346.32 74.9761 346.26 75.3361 346.26 75.8161 cv
346.26 76.2961 346.32 76.6561 346.5 76.8361 cv
346.68 77.0761 346.92 77.1961 347.22 77.1961 cv
347.46 77.1961 347.7 77.1361 347.82 76.9561 cv
348 76.8361 348.12 76.5961 348.12 76.2961 cv
f
336.9 85.2961 mo
336.9 81.6961 li
337.44 81.6961 li
337.44 82.1761 li
337.68 81.8161 338.1 81.5761 338.58 81.5761 cv
338.82 81.5761 339 81.6361 339.18 81.6961 cv
339.36 81.8161 339.54 81.8761 339.6 81.9961 cv
339.72 82.1761 339.78 82.2961 339.78 82.4761 cv
339.84 82.5961 339.84 82.7761 339.84 83.0761 cv
339.84 85.2961 li
339.24 85.2961 li
339.24 83.0761 li
339.24 82.8361 339.18 82.6561 339.12 82.5361 cv
339.06 82.4161 339 82.2961 338.88 82.2361 cv
338.76 82.1761 338.64 82.1161 338.46 82.1161 cv
338.22 82.1161 337.98 82.2361 337.8 82.3561 cv
337.62 82.5361 337.5 82.8361 337.5 83.3161 cv
337.5 85.2961 li
336.9 85.2961 li
f
340.92 85.2961 mo
341.64 85.2961 li
341.64 84.5761 li
340.92 84.5761 li
cp
f
345 86.6761 mo
345 84.9361 li
344.94 85.0561 344.82 85.1761 344.64 85.2361 cv
344.46 85.3561 344.28 85.3561 344.04 85.3561 cv
343.62 85.3561 343.26 85.2361 342.96 84.8761 cv
342.66 84.5161 342.48 84.0361 342.48 83.4361 cv
342.48 83.0761 342.54 82.7761 342.66 82.4761 cv
342.78 82.1761 343.02 81.9961 343.26 81.8161 cv
343.44 81.6361 343.74 81.5761 344.04 81.5761 cv
344.46 81.5761 344.82 81.7561 345.06 82.1761 cv
345.06 81.6961 li
345.6 81.6961 li
345.6 86.6761 li
345 86.6761 li
cp
343.14 83.4961 mo
343.14 83.9761 343.2 84.2761 343.38 84.5161 cv
343.62 84.7561 343.86 84.8761 344.1 84.8761 cv
344.4 84.8761 344.58 84.7561 344.82 84.5161 cv
345 84.3361 345.06 83.9761 345.06 83.5561 cv
345.06 83.0161 344.94 82.7161 344.76 82.4761 cv
344.58 82.1761 344.34 82.0561 344.1 82.0561 cv
343.8 82.0561 343.56 82.1761 343.38 82.4161 cv
343.2 82.6561 343.14 83.0161 343.14 83.4961 cv
f
348.96 85.2961 mo
348.96 84.7561 li
348.66 85.1761 348.3 85.3561 347.82 85.3561 cv
347.58 85.3561 347.4 85.3561 347.22 85.2361 cv
347.04 85.1761 346.86 85.0561 346.8 84.9361 cv
346.68 84.8161 346.62 84.6961 346.62 84.4561 cv
346.56 84.3361 346.56 84.2161 346.56 83.9161 cv
346.56 81.6961 li
347.16 81.6961 li
347.16 83.6761 li
347.16 84.0361 347.22 84.2161 347.22 84.3361 cv
347.28 84.4561 347.34 84.6361 347.46 84.6961 cv
347.58 84.8161 347.76 84.8761 347.94 84.8761 cv
348.12 84.8761 348.3 84.8161 348.42 84.6961 cv
348.6 84.6361 348.72 84.4561 348.78 84.3361 cv
348.84 84.1561 348.9 83.9161 348.9 83.6161 cv
348.9 81.6961 li
349.5 81.6961 li
349.5 85.2961 li
348.96 85.2961 li
f
352.8 84.8761 mo
352.62 85.0561 352.38 85.1761 352.2 85.2361 cv
351.96 85.3561 351.72 85.3561 351.48 85.3561 cv
351.12 85.3561 350.82 85.2961 350.58 85.1161 cv
350.34 84.8761 350.28 84.6361 350.28 84.3361 cv
350.28 84.1561 350.28 84.0361 350.4 83.8561 cv
350.46 83.7361 350.58 83.6161 350.7 83.4961 cv
350.82 83.4361 351 83.3161 351.12 83.3161 cv
351.24 83.2561 351.42 83.2561 351.66 83.1961 cv
352.2 83.1361 352.56 83.0761 352.74 83.0161 cv
352.8 82.8961 352.8 82.8361 352.8 82.8361 cv
352.8 82.5961 352.74 82.4161 352.62 82.2961 cv
352.44 82.1761 352.2 82.1161 351.9 82.1161 cv
351.6 82.1161 351.42 82.1761 351.24 82.2361 cv
351.12 82.3561 351.06 82.5361 351 82.7761 cv
350.34 82.7161 li
350.4 82.4761 350.52 82.2361 350.64 82.1161 cv
350.76 81.9361 350.94 81.8161 351.18 81.6961 cv
351.42 81.6361 351.66 81.5761 352.02 81.5761 cv
352.32 81.5761 352.56 81.6361 352.74 81.6961 cv
352.92 81.7561 353.1 81.8761 353.16 81.9961 cv
353.28 82.1161 353.34 82.2361 353.34 82.4161 cv
353.4 82.5361 353.4 82.7161 353.4 82.9561 cv
353.4 83.7961 li
353.4 84.3361 353.4 84.6961 353.46 84.8761 cv
353.46 84.9961 353.52 85.1761 353.58 85.2961 cv
352.92 85.2961 li
352.86 85.1761 352.86 84.9961 352.8 84.8761 cv
cp
352.74 83.4961 mo
352.56 83.5561 352.2 83.6761 351.78 83.7361 cv
351.54 83.7361 351.36 83.7961 351.24 83.8561 cv
351.12 83.8561 351.06 83.9761 351 84.0361 cv
350.94 84.1561 350.94 84.2161 350.94 84.3361 cv
350.94 84.4561 351 84.6361 351.12 84.7561 cv
351.24 84.8161 351.42 84.8761 351.66 84.8761 cv
351.9 84.8761 352.08 84.8161 352.26 84.7561 cv
352.44 84.6361 352.62 84.5161 352.68 84.3361 cv
352.74 84.2161 352.74 83.9761 352.74 83.7361 cv
352.74 83.4961 li
f
354.36 85.2961 mo
354.36 81.6961 li
354.9 81.6961 li
354.9 82.1761 li
355.14 81.8161 355.56 81.5761 356.04 81.5761 cv
356.28 81.5761 356.46 81.6361 356.64 81.6961 cv
356.82 81.8161 357 81.8761 357.06 81.9961 cv
357.18 82.1761 357.24 82.2961 357.24 82.4761 cv
357.3 82.5961 357.3 82.7761 357.3 83.0761 cv
357.3 85.2961 li
356.7 85.2961 li
356.7 83.0761 li
356.7 82.8361 356.64 82.6561 356.58 82.5361 cv
356.58 82.4161 356.46 82.2961 356.34 82.2361 cv
356.22 82.1761 356.1 82.1161 355.92 82.1161 cv
355.68 82.1161 355.44 82.2361 355.26 82.3561 cv
355.08 82.5361 354.96 82.8361 354.96 83.3161 cv
354.96 85.2961 li
354.36 85.2961 li
f
359.58 84.7561 mo
359.64 85.2961 li
359.46 85.3561 359.34 85.3561 359.16 85.3561 cv
358.98 85.3561 358.8 85.2961 358.68 85.2361 cv
358.56 85.1761 358.44 85.0561 358.44 84.9361 cv
358.38 84.8161 358.32 84.5761 358.32 84.2161 cv
358.32 82.1761 li
357.9 82.1761 li
357.9 81.6961 li
358.32 81.6961 li
358.32 80.7961 li
358.98 80.4361 li
358.98 81.6961 li
359.58 81.6961 li
359.58 82.1761 li
358.98 82.1761 li
358.98 84.2761 li
358.98 84.4561 358.98 84.5761 358.98 84.5761 cv
358.98 84.6361 359.04 84.6961 359.1 84.6961 cv
359.1 84.7561 359.22 84.7561 359.28 84.7561 cv
359.34 84.7561 359.46 84.7561 359.58 84.7561 cv
f
360.36 85.2961 mo
361.02 85.2961 li
361.02 84.5761 li
360.36 84.5761 li
cp
f
364.44 85.2961 mo
364.44 84.8161 li
364.2 85.1761 363.9 85.3561 363.48 85.3561 cv
363.18 85.3561 362.88 85.2961 362.64 85.1161 cv
362.4 84.9961 362.22 84.7561 362.1 84.4561 cv
361.98 84.2161 361.92 83.8561 361.92 83.4961 cv
361.92 83.1361 361.98 82.8361 362.1 82.5361 cv
362.16 82.2361 362.34 81.9961 362.58 81.8161 cv
362.82 81.6961 363.12 81.5761 363.42 81.5761 cv
363.66 81.5761 363.84 81.6361 364.02 81.7561 cv
364.14 81.8161 364.32 81.9361 364.44 82.1161 cv
364.44 80.3161 li
365.04 80.3161 li
365.04 85.2961 li
364.44 85.2961 li
cp
362.52 83.4961 mo
362.52 83.9761 362.64 84.2761 362.82 84.5161 cv
363 84.7561 363.24 84.8761 363.48 84.8761 cv
363.78 84.8761 364.02 84.7561 364.2 84.5161 cv
364.38 84.3361 364.44 83.9761 364.44 83.5561 cv
364.44 83.0161 364.38 82.7161 364.2 82.4761 cv
363.96 82.2361 363.72 82.1161 363.48 82.1161 cv
363.18 82.1161 363 82.2361 362.76 82.4161 cv
362.58 82.6561 362.52 83.0161 362.52 83.4961 cv
f
368.46 84.1561 mo
369.12 84.2161 li
369 84.576 368.82 84.876 368.52 85.0561 cv
368.28 85.2961 367.92 85.3561 367.5 85.3561 cv
366.96 85.3561 366.54 85.2361 366.24 84.876 cv
365.94 84.576 365.76 84.0961 365.76 83.4961 cv
365.76 82.8961 365.94 82.4161 366.24 82.1161 cv
366.6 81.756 366.96 81.576 367.5 81.576 cv
367.98 81.576 368.34 81.756 368.64 82.1161 cv
368.94 82.4161 369.12 82.8961 369.12 83.4961 cv
369.12 83.4961 369.12 83.5561 369.12 83.6161 cv
366.42 83.6161 li
366.42 84.0361 366.54 84.3361 366.78 84.576 cv
366.96 84.756 367.2 84.876 367.5 84.876 cv
367.74 84.876 367.92 84.816 368.1 84.696 cv
368.28 84.576 368.34 84.3961 368.46 84.1561 cv
cp
366.48 83.136 mo
368.46 83.136 li
368.46 82.8361 368.34 82.5961 368.22 82.4761 cv
368.04 82.2361 367.8 82.1161 367.5 82.1161 cv
367.2 82.1161 366.96 82.1761 366.78 82.4161 cv
366.6 82.5961 366.48 82.8361 366.48 83.136 cv
f
370.02 85.2961 mo
370.02 82.1761 li
369.48 82.1761 li
369.48 81.6961 li
370.02 81.6961 li
370.02 81.2761 li
370.02 81.0361 370.02 80.8561 370.08 80.7361 cv
370.14 80.6161 370.26 80.4361 370.38 80.3761 cv
370.56 80.2561 370.74 80.1961 371.04 80.1961 cv
371.22 80.1961 371.4 80.2561 371.58 80.2561 cv
371.52 80.7961 li
371.4 80.7961 371.28 80.7961 371.16 80.7961 cv
370.98 80.7961 370.8 80.7961 370.74 80.9161 cv
370.68 80.9761 370.62 81.1561 370.62 81.3361 cv
370.62 81.6961 li
371.34 81.6961 li
371.34 82.1761 li
370.62 82.1761 li
370.62 85.2961 li
370.02 85.2961 li
f
295.32 55.7161 mo
295.32 57.0961 294.24 58.1761 292.86 58.1761 cv
291.54 58.1761 290.46 57.0961 290.46 55.7161 cv
290.46 54.3961 291.54 53.256 292.86 53.256 cv
294.24 53.256 295.32 54.3961 295.32 55.7161 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 1 1 colr
f
294.96 55.7161 mo
294.96 56.8561 294.06 57.756 292.86 57.756 cv
291.72 57.756 290.76 56.8561 290.76 55.7161 cv
290.76 54.576 291.72 53.6161 292.86 53.6161 cv
294.06 53.6161 294.96 54.576 294.96 55.7161 cv
cp
295.68 55.7161 mo
295.68 54.2161 294.42 52.9561 292.86 52.9561 cv
291.3 52.9561 290.1 54.2161 290.1 55.7161 cv
290.1 57.2761 291.3 58.4761 292.86 58.4761 cv
294.42 58.4761 295.68 57.2761 295.68 55.7161 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 1 colr
f
290.22 69.9961 mo
290.22 64.9561 li
291.24 64.9561 li
292.44 68.4961 li
292.56 68.8561 292.62 69.0961 292.68 69.2761 cv
292.74 69.0961 292.8 68.7961 292.92 68.4361 cv
294.12 64.9561 li
295.02 64.9561 li
295.02 69.9961 li
294.36 69.9961 li
294.36 65.7961 li
292.92 69.9961 li
292.32 69.9961 li
290.88 65.7361 li
290.88 69.9961 li
290.22 69.9961 li
0 gry
f
295.56 69.9961 mo
297.48 64.9561 li
298.14 64.9561 li
300.24 69.9961 li
299.46 69.9961 li
298.86 68.4961 li
296.76 68.4961 li
296.28 69.9961 li
295.56 69.9961 li
cp
297 67.8961 mo
298.68 67.8961 li
298.14 66.5161 li
298.02 66.0961 297.9 65.7961 297.84 65.4961 cv
297.72 65.7961 297.66 66.1561 297.54 66.4561 cv
297 67.8961 li
f
300.78 69.9961 mo
300.78 64.9561 li
301.44 64.9561 li
304.08 68.9161 li
304.08 64.9561 li
304.68 64.9561 li
304.68 69.9961 li
304.02 69.9961 li
301.38 66.0361 li
301.38 69.9961 li
300.78 69.9961 li
f
305.82 69.9961 mo
305.82 64.9561 li
306.48 64.9561 li
309.06 68.9161 li
309.06 64.9561 li
309.72 64.9561 li
309.72 69.9961 li
309.06 69.9961 li
306.42 66.0361 li
306.42 69.9961 li
305.82 69.9961 li
f
290.22 78.9961 mo
290.22 74.0161 li
290.76 74.0161 li
290.76 74.4361 li
290.88 74.3161 291.06 74.1361 291.18 74.0761 cv
291.36 73.9561 291.6 73.8961 291.78 73.8961 cv
292.08 73.8961 292.38 74.0161 292.62 74.1361 cv
292.86 74.3161 293.04 74.5561 293.16 74.7961 cv
293.28 75.0961 293.34 75.4561 293.34 75.7561 cv
293.34 76.1161 293.28 76.4761 293.16 76.7761 cv
293.04 77.0761 292.8 77.3161 292.56 77.4361 cv
292.32 77.6161 292.02 77.6761 291.78 77.6761 cv
291.54 77.6761 291.36 77.6761 291.24 77.5561 cv
291.06 77.4961 290.94 77.3761 290.82 77.2561 cv
290.82 78.9961 li
290.22 78.9961 li
cp
290.76 75.8161 mo
290.76 76.2961 290.82 76.6561 291.06 76.8361 cv
291.24 77.0761 291.48 77.1961 291.72 77.1961 cv
291.96 77.1961 292.2 77.0761 292.44 76.8361 cv
292.62 76.5961 292.74 76.2361 292.74 75.7561 cv
292.74 75.3361 292.62 74.9761 292.44 74.7361 cv
292.26 74.4961 292.02 74.3761 291.78 74.3761 cv
291.48 74.3761 291.24 74.4961 291.06 74.7361 cv
290.88 74.9761 290.76 75.3361 290.76 75.8161 cv
f
294.06 77.6161 mo
294.06 74.0161 li
294.66 74.0161 li
294.66 74.5561 li
294.78 74.3161 294.9 74.1361 295.02 74.0161 cv
295.14 73.9561 295.26 73.8961 295.44 73.8961 cv
295.62 73.8961 295.86 74.0161 296.04 74.1361 cv
295.86 74.6761 li
295.68 74.6161 295.56 74.5561 295.38 74.5561 cv
295.26 74.5561 295.14 74.5561 295.02 74.6761 cv
294.9 74.7361 294.84 74.8561 294.78 74.9761 cv
294.72 75.2161 294.72 75.4561 294.72 75.7561 cv
294.72 77.6161 li
294.06 77.6161 li
cp
294.9 73.1761 mo
295.26 72.5761 li
295.98 72.5761 li
295.2 73.5361 li
294.6 73.5361 li
293.82 72.5761 li
294.54 72.5761 li
294.9 73.1761 li
f
298.92 76.4761 mo
299.52 76.5361 li
299.46 76.8961 299.28 77.196 298.98 77.3761 cv
298.68 77.6161 298.38 77.6761 297.96 77.6761 cv
297.42 77.6761 297 77.5561 296.7 77.196 cv
296.4 76.8961 296.22 76.4161 296.22 75.8161 cv
296.22 75.2161 296.4 74.7361 296.7 74.4361 cv
297 74.076 297.42 73.8961 297.9 73.8961 cv
298.38 73.8961 298.8 74.076 299.1 74.3761 cv
299.4 74.7361 299.58 75.2161 299.58 75.8161 cv
299.58 75.8161 299.58 75.8761 299.58 75.9361 cv
296.82 75.9361 li
296.88 76.3561 297 76.6561 297.18 76.8961 cv
297.42 77.076 297.66 77.196 297.96 77.196 cv
298.14 77.196 298.38 77.136 298.5 77.0161 cv
298.68 76.8961 298.8 76.7161 298.92 76.4761 cv
cp
296.88 75.4561 mo
298.92 75.4561 li
298.86 75.1561 298.8 74.9161 298.68 74.7961 cv
298.5 74.5561 298.2 74.4361 297.9 74.4361 cv
297.66 74.4361 297.42 74.4961 297.18 74.6761 cv
297 74.9161 296.88 75.1561 296.88 75.4561 cv
f
302.64 77.6161 mo
302.64 77.1361 li
302.46 77.4961 302.1 77.6761 301.62 77.6761 cv
301.32 77.6761 301.08 77.6161 300.84 77.4361 cv
300.6 77.3161 300.42 77.0761 300.3 76.7761 cv
300.18 76.4761 300.06 76.1761 300.06 75.8161 cv
300.06 75.4561 300.12 75.0961 300.24 74.7961 cv
300.36 74.4961 300.6 74.3161 300.84 74.1361 cv
301.08 74.0161 301.32 73.8961 301.62 73.8961 cv
301.86 73.8961 302.04 73.9561 302.22 74.0761 cv
302.4 74.1361 302.52 74.2561 302.64 74.3761 cv
302.64 72.6361 li
303.24 72.6361 li
303.24 77.6161 li
302.64 77.6161 li
cp
300.72 75.8161 mo
300.72 76.2961 300.84 76.5961 301.02 76.8361 cv
301.2 77.0761 301.44 77.1961 301.68 77.1961 cv
301.98 77.1961 302.22 77.0761 302.4 76.8961 cv
302.58 76.6561 302.7 76.2961 302.7 75.8761 cv
302.7 75.3961 302.58 74.9761 302.4 74.7961 cv
302.22 74.5561 301.98 74.4361 301.68 74.4361 cv
301.38 74.4361 301.14 74.5561 301.02 74.7361 cv
300.84 74.9761 300.72 75.3361 300.72 75.8161 cv
f
304.74 77.6161 mo
304.2 77.6161 li
304.2 72.6361 li
304.8 72.6361 li
304.8 74.3761 li
305.04 74.0761 305.4 73.8961 305.82 73.8961 cv
306 73.8961 306.24 73.9561 306.42 74.0761 cv
306.6 74.1361 306.78 74.2561 306.9 74.4361 cv
307.08 74.5561 307.14 74.7961 307.2 75.0361 cv
307.32 75.2761 307.32 75.5161 307.32 75.7561 cv
307.32 76.3561 307.2 76.8361 306.9 77.1961 cv
306.54 77.4961 306.18 77.6761 305.76 77.6761 cv
305.34 77.6761 304.98 77.4961 304.74 77.1361 cv
304.74 77.6161 li
cp
304.74 75.7561 mo
304.74 76.2361 304.8 76.5361 304.92 76.7161 cv
305.1 77.0161 305.4 77.1961 305.7 77.1961 cv
306 77.1961 306.24 77.0761 306.42 76.8361 cv
306.6 76.5961 306.72 76.2361 306.72 75.8161 cv
306.72 75.3361 306.6 74.9761 306.42 74.7361 cv
306.24 74.4961 306 74.4361 305.76 74.4361 cv
305.46 74.4361 305.22 74.5561 305.04 74.7361 cv
304.86 74.9761 304.74 75.3361 304.74 75.7561 cv
f
310.56 76.4761 mo
311.22 76.5361 li
311.1 76.8961 310.92 77.196 310.62 77.3761 cv
310.38 77.6161 310.02 77.6761 309.6 77.6761 cv
309.06 77.6761 308.64 77.5561 308.34 77.196 cv
308.04 76.8961 307.86 76.4161 307.86 75.8161 cv
307.86 75.2161 308.04 74.7361 308.34 74.4361 cv
308.7 74.076 309.06 73.8961 309.6 73.8961 cv
310.08 73.8961 310.44 74.076 310.74 74.3761 cv
311.04 74.7361 311.22 75.2161 311.22 75.8161 cv
311.22 75.8161 311.22 75.8761 311.22 75.9361 cv
308.52 75.9361 li
308.52 76.3561 308.64 76.6561 308.88 76.8961 cv
309.06 77.076 309.3 77.196 309.6 77.196 cv
309.84 77.196 310.02 77.136 310.2 77.0161 cv
310.38 76.8961 310.5 76.7161 310.56 76.4761 cv
cp
308.58 75.4561 mo
310.56 75.4561 li
310.56 75.1561 310.5 74.9161 310.32 74.7961 cv
310.14 74.5561 309.9 74.4361 309.6 74.4361 cv
309.3 74.4361 309.06 74.4961 308.88 74.6761 cv
308.7 74.9161 308.58 75.1561 308.58 75.4561 cv
cp
309.6 73.1761 mo
310.02 72.576 li
310.68 72.576 li
309.9 73.5361 li
309.24 73.5361 li
308.52 72.576 li
309.24 72.576 li
309.6 73.1761 li
f
311.64 77.6161 mo
311.64 77.1361 li
313.92 74.4361 li
313.68 74.4961 313.5 74.4961 313.26 74.4961 cv
311.82 74.4961 li
311.82 74.0161 li
314.76 74.0161 li
314.76 74.3761 li
312.78 76.7161 li
312.42 77.1361 li
312.66 77.0761 312.96 77.0761 313.2 77.0761 cv
314.88 77.0761 li
314.88 77.6161 li
311.64 77.6161 li
cp
313.38 73.1761 mo
313.74 72.5761 li
314.46 72.5761 li
313.68 73.5361 li
313.02 73.5361 li
312.3 72.5761 li
312.96 72.5761 li
313.38 73.1761 li
f
315.48 77.6161 mo
315.48 74.0161 li
316.02 74.0161 li
316.02 74.4961 li
316.32 74.1361 316.68 73.8961 317.16 73.8961 cv
317.4 73.8961 317.58 73.9561 317.76 74.0161 cv
318 74.1361 318.12 74.1961 318.18 74.3161 cv
318.3 74.4361 318.36 74.6161 318.36 74.7961 cv
318.42 74.9161 318.42 75.0961 318.42 75.3961 cv
318.42 77.6161 li
317.82 77.6161 li
317.82 75.3961 li
317.82 75.1561 317.76 74.9761 317.76 74.8561 cv
317.7 74.7361 317.58 74.6161 317.46 74.5561 cv
317.34 74.4961 317.22 74.4361 317.04 74.4361 cv
316.8 74.4361 316.56 74.4961 316.38 74.6761 cv
316.2 74.8561 316.08 75.1561 316.08 75.6361 cv
316.08 77.6161 li
315.48 77.6161 li
f
319.32 78.9961 mo
319.26 78.4561 li
319.44 78.4561 319.56 78.5161 319.62 78.5161 cv
319.8 78.5161 319.86 78.4561 319.92 78.3961 cv
320.04 78.3961 320.1 78.3361 320.16 78.2161 cv
320.16 78.1561 320.28 78.0361 320.34 77.7961 cv
320.34 77.7361 320.4 77.6761 320.4 77.6161 cv
319.02 74.0161 li
319.68 74.0161 li
320.46 76.0561 li
320.52 76.3561 320.64 76.6561 320.7 76.9561 cv
320.76 76.6561 320.88 76.3561 320.94 76.1161 cv
321.72 74.0161 li
322.32 74.0161 li
320.94 77.6761 li
320.82 78.0961 320.7 78.3361 320.64 78.5161 cv
320.52 78.6961 320.4 78.8161 320.22 78.9361 cv
320.1 79.0561 319.92 79.0561 319.74 79.0561 cv
319.62 79.0561 319.5 79.0561 319.32 78.9961 cv
cp
320.34 73.5361 mo
320.82 72.5761 li
321.6 72.5761 li
320.88 73.5361 li
320.34 73.5361 li
f
292.56 84.8761 mo
292.32 85.0561 292.08 85.1761 291.9 85.2361 cv
291.72 85.3561 291.48 85.3561 291.24 85.3561 cv
290.82 85.3561 290.52 85.2961 290.28 85.1161 cv
290.1 84.8761 289.98 84.6361 289.98 84.3361 cv
289.98 84.1561 290.04 84.0361 290.1 83.8561 cv
290.22 83.7361 290.28 83.6161 290.4 83.4961 cv
290.58 83.4361 290.7 83.3161 290.88 83.3161 cv
291 83.2561 291.18 83.2561 291.42 83.1961 cv
291.9 83.1361 292.26 83.0761 292.5 83.0161 cv
292.5 82.8961 292.5 82.8361 292.5 82.8361 cv
292.5 82.5961 292.44 82.4161 292.32 82.2961 cv
292.2 82.1761 291.96 82.1161 291.66 82.1161 cv
291.36 82.1161 291.12 82.1761 291 82.2361 cv
290.88 82.3561 290.76 82.5361 290.7 82.7761 cv
290.1 82.7161 li
290.16 82.4761 290.22 82.2361 290.34 82.1161 cv
290.46 81.9361 290.64 81.8161 290.88 81.6961 cv
291.12 81.6361 291.42 81.5761 291.72 81.5761 cv
292.02 81.5761 292.26 81.6361 292.5 81.6961 cv
292.68 81.7561 292.8 81.8761 292.92 81.9961 cv
292.98 82.1161 293.04 82.2361 293.1 82.4161 cv
293.1 82.5361 293.16 82.7161 293.16 82.9561 cv
293.16 83.7961 li
293.16 84.3361 293.16 84.6961 293.16 84.8761 cv
293.22 84.9961 293.28 85.1761 293.34 85.2961 cv
292.68 85.2961 li
292.62 85.1761 292.56 84.9961 292.56 84.8761 cv
cp
292.5 83.4961 mo
292.26 83.5561 291.96 83.6761 291.54 83.7361 cv
291.24 83.7361 291.06 83.7961 291 83.8561 cv
290.88 83.8561 290.76 83.9761 290.7 84.0361 cv
290.64 84.1561 290.64 84.2161 290.64 84.3361 cv
290.64 84.4561 290.7 84.6361 290.82 84.7561 cv
290.94 84.8161 291.12 84.8761 291.36 84.8761 cv
291.6 84.8761 291.78 84.8161 292.02 84.7561 cv
292.2 84.6361 292.32 84.5161 292.38 84.3361 cv
292.5 84.2161 292.5 83.9761 292.5 83.7361 cv
292.5 83.4961 li
f
296.46 85.2961 mo
296.46 84.8161 li
296.22 85.1761 295.86 85.3561 295.44 85.3561 cv
295.14 85.3561 294.9 85.2961 294.6 85.1161 cv
294.36 84.9961 294.18 84.7561 294.06 84.4561 cv
293.94 84.2161 293.88 83.8561 293.88 83.4961 cv
293.88 83.1361 293.94 82.8361 294.06 82.5361 cv
294.18 82.2361 294.36 81.9961 294.6 81.8161 cv
294.84 81.6961 295.08 81.5761 295.38 81.5761 cv
295.62 81.5761 295.8 81.6361 295.98 81.7561 cv
296.16 81.8161 296.28 81.9361 296.4 82.1161 cv
296.4 80.3161 li
297 80.3161 li
297 85.2961 li
296.46 85.2961 li
cp
294.48 83.4961 mo
294.48 83.9761 294.6 84.2761 294.78 84.5161 cv
294.96 84.7561 295.2 84.8761 295.5 84.8761 cv
295.74 84.8761 295.98 84.7561 296.16 84.5161 cv
296.34 84.3361 296.46 83.9761 296.46 83.5561 cv
296.46 83.0161 296.34 82.7161 296.16 82.4761 cv
295.98 82.2361 295.74 82.1161 295.44 82.1161 cv
295.14 82.1161 294.96 82.2361 294.78 82.4161 cv
294.6 82.6561 294.48 83.0161 294.48 83.4961 cv
f
298.56 81.0361 mo
297.96 81.0361 li
297.96 80.3161 li
298.56 80.3161 li
cp
297.96 81.0361 mo
cp
297.18 86.6761 mo
297.3 86.196 li
297.42 86.196 297.54 86.196 297.6 86.196 cv
297.72 86.196 297.84 86.196 297.9 86.076 cv
297.96 86.0161 297.96 85.7761 297.96 85.4761 cv
297.96 81.696 li
298.56 81.696 li
298.56 85.4761 li
298.56 85.9561 298.5 86.256 298.38 86.4361 cv
298.26 86.6761 298.02 86.7961 297.66 86.7961 cv
297.48 86.7961 297.36 86.7361 297.18 86.6761 cv
f
299.7 85.2961 mo
300.36 85.2961 li
300.36 84.5761 li
299.7 84.5761 li
cp
f
303.78 85.2961 mo
303.78 84.8161 li
303.6 85.1761 303.24 85.3561 302.76 85.3561 cv
302.52 85.3561 302.22 85.2961 301.98 85.1161 cv
301.74 84.9961 301.56 84.7561 301.44 84.4561 cv
301.32 84.2161 301.2 83.8561 301.2 83.4961 cv
301.2 83.1361 301.26 82.8361 301.38 82.5361 cv
301.5 82.2361 301.74 81.9961 301.98 81.8161 cv
302.22 81.6961 302.46 81.5761 302.76 81.5761 cv
303 81.5761 303.18 81.6361 303.36 81.7561 cv
303.54 81.8161 303.66 81.9361 303.78 82.1161 cv
303.78 80.3161 li
304.38 80.3161 li
304.38 85.2961 li
303.78 85.2961 li
cp
301.86 83.4961 mo
301.86 83.9761 301.98 84.2761 302.16 84.5161 cv
302.34 84.7561 302.58 84.8761 302.82 84.8761 cv
303.12 84.8761 303.36 84.7561 303.54 84.5161 cv
303.72 84.3361 303.84 83.9761 303.84 83.5561 cv
303.84 83.0161 303.72 82.7161 303.54 82.4761 cv
303.36 82.2361 303.12 82.1161 302.82 82.1161 cv
302.58 82.1161 302.34 82.2361 302.16 82.4161 cv
301.98 82.6561 301.86 83.0161 301.86 83.4961 cv
f
307.8 84.1561 mo
308.46 84.2161 li
308.34 84.576 308.16 84.876 307.86 85.0561 cv
307.62 85.2961 307.26 85.3561 306.84 85.3561 cv
306.3 85.3561 305.88 85.2361 305.58 84.876 cv
305.28 84.576 305.16 84.0961 305.16 83.4961 cv
305.16 82.8961 305.28 82.4161 305.64 82.1161 cv
305.88 81.756 306.3 81.576 306.84 81.576 cv
307.32 81.576 307.68 81.756 307.98 82.1161 cv
308.34 82.4161 308.46 82.8961 308.46 83.4961 cv
308.46 83.4961 308.46 83.5561 308.46 83.6161 cv
305.76 83.6161 li
305.82 84.0361 305.88 84.3361 306.12 84.576 cv
306.3 84.756 306.54 84.876 306.84 84.876 cv
307.08 84.876 307.26 84.816 307.44 84.696 cv
307.56 84.576 307.74 84.3961 307.8 84.1561 cv
cp
305.82 83.136 mo
307.8 83.136 li
307.8 82.8361 307.74 82.5961 307.56 82.4761 cv
307.38 82.2361 307.14 82.1161 306.84 82.1161 cv
306.54 82.1161 306.3 82.1761 306.12 82.4161 cv
305.94 82.5961 305.82 82.8361 305.82 83.136 cv
f
309.24 85.2961 mo
309.24 81.6961 li
309.78 81.6961 li
309.78 82.1761 li
310.02 81.8161 310.44 81.5761 310.92 81.5761 cv
311.16 81.5761 311.34 81.6361 311.52 81.6961 cv
311.7 81.8161 311.88 81.8761 311.94 81.9961 cv
312.06 82.1761 312.06 82.2961 312.12 82.4761 cv
312.12 82.5961 312.18 82.7761 312.18 83.0761 cv
312.18 85.2961 li
311.58 85.2961 li
311.58 83.0761 li
311.58 82.8361 311.52 82.6561 311.46 82.5361 cv
311.4 82.4161 311.34 82.2961 311.22 82.2361 cv
311.1 82.1761 310.98 82.1161 310.8 82.1161 cv
310.5 82.1161 310.32 82.2361 310.14 82.3561 cv
309.96 82.5361 309.84 82.8361 309.84 83.3161 cv
309.84 85.2961 li
309.24 85.2961 li
f
312.9 83.4961 mo
312.9 82.8361 313.08 82.2961 313.44 81.9961 cv
313.74 81.7561 314.1 81.5761 314.58 81.5761 cv
315.06 81.5761 315.48 81.7561 315.78 82.0561 cv
316.08 82.4161 316.26 82.8361 316.26 83.4361 cv
316.26 83.9161 316.2 84.2761 316.08 84.5161 cv
315.9 84.8161 315.72 84.9961 315.42 85.1761 cv
315.18 85.2961 314.88 85.3561 314.58 85.3561 cv
314.04 85.3561 313.68 85.2361 313.32 84.8761 cv
313.02 84.5761 312.9 84.0961 312.9 83.4961 cv
cp
313.5 83.4961 mo
313.5 83.9761 313.62 84.2761 313.8 84.5161 cv
313.98 84.7561 314.28 84.8761 314.58 84.8761 cv
314.88 84.8761 315.12 84.7561 315.3 84.5161 cv
315.54 84.2761 315.6 83.9761 315.6 83.4361 cv
315.6 83.0161 315.54 82.7161 315.3 82.4761 cv
315.12 82.2361 314.88 82.1161 314.58 82.1161 cv
314.28 82.1161 313.98 82.2361 313.8 82.4761 cv
313.62 82.6561 313.5 83.0161 313.5 83.4961 cv
f
318.36 84.7561 mo
318.42 85.2961 li
318.24 85.3561 318.12 85.3561 317.94 85.3561 cv
317.7 85.3561 317.58 85.2961 317.4 85.2361 cv
317.28 85.1761 317.22 85.0561 317.16 84.9361 cv
317.1 84.8161 317.1 84.5761 317.1 84.2161 cv
317.1 82.1761 li
316.68 82.1761 li
316.68 81.6961 li
317.1 81.6961 li
317.1 80.7961 li
317.7 80.4361 li
317.7 81.6961 li
318.36 81.6961 li
318.36 82.1761 li
317.7 82.1761 li
317.7 84.2761 li
317.7 84.4561 317.7 84.5761 317.76 84.5761 cv
317.76 84.6361 317.82 84.6961 317.82 84.6961 cv
317.88 84.7561 317.94 84.7561 318.06 84.7561 cv
318.12 84.7561 318.24 84.7561 318.36 84.7561 cv
f
244.5 55.7161 mo
244.5 57.0961 243.36 58.1761 241.98 58.1761 cv
240.66 58.1761 239.58 57.0961 239.58 55.7161 cv
239.58 54.3961 240.66 53.256 241.98 53.256 cv
243.36 53.256 244.5 54.3961 244.5 55.7161 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 1 1 colr
f
244.08 55.7161 mo
244.08 56.8561 243.18 57.756 241.98 57.756 cv
240.9 57.756 239.94 56.8561 239.94 55.7161 cv
239.94 54.576 240.9 53.6161 241.98 53.6161 cv
243.18 53.6161 244.08 54.576 244.08 55.7161 cv
cp
244.8 55.7161 mo
244.8 54.2161 243.54 52.9561 241.98 52.9561 cv
240.48 52.9561 239.22 54.2161 239.22 55.7161 cv
239.22 57.2761 240.48 58.4761 241.98 58.4761 cv
243.54 58.4761 244.8 57.2761 244.8 55.7161 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 1 colr
f
238.86 69.9961 mo
240.78 64.9561 li
241.5 64.9561 li
243.54 69.9961 li
242.76 69.9961 li
242.22 68.4961 li
240.12 68.4961 li
239.58 69.9961 li
238.86 69.9961 li
cp
240.3 67.8961 mo
241.98 67.8961 li
241.5 66.5161 li
241.32 66.0961 241.2 65.7961 241.14 65.4961 cv
241.08 65.7961 240.96 66.1561 240.84 66.4561 cv
240.3 67.8961 li
0 gry
f
247.62 68.196 mo
248.28 68.376 li
248.16 68.916 247.92 69.3361 247.56 69.636 cv
247.2 69.936 246.72 70.056 246.24 70.056 cv
245.7 70.056 245.22 69.936 244.92 69.756 cv
244.56 69.5161 244.32 69.2161 244.14 68.796 cv
243.96 68.376 243.84 67.8961 243.84 67.416 cv
243.84 66.936 243.96 66.4561 244.2 66.0961 cv
244.38 65.676 244.68 65.376 245.04 65.196 cv
245.4 65.0161 245.82 64.8961 246.24 64.8961 cv
246.72 64.8961 247.14 65.0161 247.5 65.256 cv
247.86 65.556 248.04 65.856 248.22 66.3361 cv
247.56 66.5161 li
247.44 66.1561 247.26 65.856 247.02 65.736 cv
246.84 65.556 246.54 65.496 246.24 65.496 cv
245.82 65.496 245.52 65.556 245.22 65.736 cv
244.98 65.916 244.8 66.1561 244.74 66.4561 cv
244.62 66.816 244.56 67.116 244.56 67.416 cv
244.56 67.8361 244.62 68.256 244.74 68.556 cv
244.86 68.856 245.04 69.0961 245.34 69.2761 cv
245.58 69.3961 245.88 69.5161 246.18 69.5161 cv
246.54 69.5161 246.84 69.3961 247.08 69.1561 cv
247.38 68.9761 247.56 68.616 247.62 68.196 cv
f
250.38 69.9961 mo
250.38 65.5561 li
248.7 65.5561 li
248.7 64.9561 li
252.66 64.9561 li
252.66 65.5561 li
251.04 65.5561 li
251.04 69.9961 li
250.38 69.9961 li
f
240.3 77.6161 mo
238.98 74.0161 li
239.58 74.0161 li
240.36 76.1761 li
240.48 76.4161 240.54 76.6561 240.6 76.8961 cv
240.66 76.7161 240.72 76.4761 240.84 76.1761 cv
241.68 74.0161 li
242.28 74.0161 li
240.9 77.6161 li
240.3 77.6161 li
f
242.82 78.9961 mo
242.76 78.4561 li
242.88 78.4561 243 78.5161 243.12 78.5161 cv
243.24 78.5161 243.3 78.4561 243.42 78.3961 cv
243.48 78.3961 243.54 78.3361 243.6 78.2161 cv
243.66 78.1561 243.72 78.0361 243.78 77.7961 cv
243.84 77.7361 243.84 77.6761 243.84 77.6161 cv
242.46 74.0161 li
243.18 74.0161 li
243.9 76.0561 li
244.02 76.3561 244.08 76.6561 244.14 76.9561 cv
244.26 76.6561 244.32 76.3561 244.44 76.1161 cv
245.16 74.0161 li
245.82 74.0161 li
244.44 77.6761 li
244.26 78.0961 244.14 78.3361 244.08 78.5161 cv
243.96 78.6961 243.84 78.8161 243.72 78.9361 cv
243.54 79.0561 243.36 79.0561 243.24 79.0561 cv
243.12 79.0561 242.94 79.0561 242.82 78.9961 cv
f
246.12 76.5361 mo
246.72 76.4161 li
246.72 76.6561 246.84 76.8961 246.96 77.0161 cv
247.14 77.136 247.38 77.196 247.62 77.196 cv
247.92 77.196 248.1 77.136 248.28 77.0161 cv
248.4 76.8961 248.46 76.7761 248.46 76.5961 cv
248.46 76.4761 248.4 76.3561 248.28 76.2961 cv
248.22 76.2361 247.98 76.1761 247.68 76.0561 cv
247.2 75.9361 246.9 75.8761 246.72 75.756 cv
246.54 75.696 246.42 75.576 246.36 75.4561 cv
246.24 75.2761 246.18 75.1561 246.18 74.9761 cv
246.18 74.7961 246.24 74.6161 246.3 74.4961 cv
246.42 74.3761 246.48 74.256 246.6 74.196 cv
246.72 74.076 246.84 74.0161 247.02 74.0161 cv
247.14 73.9561 247.32 73.8961 247.56 73.8961 cv
247.8 73.8961 248.04 73.9561 248.28 74.0161 cv
248.52 74.136 248.64 74.256 248.76 74.3761 cv
248.88 74.4961 248.94 74.6761 248.94 74.9161 cv
248.34 75.0361 li
248.34 74.7961 248.28 74.6761 248.1 74.5561 cv
247.98 74.4361 247.8 74.4361 247.56 74.4361 cv
247.32 74.4361 247.08 74.4361 246.96 74.5561 cv
246.84 74.6761 246.78 74.7361 246.78 74.8561 cv
246.78 74.9761 246.84 75.0361 246.84 75.0961 cv
246.9 75.1561 247.02 75.2161 247.08 75.2761 cv
247.14 75.2761 247.32 75.3361 247.62 75.3961 cv
248.04 75.5161 248.4 75.636 248.52 75.696 cv
248.7 75.756 248.88 75.8761 248.94 75.9961 cv
249.06 76.1761 249.12 76.3561 249.12 76.5361 cv
249.12 76.7761 249.06 76.9561 248.94 77.136 cv
248.82 77.3161 248.64 77.4361 248.4 77.5561 cv
248.16 77.6161 247.92 77.6761 247.62 77.6761 cv
247.2 77.6761 246.78 77.6161 246.54 77.3761 cv
246.36 77.196 246.18 76.8961 246.12 76.5361 cv
cp
247.62 73.1761 mo
247.98 72.576 li
248.7 72.576 li
247.92 73.5361 li
247.26 73.5361 li
246.54 72.576 li
247.2 72.576 li
247.62 73.1761 li
f
252.36 76.4761 mo
252.96 76.5361 li
252.84 76.8961 252.66 77.196 252.42 77.3761 cv
252.12 77.6161 251.76 77.6761 251.34 77.6761 cv
250.86 77.6761 250.44 77.5561 250.08 77.196 cv
249.78 76.8961 249.66 76.4161 249.66 75.8161 cv
249.66 75.2161 249.78 74.7361 250.14 74.4361 cv
250.44 74.076 250.86 73.8961 251.34 73.8961 cv
251.82 73.8961 252.24 74.076 252.54 74.3761 cv
252.84 74.7361 252.96 75.2161 252.96 75.8161 cv
252.96 75.8161 252.96 75.8761 252.96 75.9361 cv
250.26 75.9361 li
250.32 76.3561 250.44 76.6561 250.62 76.8961 cv
250.8 77.076 251.1 77.196 251.34 77.196 cv
251.58 77.196 251.76 77.136 251.94 77.0161 cv
252.12 76.8961 252.24 76.7161 252.36 76.4761 cv
cp
250.32 75.4561 mo
252.36 75.4561 li
252.3 75.1561 252.24 74.9161 252.12 74.7961 cv
251.88 74.5561 251.64 74.4361 251.34 74.4361 cv
251.04 74.4361 250.8 74.4961 250.62 74.6761 cv
250.44 74.9161 250.32 75.1561 250.32 75.4561 cv
f
255.06 77.076 mo
255.18 77.616 li
255 77.616 254.82 77.676 254.7 77.676 cv
254.46 77.676 254.28 77.616 254.22 77.556 cv
254.1 77.496 253.98 77.376 253.92 77.256 cv
253.86 77.136 253.86 76.9561 253.86 76.5361 cv
253.86 74.436 li
253.38 74.436 li
253.38 74.0161 li
253.86 74.0161 li
253.86 73.116 li
254.46 72.756 li
254.46 74.0161 li
255.06 74.0161 li
255.06 74.436 li
254.46 74.436 li
254.46 76.5961 li
254.46 76.7761 254.46 76.8961 254.52 76.9561 cv
254.52 76.9561 254.58 77.0161 254.58 77.076 cv
254.64 77.076 254.7 77.076 254.82 77.076 cv
254.88 77.076 255 77.076 255.06 77.076 cv
f
255.66 77.6161 mo
255.66 74.0161 li
256.2 74.0161 li
256.2 74.5561 li
256.38 74.3161 256.5 74.1361 256.62 74.0161 cv
256.74 73.9561 256.86 73.8961 256.98 73.8961 cv
257.22 73.8961 257.4 74.0161 257.64 74.1361 cv
257.4 74.6761 li
257.28 74.6161 257.1 74.5561 256.98 74.5561 cv
256.86 74.5561 256.74 74.5561 256.62 74.6761 cv
256.5 74.7361 256.44 74.8561 256.38 74.9761 cv
256.32 75.2161 256.26 75.4561 256.26 75.7561 cv
256.26 77.6161 li
255.66 77.6161 li
cp
256.5 73.1761 mo
256.86 72.5761 li
257.58 72.5761 li
256.8 73.5361 li
256.14 73.5361 li
255.42 72.5761 li
256.08 72.5761 li
256.5 73.1761 li
f
257.76 75.8161 mo
257.76 75.1561 257.94 74.6161 258.36 74.3161 cv
258.66 74.0761 259.02 73.8961 259.5 73.8961 cv
259.98 73.8961 260.4 74.0761 260.7 74.3761 cv
261 74.7361 261.18 75.1561 261.18 75.7561 cv
261.18 76.2361 261.12 76.5961 260.94 76.8361 cv
260.82 77.1361 260.58 77.3161 260.34 77.4961 cv
260.1 77.6161 259.8 77.6761 259.5 77.6761 cv
258.96 77.6761 258.54 77.5561 258.24 77.1961 cv
257.94 76.8961 257.76 76.4161 257.76 75.8161 cv
cp
258.42 75.8161 mo
258.42 76.2361 258.54 76.5961 258.72 76.8361 cv
258.9 77.0761 259.14 77.1961 259.5 77.1961 cv
259.8 77.1961 260.04 77.0761 260.22 76.8361 cv
260.46 76.5961 260.52 76.2361 260.52 75.7561 cv
260.52 75.3361 260.46 74.9761 260.22 74.7361 cv
260.04 74.5561 259.8 74.4361 259.5 74.4361 cv
259.14 74.4361 258.9 74.5561 258.72 74.7361 cv
258.54 74.9761 258.42 75.3361 258.42 75.8161 cv
f
262.92 77.6161 mo
261.54 74.0161 li
262.14 74.0161 li
262.92 76.1761 li
263.04 76.4161 263.1 76.6561 263.16 76.8961 cv
263.22 76.7161 263.34 76.4761 263.4 76.1761 cv
264.18 74.0161 li
264.84 74.0161 li
263.46 77.6161 li
262.92 77.6161 li
f
267.78 77.1361 mo
267.54 77.3761 267.3 77.4961 267.06 77.5561 cv
266.88 77.6761 266.64 77.6761 266.4 77.6761 cv
266.04 77.6761 265.68 77.6161 265.5 77.3761 cv
265.26 77.1961 265.2 76.9561 265.2 76.6561 cv
265.2 76.4761 265.2 76.2961 265.32 76.1761 cv
265.38 75.9961 265.5 75.8761 265.62 75.8161 cv
265.74 75.7561 265.92 75.6961 266.04 75.6361 cv
266.16 75.5761 266.34 75.5761 266.64 75.5161 cv
267.12 75.4561 267.48 75.3961 267.72 75.3361 cv
267.72 75.2161 267.72 75.1561 267.72 75.1561 cv
267.72 74.9161 267.66 74.7361 267.54 74.6161 cv
267.36 74.4961 267.12 74.4361 266.82 74.4361 cv
266.52 74.4361 266.34 74.4361 266.22 74.5561 cv
266.04 74.6761 265.98 74.8561 265.86 75.0961 cv
265.26 75.0361 li
265.32 74.7961 265.44 74.5561 265.56 74.3761 cv
265.68 74.2561 265.86 74.1361 266.1 74.0761 cv
266.34 73.9561 266.64 73.8961 266.88 73.8961 cv
267.24 73.8961 267.48 73.9561 267.66 74.0161 cv
267.84 74.0761 268.02 74.1961 268.08 74.3161 cv
268.2 74.3761 268.26 74.5561 268.32 74.7361 cv
268.32 74.7961 268.32 75.0361 268.32 75.2761 cv
268.32 76.1161 li
268.32 76.6561 268.32 77.0161 268.32 77.1961 cv
268.38 77.3161 268.44 77.4961 268.5 77.6161 cv
267.9 77.6161 li
267.84 77.4961 267.78 77.3161 267.78 77.1361 cv
cp
267.72 75.8161 mo
267.48 75.8761 267.12 75.9361 266.7 75.9961 cv
266.46 76.0561 266.28 76.1161 266.16 76.1761 cv
266.04 76.1761 265.98 76.2361 265.92 76.3561 cv
265.86 76.4161 265.86 76.5361 265.86 76.6561 cv
265.86 76.8361 265.92 76.9561 266.04 77.0761 cv
266.16 77.1361 266.34 77.1961 266.58 77.1961 cv
266.76 77.1961 267 77.1361 267.18 77.0761 cv
267.36 76.9561 267.54 76.8361 267.6 76.6561 cv
267.66 76.4761 267.72 76.2961 267.72 75.9961 cv
267.72 75.8161 li
f
270.6 77.076 mo
270.72 77.616 li
270.54 77.616 270.36 77.676 270.24 77.676 cv
270 77.676 269.88 77.616 269.7 77.556 cv
269.58 77.496 269.52 77.376 269.46 77.256 cv
269.4 77.136 269.4 76.9561 269.4 76.5361 cv
269.4 74.436 li
268.92 74.436 li
268.92 74.0161 li
269.4 74.0161 li
269.4 73.116 li
270 72.756 li
270 74.0161 li
270.6 74.0161 li
270.6 74.436 li
270 74.436 li
270 76.5961 li
270 76.7761 270 76.8961 270 76.9561 cv
270.06 76.9561 270.06 77.0161 270.12 77.076 cv
270.18 77.076 270.24 77.076 270.36 77.076 cv
270.42 77.076 270.48 77.076 270.6 77.076 cv
f
273.72 76.4761 mo
274.32 76.5361 li
274.26 76.8961 274.02 77.196 273.78 77.3761 cv
273.48 77.6161 273.12 77.6761 272.76 77.6761 cv
272.22 77.6761 271.8 77.5561 271.44 77.196 cv
271.2 76.8961 271.02 76.4161 271.02 75.8161 cv
271.02 75.2161 271.2 74.7361 271.5 74.4361 cv
271.8 74.076 272.22 73.8961 272.7 73.8961 cv
273.18 73.8961 273.6 74.076 273.9 74.3761 cv
274.2 74.7361 274.38 75.2161 274.38 75.8161 cv
274.38 75.8161 274.38 75.8761 274.38 75.9361 cv
271.62 75.9361 li
271.68 76.3561 271.8 76.6561 271.98 76.8961 cv
272.16 77.076 272.46 77.196 272.76 77.196 cv
273 77.196 273.12 77.136 273.3 77.0161 cv
273.48 76.8961 273.6 76.7161 273.72 76.4761 cv
cp
271.68 75.4561 mo
273.72 75.4561 li
273.66 75.1561 273.6 74.9161 273.48 74.7961 cv
273.24 74.5561 273 74.4361 272.7 74.4361 cv
272.46 74.4361 272.22 74.4961 271.98 74.6761 cv
271.8 74.9161 271.68 75.1561 271.68 75.4561 cv
f
275.1 77.6161 mo
275.7 77.6161 li
275.7 72.6361 li
275.1 72.6361 li
cp
f
239.34 85.2961 mo
239.34 81.6961 li
239.88 81.6961 li
239.88 82.1761 li
240.12 81.8161 240.54 81.5761 241.02 81.5761 cv
241.26 81.5761 241.44 81.6361 241.62 81.6961 cv
241.8 81.8161 241.92 81.8761 242.04 81.9961 cv
242.1 82.1761 242.16 82.2961 242.22 82.4761 cv
242.22 82.5961 242.28 82.7761 242.28 83.0761 cv
242.28 85.2961 li
241.68 85.2961 li
241.68 83.0761 li
241.68 82.8361 241.62 82.6561 241.56 82.5361 cv
241.56 82.4161 241.44 82.2961 241.32 82.2361 cv
241.2 82.1761 241.08 82.1161 240.9 82.1161 cv
240.66 82.1161 240.42 82.2361 240.18 82.3561 cv
240.06 82.5361 239.94 82.8361 239.94 83.3161 cv
239.94 85.2961 li
239.34 85.2961 li
f
243.36 85.2961 mo
244.08 85.2961 li
244.08 84.5761 li
243.36 84.5761 li
cp
f
247.5 85.2961 mo
247.5 84.8161 li
247.26 85.1761 246.9 85.3561 246.48 85.3561 cv
246.18 85.3561 245.94 85.2961 245.7 85.1161 cv
245.46 84.9961 245.28 84.7561 245.1 84.4561 cv
244.98 84.2161 244.92 83.8561 244.92 83.4961 cv
244.92 83.1361 244.98 82.8361 245.1 82.5361 cv
245.22 82.2361 245.4 81.9961 245.64 81.8161 cv
245.88 81.6961 246.18 81.5761 246.42 81.5761 cv
246.66 81.5761 246.84 81.6361 247.02 81.7561 cv
247.2 81.8161 247.32 81.9361 247.44 82.1161 cv
247.44 80.3161 li
248.04 80.3161 li
248.04 85.2961 li
247.5 85.2961 li
cp
245.58 83.4961 mo
245.58 83.9761 245.64 84.2761 245.88 84.5161 cv
246.06 84.7561 246.3 84.8761 246.54 84.8761 cv
246.78 84.8761 247.02 84.7561 247.2 84.5161 cv
247.44 84.3361 247.5 83.9761 247.5 83.5561 cv
247.5 83.0161 247.44 82.7161 247.2 82.4761 cv
247.02 82.2361 246.78 82.1161 246.48 82.1161 cv
246.24 82.1161 246 82.2361 245.82 82.4161 cv
245.64 82.6561 245.58 83.0161 245.58 83.4961 cv
f
251.52 84.1561 mo
252.12 84.2161 li
252.06 84.576 251.88 84.876 251.58 85.0561 cv
251.28 85.2961 250.98 85.3561 250.56 85.3561 cv
250.02 85.3561 249.6 85.2361 249.3 84.876 cv
249 84.576 248.82 84.0961 248.82 83.4961 cv
248.82 82.8961 249 82.4161 249.3 82.1161 cv
249.6 81.756 250.02 81.576 250.5 81.576 cv
250.98 81.576 251.4 81.756 251.7 82.1161 cv
252 82.4161 252.18 82.8961 252.18 83.4961 cv
252.18 83.4961 252.18 83.5561 252.18 83.6161 cv
249.48 83.6161 li
249.48 84.0361 249.6 84.3361 249.78 84.576 cv
250.02 84.756 250.26 84.876 250.56 84.876 cv
250.8 84.876 250.98 84.816 251.1 84.696 cv
251.28 84.576 251.4 84.3961 251.52 84.1561 cv
cp
249.48 83.136 mo
251.52 83.136 li
251.46 82.8361 251.4 82.5961 251.28 82.4761 cv
251.1 82.2361 250.86 82.1161 250.5 82.1161 cv
250.26 82.1161 250.02 82.1761 249.78 82.4161 cv
249.6 82.5961 249.54 82.8361 249.48 83.136 cv
f
252.9 85.2961 mo
252.9 81.6961 li
253.44 81.6961 li
253.44 82.1761 li
253.74 81.8161 254.1 81.5761 254.64 81.5761 cv
254.82 81.5761 255.06 81.6361 255.24 81.6961 cv
255.42 81.8161 255.54 81.8761 255.66 81.9961 cv
255.72 82.1761 255.78 82.2961 255.84 82.4761 cv
255.84 82.5961 255.84 82.7761 255.84 83.0761 cv
255.84 85.2961 li
255.24 85.2961 li
255.24 83.0761 li
255.24 82.8361 255.24 82.6561 255.18 82.5361 cv
255.12 82.4161 255.06 82.2961 254.94 82.2361 cv
254.82 82.1761 254.64 82.1161 254.46 82.1161 cv
254.22 82.1161 253.98 82.2361 253.8 82.3561 cv
253.62 82.5361 253.5 82.8361 253.5 83.3161 cv
253.5 85.2961 li
252.9 85.2961 li
f
256.56 83.4961 mo
256.56 82.8361 256.74 82.2961 257.16 81.9961 cv
257.4 81.7561 257.82 81.5761 258.24 81.5761 cv
258.78 81.5761 259.14 81.7561 259.5 82.0561 cv
259.8 82.4161 259.98 82.8361 259.98 83.4361 cv
259.98 83.9161 259.92 84.2761 259.74 84.5161 cv
259.62 84.8161 259.38 84.9961 259.14 85.1761 cv
258.9 85.2961 258.6 85.3561 258.24 85.3561 cv
257.76 85.3561 257.34 85.2361 257.04 84.8761 cv
256.74 84.5761 256.56 84.0961 256.56 83.4961 cv
cp
257.22 83.4961 mo
257.22 83.9761 257.28 84.2761 257.52 84.5161 cv
257.7 84.7561 257.94 84.8761 258.24 84.8761 cv
258.6 84.8761 258.84 84.7561 259.02 84.5161 cv
259.2 84.2761 259.32 83.9761 259.32 83.4361 cv
259.32 83.0161 259.2 82.7161 259.02 82.4761 cv
258.84 82.2361 258.6 82.1161 258.24 82.1161 cv
257.94 82.1161 257.7 82.2361 257.52 82.4761 cv
257.28 82.6561 257.22 83.0161 257.22 83.4961 cv
f
262.02 84.7561 mo
262.08 85.2961 li
261.96 85.3561 261.78 85.3561 261.66 85.3561 cv
261.42 85.3561 261.24 85.2961 261.12 85.2361 cv
261 85.1761 260.94 85.0561 260.88 84.9361 cv
260.82 84.8161 260.76 84.5761 260.76 84.2161 cv
260.76 82.1761 li
260.34 82.1761 li
260.34 81.6961 li
260.76 81.6961 li
260.76 80.7961 li
261.42 80.4361 li
261.42 81.6961 li
262.02 81.6961 li
262.02 82.1761 li
261.42 82.1761 li
261.42 84.2761 li
261.42 84.4561 261.42 84.5761 261.42 84.5761 cv
261.48 84.6361 261.48 84.6961 261.54 84.6961 cv
261.6 84.7561 261.66 84.7561 261.78 84.7561 cv
261.84 84.7561 261.9 84.7561 262.02 84.7561 cv
f
207.54 55.7161 mo
207.54 57.0961 206.46 58.1761 205.08 58.1761 cv
203.76 58.1761 202.68 57.0961 202.68 55.7161 cv
202.68 54.3961 203.76 53.256 205.08 53.256 cv
206.46 53.256 207.54 54.3961 207.54 55.7161 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 1 1 colr
f
207.18 55.7161 mo
207.18 56.8561 206.28 57.756 205.08 57.756 cv
203.94 57.756 202.98 56.8561 202.98 55.7161 cv
202.98 54.576 203.94 53.6161 205.08 53.6161 cv
206.28 53.6161 207.18 54.576 207.18 55.7161 cv
cp
207.9 55.7161 mo
207.9 54.2161 206.64 52.9561 205.08 52.9561 cv
203.52 52.9561 202.32 54.2161 202.32 55.7161 cv
202.32 57.2761 203.52 58.4761 205.08 58.4761 cv
206.64 58.4761 207.9 57.2761 207.9 55.7161 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 1 colr
f
202.5 69.9961 mo
202.5 64.9561 li
204.36 64.9561 li
204.72 64.9561 204.96 65.0161 205.14 65.0161 cv
205.38 65.0761 205.62 65.1361 205.74 65.2561 cv
205.92 65.3761 206.04 65.5561 206.16 65.7361 cv
206.28 65.9161 206.28 66.1561 206.28 66.3961 cv
206.28 66.8761 206.16 67.2361 205.92 67.4761 cv
205.62 67.7761 205.14 67.9561 204.42 67.9561 cv
203.16 67.9561 li
203.16 69.9961 li
202.5 69.9961 li
cp
203.16 67.3561 mo
204.42 67.3561 li
204.9 67.3561 205.2 67.2361 205.38 67.1161 cv
205.56 66.9361 205.62 66.7561 205.62 66.4561 cv
205.62 66.2161 205.56 66.0361 205.5 65.9161 cv
205.38 65.7961 205.2 65.6761 205.08 65.6161 cv
204.96 65.6161 204.72 65.5561 204.42 65.5561 cv
203.16 65.5561 li
203.16 67.3561 li
0 gry
f
206.58 69.9961 mo
208.5 64.9561 li
209.22 64.9561 li
211.26 69.9961 li
210.48 69.9961 li
209.94 68.4961 li
207.84 68.4961 li
207.3 69.9961 li
206.58 69.9961 li
cp
208.02 67.8961 mo
209.7 67.8961 li
209.22 66.5161 li
209.04 66.0961 208.92 65.7961 208.86 65.4961 cv
208.8 65.7961 208.68 66.1561 208.56 66.4561 cv
208.02 67.8961 li
f
213.06 69.9961 mo
213.06 65.5561 li
211.38 65.5561 li
211.38 64.9561 li
215.34 64.9561 li
215.34 65.5561 li
213.72 65.5561 li
213.72 69.9961 li
213.06 69.9961 li
f
202.2 76.5361 mo
202.8 76.4161 li
202.8 76.6561 202.92 76.8961 203.04 77.0161 cv
203.22 77.136 203.46 77.196 203.7 77.196 cv
204 77.196 204.24 77.136 204.36 77.0161 cv
204.48 76.8961 204.54 76.7761 204.54 76.5961 cv
204.54 76.4761 204.48 76.3561 204.36 76.2961 cv
204.3 76.2361 204.06 76.1761 203.76 76.0561 cv
203.28 75.9361 202.98 75.8761 202.8 75.756 cv
202.62 75.696 202.5 75.576 202.44 75.4561 cv
202.32 75.2761 202.26 75.1561 202.26 74.9761 cv
202.26 74.7961 202.32 74.6161 202.38 74.4961 cv
202.44 74.3761 202.56 74.256 202.68 74.196 cv
202.8 74.076 202.92 74.0161 203.1 74.0161 cv
203.22 73.9561 203.4 73.8961 203.64 73.8961 cv
203.88 73.8961 204.18 73.9561 204.36 74.0161 cv
204.54 74.136 204.72 74.256 204.84 74.3761 cv
204.96 74.4961 205.02 74.6761 205.02 74.9161 cv
204.42 75.0361 li
204.42 74.7961 204.3 74.6761 204.24 74.5561 cv
204.06 74.4361 203.88 74.4361 203.64 74.4361 cv
203.4 74.4361 203.16 74.4361 203.04 74.5561 cv
202.92 74.6761 202.86 74.7361 202.86 74.8561 cv
202.86 74.9761 202.86 75.0361 202.92 75.0961 cv
202.98 75.1561 203.04 75.2161 203.16 75.2761 cv
203.22 75.2761 203.4 75.3361 203.7 75.3961 cv
204.18 75.5161 204.48 75.636 204.6 75.696 cv
204.78 75.756 204.96 75.8761 205.02 75.9961 cv
205.14 76.1761 205.2 76.3561 205.2 76.5361 cv
205.2 76.7761 205.14 76.9561 205.02 77.136 cv
204.9 77.3161 204.72 77.4361 204.48 77.5561 cv
204.24 77.6161 204 77.6761 203.7 77.6761 cv
203.22 77.6761 202.86 77.6161 202.68 77.3761 cv
202.38 77.196 202.26 76.8961 202.2 76.5361 cv
cp
203.7 73.1761 mo
204.06 72.576 li
204.78 72.576 li
204 73.5361 li
203.34 73.5361 li
202.62 72.576 li
203.28 72.576 li
203.7 73.1761 li
f
205.92 77.6161 mo
205.92 72.6361 li
206.52 72.6361 li
206.52 75.4561 li
207.96 74.0161 li
208.8 74.0161 li
207.42 75.3361 li
208.92 77.6161 li
208.14 77.6161 li
207 75.7561 li
206.52 76.1761 li
206.52 77.6161 li
205.92 77.6161 li
f
209.16 75.8161 mo
209.16 75.1561 209.4 74.6161 209.76 74.3161 cv
210.06 74.0761 210.48 73.8961 210.9 73.8961 cv
211.38 73.8961 211.8 74.0761 212.1 74.3761 cv
212.4 74.7361 212.58 75.1561 212.58 75.7561 cv
212.58 76.2361 212.52 76.5961 212.4 76.8361 cv
212.22 77.1361 212.04 77.3161 211.8 77.4961 cv
211.5 77.6161 211.2 77.6761 210.9 77.6761 cv
210.42 77.6761 210 77.5561 209.64 77.1961 cv
209.34 76.8961 209.16 76.4161 209.16 75.8161 cv
cp
209.82 75.8161 mo
209.82 76.2361 209.94 76.5961 210.12 76.8361 cv
210.36 77.0761 210.6 77.1961 210.9 77.1961 cv
211.2 77.1961 211.44 77.0761 211.68 76.8361 cv
211.86 76.5961 211.98 76.2361 211.98 75.7561 cv
211.98 75.3361 211.86 74.9761 211.68 74.7361 cv
211.44 74.5561 211.2 74.4361 210.9 74.4361 cv
210.6 74.4361 210.36 74.5561 210.12 74.7361 cv
209.94 74.9761 209.82 75.3361 209.82 75.8161 cv
f
215.64 77.6161 mo
215.64 77.1361 li
215.4 77.4961 215.1 77.6761 214.68 77.6761 cv
214.38 77.6761 214.08 77.6161 213.84 77.4361 cv
213.6 77.3161 213.42 77.0761 213.3 76.7761 cv
213.18 76.4761 213.12 76.1761 213.12 75.8161 cv
213.12 75.4561 213.18 75.0961 213.3 74.7961 cv
213.42 74.4961 213.6 74.3161 213.78 74.1361 cv
214.08 74.0161 214.32 73.8961 214.62 73.8961 cv
214.86 73.8961 215.04 73.9561 215.22 74.0761 cv
215.34 74.1361 215.52 74.2561 215.64 74.3761 cv
215.64 72.6361 li
216.24 72.6361 li
216.24 77.6161 li
215.64 77.6161 li
cp
213.72 75.8161 mo
213.72 76.2961 213.84 76.5961 214.02 76.8361 cv
214.2 77.0761 214.44 77.1961 214.74 77.1961 cv
214.98 77.1961 215.22 77.0761 215.4 76.8961 cv
215.58 76.6561 215.64 76.2961 215.64 75.8761 cv
215.64 75.3961 215.58 74.9761 215.4 74.7961 cv
215.16 74.5561 214.98 74.4361 214.68 74.4361 cv
214.38 74.4361 214.2 74.5561 214.02 74.7361 cv
213.78 74.9761 213.72 75.3361 213.72 75.8161 cv
f
219.6 77.1361 mo
219.36 77.3761 219.12 77.4961 218.94 77.5561 cv
218.7 77.6761 218.46 77.6761 218.22 77.6761 cv
217.86 77.6761 217.56 77.6161 217.32 77.3761 cv
217.08 77.1961 217.02 76.9561 217.02 76.6561 cv
217.02 76.4761 217.02 76.2961 217.14 76.1761 cv
217.2 75.9961 217.32 75.8761 217.44 75.8161 cv
217.56 75.7561 217.74 75.6961 217.86 75.6361 cv
217.98 75.5761 218.16 75.5761 218.4 75.5161 cv
218.94 75.4561 219.3 75.3961 219.54 75.3361 cv
219.54 75.2161 219.54 75.1561 219.54 75.1561 cv
219.54 74.9161 219.48 74.7361 219.36 74.6161 cv
219.18 74.4961 218.94 74.4361 218.64 74.4361 cv
218.34 74.4361 218.16 74.4361 218.04 74.5561 cv
217.86 74.6761 217.8 74.8561 217.68 75.0961 cv
217.08 75.0361 li
217.14 74.7961 217.26 74.5561 217.38 74.3761 cv
217.5 74.2561 217.68 74.1361 217.92 74.0761 cv
218.16 73.9561 218.4 73.8961 218.76 73.8961 cv
219.06 73.8961 219.3 73.9561 219.48 74.0161 cv
219.72 74.0761 219.84 74.1961 219.9 74.3161 cv
220.02 74.3761 220.08 74.5561 220.08 74.7361 cv
220.14 74.7961 220.14 75.0361 220.14 75.2761 cv
220.14 76.1161 li
220.14 76.6561 220.14 77.0161 220.2 77.1961 cv
220.2 77.3161 220.26 77.4961 220.32 77.6161 cv
219.72 77.6161 li
219.66 77.4961 219.6 77.3161 219.6 77.1361 cv
cp
219.54 75.8161 mo
219.3 75.8761 218.94 75.9361 218.52 75.9961 cv
218.28 76.0561 218.1 76.1161 217.98 76.1761 cv
217.86 76.1761 217.8 76.2361 217.74 76.3561 cv
217.68 76.4161 217.68 76.5361 217.68 76.6561 cv
217.68 76.8361 217.74 76.9561 217.86 77.0761 cv
217.98 77.1361 218.16 77.1961 218.4 77.1961 cv
218.64 77.1961 218.82 77.1361 219 77.0761 cv
219.18 76.9561 219.36 76.8361 219.42 76.6561 cv
219.48 76.4761 219.54 76.2961 219.54 75.9961 cv
219.54 75.8161 li
f
202.44 85.2961 mo
202.44 81.6961 li
202.98 81.6961 li
202.98 82.1761 li
203.22 81.8161 203.64 81.5761 204.12 81.5761 cv
204.36 81.5761 204.54 81.6361 204.72 81.6961 cv
204.9 81.8161 205.02 81.8761 205.14 81.9961 cv
205.2 82.1761 205.32 82.2961 205.32 82.4761 cv
205.38 82.5961 205.38 82.7761 205.38 83.0761 cv
205.38 85.2961 li
204.72 85.2961 li
204.72 83.0761 li
204.72 82.8361 204.72 82.6561 204.66 82.5361 cv
204.6 82.4161 204.54 82.2961 204.42 82.2361 cv
204.3 82.1761 204.18 82.1161 204 82.1161 cv
203.76 82.1161 203.52 82.2361 203.34 82.3561 cv
203.1 82.5361 203.04 82.8361 203.04 83.3161 cv
203.04 85.2961 li
202.44 85.2961 li
f
206.46 85.2961 mo
207.18 85.2961 li
207.18 84.5761 li
206.46 84.5761 li
cp
f
210.6 85.2961 mo
210.6 84.8161 li
210.36 85.1761 210.06 85.3561 209.58 85.3561 cv
209.28 85.3561 209.04 85.2961 208.8 85.1161 cv
208.56 84.9961 208.38 84.7561 208.2 84.4561 cv
208.08 84.2161 208.02 83.8561 208.02 83.4961 cv
208.02 83.1361 208.08 82.8361 208.2 82.5361 cv
208.32 82.2361 208.5 81.9961 208.74 81.8161 cv
208.98 81.6961 209.28 81.5761 209.58 81.5761 cv
209.76 81.5761 210 81.6361 210.12 81.7561 cv
210.3 81.8161 210.48 81.9361 210.54 82.1161 cv
210.54 80.3161 li
211.14 80.3161 li
211.14 85.2961 li
210.6 85.2961 li
cp
208.68 83.4961 mo
208.68 83.9761 208.74 84.2761 208.92 84.5161 cv
209.16 84.7561 209.34 84.8761 209.64 84.8761 cv
209.94 84.8761 210.12 84.7561 210.36 84.5161 cv
210.48 84.3361 210.6 83.9761 210.6 83.5561 cv
210.6 83.0161 210.48 82.7161 210.3 82.4761 cv
210.12 82.2361 209.88 82.1161 209.64 82.1161 cv
209.34 82.1161 209.1 82.2361 208.92 82.4161 cv
208.74 82.6561 208.68 83.0161 208.68 83.4961 cv
f
214.62 84.1561 mo
215.22 84.2161 li
215.16 84.576 214.98 84.876 214.68 85.0561 cv
214.44 85.2961 214.08 85.3561 213.66 85.3561 cv
213.12 85.3561 212.7 85.2361 212.4 84.876 cv
212.04 84.576 211.92 84.0961 211.92 83.4961 cv
211.92 82.8961 212.1 82.4161 212.4 82.1161 cv
212.7 81.756 213.12 81.576 213.6 81.576 cv
214.08 81.576 214.5 81.756 214.8 82.1161 cv
215.1 82.4161 215.28 82.8961 215.28 83.4961 cv
215.28 83.4961 215.28 83.5561 215.22 83.6161 cv
212.58 83.6161 li
212.58 84.0361 212.7 84.3361 212.88 84.576 cv
213.12 84.756 213.36 84.876 213.66 84.876 cv
213.9 84.876 214.08 84.816 214.2 84.696 cv
214.38 84.576 214.5 84.3961 214.62 84.1561 cv
cp
212.58 83.136 mo
214.62 83.136 li
214.56 82.8361 214.5 82.5961 214.38 82.4761 cv
214.2 82.2361 213.9 82.1161 213.6 82.1161 cv
213.36 82.1161 213.12 82.1761 212.94 82.4161 cv
212.7 82.5961 212.64 82.8361 212.58 83.136 cv
f
216 85.2961 mo
216 81.6961 li
216.6 81.6961 li
216.6 82.1761 li
216.84 81.8161 217.2 81.5761 217.74 81.5761 cv
217.92 81.5761 218.16 81.6361 218.28 81.6961 cv
218.52 81.8161 218.64 81.8761 218.7 81.9961 cv
218.82 82.1761 218.88 82.2961 218.94 82.4761 cv
218.94 82.5961 218.94 82.7761 218.94 83.0761 cv
218.94 85.2961 li
218.34 85.2961 li
218.34 83.0761 li
218.34 82.8361 218.28 82.6561 218.28 82.5361 cv
218.22 82.4161 218.16 82.2961 218.04 82.2361 cv
217.92 82.1761 217.74 82.1161 217.56 82.1161 cv
217.32 82.1161 217.08 82.2361 216.9 82.3561 cv
216.72 82.5361 216.66 82.8361 216.66 83.3161 cv
216.66 85.2961 li
216 85.2961 li
f
219.66 83.4961 mo
219.66 82.8361 219.84 82.2961 220.2 81.9961 cv
220.56 81.7561 220.92 81.5761 221.4 81.5761 cv
221.88 81.5761 222.24 81.7561 222.6 82.0561 cv
222.9 82.4161 223.02 82.8361 223.02 83.4361 cv
223.02 83.9161 222.96 84.2761 222.84 84.5161 cv
222.72 84.8161 222.48 84.9961 222.24 85.1761 cv
221.94 85.2961 221.7 85.3561 221.4 85.3561 cv
220.86 85.3561 220.44 85.2361 220.14 84.8761 cv
219.84 84.5761 219.66 84.0961 219.66 83.4961 cv
cp
220.32 83.4961 mo
220.32 83.9761 220.38 84.2761 220.62 84.5161 cv
220.8 84.7561 221.04 84.8761 221.4 84.8761 cv
221.64 84.8761 221.94 84.7561 222.12 84.5161 cv
222.3 84.2761 222.42 83.9761 222.42 83.4361 cv
222.42 83.0161 222.3 82.7161 222.12 82.4761 cv
221.94 82.2361 221.64 82.1161 221.4 82.1161 cv
221.04 82.1161 220.8 82.2361 220.62 82.4761 cv
220.38 82.6561 220.32 83.0161 220.32 83.4961 cv
f
225.12 84.7561 mo
225.18 85.2961 li
225 85.3561 224.88 85.3561 224.76 85.3561 cv
224.52 85.3561 224.34 85.2961 224.22 85.2361 cv
224.1 85.1761 224.04 85.0561 223.98 84.9361 cv
223.92 84.8161 223.92 84.5761 223.92 84.2161 cv
223.92 82.1761 li
223.44 82.1761 li
223.44 81.6961 li
223.92 81.6961 li
223.92 80.7961 li
224.52 80.4361 li
224.52 81.6961 li
225.12 81.6961 li
225.12 82.1761 li
224.52 82.1761 li
224.52 84.2761 li
224.52 84.4561 224.52 84.5761 224.52 84.5761 cv
224.58 84.6361 224.58 84.6961 224.64 84.6961 cv
224.7 84.7561 224.76 84.7561 224.82 84.7561 cv
224.94 84.7561 225 84.7561 225.12 84.7561 cv
f
146.88 55.7161 mo
146.88 57.0961 145.8 58.1761 144.48 58.1761 cv
143.16 58.1761 142.08 57.0961 142.08 55.7161 cv
142.08 54.3961 143.16 53.256 144.48 53.256 cv
145.8 53.256 146.88 54.3961 146.88 55.7161 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 1 1 colr
f
146.58 55.7161 mo
146.58 56.8561 145.68 57.756 144.48 57.756 cv
143.28 57.756 142.38 56.8561 142.38 55.7161 cv
142.38 54.576 143.28 53.6161 144.48 53.6161 cv
145.68 53.6161 146.58 54.576 146.58 55.7161 cv
cp
147.3 55.7161 mo
147.3 54.2161 146.04 52.9561 144.48 52.9561 cv
142.92 52.9561 141.72 54.2161 141.72 55.7161 cv
141.72 57.2761 142.92 58.4761 144.48 58.4761 cv
146.04 58.4761 147.3 57.2761 147.3 55.7161 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 1 colr
f
141.9 69.9961 mo
141.9 64.9561 li
145.5 64.9561 li
145.5 65.5561 li
142.56 65.5561 li
142.56 67.1161 li
145.32 67.1161 li
145.32 67.6561 li
142.56 67.6561 li
142.56 69.3961 li
145.62 69.3961 li
145.62 69.9961 li
141.9 69.9961 li
0 gry
f
146.58 69.9961 mo
146.58 64.9561 li
149.94 64.9561 li
149.94 65.5561 li
147.24 65.5561 li
147.24 67.1161 li
149.58 67.1161 li
149.58 67.7161 li
147.24 67.7161 li
147.24 69.9961 li
146.58 69.9961 li
f
150.84 69.9961 mo
150.84 64.9561 li
154.2 64.9561 li
154.2 65.5561 li
151.5 65.5561 li
151.5 67.1161 li
153.84 67.1161 li
153.84 67.7161 li
151.5 67.7161 li
151.5 69.9961 li
150.84 69.9961 li
f
141.72 77.6761 mo
142.02 76.2361 li
141.42 76.2361 li
141.42 75.7561 li
142.08 75.7561 li
142.38 74.4961 li
141.42 74.4961 li
141.42 74.0161 li
142.44 74.0161 li
142.74 72.5161 li
143.28 72.5161 li
142.98 74.0161 li
144.06 74.0161 li
144.36 72.5161 li
144.84 72.5161 li
144.54 74.0161 li
145.14 74.0161 li
145.14 74.4961 li
144.48 74.4961 li
144.18 75.7561 li
145.14 75.7561 li
145.14 76.2361 li
144.12 76.2361 li
143.82 77.6761 li
143.28 77.6761 li
143.58 76.2361 li
142.5 76.2361 li
142.2 77.6761 li
141.72 77.6761 li
cp
142.62 75.7561 mo
143.7 75.7561 li
143.94 74.4961 li
142.86 74.4961 li
142.62 75.7561 li
f
145.8 77.6161 mo
145.8 72.6361 li
147.66 72.6361 li
147.96 72.6361 148.26 72.6361 148.44 72.6961 cv
148.68 72.6961 148.86 72.8161 149.04 72.8761 cv
149.22 72.9961 149.34 73.1761 149.46 73.3561 cv
149.52 73.5961 149.58 73.8361 149.58 74.0761 cv
149.58 74.4961 149.46 74.8561 149.16 75.1561 cv
148.92 75.4561 148.44 75.5761 147.72 75.5761 cv
146.4 75.5761 li
146.4 77.6161 li
145.8 77.6161 li
cp
146.4 74.9761 mo
147.72 74.9761 li
148.14 74.9761 148.44 74.9161 148.62 74.7361 cv
148.8 74.6161 148.92 74.3761 148.92 74.0761 cv
148.92 73.8961 148.86 73.7161 148.74 73.5361 cv
148.62 73.4161 148.5 73.2961 148.32 73.2361 cv
148.2 73.2361 148.02 73.1761 147.72 73.1761 cv
146.4 73.1761 li
146.4 74.9761 li
f
152.82 76.4761 mo
153.48 76.5361 li
153.36 76.8961 153.18 77.196 152.88 77.3761 cv
152.64 77.6161 152.28 77.6761 151.86 77.6761 cv
151.32 77.6761 150.96 77.5561 150.6 77.196 cv
150.3 76.8961 150.18 76.4161 150.18 75.8161 cv
150.18 75.2161 150.3 74.7361 150.6 74.4361 cv
150.96 74.076 151.32 73.8961 151.86 73.8961 cv
152.34 73.8961 152.7 74.076 153 74.3761 cv
153.36 74.7361 153.48 75.2161 153.48 75.8161 cv
153.48 75.8161 153.48 75.8761 153.48 75.9361 cv
150.78 75.9361 li
150.84 76.3561 150.96 76.6561 151.14 76.8961 cv
151.32 77.076 151.56 77.196 151.86 77.196 cv
152.1 77.196 152.28 77.136 152.46 77.0161 cv
152.64 76.8961 152.76 76.7161 152.82 76.4761 cv
cp
150.84 75.4561 mo
152.82 75.4561 li
152.82 75.1561 152.7 74.9161 152.64 74.7961 cv
152.4 74.5561 152.16 74.4361 151.86 74.4361 cv
151.56 74.4361 151.32 74.4961 151.14 74.6761 cv
150.96 74.9161 150.84 75.1561 150.84 75.4561 cv
f
154.2 77.6161 mo
154.2 74.0161 li
154.8 74.0161 li
154.8 74.5561 li
154.92 74.3161 155.04 74.1361 155.16 74.0161 cv
155.28 73.9561 155.46 73.8961 155.58 73.8961 cv
155.76 73.8961 156 74.0161 156.18 74.1361 cv
156 74.6761 li
155.82 74.6161 155.7 74.5561 155.52 74.5561 cv
155.4 74.5561 155.28 74.5561 155.16 74.6761 cv
155.1 74.7361 154.98 74.8561 154.98 74.9761 cv
154.86 75.2161 154.86 75.4561 154.86 75.7561 cv
154.86 77.6161 li
154.2 77.6161 li
f
156.3 76.5361 mo
156.96 76.4161 li
156.96 76.6561 157.08 76.8961 157.2 77.0161 cv
157.38 77.136 157.56 77.196 157.86 77.196 cv
158.16 77.196 158.34 77.136 158.52 77.0161 cv
158.64 76.8961 158.7 76.7761 158.7 76.5961 cv
158.7 76.4761 158.64 76.3561 158.52 76.2961 cv
158.46 76.2361 158.22 76.1761 157.92 76.0561 cv
157.44 75.9361 157.14 75.8761 156.96 75.756 cv
156.78 75.696 156.66 75.576 156.54 75.4561 cv
156.48 75.2761 156.42 75.1561 156.42 74.9761 cv
156.42 74.7961 156.48 74.6161 156.54 74.4961 cv
156.6 74.3761 156.72 74.256 156.84 74.196 cv
156.96 74.076 157.08 74.0161 157.26 74.0161 cv
157.38 73.9561 157.56 73.8961 157.74 73.8961 cv
158.04 73.8961 158.28 73.9561 158.52 74.0161 cv
158.76 74.136 158.88 74.256 159 74.3761 cv
159.06 74.4961 159.18 74.6761 159.18 74.9161 cv
158.58 75.0361 li
158.58 74.7961 158.52 74.6761 158.34 74.5561 cv
158.22 74.4361 158.04 74.4361 157.8 74.4361 cv
157.5 74.4361 157.32 74.4361 157.2 74.5561 cv
157.08 74.6761 157.02 74.7361 157.02 74.8561 cv
157.02 74.9761 157.08 75.0361 157.08 75.0961 cv
157.14 75.1561 157.26 75.2161 157.32 75.2761 cv
157.38 75.2761 157.56 75.3361 157.86 75.3961 cv
158.28 75.5161 158.64 75.636 158.82 75.696 cv
158.94 75.756 159.06 75.8761 159.18 75.9961 cv
159.3 76.1761 159.3 76.3561 159.3 76.5361 cv
159.3 76.7761 159.24 76.9561 159.12 77.136 cv
159 77.3161 158.88 77.4361 158.64 77.5561 cv
158.4 77.6161 158.16 77.6761 157.86 77.6761 cv
157.38 77.6761 157.08 77.6161 156.78 77.3761 cv
156.54 77.196 156.42 76.8961 156.3 76.5361 cv
f
160.14 77.6161 mo
160.14 72.6361 li
162 72.6361 li
162.36 72.6361 162.6 72.6361 162.78 72.6961 cv
163.02 72.6961 163.26 72.8161 163.44 72.8761 cv
163.56 72.9961 163.68 73.1761 163.8 73.3561 cv
163.92 73.5961 163.98 73.8361 163.98 74.0761 cv
163.98 74.4961 163.8 74.8561 163.56 75.1561 cv
163.26 75.4561 162.78 75.5761 162.06 75.5761 cv
160.8 75.5761 li
160.8 77.6161 li
160.14 77.6161 li
cp
160.8 74.9761 mo
162.06 74.9761 li
162.54 74.9761 162.84 74.9161 163.02 74.7361 cv
163.2 74.6161 163.26 74.3761 163.26 74.0761 cv
163.26 73.8961 163.2 73.7161 163.14 73.5361 cv
163.02 73.4161 162.9 73.2961 162.72 73.2361 cv
162.6 73.2361 162.36 73.1761 162.06 73.1761 cv
160.8 73.1761 li
160.8 74.9761 li
f
164.7 77.6161 mo
164.7 74.0161 li
165.24 74.0161 li
165.24 74.5561 li
165.42 74.3161 165.54 74.1361 165.66 74.0161 cv
165.78 73.9561 165.9 73.8961 166.08 73.8961 cv
166.26 73.8961 166.5 74.0161 166.68 74.1361 cv
166.5 74.6761 li
166.32 74.6161 166.2 74.5561 166.02 74.5561 cv
165.9 74.5561 165.78 74.5561 165.66 74.6761 cv
165.54 74.7361 165.48 74.8561 165.42 74.9761 cv
165.36 75.2161 165.3 75.4561 165.3 75.7561 cv
165.3 77.6161 li
164.7 77.6161 li
f
166.8 75.8161 mo
166.8 75.1561 166.98 74.6161 167.4 74.3161 cv
167.7 74.0761 168.06 73.8961 168.54 73.8961 cv
169.02 73.8961 169.44 74.0761 169.74 74.3761 cv
170.04 74.7361 170.22 75.1561 170.22 75.7561 cv
170.22 76.2361 170.16 76.5961 169.98 76.8361 cv
169.86 77.1361 169.68 77.3161 169.38 77.4961 cv
169.14 77.6161 168.84 77.6761 168.54 77.6761 cv
168 77.6761 167.58 77.5561 167.28 77.1961 cv
166.98 76.8961 166.8 76.4161 166.8 75.8161 cv
cp
167.46 75.8161 mo
167.46 76.2361 167.58 76.5961 167.76 76.8361 cv
167.94 77.0761 168.24 77.1961 168.54 77.1961 cv
168.84 77.1961 169.08 77.0761 169.26 76.8361 cv
169.5 76.5961 169.62 76.2361 169.62 75.7561 cv
169.62 75.3361 169.5 74.9761 169.26 74.7361 cv
169.08 74.5561 168.84 74.4361 168.54 74.4361 cv
168.24 74.4361 167.94 74.5561 167.76 74.7361 cv
167.58 74.9761 167.46 75.3361 167.46 75.8161 cv
f
170.94 77.6161 mo
170.94 74.0161 li
171.48 74.0161 li
171.48 74.4961 li
171.78 74.1361 172.14 73.8961 172.62 73.8961 cv
172.86 73.8961 173.04 73.9561 173.22 74.0161 cv
173.4 74.1361 173.58 74.1961 173.64 74.3161 cv
173.76 74.4361 173.82 74.6161 173.82 74.7961 cv
173.88 74.9161 173.88 75.0961 173.88 75.3961 cv
173.88 77.6161 li
173.28 77.6161 li
173.28 75.3961 li
173.28 75.1561 173.22 74.9761 173.16 74.8561 cv
173.16 74.7361 173.04 74.6161 172.98 74.5561 cv
172.8 74.4961 172.68 74.4361 172.5 74.4361 cv
172.26 74.4361 172.02 74.4961 171.84 74.6761 cv
171.66 74.8561 171.54 75.1561 171.54 75.6361 cv
171.54 77.6161 li
170.94 77.6161 li
f
141.78 85.2961 mo
141.78 81.6961 li
142.38 81.6961 li
142.38 82.1761 li
142.62 81.8161 143.04 81.5761 143.52 81.5761 cv
143.76 81.5761 143.94 81.6361 144.12 81.6961 cv
144.3 81.8161 144.42 81.8761 144.54 81.9961 cv
144.6 82.1761 144.72 82.2961 144.72 82.4761 cv
144.78 82.5961 144.78 82.7761 144.78 83.0761 cv
144.78 85.2961 li
144.12 85.2961 li
144.12 83.0761 li
144.12 82.8361 144.12 82.6561 144.06 82.5361 cv
144 82.4161 143.94 82.2961 143.82 82.2361 cv
143.7 82.1761 143.52 82.1161 143.4 82.1161 cv
143.16 82.1161 142.92 82.2361 142.74 82.3561 cv
142.5 82.5361 142.44 82.8361 142.44 83.3161 cv
142.44 85.2961 li
141.78 85.2961 li
f
145.86 85.2961 mo
146.58 85.2961 li
146.58 84.5761 li
145.86 84.5761 li
cp
f
147.66 86.6761 mo
147.66 81.6961 li
148.2 81.6961 li
148.2 82.1761 li
148.32 81.9361 148.44 81.8161 148.62 81.7561 cv
148.8 81.6361 148.98 81.5761 149.22 81.5761 cv
149.52 81.5761 149.82 81.6961 150.06 81.8161 cv
150.3 81.9961 150.48 82.2361 150.6 82.5361 cv
150.72 82.8361 150.78 83.1361 150.78 83.4361 cv
150.78 83.8561 150.72 84.1561 150.6 84.4561 cv
150.42 84.7561 150.24 84.9961 150 85.1161 cv
149.76 85.2961 149.46 85.3561 149.22 85.3561 cv
148.98 85.3561 148.8 85.3561 148.62 85.2361 cv
148.5 85.1761 148.32 85.0561 148.26 84.9361 cv
148.26 86.6761 li
147.66 86.6761 li
cp
148.2 83.4961 mo
148.2 83.9761 148.26 84.3361 148.44 84.5161 cv
148.68 84.7561 148.92 84.8761 149.16 84.8761 cv
149.46 84.8761 149.64 84.7561 149.88 84.5161 cv
150.06 84.2761 150.12 83.9161 150.12 83.4361 cv
150.12 83.0161 150.06 82.6561 149.88 82.4161 cv
149.64 82.1761 149.46 82.0561 149.22 82.0561 cv
148.92 82.0561 148.68 82.1761 148.5 82.4761 cv
148.26 82.7161 148.2 83.0161 148.2 83.4961 cv
f
151.5 85.2961 mo
151.5 81.6961 li
152.04 81.6961 li
152.04 82.2361 li
152.22 81.9961 152.34 81.8161 152.46 81.6961 cv
152.58 81.6361 152.7 81.5761 152.82 81.5761 cv
153.06 81.5761 153.24 81.6361 153.48 81.8161 cv
153.24 82.3561 li
153.12 82.2961 152.94 82.2361 152.82 82.2361 cv
152.64 82.2361 152.58 82.2961 152.46 82.3561 cv
152.34 82.4161 152.28 82.5361 152.22 82.7161 cv
152.16 82.8961 152.1 83.1361 152.1 83.3761 cv
152.1 85.2961 li
151.5 85.2961 li
f
153.6 83.4961 mo
153.6 82.8361 153.78 82.2961 154.2 81.9961 cv
154.5 81.7561 154.86 81.5761 155.34 81.5761 cv
155.82 81.5761 156.18 81.7561 156.54 82.0561 cv
156.84 82.4161 157.02 82.8361 157.02 83.4361 cv
157.02 83.9161 156.96 84.2761 156.78 84.5161 cv
156.66 84.8161 156.42 84.9961 156.18 85.1761 cv
155.88 85.2961 155.64 85.3561 155.34 85.3561 cv
154.8 85.3561 154.38 85.2361 154.08 84.8761 cv
153.78 84.5761 153.6 84.0961 153.6 83.4961 cv
cp
154.26 83.4961 mo
154.26 83.9761 154.32 84.2761 154.56 84.5161 cv
154.74 84.7561 154.98 84.8761 155.34 84.8761 cv
155.64 84.8761 155.88 84.7561 156.06 84.5161 cv
156.24 84.2761 156.36 83.9761 156.36 83.4361 cv
156.36 83.0161 156.24 82.7161 156.06 82.4761 cv
155.88 82.2361 155.64 82.1161 155.34 82.1161 cv
154.98 82.1161 154.74 82.2361 154.56 82.4761 cv
154.32 82.6561 154.26 83.0161 154.26 83.4961 cv
f
157.74 85.2961 mo
157.74 81.6961 li
158.28 81.6961 li
158.28 82.1761 li
158.52 81.8161 158.94 81.5761 159.42 81.5761 cv
159.66 81.5761 159.84 81.6361 160.02 81.6961 cv
160.2 81.8161 160.38 81.8761 160.44 81.9961 cv
160.5 82.1761 160.56 82.2961 160.62 82.4761 cv
160.62 82.5961 160.68 82.7761 160.68 83.0761 cv
160.68 85.2961 li
160.08 85.2961 li
160.08 83.0761 li
160.08 82.8361 160.02 82.6561 159.96 82.5361 cv
159.96 82.4161 159.84 82.2961 159.72 82.2361 cv
159.6 82.1761 159.48 82.1161 159.3 82.1161 cv
159 82.1161 158.82 82.2361 158.64 82.3561 cv
158.46 82.5361 158.34 82.8361 158.34 83.3161 cv
158.34 85.2961 li
157.74 85.2961 li
f
161.76 85.2961 mo
162.48 85.2961 li
162.48 84.5761 li
161.76 84.5761 li
cp
f
165.9 85.2961 mo
165.9 84.8161 li
165.66 85.1761 165.3 85.3561 164.88 85.3561 cv
164.58 85.3561 164.34 85.2961 164.1 85.1161 cv
163.86 84.9961 163.62 84.7561 163.5 84.4561 cv
163.38 84.2161 163.32 83.8561 163.32 83.4961 cv
163.32 83.1361 163.38 82.8361 163.5 82.5361 cv
163.62 82.2361 163.8 81.9961 164.04 81.8161 cv
164.28 81.6961 164.58 81.5761 164.88 81.5761 cv
165.06 81.5761 165.24 81.6361 165.42 81.7561 cv
165.6 81.8161 165.72 81.9361 165.84 82.1161 cv
165.84 80.3161 li
166.44 80.3161 li
166.44 85.2961 li
165.9 85.2961 li
cp
163.92 83.4961 mo
163.92 83.9761 164.04 84.2761 164.22 84.5161 cv
164.46 84.7561 164.7 84.8761 164.94 84.8761 cv
165.18 84.8761 165.42 84.7561 165.6 84.5161 cv
165.78 84.3361 165.9 83.9761 165.9 83.5561 cv
165.9 83.0161 165.78 82.7161 165.6 82.4761 cv
165.42 82.2361 165.18 82.1161 164.94 82.1161 cv
164.64 82.1161 164.4 82.2361 164.22 82.4161 cv
164.04 82.6561 163.92 83.0161 163.92 83.4961 cv
f
169.92 84.1561 mo
170.52 84.2161 li
170.46 84.576 170.22 84.876 169.98 85.0561 cv
169.74 85.2961 169.38 85.3561 168.96 85.3561 cv
168.42 85.3561 168 85.2361 167.7 84.876 cv
167.4 84.576 167.22 84.0961 167.22 83.4961 cv
167.22 82.8961 167.4 82.4161 167.7 82.1161 cv
168 81.756 168.42 81.576 168.9 81.576 cv
169.38 81.576 169.8 81.756 170.1 82.1161 cv
170.4 82.4161 170.58 82.8961 170.58 83.4961 cv
170.58 83.4961 170.58 83.5561 170.58 83.6161 cv
167.88 83.6161 li
167.88 84.0361 168 84.3361 168.18 84.576 cv
168.36 84.756 168.66 84.876 168.96 84.876 cv
169.2 84.876 169.38 84.816 169.5 84.696 cv
169.68 84.576 169.8 84.3961 169.92 84.1561 cv
cp
167.88 83.136 mo
169.92 83.136 li
169.86 82.8361 169.8 82.5961 169.68 82.4761 cv
169.5 82.2361 169.2 82.1161 168.9 82.1161 cv
168.6 82.1161 168.36 82.1761 168.24 82.4161 cv
168 82.5961 167.94 82.8361 167.88 83.136 cv
f
171.42 85.2961 mo
171.42 82.1761 li
170.94 82.1761 li
170.94 81.6961 li
171.42 81.6961 li
171.42 81.2761 li
171.42 81.0361 171.48 80.8561 171.48 80.7361 cv
171.54 80.6161 171.66 80.4361 171.84 80.3761 cv
171.96 80.2561 172.2 80.1961 172.44 80.1961 cv
172.62 80.1961 172.8 80.2561 173.04 80.2561 cv
172.92 80.7961 li
172.8 80.7961 172.68 80.7961 172.56 80.7961 cv
172.38 80.7961 172.26 80.7961 172.2 80.9161 cv
172.08 80.9761 172.08 81.1561 172.08 81.3361 cv
172.08 81.6961 li
172.8 81.6961 li
172.8 82.1761 li
172.08 82.1761 li
172.08 85.2961 li
171.42 85.2961 li
f
173.4 85.2961 mo
174.12 85.2961 li
174.12 84.5761 li
173.4 84.5761 li
cp
f
175.2 86.6761 mo
175.2 81.6961 li
175.74 81.6961 li
175.74 82.1761 li
175.86 81.9361 176.04 81.8161 176.16 81.7561 cv
176.34 81.6361 176.58 81.5761 176.82 81.5761 cv
177.12 81.5761 177.36 81.6961 177.6 81.8161 cv
177.84 81.9961 178.02 82.2361 178.14 82.5361 cv
178.26 82.8361 178.32 83.1361 178.32 83.4361 cv
178.32 83.8561 178.26 84.1561 178.14 84.4561 cv
177.96 84.7561 177.78 84.9961 177.54 85.1161 cv
177.3 85.2961 177.06 85.3561 176.76 85.3561 cv
176.52 85.3561 176.34 85.3561 176.22 85.2361 cv
176.04 85.1761 175.92 85.0561 175.8 84.9361 cv
175.8 86.6761 li
175.2 86.6761 li
cp
175.74 83.4961 mo
175.74 83.9761 175.86 84.3361 176.04 84.5161 cv
176.22 84.7561 176.46 84.8761 176.7 84.8761 cv
177 84.8761 177.24 84.7561 177.42 84.5161 cv
177.6 84.2761 177.72 83.9161 177.72 83.4361 cv
177.72 83.0161 177.6 82.6561 177.42 82.4161 cv
177.24 82.1761 177 82.0561 176.76 82.0561 cv
176.46 82.0561 176.22 82.1761 176.04 82.4761 cv
175.86 82.7161 175.74 83.0161 175.74 83.4961 cv
f
181.56 84.1561 mo
182.16 84.2161 li
182.1 84.576 181.92 84.876 181.62 85.0561 cv
181.32 85.2961 181.02 85.3561 180.6 85.3561 cv
180.06 85.3561 179.64 85.2361 179.34 84.876 cv
179.04 84.576 178.86 84.0961 178.86 83.4961 cv
178.86 82.8961 179.04 82.4161 179.34 82.1161 cv
179.64 81.756 180.06 81.576 180.54 81.576 cv
181.02 81.576 181.44 81.756 181.74 82.1161 cv
182.04 82.4161 182.22 82.8961 182.22 83.4961 cv
182.22 83.4961 182.22 83.5561 182.22 83.6161 cv
179.46 83.6161 li
179.52 84.0361 179.64 84.3361 179.82 84.576 cv
180.06 84.756 180.3 84.876 180.6 84.876 cv
180.78 84.876 181.02 84.816 181.14 84.696 cv
181.32 84.576 181.44 84.3961 181.56 84.1561 cv
cp
179.52 83.136 mo
181.56 83.136 li
181.5 82.8361 181.44 82.5961 181.32 82.4761 cv
181.14 82.2361 180.84 82.1161 180.54 82.1161 cv
180.3 82.1161 180.06 82.1761 179.82 82.4161 cv
179.64 82.5961 179.52 82.8361 179.52 83.136 cv
f
182.94 85.2961 mo
182.94 81.6961 li
183.48 81.6961 li
183.48 82.2361 li
183.66 81.9961 183.78 81.8161 183.9 81.6961 cv
184.02 81.6361 184.14 81.5761 184.26 81.5761 cv
184.5 81.5761 184.68 81.6361 184.92 81.8161 cv
184.68 82.3561 li
184.56 82.2961 184.38 82.2361 184.26 82.2361 cv
184.08 82.2361 183.96 82.2961 183.9 82.3561 cv
183.78 82.4161 183.72 82.5361 183.66 82.7161 cv
183.6 82.8961 183.54 83.1361 183.54 83.3761 cv
183.54 85.2961 li
182.94 85.2961 li
f
185.04 84.2161 mo
185.64 84.1561 li
185.64 84.3361 185.76 84.5161 185.94 84.696 cv
186.06 84.816 186.3 84.876 186.6 84.876 cv
186.84 84.876 187.08 84.816 187.2 84.696 cv
187.32 84.576 187.38 84.4561 187.38 84.2761 cv
187.38 84.1561 187.32 84.0361 187.2 83.9761 cv
187.14 83.9161 186.96 83.8561 186.6 83.7361 cv
186.12 83.6761 185.82 83.5561 185.64 83.4961 cv
185.46 83.376 185.34 83.256 185.28 83.136 cv
185.16 82.9561 185.16 82.8361 185.16 82.6561 cv
185.16 82.4761 185.16 82.3561 185.22 82.1761 cv
185.34 82.0561 185.4 81.936 185.52 81.816 cv
185.64 81.756 185.76 81.696 185.94 81.636 cv
186.12 81.636 186.3 81.576 186.48 81.576 cv
186.78 81.576 187.02 81.636 187.2 81.696 cv
187.44 81.816 187.56 81.936 187.68 82.0561 cv
187.8 82.1761 187.86 82.3561 187.92 82.5961 cv
187.26 82.7161 li
187.26 82.5361 187.2 82.3561 187.02 82.2361 cv
186.96 82.1761 186.78 82.1161 186.48 82.1161 cv
186.24 82.1161 186 82.1761 185.88 82.2361 cv
185.76 82.3561 185.7 82.4761 185.7 82.5961 cv
185.7 82.6561 185.76 82.7161 185.82 82.7761 cv
185.82 82.8361 185.94 82.8961 186 82.9561 cv
186.12 82.9561 186.3 83.0161 186.6 83.076 cv
187.02 83.196 187.32 83.316 187.5 83.376 cv
187.68 83.436 187.8 83.5561 187.86 83.7361 cv
187.98 83.8561 188.04 84.0361 188.04 84.2161 cv
188.04 84.4561 187.98 84.636 187.86 84.816 cv
187.74 84.9961 187.56 85.1161 187.32 85.2361 cv
187.08 85.3561 186.84 85.3561 186.6 85.3561 cv
186.12 85.3561 185.76 85.2961 185.46 85.0561 cv
185.28 84.876 185.1 84.576 185.04 84.2161 cv
f
309.24 15.3961 mo
309.24 16.7161 308.16 17.7961 306.78 17.7961 cv
305.46 17.7961 304.38 16.7161 304.38 15.3961 cv
304.38 14.0161 305.46 12.936 306.78 12.936 cv
308.16 12.936 309.24 14.0161 309.24 15.3961 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 1 1 colr
f
308.88 15.3961 mo
308.88 16.4761 307.98 17.436 306.78 17.436 cv
305.64 17.436 304.68 16.4761 304.68 15.3961 cv
304.68 14.196 305.64 13.2961 306.78 13.2961 cv
307.98 13.2961 308.88 14.196 308.88 15.3961 cv
cp
309.6 15.3961 mo
309.6 13.8361 308.34 12.576 306.78 12.576 cv
305.28 12.576 304.02 13.8361 304.02 15.3961 cv
304.02 16.8961 305.28 18.0961 306.78 18.0961 cv
308.34 18.0961 309.6 16.8961 309.6 15.3961 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 1 colr
f
304.2 29.6161 mo
304.2 24.6361 li
306.06 24.6361 li
306.42 24.6361 306.66 24.6361 306.84 24.6361 cv
307.08 24.6961 307.32 24.7561 307.44 24.8761 cv
307.62 24.9961 307.74 25.1761 307.86 25.3561 cv
307.98 25.5961 307.98 25.8361 307.98 26.0761 cv
307.98 26.4961 307.86 26.8561 307.62 27.1561 cv
307.32 27.4561 306.84 27.5761 306.12 27.5761 cv
304.86 27.5761 li
304.86 29.6161 li
304.2 29.6161 li
cp
304.86 26.9761 mo
306.12 26.9761 li
306.6 26.9761 306.9 26.9161 307.08 26.7361 cv
307.26 26.6161 307.32 26.3761 307.32 26.0761 cv
307.32 25.8961 307.26 25.7161 307.2 25.5361 cv
307.08 25.4161 306.9 25.2961 306.78 25.2361 cv
306.66 25.2361 306.42 25.1761 306.12 25.1761 cv
304.86 25.1761 li
304.86 26.9761 li
0 gry
f
308.88 29.6161 mo
308.88 24.6361 li
311.04 24.6361 li
311.52 24.6361 311.88 24.6361 312.06 24.7561 cv
312.3 24.8161 312.48 24.9961 312.66 25.2361 cv
312.78 25.4761 312.84 25.7161 312.84 25.9561 cv
312.84 26.3161 312.72 26.6161 312.48 26.8561 cv
312.24 27.0961 311.94 27.2761 311.46 27.3361 cv
311.64 27.4561 311.76 27.5161 311.82 27.5761 cv
312.06 27.7561 312.18 27.9961 312.36 28.2361 cv
313.26 29.6161 li
312.42 29.6161 li
311.76 28.5961 li
311.58 28.2961 311.4 28.0561 311.28 27.8761 cv
311.16 27.6961 311.04 27.5761 310.92 27.5161 cv
310.86 27.4561 310.74 27.4561 310.62 27.3961 cv
310.56 27.3961 310.44 27.3961 310.26 27.3961 cv
309.54 27.3961 li
309.54 29.6161 li
308.88 29.6161 li
cp
309.54 26.7961 mo
310.92 26.7961 li
311.22 26.7961 311.46 26.7961 311.64 26.7361 cv
311.82 26.6761 311.94 26.5561 312.06 26.4361 cv
312.12 26.2561 312.18 26.1361 312.18 25.9561 cv
312.18 25.7161 312.06 25.5361 311.94 25.4161 cv
311.76 25.2361 311.46 25.1761 311.1 25.1761 cv
309.54 25.1761 li
309.54 26.7961 li
f
313.86 29.6161 mo
313.86 24.6361 li
317.52 24.6361 li
317.52 25.1761 li
314.58 25.1761 li
314.58 26.7361 li
317.34 26.7361 li
317.34 27.3361 li
314.58 27.3361 li
314.58 29.0161 li
317.64 29.0161 li
317.64 29.6161 li
313.86 29.6161 li
f
318.54 29.6161 mo
318.54 24.6361 li
320.22 24.6361 li
320.64 24.6361 320.94 24.6361 321.12 24.6961 cv
321.42 24.7561 321.66 24.8761 321.84 25.0561 cv
322.14 25.2361 322.32 25.5361 322.44 25.8961 cv
322.62 26.2561 322.68 26.6161 322.68 27.0961 cv
322.68 27.4561 322.62 27.8161 322.5 28.1161 cv
322.44 28.3561 322.32 28.6561 322.2 28.8361 cv
322.02 29.0161 321.9 29.1361 321.72 29.2561 cv
321.54 29.3761 321.36 29.4361 321.12 29.4961 cv
320.88 29.5561 320.64 29.6161 320.34 29.6161 cv
318.54 29.6161 li
cp
319.2 29.0161 mo
320.22 29.0161 li
320.58 29.0161 320.82 28.9561 321.06 28.8961 cv
321.24 28.8961 321.36 28.7761 321.48 28.6561 cv
321.6 28.5361 321.72 28.2961 321.84 28.0561 cv
321.9 27.7561 321.96 27.4561 321.96 27.0961 cv
321.96 26.5561 321.9 26.1361 321.72 25.8961 cv
321.54 25.5961 321.36 25.4161 321.12 25.2961 cv
320.94 25.2361 320.64 25.1761 320.22 25.1761 cv
319.2 25.1761 li
319.2 29.0161 li
f
305.1 37.2961 mo
303.72 33.6961 li
304.38 33.6961 li
305.16 35.8561 li
305.28 36.0361 305.34 36.3361 305.4 36.5761 cv
305.46 36.3961 305.52 36.1561 305.64 35.8561 cv
306.42 33.6961 li
307.08 33.6961 li
305.7 37.2961 li
305.1 37.2961 li
f
307.62 38.6761 mo
307.5 38.0761 li
307.68 38.1361 307.8 38.1361 307.86 38.1361 cv
308.04 38.1361 308.1 38.1361 308.22 38.0761 cv
308.28 38.0161 308.34 37.9561 308.4 37.8961 cv
308.46 37.8361 308.52 37.6561 308.58 37.4161 cv
308.64 37.4161 308.64 37.3561 308.64 37.2961 cv
307.26 33.6961 li
307.92 33.6961 li
308.7 35.7961 li
308.82 36.0361 308.88 36.2761 308.94 36.5761 cv
309 36.3361 309.12 36.0361 309.18 35.7961 cv
309.96 33.6961 li
310.56 33.6961 li
309.24 37.3561 li
309.06 37.7161 308.94 38.0161 308.88 38.1961 cv
308.76 38.3761 308.64 38.4961 308.52 38.6161 cv
308.34 38.7361 308.22 38.7361 307.98 38.7361 cv
307.86 38.7361 307.74 38.7361 307.62 38.6761 cv
f
313.5 35.9761 mo
314.1 36.0361 li
314.04 36.4561 313.86 36.7561 313.62 36.9961 cv
313.32 37.2361 313.02 37.3561 312.6 37.3561 cv
312.12 37.3561 311.7 37.2361 311.4 36.8761 cv
311.1 36.576 310.92 36.0961 310.92 35.4961 cv
310.92 35.076 311.04 34.7761 311.16 34.4761 cv
311.28 34.1761 311.46 33.9361 311.76 33.8161 cv
312 33.636 312.3 33.576 312.6 33.576 cv
313.02 33.576 313.32 33.696 313.56 33.8761 cv
313.8 34.1161 313.98 34.3561 314.04 34.7161 cv
313.44 34.8361 li
313.38 34.5961 313.32 34.4161 313.14 34.2961 cv
313.02 34.1761 312.84 34.1161 312.6 34.1161 cv
312.3 34.1161 312.06 34.2361 311.88 34.4161 cv
311.7 34.6561 311.58 35.0161 311.58 35.4961 cv
311.58 35.9761 311.7 36.3361 311.88 36.5161 cv
312.06 36.7561 312.3 36.8761 312.6 36.8761 cv
312.84 36.8761 313.02 36.8161 313.2 36.636 cv
313.38 36.5161 313.44 36.2761 313.5 35.9761 cv
cp
312.6 32.8561 mo
312.96 32.2561 li
313.68 32.2561 li
312.9 33.2161 li
312.24 33.2161 li
311.52 32.2561 li
312.18 32.2561 li
312.6 32.8561 li
f
315.48 37.2961 mo
314.88 37.2961 li
314.88 33.6961 li
315.48 33.6961 li
cp
314.88 37.2961 mo
cp
314.82 33.2161 mo
315.3 32.2561 li
316.08 32.2561 li
315.36 33.2161 li
314.82 33.2161 li
f
316.32 36.2161 mo
316.92 36.0961 li
316.98 36.3361 317.1 36.5161 317.22 36.696 cv
317.4 36.816 317.58 36.876 317.88 36.876 cv
318.18 36.876 318.36 36.816 318.48 36.696 cv
318.66 36.576 318.72 36.4561 318.72 36.2761 cv
318.72 36.1561 318.66 36.0361 318.54 35.9761 cv
318.42 35.9161 318.24 35.8561 317.94 35.7361 cv
317.46 35.6761 317.16 35.5561 316.98 35.436 cv
316.8 35.376 316.68 35.256 316.56 35.136 cv
316.5 34.9561 316.44 34.7761 316.44 34.5961 cv
316.44 34.4761 316.5 34.3561 316.56 34.1761 cv
316.62 34.0561 316.74 33.936 316.86 33.816 cv
316.92 33.756 317.1 33.696 317.22 33.636 cv
317.4 33.636 317.58 33.576 317.76 33.576 cv
318.06 33.576 318.3 33.636 318.54 33.696 cv
318.72 33.816 318.9 33.876 319.02 34.0561 cv
319.08 34.1761 319.2 34.3561 319.2 34.5961 cv
318.6 34.6561 li
318.6 34.5361 318.48 34.3561 318.36 34.2361 cv
318.24 34.1761 318.06 34.1161 317.82 34.1161 cv
317.52 34.1161 317.34 34.1161 317.22 34.2361 cv
317.1 34.3561 317.04 34.4161 317.04 34.5361 cv
317.04 34.6561 317.04 34.7161 317.1 34.7761 cv
317.16 34.8361 317.22 34.8961 317.34 34.9561 cv
317.4 34.9561 317.58 35.0161 317.88 35.076 cv
318.36 35.196 318.6 35.316 318.78 35.376 cv
318.96 35.436 319.08 35.5561 319.2 35.6761 cv
319.32 35.8561 319.38 35.9761 319.38 36.2161 cv
319.38 36.3961 319.32 36.636 319.2 36.816 cv
319.02 36.9961 318.9 37.1161 318.66 37.2361 cv
318.42 37.3561 318.18 37.3561 317.88 37.3561 cv
317.4 37.3561 317.04 37.2961 316.8 37.0561 cv
316.56 36.876 316.44 36.576 316.32 36.2161 cv
f
320.04 37.2961 mo
320.7 37.2961 li
320.7 32.3161 li
320.04 32.3161 li
cp
f
322.26 33.0361 mo
321.6 33.0361 li
321.6 32.3161 li
322.26 32.3161 li
cp
321.6 33.0361 mo
cp
322.26 37.2961 mo
321.6 37.2961 li
321.6 33.696 li
322.26 33.696 li
cp
f
324.54 36.7561 mo
324.6 37.2961 li
324.42 37.2961 324.3 37.3561 324.12 37.3561 cv
323.94 37.3561 323.76 37.2961 323.64 37.2361 cv
323.52 37.1761 323.4 37.0561 323.34 36.9361 cv
323.28 36.8161 323.28 36.5761 323.28 36.2161 cv
323.28 34.1761 li
322.86 34.1761 li
322.86 33.6961 li
323.28 33.6961 li
323.28 32.7961 li
323.88 32.4361 li
323.88 33.6961 li
324.54 33.6961 li
324.54 34.1761 li
323.88 34.1761 li
323.88 36.2761 li
323.88 36.4561 323.88 36.5761 323.94 36.5761 cv
323.94 36.6361 324 36.6961 324.06 36.6961 cv
324.06 36.7561 324.18 36.7561 324.24 36.7561 cv
324.3 36.7561 324.42 36.7561 324.54 36.7561 cv
f
305.1 44.9161 mo
303.72 41.3161 li
304.38 41.3161 li
305.16 43.4761 li
305.28 43.7161 305.34 43.9561 305.4 44.1961 cv
305.46 44.0161 305.52 43.7761 305.64 43.5361 cv
306.42 41.3161 li
307.08 41.3161 li
305.7 44.9161 li
305.1 44.9161 li
f
320.4 17.7361 mo
408.12 17.7361 li
408.12 -2.96393 li
320.4 -2.96393 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
gsave
327.6 10.1161 mo
333 10.1161 li
333 .636108 li
327.6 .636108 li
cp
clp
0 gry
true set_gvm
%ADOBeginSubsetFont: CourierNewPSMT Initial
ct_T42Dict begin
-0.02 -0.68 0.637 1.02
 256 array 0 1 255 {1 index exch /.notdef put} for  /CourierNewPSMT
Type42DictBegin
[<00010000000c000c000c000c4f532f320d03304d000000cc000000566376
7420a5a561f100000124000007826670676db1123632000008a8000005d8
676c79661d89a99400004f3c0003c08668656164c4fb297800000e800000
0036686865610b7b023c00000eb800000024686d7478d300af5900000edc
00000a526c6f63610ada78d6000019300000149c6d617870097c0c780000
2dcc000000206e616d650bae33ce00002dec0000169c70726570bca08f1f
0000448800000ab167646972000000000000000000000000000104cd0190
00050000059a05330000011d059a05330000036100660212050502070309
02020502040400007a878000000000000008000000004d6f6e6f00400020
fffc04e7fe7e000006a90267400001ffffff0000000004e700000492001b
04e7001e0362001e0000ffdf0000ffdf0000ffe2fe7e000004e70000fefd
ffff02d70000005400000054000000000000000000540054009500540054
0054014d005400540054006400d4006d009100970054013301ce00a90040
000f005400d4000301000158003c0093007700d50055fff10054002100a3
00ef002c00390068fffe0011007f00fe017d00a301020002000f003800d3
00650090023c032b04eb0001002a013003ab0182002d003c005400960017
00cf0158002aff0a003c00b3021d023c0002005400cb035f082cff30fff2
01c004c9ff6200a2013c02d604ae00cc00ed01220400fe83ff8bff9bff9c
000e00f4031dfdc3ff31ff6d0054005500600075007c007f0080009e00cd
0159023d02bfff89001100580065007f00b700cb012b0400046000120052
00550084009800b900be00cf00d800e50101010f0128018001d301d40500
fdc4fec4ff49ff62ff6f0045004e00500080010f011d01250141025a035a
03ad03d7fde3fee0ff1e0011005400760078007b008f009000ab00d700d9
00db0103020a0254025503ad001b003d005a006200910093009e00a900c9
00df01080134013a0140018601ac02760403fdc400030004001500390048
005400640091009b00a300a500af00c400d000d100d700f100fe01030119
012b0155015c017d0185018e019401a501ac01ae01eb020502d803030381
04c604ebfed6ff0aff9affa9001b001b001c00200029002c0038004c006d
00cd00ea0128012a012c013f01d2022b022c0301040cfdfefe33ff47ff7f
ffc5ffd7002300270038003d00440045004d005700620079008300bb00c6
00cd00cd00ce00e600f701010103010a0112011d01200123015201530175
01ac01ad01ef01fd0216021d0238026c02b202d4032b03cd045704aefdb4
fe15feb2feeffeffffabffb0ffc3ffcc000200540036003800430055005d
00700073007c007f00b500bb00c500e400e900f501010106011f01280148
014b0155019801ac01df01fc02000208027e02ac02ff033d039003c90419
0498fe4efe6dfe98feb3ff34ff4d000100030005001900340034003a003c
0055005900730082009100a300aa00ab00b300cc00d600ee0118011e0130
01490156015801600168016f01700171017b017c018501a901b401bb01d6
01db01ee020402060215022b022b02630282029302b402c402d602e40300
035303580371037b039303b403d003e80410042c0430044d04600479047a
05000503061608ccfc17fc6dfd62fd9afdc3fe2efe44fe6bfe8bfec1fed6
fee2ff0bffbfffe500060030003c005900670073007d007f0086008e009f
00a900aa00d600e100e700eb00f100f200f501030109011a011e011f012c
013f01430149014d015601570159016601660168016a0175018001ab01b2
01bc01c001c101c901cb01d201dc01ef02010215022e022e023b023d0255
02660282029a02ab02b002d902d902f502f90326032c03320333033e0360
0371038703880393039703dc03e50402041504310453047f04c705030564
0596059b05c405c805ea0610065b00540054005400540000000000000000
0000000003cc02c1043e036c00a00050020303ea02d2023c017d02fb01a7
021d01c102f5021d035003500243023b000201bb0048006d0014079b0621
0621021400100760000000000299022d03570426030c007400500000025a
0286026000a601bc00fb02480152017603cd02a0025f039b0492043e01d7
007f02c10400020d01f600410041013e01a901d3007102d6022d03af04ce
00000000050803fc056d020dff8704e7050203d20000043d010203ca015a
01ed0150021601c1013b028e0023015a011001ed00230149003900d9004d
00b90157003804e0038c024a02db0039006c009301c103cc02bb006c02bb
01a200f2003800fe01720150019c0331007e017100540039006a02940022
02700222007c005500f30182011500d700fb01ab012402660004030d0263
00d40259003c00d00112022e017e0034006d008b018a002c01fd01c000cc
02910036016503befc19fd280201fced01b1034800b101fb04c904c90204
00fb01c1021d01300108014000e100a3009b005500c60021032600a90038
0005022c0003005d0060004c001102f5017c026c0069019803e901a50241
004f0065037302460196fef504410333004100ba0119014306390800053c
051d0434041504e7003e006700670000066804df05820067006703d303f4
ff59ff21fe5f050efedc007a00d9004800db018b00b3004800da0116015e
015104ff024b04ffff5600ab02af04dcff17010c012100d1ff300149feb5
013c0124ff200171ff0b01510086005e06a9fd99048b04850475047c0000
fffb007b00860092009a00c200d500a4001e00270039004c0054005c0062
0069002d0030003200350038003e004200440049004c00500056005a0060
00640066006e00710078009d00ac00b10040004b0055005e00620066006a
007100730077007b007e00820087008c0091009600a600d102aa029f0321
028802c50276026900da00da03c70340015600d40489047f005300240051
011300690037003c001f008c008cffd3005a0029001b010f0134007f0054
0054ffebffd6ffa8fdcf00a600a600920092064200eb0643000040415440
3f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827262524232221
201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09080706050403
0201002c4523466020b02660b004262348482d2c452346236120b02661b0
04262348482d2c45234660b0206120b04660b004262348482d2c45234623
61b0206020b02661b02061b004262348482d2c45234660b0406120b06660
b004262348482d2c4523462361b0406020b02661b04061b004262348482d
2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d442359
20b0ed51582320b04d44235920b09051582320b00d44235921212d2c2020
4518684420b001602045b04676688a4560442d2c01b10b0a432343650a2d
2c00b10a0b4323430b2d2c00b0172370b101173e01b0172370b10217453a
b10200080d2d2c45b01a234445b01923442d2c2045b00325456164b05051
5845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360
442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb810
0062602b0c642364615c58b00361592d2c45b0112bb0172344b0177ae418
2d2c45b0112bb01723442d2cb01243588745b0112bb0172344b0177ae41b
038a45186920b01723448a8a8720b0a05158b0112bb0172344b0177ae41b
21b0177ae45959182d2c2d2cb0022546608a46b040618c482d2c4b53205c
58b002855958b00185592d2c20b0032545b019234445b01a234445652345
20b00325606a20b009234223688a6a606120b01a8ab000527921b21a1a40
b9ffe0001a45208a54582321b03f1b235961441cb114008a5279b3194020
1945208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f43
23430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343
650b2d2cb11011432343650b2d2c4b525845441b2121592d2c0120b00325
2349b04060b0206320b000525823b002253823b002256538008a63381b21
2121212159012d2c4bb06451584569b00943608a103a1b212121592d2c01
b005251023208af500b0016023edec2d2c01b005251023208af500b00161
23edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b0
01610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb0
2a2a2d2c352d2c76b8026923701020b802694520b0005058b00161593a2f
182d2c21210c6423648bb84000622d2c21b08051580c6423648bb8200062
1bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb20080
2f2b59b002602d2c0c6423648bb84000626023212d2cb4000100000015b0
0826b00826b00826b008260f10161345683ab001162d2cb4000100000015
b00826b00826b00826b008260f1016134568653ab001162d2c4b53234b51
5a5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b5323
4b515a58381b2121592d2c4b5458381b2121592d2cb0134358031b02592d
2cb0134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c
580cb00425b00425060c6423646164b807085158b00425b00425012046b0
1060482046b0106048590a21211b2121592d2cb012435c580cb00425b004
25060c6423646164b807085158b00425b00425012046b8fff060482046b8
fff06048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c
4b53234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b
2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121
592d2c462346608a8a462320468a608a61b8ff8062232010238ab9032603
268a70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2c
b1020042b123018851b1400188535a58b910000020885458b20201024360
4259b12401885158b920000040885458b202020243604259b12401885458
b2022002436042004b014b5258b2020802436042591bb940000080885458
b202040243604259b94000008063b80100885458b202080243604259b940
00010063b80200885458b2021002436042595959592d000100000002e666
77a0537b5f0f3cf50809080000000000a325516100000000b5c9a9f7ffd4
fa90051a082b0000000900010001000000000001000006a9fd99000004cd
ffd4ffd204fb00010000000000000000000000000000000304cd00670000
000004cd0000000001eb010a00bb00e400bb00fe01e1025d012d00e20090
012b00ba01cd00e600e500e400ab00c300d600c4011200d300e7011301cd
0138006200650094011300d700110057007f009e0058009f0080006b00e5
00ab005900800018002e006800b30068005800b9008f0053001000250050
006300d5023d00e3013c00e4000001bc0090002d00ab007e008000d7007d
005500bd00b400bf00bb0015006c0091002d008000ab00cf0092005b003b
00380065009500ed0195023c019400bb00110011007f0058002e00680053
00900090009000900090009000ab008000800080008000ba00ba00ba00ba
006c00910091009100910091005b005b005b005b00fc015100e4007c008f
016f00ab005900000000000401bb013f006500120050006d009000620094
0062005a00b0002b003600a700e101280126003d0010007000e601eb0018
008900b100bb00530063007f0065001100110068001100120091fff100b3
00db01fd01250090009b0095006300670007006b0254000e001300fb01cd
012b00e0003d0011005800110058005800e500e500e500e5000000680000
00530053005300ba013c0128013c013a020001b101ba013b01d4013c0056
00bb00b900cf00d500ed023cfffd00810063009500b3002d0090010e0176
01550163000000000000009f0080007d00e500b900cf007f00ab007f00ab
007effe502c40011009000110090009e007efffd00580080005800800080
00bb008000bb008000bb002e006c002e006c00680091005800ab005800ab
00b900cf008f0092008f00920053005b0053005b00d500ed00d500ed007f
0067005a006200b5011b009800d0007bffe50112011b000e0002017d0002
017d0002017d017d000200a9006500990090021d01000000021d021d0000
021d0000021d00000000000000000000017d021d017d017d000000000000
021d017d017d000000000000021d017d017d000000000000000000000000
000000000000000000000000000000000000000002670000000000000002
0002000f0002000f000200ae007c0026000300030002014100b800800002
006c009f010f005a00090013fff30201012e00bb014100020169016900ae
016f00110090007f00ab007f00ab0058008000580080005800800080007d
0080007d0080007d006b0055006b003e00e500bd00e500bd00e500bd00e5
00bd00ab00b4005900bf0092008000bb002e006c0080006c000000910000
0091005800ab00b900cf008f007a0053005b0053005b0053005b0053005b
002500380063009500d700110090001200100050007001cd002500380025
0038002500380063009501fd013c0088005a000c0011000b001b020801d4
01bb01080040fffc00130041fff6002affd400f2001100570065005800d5
006b00e50059000f0018002e00930068006400b300c4008f00630050001d
003c00e500640062011b008b01bb0057010400460156008b00b3020f009e
00410054004a0145009100ca00cf00570099004500750128005700910057
007500580011007f007f00b900e500e500ab0023000000110077002c0064
001100570057007f004a0058fffb007200280028007700230018006b0068
006400b3007f008f002c0063005000590029000400040002000200570081
0016000f00900080007b0098005a008000140090003a003a00780033001f
006b0091006b002d00ab00a6003c00770065004d004600210021004b0018
00a60082002400830080008e009800ab00cf00bd00ba00b40033ffee003e
0078003c006b007f0098002b003100680225014a01490149022401b701b7
019801980224014b0224023600b50198023c038b00b901cc00d0009e0115
00a300a001770149009200680173009500b400c0006d00850176011c004f
00c000f200fa00de00a200c500ac00cc00a0007a0085008501bf00f7005b
00e8009500950000000000c000cc00b900cc00b900d000d000d0009e0115
00a300a00165013800680173009500b400c00085011c004f00f200fa00a2
00c500ac00cc00a00177009e00b400fa00ac0243018c0160012401c701c7
00fb0201000001dc019701dc01dc01a301dc01ca01db01d90164013f00f4
017f01540137010801070127009601c700e6024a01d101f3010d01270111
01450000000000000000000001ca02030201020301a201a401ab016d0152
0000019c016201600025002500000000000b0006000000000110009e0000
0000009000650003000300000000000a000a0000000000aa007000f00097
00f000f0009e009e00bf00bf00bf013f0090009000f0009700f000970183
01d501c701a801ca0000001d002b002b0000001d002b002b002b002b0000
001d00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000019c019c025d012d000000140201010a00cb0197
019700c400c001bc01f800aa007000000000020001f80025002500000000
01c80184002500250000000000250025000000000110009e000000000110
009e000000000110009e00000000019e0151019e01510090006500900065
000600060000000000060006000000000000000000000000000000000000
0000000c000a00000000000c000a00000000011a011c00000000011a011c
00000000000b00060000000000a600d60000000000b40038000000000108
00710000000001b201b20000000000fe008e0000000001f3018400000000
00c400c000aa007000aa00760000000000670099008200a1009c00d7009c
00d7021901d101dc01dc0061004c019c01db01ca010d024a01a30197005d
0020000501c701ca01ca01d501a8018301db01b201b2009c009c01ea01f5
01f50075006b01b501f401e30126026301bc01b0007f0041002601e001e3
01e301ee01c1019c01c7019e019e00d700d700c300ce00cd016a0174008e
00cd00bc0000013c00950089017f011100ee00b900bc00bc00c7009a0075
0186015d015d01be01be01bc019a01df00000025002500000000000b0006
0000000000f00097009e0000001d002b0000000001470147015800f300da
01f801f800ce0000006800910053005b01c10199019801c401cb01c001bb
01c501ab01b9012b01240118015e0144037d00c800000000019f01bd01a5
01c301b701b7012b012b012b01280128012801ff01ff01ff01ff01ff01c4
01a8012801ff01ff01ff01ff01ff01ff01ff01ff01ff01ff0142012b0142
012b00110090001100900011009000110090001100900011009000110090
001100900011009000110090001100900011009000580080005800800058
0080005800800058008000580080005800800058008000e500ba00e500bd
006800910068009100680091006800910068009100680091006800910068
0091006800910068009100680091006800910053005b0053005b0053005b
0053005b0053005b0053005b0053005b0063009500630095006300950011
009000e500ba006800910053005b0053005b0053005b0053005b0053005b
012f011400f50114007f0098fffb00140077007800770078006b006b0062
0095006200950050006500290046006b006c004200800068009100000000
00000000007000000070000000700000007000000124000001cc000003f4
000006480000084e00000a0000000a5400000b0200000bb000000d6e0000
0e2a00000e8a00000ebe00000f0a00000fb6000011f800001302000014a4
000016520000178c000018ea00001b2200001bea00001e0200001fea0000
20700000211c000021e2000022720000233c00002488000026b2000028f6
00002af200002c7200002e0200002fa80000312c000032fe000035720000
36aa0000381000003b2e00003bfe00003ec4000040b20000430e00004486
000047040000494400004adc00004bd400004d7e00004f5a000052c40000
55b8000057e400005956000059d800005a6000005ada00005ba200005be2
00005c3e00005e3a00005fd800006146000062a2000063e00000653c0000
66ec000068fa000069d400006ad200006e2400006ed0000071b6000073d8
00007574000077300000790400007a9600007d4600007e8e000080120000
81dc00008582000088d800008b2600008c5e00008d8a00008de000008f4a
0000903600009080000090cc000090fa0000913000009172000091a60000
91e2000092140000924e0000928c000092cc0000930c0000935c0000938c
000093c4000093f8000094280000945a0000948a000094b8000094e80000
9518000095560000958e000095c4000095f40000962c000096680000969a
000096ca000096fa0000972c000097e000009878000099e400009b8e0000
9d6e00009dce00009f6e0000a1200000a3700000a54a0000a7ea0000a84a
0000a8ca0000a9fc0000acf00000aece0000b01a0000b12a0000b2420000
b35c0000b60c0000b7040000b7dc0000b8f20000b9ec0000bb440000bc9e
0000bdbe0000beca0000c0320000c2d20000c45a0000c5920000c6460000
c6ba0000c75c0000c87a0000ca5c0000cafc0000cc700000cdb20000ce86
0000cec00000cf020000cf320000d0ce0000d3360000d3840000d3d20000
d45c0000d4e60000d54c0000d5b20000d6980000d7400000d77a0000d7ae
0000d7fa0000d9c00000da460000dacc0000dca80000de660000df780000
dfca0000e01c0000e0b00000e3320000e3840000e3c40000e3f80000e43e
0000e4720000e4a80000e4da0000e5120000e5500000e5800000e5b00000
e5c80000e5fc0000e6320000e67a0000e72a0000e7ca0000e8940000e8e6
0000e95c0000e9a80000ea460000eb1a0000ec0c0000ecba0000ed600000
ef520000f0d60000f1100000f1460000f17c0000f1ba0000f2aa0000f454
0000f61c0000f6500000f6840000f8160000f95c0000f9da0000fb300000
fc2a0000fd720000fe8c0001004600010296000104e80001063c00010670
000106a6000106d800010708000107360001076a0001079c000107d20001
0806000109fe00010a4e00010a9800010ad200010b0e00010b6200010bb4
00010bf400010d9c00010dac00010e0000010e8400010ec400010ef40001
0f2600010f5800010f9000010fd20001100a0001104400011078000110ae
000110f20001112c000111600001119a000111cc000111fc0001123e0001
126e000112a2000112d4000113040001133200011364000115080001154a
00011584000115b8000115f2000116220001165a0001168e000116c40001
17be0001196800011b1600011c9400011dc800011f3400012012000120b8
00012234000122ba000122f60001245200012728000127cc000128800001
2922000129c400012aac00012b8e00012c9400012ce200012d8600012e54
00012ed000012f3800012fa0000130100001303a0001306a000130a20001
30da000131120001314a00013190000131d80001321a0001325e000132be
0001330400013358000133aa000134020001346e000134c0000135180001
3584000135d6000136300001369c000136f000013748000137b400013814
0001387e0001390600013968000139d200013a5e00013ac200013b240001
3ba800013c0600013c6a00013cee00013d8000013e1a00013eda00013f06
00013f3200013f6000013f8e00013fbe0001441000014c9c000154de0001
55080001554000015584000155c00001560e0001564a0001572400015792
00015878000159d400015ad600015c7e00015d9600015f48000160780001
61d800016284000162fe000163c0000164d8000167400001692e0001695a
000169b0000169e400016b9800016ca800016cd200016cee00016d5c0001
6d9400016e0e00016e4200016e7600016eb400016eee00016f2200016f56
00016f8800016fc0000170080001703c00017074000170a8000170ea0001
711e000171540001718c000171b6000171ec0001722c0001742a000176ca
000178dc0001790e0001794200017978000179ac000179e200017a120001
7b8400017cda00017d1400017e1800017e4200017e66000180080001802c
0001805000018074000180a40001820e000183ba000183d2000184060001
841e0001844e0001847200018496000184cc000185000001869e0001881c
0001885200018888000188ba000188ee0001891e0001894e00018b360001
8cf600018d2e00018d6400018da000018dd000018efe00018f5000018fa6
00018fd600019004000190340001906200019072000190aa000190e20001
91120001914000019174000191a6000191de000192140001922400019234
000193be0001949800019714000199f200019c8c00019ee200019f6c0001
a0000001a0100001a0e00001a3440001a56a0001a7f20001a9200001aa62
0001ac4c0001ae160001ae4c0001ae5c0001ae6c0001af200001af300001
af400001af500001af600001af700001b12c0001b13c0001b14c0001b314
0001b3240001b4b60001b4c60001b5fe0001b60e0001b61e0001b62e0001
b8540001b9ea0001ba220001ba600001ba8e0001bac20001baf60001bb2a
0001bb6c0001bc8c0001bdb00001beb20001c0240001c1420001c1aa0001
c3d20001c5820001c6d60001c7c60001c9680001c9780001ca3c0001cb5c
0001ccae0001ce500001cf860001d0c00001d1020001d1440001d1780001
d1a60001d1e00001d2300001d3ba0001d3ec0001d5420001d5520001d562
0001d5a40001d5b40001d74a0001d9c00001dba80001dbe80001dc380001
ddf00001de000001df260001df360001e04c0001e1860001e1960001e5aa
0001e7300001e8e40001e92a0001eb560001ecbe0001ecce0001ecde0001
ecee0001ee800001ee900001eea00001eeb00001f08c0001f2440001f254
0001f3ca0001f58c0001f8aa0001fbae0001fcd60001ff1c000200500002
00820002025600020296000202a6000203cc00020516000206260002077a
0002078a00020b0600020c5800020e3000020e7200021080000211e00002
14560002166200021672000217f80002180800021818000218ee00021ac4
00021c7400021c8400021e1a00021ff200022252000224aa000225da0002
2806000229400002297400022b5600022d2400022d5600022f4600022f76
0002309a000230aa000230ba000230f40002310400023290000234fa0002
36ea0002372400023762000238fa000239e600023ad000023b0400023d82
00023f4200023fa2000240a400024142000241f800024236000242aa0002
435400024398000243f800024442000244d2000245160002455c00024598
000245e80002463000024668000246a00002471600024882000248fa0002
49d400024a4000024ac400024b1600024b8e00024c1a00024cf600024d42
00024dc000024e5600024f4400024fdc000250d000025138000251940002
525000025314000253c40002548a0002554e0002566400025746000257a6
0002588e00025920000259b600025a4a00025ae000025b2c00025bbe0002
5cb000025d2800025d7a00025dcc00025e1200025e9e00025f5a00025f8a
00025fba00025fea0002601a0002603e0002606200026218000262440002
6274000262a2000262c6000262fa000263340002645a000264d400026506
0002652e0002658a000265ae000265dc000266da000267da000268d00002
6a4600026b9200026bbc00026cd800026d0a00026d2e00026d5c00026d8a
00026dbc00026f0000026f3c000270880002714a000271fe000272960002
737600027484000275660002759400027656000277f80002783a000278a2
00027996000279be00027abe00027b9400027c1400027c9200027d700002
7e9800027fae000280540002810e000281c60002826a000283340002840e
0002849400028578000285d800028708000287d80002886a000289880002
8a8a00028b8c00028ba400028bd800028bfe00028f4e00028fae0002904a
0002906a000291fc000293ee0002959a0002978e00029976000299d40002
9cac00029cbc00029d9c00029dda00029e1000029e3600029e4c00029e80
00029e9600029eea00029f4400029f9a00029fec0002a0480002a2780002
a28e0002a2b40002a2e80002a3240002a5420002a7840002a8b20002a9d8
0002ab680002ad200002ae760002afea0002b0f20002b2120002b22a0002
b2620002b29c0002b2ca0002b30c0002b3700002b3b40002b52c0002b584
0002b7040002b83c0002b8780002b8a40002b8d80002b90a0002b94c0002
bbea0002bdb60002bf160002c1000002c25a0002c2800002c2b80002c2e8
0002c5200002c54c0002c5b20002c60c0002c8980002c8c20002cb000002
cb580002cb940002cbb40002cbcc0002cc0c0002cc300002cc680002ccb6
0002ccfc0002cd5c0002cdbc0002cdec0002ce300002ce6a0002cfc20002
cffa0002d18a0002d1a20002d2c40002d2f00002d3aa0002d5b60002d5dc
0002d6ee0002d7380002d80a0002d83e0002d86a0002d8ae0002d8de0002
daac0002db340002db8c0002dc000002dc2c0002dc820002dcb80002dcfa
0002dd740002ddf40002df560002e1c20002e1d20002e20c0002e2540002
e2840002e2b00002e2f60002e33c0002e3860002e3c60002e3f80002e418
0002e44e0002e4900002e5040002e59a0002e5b20002e5ca0002e5e20002
e5fa0002e6480002e6920002e6ba0002e6ee0002e72a0002e7680002e78c
0002e7bc0002e8000002e8340002e88e0002e8e20002e8fa0002e9120002
ea0c0002eb8c0002ec600002ed980002edc60002edf40002ee0c0002ee34
0002eee80002ef8e0002efc20002efec0002f09c0002f17e0002f1ac0002
f1d00002f3640002f4e40002f62a0002f77e0002f7ae0002f7de0002f812
0002f8460002f9800002fb060002fc080002fd4e0002fd7e0002fdb60002
fde20002fe0e0002fefe0003001e0003010c0003022c00030276000302be
000302fe0003034000030490000305e8000306da000307f00003081e0003
086200030898000308d40003090c000309480003098a000309d000030b4c
00030d0000030d5400030da600030f420003110400031114000311240003
120a0003130a00031388000314540003155400031564000316340003171e
0003182a0003195600031988000319bc000319cc00031ab600031c1e0003
1de400031ef20003201a0003202a0003203a000320740003225000032290
000322c8000322f6000323320003236600032398000323d0000324080003
253e00032660000326a0000326b2000326c4000326d60003270c00032744
00032756000327680003277a0003278c000327aa000327c8000327e80003
28260003286c000328dc000328ee00032900000329120003292400032936
000329480003295a0003296c0003297e000329b2000329ea000329fc0003
2a0e00032a2000032a5400032a9800032ab600032ac800032ada00032aec
00032b0a00032b1c00032b2e00032b6400032b9a00032bf200032c120003
2c2400032c3600032c4800032c5a00032c6c00032c7e00032ca800032cba
00032cf800032d3c00032d5600032d6800032d7a00032f5e000331ae0003
31c0000331d2000331e4000331f6000332080003321a0003322c0003347c
000336ee00033a1c00033a2e00033a4000033a5200033a6400033a760003
3aa400033ac400033af200033b3400033b6600033b9a00033c3e00033d18
00033dd800033ff6000340dc000341d80003426c000343200003446a0003
45b0000346bc000347ce0003492200034a3800034be400034d3c00034e78
00034fd400035100000351e4000353f400035654000358d000035b6e0003
5eb800035ece00035ee4000360840003631600036540000366ca0003683e
000369be00036a2e00036a9e00036b1200036b8600036bfa00036c640003
6d1c00036dd000036e8200036f3600036ff0000370aa0003716c00037212
0003729e000372dc0003746a00037516000375e000037648000376b00003
7720000377900003784800037900000379ba00037a7400037b2e00037bec
00037caa00037d6800037d7a00037d8c00037d9e00037db000037dc20003
7e3600037ea000037f5e00037f7000037f8200037f9400037fa600037fb8
00037fca00037fdc00037fee0003800000038012000380cc000381860003
8240000382fa000383240003834a00038388000383b40003841a00038474
000384dc0003853a00038590000385de0003863400038682000386e40003
873400038798000387f600038858000388a80003891000038982000389e0
00038a2c00038a9200038ae000038b0e00038b3600038b5e00038b820003
8bbc00038bea00038c2e00038c7a00038cc000038d1000038d4400038d84
00038db800038df800038e4000038e8400038ea800038ecc00038ef20003
8f1800038f3e00038f6400038f8800038fac00038ff20003903e00039084
000390d4000391080003914c00039180000391c000039200000392420003
9274000392a2000392d80003930a0003932e0003935200039382000393b0
000393dc00039402000394280003944e00039478000394b4000394e40003
95120003955600039584000395ae000395e600039616000396440003966a
00039690000396b6000396da000396fe0003972400039754000397820003
97be000397f8000398280003985800039888000398b6000398e60003993c
00039962000399d2000399f400039a8400039aae00039b3800039b4e0003
9be800039d6600039f5e0003a0fe0003a2f80003a3c00003a4820003a6de
0003a9220003aa860003abec0003ad760003af0e0003b00c0003b1000003
b1de0003b2c40003b3d20003b4ee0003b6260003b7ce0003b9780003baac
0003bb8a0003bc640003bd780003be560003bf840003c086000100000526
012200490072000500020010002f00550000039f0ab10003000200000046
034e000000030000000000fe000000000003000000010016011000000003
00000002000e01580000000300000003005a00fe00000003000000040016
01100000000300000005001801660000000300000006001c017e00000003
0000000700a6019a0000000300000008002602cc0000000300000009001c
08f4000000030000000a021e0910000000030000000b006c0b2e00000003
0000000c00660b9a000000030000000d06b40240000000030000000e005c
0c000001000000000000007f0c5c0001000000000001000b0ce400010000
0000000200070d080001000000000003002d0cdb0001000000000004000b
0ce40001000000000005000c0d0f0001000000000006000e0d1b00010000
0000000700530d29000100000000000800130dc20001000000000009000e
10d6000100000000000a010f10e4000100000000000b003611f300010000
0000000c00331229000100000000000d035a0d7c000100000000000e002e
125c0003000104030002000c128a00030001040500020010129a00030001
04060002000c12aa0003000104070002001012b600030001040800020010
12c6000300010409000000fe000000030001040900010016011000030001
04090002000e01580003000104090003005a00fe00030001040900040016
01100003000104090005001801660003000104090006001c017e00030001
0409000700a6019a0003000104090008002602cc0003000104090009001c
08f4000300010409000a021e0910000300010409000b006c0b2e00030001
0409000c00660b9a000300010409000d06b40240000300010409000e005c
0c0000030001040a0002000c128a00030001040b0002001012d600030001
040c0002000c128a00030001040e0002000c12e60003000104100002000e
12f60003000104130002001213040003000104140002000c128a00030001
041500020010128a0003000104160002000c128a0003000104190002000e
131600030001041b0002001012e600030001041d0002000c128a00030001
041f0002000c128a0003000104240002000e132400030001042a0002000e
133200030001042d0002000e134000030001080a0002000c128a00030001
08160002000c128a000300010c0a0002000c128a000300010c0c0002000c
128a00540079007000650066006100630065002000a90020005400680065
0020004d006f006e006f007400790070006500200043006f00720070006f
0072006100740069006f006e00200070006c0063002e0020004400610074
0061002000a900200054006800650020004d006f006e006f007400790070
006500200043006f00720070006f0072006100740069006f006e00200070
006c0063002f005400790070006500200053006f006c007500740069006f
006e007300200049006e0063002e00200031003900390030002d00310039
00390034002e00200041006c006c00200052006900670068007400730020
00520065007300650072007600650064004d006f006e006f007400790070
0065003a0043006f007500720069006500720020004e00650077003a0076
0065007200730069006f006e00200032002e0039003000200028004d0069
00630072006f0073006f0066007400290052006500670075006c00610072
00560065007200730069006f006e00200032002e003900300043006f0075
0072006900650072004e0065007700500053004d00540043006f00750072
0069006500722122002000540072006100640065006d00610072006b0020
006f006600200054006800650020004d006f006e006f0074007900700065
00200043006f00720070006f0072006100740069006f006e00200070006c
00630020007200650067006900730074006500720065006400200069006e
0020006300650072007400610069006e00200063006f0075006e00740072
006900650073002e004e004f00540049004600490043004100540049004f
004e0020004f00460020004c004900430045004e00530045002000410047
005200450045004d0045004e0054000d000a000d000a0054006800690073
002000740079007000650066006100630065002000690073002000740068
0065002000700072006f007000650072007400790020006f00660020004d
006f006e006f00740079007000650020005400790070006f006700720061
00700068007900200061006e006400200069007400730020007500730065
00200062007900200079006f007500200069007300200063006f00760065
00720065006400200075006e006400650072002000740068006500200074
00650072006d00730020006f0066002000610020006c006900630065006e
00730065002000610067007200650065006d0065006e0074002e00200059
006f0075002000680061007600650020006f0062007400610069006e0065
006400200074006800690073002000740079007000650066006100630065
00200073006f006600740077006100720065002000650069007400680065
00720020006400690072006500630074006c0079002000660072006f006d
0020004d006f006e006f00740079007000650020006f007200200074006f
0067006500740068006500720020007700690074006800200073006f0066
007400770061007200650020006400690073007400720069006200750074
006500640020006200790020006f006e00650020006f00660020004d006f
006e006f0074007900700065002700730020006c006900630065006e0073
006500650073002e000d000a000d000a005400680069007300200073006f
00660074007700610072006500200069007300200061002000760061006c
007500610062006c00650020006100730073006500740020006f00660020
004d006f006e006f0074007900700065002e00200055006e006c00650073
007300200079006f00750020006800610076006500200065006e00740065
00720065006400200069006e0074006f0020006100200073007000650063
00690066006900630020006c006900630065006e00730065002000610067
007200650065006d0065006e00740020006700720061006e00740069006e
006700200079006f00750020006100640064006900740069006f006e0061
006c0020007200690067006800740073002c00200079006f007500720020
0075007300650020006f00660020007400680069007300200073006f0066
007400770061007200650020006900730020006c0069006d006900740065
006400200074006f00200079006f0075007200200077006f0072006b0073
0074006100740069006f006e00200066006f007200200079006f00750072
0020006f0077006e0020007000750062006c0069007300680069006e0067
0020007500730065002e00200059006f00750020006d006100790020006e
006f007400200063006f007000790020006f007200200064006900730074
0072006900620075007400650020007400680069007300200073006f0066
00740077006100720065002e000d000a000d000a0049006600200079006f
00750020006800610076006500200061006e007900200071007500650073
00740069006f006e00200063006f006e006300650072006e0069006e0067
00200079006f00750072002000720069006700680074007300200079006f
0075002000730068006f0075006c00640020007200650076006900650077
00200074006800650020006c006900630065006e00730065002000610067
007200650065006d0065006e007400200079006f00750020007200650063
006500690076006500640020007700690074006800200074006800650020
0073006f0066007400770061007200650020006f007200200063006f006e
00740061006300740020004d006f006e006f007400790070006500200066
006f00720020006100200063006f007000790020006f0066002000740068
00650020006c006900630065006e00730065002000610067007200650065
006d0065006e0074002e000d000a000d000a004d006f006e006f00740079
00700065002000630061006e00200062006500200063006f006e00740061
0063007400650064002000610074003a000d000a000d000a005500530041
0020002d0020002800380034003700290020003700310038002d00300034
00300030000900090055004b0020002d0020003000310031003400340020
003000310037003300370020003700360035003900350039000d000a0068
007400740070003a002f002f007700770077002e006d006f006e006f0074
007900700065002e0063006f006d0048006f00770061007200640020004b
006500740074006c0065007200440065007300690067006e006500640020
006100730020006100200074007900700065007700720069007400650072
0020006600610063006500200066006f0072002000490042004d002c0020
0043006f0075007200690065007200200077006100730020007200650020
0064007200610077006e002000620079002000410064007200690061006e
00200046007200750074006900670065007200200066006f007200200049
0042004d002000530065006c006500630074007200690063002000730065
0072006900650073002e0020002000410020007400790070006900630061
006c00200066006900780065006400200070006900740063006800200064
0065007300690067006e002c0020006d006f006e006f0074006f006e0065
00200069006e002000770065006900670068007400200061006e00640020
0073006c0061006200200073006500720069006600200069006e00200063
006f006e0063006500700074002e00200020005500730065006400200074
006f00200065006d0075006c006100740065002000740079007000650077
007200690074006500720020006f0075007400700075007400200066006f
00720020007200650070006f007200740073002c00200074006100620075
006c0061007200200077006f0072006b00200061006e0064002000740065
00630068006e006900630061006c00200064006f00630075006d0065006e
0074006100740069006f006e002e0068007400740070003a002f002f0077
00770077002e006d006f006e006f0074007900700065002e0063006f006d
002f00680074006d006c002f006d0074006e0061006d0065002f006d0073
005f0063006f00750072006900650072006e00650077002e00680074006d
006c0068007400740070003a002f002f007700770077002e006d006f006e
006f0074007900700065002e0063006f006d002f00680074006d006c002f
006d0074006e0061006d0065002f006d0073005f00770065006c0063006f
006d0065002e00680074006d006c0068007400740070003a002f002f0077
00770077002e006d006f006e006f0074007900700065002e0063006f006d
002f00680074006d006c002f0074007900700065002f006c006900630065
006e00730065002e00680074006d006c547970656661636520a920546865
204d6f6e6f7479706520436f72706f726174696f6e20706c632e20446174
6120a920546865204d6f6e6f7479706520436f72706f726174696f6e2070
6c632f5479706520536f6c7574696f6e7320496e632e20313939302d3139
39342e20416c6c205269676874732052657365727665644d6f6e6f747970
653a436f7572696572204e65773a76657273696f6e20322e393020284d69
63726f736f667429526567756c617256657273696f6e20322e3930436f75
726965724e657750534d54436f7572696572aa2054726164656d61726b20
6f6620546865204d6f6e6f7479706520436f72706f726174696f6e20706c
63207265676973746572656420696e206365727461696e20636f756e7472
6965732e4e4f54494649434154494f4e204f46204c4943454e5345204147
5245454d454e540d0a0d0a54686973207479706566616365206973207468
652070726f7065727479206f66204d6f6e6f74797065205479706f677261
70687920616e64206974732075736520627920796f7520697320636f7665
72656420756e64657220746865207465726d73206f662061206c6963656e
73652061677265656d656e742e20596f752068617665206f627461696e65
64207468697320747970656661636520736f667477617265206569746865
72206469726563746c792066726f6d204d6f6e6f74797065206f7220746f
676574686572207769746820736f66747761726520646973747269627574
6564206279206f6e65206f66204d6f6e6f747970652773206c6963656e73
6565732e0d0a0d0a5468697320736f66747761726520697320612076616c
7561626c65206173736574206f66204d6f6e6f747970652e20556e6c6573
7320796f75206861766520656e746572656420696e746f20612073706563
69666963206c6963656e73652061677265656d656e74206772616e74696e
6720796f75206164646974696f6e616c207269676874732c20796f757220
757365206f66207468697320736f667477617265206973206c696d697465
6420746f20796f757220776f726b73746174696f6e20666f7220796f7572
206f776e207075626c697368696e67207573652e20596f75206d6179206e
6f7420636f7079206f722064697374726962757465207468697320736f66
74776172652e0d0a0d0a496620796f75206861766520616e792071756573
74696f6e20636f6e6365726e696e6720796f75722072696768747320796f
752073686f756c642072657669657720746865206c6963656e7365206167
7265656d656e7420796f7520726563656976656420776974682074686520
736f667477617265206f7220636f6e74616374204d6f6e6f747970652066
6f72206120636f7079206f6620746865206c6963656e7365206167726565
6d656e742e0d0a0d0a4d6f6e6f747970652063616e20626520636f6e7461
637465642061743a0d0a0d0a555341202d202838343729203731382d3034
30300909554b202d203031313434203031373337203736353935390d0a68
7474703a2f2f7777772e6d6f6e6f747970652e636f6d486f77617264204b
6574746c657244657369676e656420617320612074797065777269746572
206661636520666f722049424d2c20436f75726965722077617320726520
647261776e2062792041647269616e20467275746967657220666f722049
424d2053656c656374726963207365726965732e20204120747970696361
6c2066697865642070697463682064657369676e2c206d6f6e6f746f6e65
20696e2077656967687420616e6420736c616220736572696620696e2063
6f6e636570742e20205573656420746f20656d756c617465207479706577
7269746572206f757470757420666f72207265706f7274732c2074616275
6c617220776f726b20616e6420746563686e6963616c20646f63756d656e
746174696f6e2e687474703a2f2f7777772e6d6f6e6f747970652e636f6d
2f68746d6c2f6d746e616d652f6d735f636f75726965726e65772e68746d
6c687474703a2f2f7777772e6d6f6e6f747970652e636f6d2f68746d6c2f
6d746e616d652f6d735f77656c636f6d652e68746d6c687474703a2f2f77
77772e6d6f6e6f747970652e636f6d2f68746d6c2f747970652f6c696365
6e73652e68746d6c004e006f0072006d0061006c006e0079006f00620079
010d0065006a006e00e9006e006f0072006d0061006c005300740061006e
0064006100720064039a03b103bd03bf03bd03b903ba03ac004e006f0072
006d00610061006c0069004e006f0072006d00e1006c006e0065004e006f
0072006d0061006c0065005300740061006e00640061006100720064041e
0431044b0447043d044b0439004e0061007600610064006e006f00740068
01b001a10300006e00670041007200720075006e00740061ba0054ffc003
c0b2553340b803c0b23a3340b803c0b30e243280b803c0b30b0d3280b803
c0b209333f412f03c0007003c000af03c000cf03c00004005f03c0007f03
c000af03c00003001f03c0003f03c0005f03c0008f03c0000400a003bb00
b003bb00c003bb00d003bb000400a003ba00b003ba00c003ba00d003ba00
04003f03b8000103b703b6b2241f40b803b4b3192432ef411a03b300ff03
b300020391038b0021001f035e038b0021001f035f038b0021001f038f03
8b002a001f0390038b002a001f038d038bb23b1f0f4109038b000100ef03
8b00ff038b0002ffc0039cb2474f32b9ffc0039cb2373c32b9ffc0039bb2
474f32b9ffc0039bb3373c321f4119039c00b0039c00c0039c00d0039c00
0400ef039c0001001f039b00b0039b00c0039b00d0039b000400ef039b00
01ffc0039cb2212932b9ffc0039bb2212932b9ffc0039cb20f1632b9ffc0
039bb20f1632410a035903560032001f035803560032001f03570356b232
1fbf41600355000100af0355000100a003540001008f03540001005f0354
0001004f03540001007f03550001007f03540001006f03550001006f0354
0001003f03550001003f03540001003f03540001002f03540001002f0354
0001001f03540001000f03540001035203530029001f0351034a0029001f
035003450025001f034f034a0025001f034e03490025001f034d03470025
001f034c034a0018001f034b03450012001f034a03460018001f03490345
0044001f034803460044001f03470346b2441f3041700346005f03450002
000f0344001f0344002f0344003f03440004000f0344008f034400a00344
00df03440004005f0344007f034400cf03440003002f0344000103440344
0343034303410341000f0340001f0340002f0340000303400340033f033f
033e033e000f033d0001033d033d0040033c0001001f033c002f033c003f
033c004f033c005f033c00c0033c00d0033c0007033c033c002003350030
03350040033500500335006003350005000f032c002f032c008f032c0003
032c032d0024001f0321028c0014001f0320028c0014001f031f028b001e
001f031e028bb21e1f40410902b4005002b4006002b4007002b4008002b4
b205120f4114028b001f028b002f028b004f028b005f028b007f028b009f
028b00af028b0008003f028b004f028b400b023f023f034f024f030440b8
0329b33c3c3240b80329b333363240b80329b31c1d3240b80329b30c1a32
0f41720329007f0329009f03290003000f0329002f0329003f0329000300
0f0329001f0329000200af032700bf032700cf032700df03270004000f03
27004f0327005f0327008f0327009f032700af0327000600bf032700ef03
2700ff03270003006f0327007f0327008f0327009f032700af0327000500
0f0327001f0327002f0327004f0327005f03270005000f0328002f032800
5f0328007f032800af0328000500df03280001000f0327000f0328005003
28008f032800bf0328000500df03220001008f03220001003f0322004f03
220002002f0322003f03220002000f0322001f0322b202090fb8028bb201
3a0f4137028c004f028c0002000f028d002f028d003f028d0003002f028b
0001002f028c003f028c004f028c008f028c00af028c000503b903b90329
03290327032703280328032203220321032103200320031f031f031e031e
02900290028f028f028e028e028d028d028c028c028b028b4014af2bbf2b
025f356f357f358f359f35af35bf3507bb0261026102600260400a001616
0000001211081a41100204005c000d01fa005c000d01ad005c000d017200
5c000d0140005c000d0117401a5c0de45c0dc85c0d995c0d955c0d585c0d
4e5c0d465c0d2f5c0db8016240172b0ddb2b0d902b0d562b0d362b0d352b
0d332b0d292b0d411101590157000d00be0157000d00420157000d003201
57000d00220157000d001d0157b20d0009bc015b00210801001f0127b421
811fe521b80401b21f8321b80801b21f8221b80401b21f5b21b80401b21f
3b21b80801b61f3021671f2c21b80401b21f2621b80401b21f2421bd0401
001f005501ac0007012b402c07c9075f07400739072e072d072807270723
071f071408120810080e080c080a080808060804080208000814b8ffe040
2b0000010014061000000100060400000100041000000100100200000100
0200000001000002010802004a00b013034b024b5342014bb0c063004b62
20b0f65323b8010a515ab005234201b0124b004b544218b0372b4bb807ff
52b0382b4bb009505b58b101018e59b0382bb00288b801005458b801ffb1
01018e851bb0124358b90001012c858d1bb90001012c858d59594bb00950
58b104018d8d590016763f183f123e113946443e113946443e113946443e
113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b
2b2b2b2b2b2b2b2b2b2b18b0372b1db0964b5358b0aa1d59b0324b5358b0
ff1d594bb8040153205c58b9023802364544b90237023645445958b90a80
0238455258b902380a804459594bb8040153205c58b9002002384544b900
21023845445958b90a800020455258b900200a804459594bb8040153205c
58b9001e02374544b90025023745445958b90a80001e455258b9001e0a80
4459594bb8040153205c58b13d214544b1212145445958b90a80003d4552
58b9003d0a804459594bb8040153205c58b167214544b1212145445958b9
0a800067455258b900670a804459594bb8030153205c58b121214544b121
2145445958b907e00021455258b9002107e04459594bb8030153205c58b1
21214544b11e2145445958b907e00021455258b9002107e04459594bb803
0153205c58b121214544b1252145445958b907e00021455258b9002107e0
4459592b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b01b9004a01d6b1437a45652345602345
6560234560b08b766818b080622020b9004301d64565234520b003266062
636820b003266165b801d6236544b043234420b14a7a4565234520b00326
6062636820b003266165b07a236544b04a2344b1007a455458b17a406544
b24a404a4523614459b347612aad456523456023456560234560b0897668
18b080622020b12a614565234520b003266062636820b003266165b06123
6544b02a234420b147ad4565234520b003266062636820b003266165b0ad
236544b0472344b100ad455458b1ad406544b247404745236144594b5342
014b5058b108004259435c58b108004259b3020b0a124358601b21594216
10703eb0124358b93b21187e1bba040001a8000b2b59b00c2342b00d2342
b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b01243
58b9187e3b211bba01a80400000b2b59b0102342b0112342001845694445
694473731845694445694445694445694445694445694445694445694445
6944456944456944456944456944456944456944737373745e735e737373
737473737473737374757373742b2b2b2b007300737400435c58410c001f
028b001f028d0002000f028b000f028c000f028d000373735974002b2b2b
2b2b73750045694473744569447345694445694445694473456944456944
4569447574737301732b2b2b2b2b2b2b2b2b2b2b2b007373737373737373
7373737373737373732b2b2b012b002b012b002b017375007375012b2b00
2b2b0073752b2b2b2b2b2b0173012b012b73017300737374752b2b2b2b2b
2b00000000>
[16069 14913 16089 16041 16301 15357 16161 16193 15513 16309 16017 16037 16369
15173 16001 7367 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 10806 76 <000200bd0000041605110003001c007f402a221932194019521963197419
841907130d10581414220d060c09580505220c161c19951515221c03c502
b80194b61c060d0c0a0001bb015f0003000201e0400e04040520154f1401
14191d517f182b4e10f45d3c4dfd3c10fd3cfd3c003f3c3ff6ed10ed0110
f5d43c0010ed0110f5d43c0010ed0110f5d43c3130015d01152335131121
3216151406232122263534363321112322263534363302907c7f014a1f1a
1a1ffd181e1a1a1e014af51e1b1a1f0511d9d9fe51fcf217131218181213
1702b91812131800>CourierNewPSMT AddT42Char 
1 0 0 <00020100000005000500000300070046b10607b8010cb40201000504b801
0cb403000a0605b8010cb60303021a090704b8010cb6010019084f7b182b
4e10f43c4dfd3c4e10f63c4d10fd3c003f3cfd3c3f3cfd3c313021112111
2521112101000400fc2003c0fc400500fb002004c000>CourierNewPSMT AddT42Char 
CourierNewPSMT /CharStrings get begin
/i 76 def
end
CourierNewPSMT /Encoding get
dup 105 /i put
pop
end
%ADOEndSubsetFont
reset_gvm
/EDYAIM+CourierNewPSMT /CourierNewPSMT findfont ct_VMDictPut
/EDYAIM+CourierNewPSMT*1 
[105{/.notdef}rp /i 150{/.notdef}rp]
EDYAIM+CourierNewPSMT nf
EDYAIM+CourierNewPSMT*1 [9 0 0 -9 0 0 ]msf
327.6 7.65576 mo
(i)sh
grestore
gsave
333 10.1161 mo
343.8 10.1161 li
343.8 .636108 li
333 .636108 li
cp
clp
0 gry
true set_gvm
%ADOBeginSubsetFont: CourierNewPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CourierNewPSMT gcheck setglobal} if
2 7390 66 <0001004dfdcf051afe23000d000db4075b010b042f2f002fed3130012122
263534363321321615140604e2fba31e1a1a1e045d1f1919fdcf17131317
17131317>CourierNewPSMT AddT42Char 
2 8834 71 <0002007effdf04ab04e7001e002a00e1b6492a682a020802b802ae400e00
0501052f010505020122081e18b802ae40101b2f171b1b1817221e0a1622
28095d0ab80163b328210c16b8016340202221141e000c0b140700000001
171f09208001010f0101011a2c252180100110b8018cb32b2a8018b8012c
852b10f671ed4e10f65d714dfd3c3c103c003f3f3f103c10ede410ede4f4
1112393910fd3d12392f180110f5f4c40010fd3d12392f180110f55df4c4
31304bb016534bb024515a58b30e081208383859004bb00c534bb024515a
58b9002affecb2201427bafff80026ffe7b3230824193838383838385900
5d0111333216151406232335062322262635343636333217112322263534
36331334262322061514163332360402701f1a1a1fc592e172d17979d173
dc96701f1a1a1f70d89596d8d89695d804e7fb6d17131218a7c879e07778
df7ac801da18131218fcc8a0dcdca09fdddd>CourierNewPSMT AddT42Char 
CourierNewPSMT /CharStrings get begin
/underscore 66 def
/d 71 def
end
CourierNewPSMT /Encoding get
dup 95 /underscore put
dup 100 /d put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/EDYAIM+CourierNewPSMT*1 
[95{/.notdef}rp /underscore 4{/.notdef}rp /d 4{/.notdef}rp /i 150{/.notdef}rp]
EDYAIM+CourierNewPSMT nf
EDYAIM+CourierNewPSMT*1 [9 0 0 -9 0 0 ]msf
333 7.65576 mo
(d_)
[5.39917 0 ]xsh
grestore
gsave
343.8 10.1161 mo
365.4 10.1161 li
365.4 .636108 li
343.8 .636108 li
cp
clp
0 gry
true set_gvm
%ADOBeginSubsetFont: CourierNewPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CourierNewPSMT gcheck setglobal} if
1 5714 23 <000200d6000003d704e7001d002100d1400d00030020021e21051d1f1c16
19b801e6b61d1dbe160f1512b8016040120e0ebe15202121670203140202
0302211f20b8015bb703030405211e0d1eb8015bb2000e00b802f2b21d1d
1cbb015b0016000f015bb2161503b80283400f01050e671d1d1f000f1e01
001e011eba026e0021015b400b0001010119220404150ca1ba01d2001801
24852b003f3f014e10f4714dfdf65d713c3c3c10fd3c10e400103ced10fd
3c10ee3c10ed3c103c3c103c10fd3c113905872e2b7d10c4180010ed0110
f5d43c0010ed0110f5d43c0f313071012135013311333216151406232311
333216151406232122263534363333111123010303fdd301d3af461f1a1a
1f46461f1a1a1ffec81f1a1a1f9d2cfe57015f610327fccc17131218fef5
1713121818121317015f02dffd21>CourierNewPSMT AddT42Char 
CourierNewPSMT /CharStrings get begin
/four 23 def
end
CourierNewPSMT /Encoding get
dup 52 /four put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/EDYAIM+CourierNewPSMT*1 
[52{/.notdef}rp /four 42{/.notdef}rp /underscore 4{/.notdef}rp /d 4{/.notdef}rp /i 
150{/.notdef}rp]
EDYAIM+CourierNewPSMT nf
EDYAIM+CourierNewPSMT*1 [9 0 0 -9 0 0 ]msf
343.8 7.65576 mo
(4)sh
grestore
0 gry
true set_gvm
%ADOBeginSubsetFont: CourierNewPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CourierNewPSMT gcheck setglobal} if
1 6946 26 <000100d3fffe03d604e700150080b10903ba02a900060160402a02060603
02be090c0d0d67150014151500150900010c170b150c0003100102670b0a
110f100a04100c0bba015b000102a8b417091916ecba01060018012c852b
4e10e44d10f4ed003f3f103c3c103cfd3c1117390111123912391139870e
2e2b0e7d10c4180110fd3d12392f180010f5f4c431300135211514062322
26353521150106062322263534370381fda6171312180303feae08160e12
1806046c264a1e1a1a1e9f86fbc81a1118100a12>CourierNewPSMT AddT42Char 
CourierNewPSMT /CharStrings get begin
/seven 26 def
end
CourierNewPSMT /Encoding get
dup 55 /seven put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/EDYAIM+CourierNewPSMT*1 
[52{/.notdef}rp /four 2{/.notdef}rp /seven 39{/.notdef}rp /underscore 4{/.notdef}rp /d 
4{/.notdef}rp /i 150{/.notdef}rp]
EDYAIM+CourierNewPSMT nf
EDYAIM+CourierNewPSMT*1 [9 0 0 -9 0 0 ]msf
349.2 7.65576 mo
(744)
[5.39917 5.39914 0 ]xsh
gsave
365.4 10.1161 mo
370.8 10.1161 li
370.8 .636108 li
365.4 .636108 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: CourierNewPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CourierNewPSMT gcheck setglobal} if
1 5284 22 <000100c3ffe20401050500380111b36c380100b8fff24033323235113a24
49244a2543387200067f218638950493359638a535a638b913ba17cb13cb
14cd17db13dd17ec13fa17ff2f1100b8fff2b514221b243411b8ffde401c
1b243429080f0b2b2811032f211e1a180005231c00191e2028262c19b801
5bb32020122cb8018db3263d330eb8018db5123d06233d36b8010d400a15
3d031c1c39031a3a2fba010d001c0281b70b19393305060decba01800018
012c852b003f3f014e10f44de4e44e10e612392f4d10edf4ed0010fde410
fde412392fed111239123911390111121739121739113931304379401c34
352425131404052534234001130515400124352640011404124000002b2b
012b2b81818181012b2b385d713800387101161615140623222627263534
363332171633323635342626232226353436331732363534262322060706
06232226353437363332161514060313747af5b86ce82e0f171010149bad
92c561b65d1e1a19194871939a7c57922c10110b111857799a9fcc6202ab
34b56297e75c30101210180f73b7704b905317131218018a5b5e903c3414
091710283d55bf845496>CourierNewPSMT AddT42Char 
CourierNewPSMT /CharStrings get begin
/three 22 def
end
CourierNewPSMT /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/EDYAIM+CourierNewPSMT*1 
[51{/.notdef}rp /three /four 2{/.notdef}rp /seven 39{/.notdef}rp /underscore 4{/.notdef}rp 
/d 4{/.notdef}rp /i 150{/.notdef}rp]
EDYAIM+CourierNewPSMT nf
EDYAIM+CourierNewPSMT*1 [9 0 0 -9 0 0 ]msf
365.4 7.65576 mo
(3)sh
grestore
gsave
370.8 10.1161 mo
397.8 10.1161 li
397.8 .636108 li
370.8 .636108 li
cp
clp
EDYAIM+CourierNewPSMT*1 [9 0 0 -9 0 0 ]msf
370.8 7.65576 mo
(_)sh
grestore
true set_gvm
%ADOBeginSubsetFont: CourierNewPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CourierNewPSMT gcheck setglobal} if
1 4600 20 <000100e4000003e804f8001b00b1b212081bb8fff8400f11060008091b40
1b5012501b04090fba02a9000c019b4009100c0c0f10be090802ba02a900
05019b40120105050201be081918171615141307121b14ba02d700110267
b7000509080c190214bb02810011001702ce400a00671111016700100110
bd0270001c00a101ce0018012c852b10f65ded3c10fded10f4ed003f3c3f
eded01111217390010fd3d12392f180110f5f4c40010fd3d12392f180110
f5f4c43130005d3838383801112132161514062321222635343633211105
062322263534373637029001201e1a1a1efd6c1e1a1a1e0120feee14090f
190a081904f8fb5c17131218181213170430560619110f0d0809>CourierNewPSMT AddT42Char 
1 4866 21 <000100ab000003d70505002b0120b10602435458b71b0b2b0504140000b8
015bb50a0c143d2205003fed3ffd1112173931301bb90016ffde402c1b24
34480f7a0e862786288629a628a629bb0cb42a090d120a16350c382a0429
232a1e2b14271e28230c140bb8ffec400dea12ed16fa12fd160428080802
ba02a9000501dcb70105050201be0805bd01e40009000b010d0001015bb4
09090a0c1ab801f9b4143d220500bb015b000b0002015bb408e1113d2541
0d026f002d0017015b001e010d000b026d002c019101060018012c852b10
f6f4ed10f6edf4ed10ed003feded3f3c10fde410ed0110fd3d12392f1800
10f5f4c431304379401c1f2412181625202615211840001323114001171f
14400112241440012b2b012b2b2b2b8181005d3838383838383800710171
2b5937213534363332161515213524373e02353426232206070607062322
263534363633321615140606070007fd028518131218fcd40100f271541f
ae7b6eaa1906090c10111769b9619de2265b76fed8ba54211e1a1a1e757c
e6ee6f684f286ca67e5d18070a171030a45eda8a3a617374fedca100>CourierNewPSMT AddT42Char 
2 14000 83 <0002002dfe7e0457038000250031012d403f310a0f39270a0f39352d5101
55025d0d6401650265066b0d74017b2a722e0bc306c00ad907d909da27d9
31e606e50a0819032c037b078c039903ac0306161cb802ae400b192f1d19
191c1d2216150fb802ae400b12c80e12120f0e2215251fb802ae4041222f
1e22221f1e2225010d292f0f3b151c3b1616150e2f210b0a292101930407
001f3b250626210f0801081a332c000e201e0f1d4f1d5f1d6f1d041d1932
5e8e18b8012c852b4e10f45d3c4dfd3c3c4e10f65d4ded003fed3c3fe4ed
3fed3f3c10ed10ed1112393910fd3d12392f180110f5f4c40010fd3d1239
2f180110f5f4c40010fd3d12392f180110f5f4c43130004bb00c534bb024
515a58b2280c30bafff4002dfff4b42b0c0d2001baffe20031ffddb12723
38383838383838385901715d0071012b2b01153636333216161514002322
271133321615140623212226353436333311232226353436330134262322
06151416333236012a4bac757cd273fefdbde18ccc1e1a1a1efe6f1e1a1a
1e71711e1a1a1e039dd39899d4d49997d40362995b5c74cf72b5feffb7fe
061713121817131317043b18131218fe6991cfd09091d0cf>CourierNewPSMT AddT42Char 
3 402 86 <000100cfffdf03fe0380004401f14088143f1c4102124c0059006944ac20
ac37a138cc13c942de13d616d63edb42eb13e434e842fc13f434f842120b
130616053e09421f131516153e1b428b229534bb0f0b57135a3869386a3b
7a387e3b8938893ba514b2140a8e3bb51f0251082b29232631403d3c341a
180f0e07150c390034323023042e360f0e0c030a000311193b3d3d211121
430ab80135b403202e012eb80196401c26362121003b075539214f1e5f1e
6f1e031e1a463154233b29152140b8ffc040160f193f40596f2901291945
43070306260a210b5e8018b8012c852b003f3f3f3f014e10f45d4df4012b
ed10fde44e10f65d4dfdfded0010ed10ed5d10ed10fd11392fed11123912
17391112173901111239121739111239391239313043794038374212201c
251325173e151f003b1b391f013720391f011242151f00163f181f001718
3e3d3a1d3c1f011b1a3b3c381f361f001441111f01002b2b103c103c2b10
3c103c2b012b2b2b2b2b2b8181004bb011534bb024515a58b43b14340a1c
bcffe70017ffec0044ffecb23e1437b8ffecb322163c1c38383838383838
383859015d7100715d435c58b90038ffec40090d163f3b140d163f38b8ff
ec401810153f3b1410153f44140f143f44140c103f44140b0f3f1cb8ffec
b30f193f38b8ffecb70f193f00140f193f002b2b2b2b2b2b2b2b2b2b5900
5d0134363332161515140623222627262726232207061514171617161716
161514062322271406062322263535343633321615141716163332363534
27262426263534363332037c181213181813111702063852878d4e3b4630
86af44615fcec7c77f08150d1218171312191723996fa4a05152fec7884c
d493ae032b1d1a1a1f901e1a16193c2738392b353c281c0f1318237c486b
a76522140e1a1ead1e1a19152e1f303f7a444e2f2f2034683c6c7f00>CourierNewPSMT AddT42Char 
CourierNewPSMT /CharStrings get begin
/one 20 def
/two 21 def
/p 83 def
/s 86 def
end
CourierNewPSMT /Encoding get
dup 49 /one put
dup 50 /two put
dup 112 /p put
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/EDYAIM+CourierNewPSMT*1 
[49{/.notdef}rp /one /two /three /four 2{/.notdef}rp /seven 39{/.notdef}rp 
/underscore 4{/.notdef}rp /d 4{/.notdef}rp /i 6{/.notdef}rp /p 2{/.notdef}rp 
/s 140{/.notdef}rp]
EDYAIM+CourierNewPSMT nf
EDYAIM+CourierNewPSMT*1 [9 0 0 -9 0 0 ]msf
376.2 7.65576 mo
(p1s2)
[5.39917 5.39914 5.39914 0 ]xsh
151.92 93.9961 mo
151.92 111.576 li
200.7 111.576 li
200.7 93.9961 li
192.54 93.9961 li
198.12 71.9761 li
180.36 93.9961 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 0 colr
ef
.75 lw
1 lc
1 lj
10 ml
151.92 93.9961 mo
151.92 111.576 li
200.7 111.576 li
200.7 93.9961 li
192.54 93.9961 li
198.12 71.9761 li
180.36 93.9961 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
true set_gvm
%ADOBeginSubsetFont: PBAAAA+ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /PBAAAA+ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f320cdf326b000000cc000000566376
7420962ad27600000124000006306670676dcc79599a000007540000066e
676c796630c67dc3000053500000350868656164ce98269200000dc40000
003668686561123312ff00000dfc00000024686d74780e34584000000e20
00001a286c6f6361014aeca80000284800001a2c6d6178700b470ca80000
4274000000206e616d65f06e391000004294000005bb7072657052fec4e9
0000485000000aff67646972000000000000000000000000000103880190
00050000059a05330000011b059a0533000003d1006602120805020b0604
02020202020400007a878000000000000008000000004d6f6e6f00400020
fffc05d3fe510133073e01b2400001ffffff0000000005ba001905ba001a
05a70019042600180000ffe70000ffe80000ffe7fe69ffe805ba0019fe69
ffe802ea000000b8000000b80000000000a800ad016900ad00bf00c201f0
001800af00b900b400c800170044009c007c009400870006005a00c80089
005200520005004400940119ffb4002f00a1000300a100cd00170057007e
00ba00160118ffe9007f008503d300870085000d002200410050006f008d
014cff75005c00df04830037004c006e00700180ff58ff8eff92ffa400a5
00b903c8fffd000b001a0063006300cdffee05d8ffdc002d005c00950099
00df019209b500400057008000b9039d0072009a035d0401ff67fffa0003
0021007700cd0004004d00cd01c0022b004c006500e70118017c034305d8
ffa3ffb0ffc40003001c005d0068009a00ba013501470221055cff4dffcd
0016002d00780080009900b200b600b600b800bd00da010c05f0ffa4fff0
0019002c0049007f00b400ce01c003fefd81fe3f00000005001800290039
0049006f00be00c700d0012301c1026f050c05320540057affd400140031
0055005700a700b400e601f7027e027e027f03c60446ff42000e00850091
00bf00c200c500e1011a012f014f01560229026f029e03720008002c0031
0031006400690089009800c700de012b01b6020c02cf03a304ab04fb061d
fee0ff0e00060026009b009d00c1010d011801200173018201d601e30243
025f029b02e2039404a904d20761001c005e006d008d00ab00f701120138
0151015b0168017c01870191019901cd01d001e802410254026b02ef0368
037103bd044204420453047304830586058b06e8fe58fec4fed1fef7ff32
ff860051007c008100910095009e00b400b900cf00d900d900df00e20105
010b010e010e012001210155017b017b017e018d01a201a801a901b401d0
01d001e201e901f201f501fb020002000206021b02210222022202230272
02770294029c02cf02cf02d002ec02f903170322032b0335033c0359036f
037103870390039003b503e1041a04cf04ff053205320596059f05a805ab
05c205f0060c0782080008ccfca3fd2afddefe00fe88fe96feb2feb4ffe1
00150019001a001c001f003c005100610061006a0078009600a500af00d3
010c0118011a012a013e014c0151015f016a0171017801820184019a01a5
01a801a901ae01bc01cd01d701ef0200020d021c02210222022e02350242
024f024f025e026502710290029202b402d602fa0307030b030f0315032a
0347035d036503740379039603b003cc03dd03e203f603fc03fc03ff040a
041f04220426042b0447045f0475049e04e704e7055c05cb05e5060a066d
068606b806f10736073e07500751075d078f07b607d4086000b600c300b5
00b700000000000000000000000001e00381034503b5008e0233041902ce
02ce002d005f0064034d023f000002a80188027d01b402240578063b023b
014e00f00426029402c6029f02f6023b034d014b0153006a023100000000
0000061404aa0000003c04c300ed04bc026502ce03b50078060c017e02ef
060c00b201000239000001c50330042b03cb00da03df010704a100db040a
011701ed02a70350010b01bd043e05580021039c00ae0371017d00b50245
00000afb088c012b014e01aa00870054013201f803ff0003024e00b40037
03e30083006b02d800ed00770088009701640467008e0033017c00e700a6
029e0329056e062a061501c90269048a021301b4000204a9000002390124
010305140084015d039a06ef02d9007500cf040a00de03ac04bc02cf02ae
034d04f005520168006d007d00860071ff810079055804d2016700030156
002504e00094007c033204210094007f0072005c002f00b6001800ba00b8
0041034d00720018001f004c016a01550099009a009a009800b200040078
006900140057006e00ce00b4065402b80067050e016500e7000004cbfe52
005affa60099ff67006eff92002dffd40087ff7c00b800a800e5008f00a8
0185fe7b0070001e00d900de014c054602cf0546ff2d028a02d902530296
00b700000000000000000000000000000125011800ea00ea00ae0000003e
05bb008a04d70053003fff8cffd500150028002200990062004a00e4006d
00ee00e5004803c00033fe4e02b1ff460370007905df0051ffa7ff1f010a
0068ff6c004f00bc00a507050061072b4043555441403f3e3d3c3b3a3938
373534333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19
1817161514131211100f0e0d0c0b0a090807060504030201002c45234660
20b02660b004262348482d2c452346236120b02661b004262348482d2c45
234660b0206120b04660b004262348482d2c4523462361b0206020b02661
b02061b004262348482d2c45234660b0406120b06660b004262348482d2c
4523462361b0406020b02661b04061b004262348482d2c0110203c003c2d
2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320b0
4d44235920b09051582320b00d44235921212d2c20204518684420b00160
2045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b432343
0b2d2c00b0172370b101173e01b0172370b10217453ab10200080d2d2c45
b01a234445b01923442d2c2045b00325456164b050515845441b2121592d
2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b0
0743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364
615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb017
23442d2cb01243588745b0112bb0172344b0177ae41b038a45186920b017
23448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae4595918
2d2c2d2cb0022546608a46b040618c482d2c4b53205c58b002855958b001
85592d2c20b0032545b019234445b01a23444565234520b00325606a20b0
09234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a
54582321b03f1b235961441cb114008a5279b31940201945208a54582321
b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d
4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1101143
2343650b2d2c4b525845441b2121592d2c0120b003252349b04060b02063
20b000525823b002253823b002256538008a63381b212121212159012d2c
4bb06451584569b00943608a103a1b212121592d2c01b005251023208af5
00b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b006
2510f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c
2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76
b8022323701020b802234520b0005058b00161593a2f182d2c21210c6423
648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b0
02602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c
0c6423648bb84000626023212d2cb4000100000015b00826b00826b00826
b008260f10161345683ab001162d2cb4000100000015b00826b00826b008
26b008260f1016134568653ab001162d2c4b53234b515a5820458a60441b
2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121
592d2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b03
592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425
060c6423646164b807085158b00425b00425012046b01060482046b01060
48590a21211b2121592d2cb012435c580cb00425b00425060c6423646164
b807085158b00425b00425012046b8fff060482046b8fff06048590a2121
1b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b0
3b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a03
4b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c4b5258b004
25b0042549b00425b00425496120b0005458212043b0005558b00325b003
25b8ffc038b8ffc038591bb04054582043b0005458b00225b8ffc038591b
2043b0005458b00325b00325b8ffc038b8ffc0381bb00325b8ffc0385959
5959212121212d2c462346608a8a462320468a608a61b8ff806223201023
8ab902c202c28a70456020b0005058b00161b8ffba8b1bb0468c59b01060
68013a2d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b94000020063b804
00885458b202400243604259595959592d2cb0024354584b53234b515a58
381b2121591b21212121592d000000010000000300001a8cdeb15f0f3cf5
081b080000000000a2e3272a00000000b9d5b4f6faaffd671000080c0000
0009000100010000000000010000073efe4e00431000faaffe2610000001
0000000000000000000000000000068a0600010000000000023900000239
0000023900b002d7005e0473001504730049071d0077055600580187005a
02aa007c02aa007c031d004004ac0072023900aa02aa0041023900ba0239
000004730055047300df0473003c047300560473001a047300550473004d
047300610473005304730055023900b9023900aa04ac007004ac007204ac
00700473005a081f006f0556fffd0556009605c7006605c7009e055600a2
04e300a80639006d05c700a4023900bf04000037055600960473009606aa
009805c7009c063900630556009e0639005805c700a10556005c04e30030
05c700a105560009078d0019055600090556000604e300290239008b0239
00000239002703c100360473ffe102aa00590473004a0473008604000050
047300460473004b02390013047300420473008701c7008801c7ffa20400
008801c7008306aa00870473008704730044047300870473004802aa0085
0400003f02390024047300830400001a05c700060400000f040000210400
002802ac0039021400bc02ac002f04ac00570556fffd0556fffd05c70068
055600a205c7009c0639006305c700a10473004a0473004a0473004a0473
004a0473004a0473004a040000500473004b0473004b0473004b0473004b
023900bd023900230239ffe5023900090473008704730044047300440473
004404730044047300440473008304730083047300830473008304730049
033300800473006b0473001b0473005102cd006d044c000104e3009905e5
000305e50003080000e102aa00de02aa003d0464004e0800000106390053
05b4009a0464004e0464004d0464004d0473fffd049c00a003f4003805b4
007a069600a1046400000231000002f6002f02ec002d0625007f071d0044
04e3008104e3009e02aa00e804ac0072046400540473002e0464003304e5
001a047300860473008c080000ef0556fffd0556fffd0639006308000081
078d00520473fffc0800000002aa005302aa004701c7008001c7006c0464
004e03f4002f04000021055600060156fe390473ffe402aa005c02aa005c
040000170400001704730049023900b901c7006c02aa0047080000250556
fffd055600a20556fffd055600a2055600a20239008d0239ffe002390004
0239001506390063063900630639006305c700a105c700a105c700a10239
00c602aa001902aa000602aa001d02aa002e02aa00e502aa00a202aa006b
02aa003a02aa00b702aa00280473000001c700030556005c0400003f04e3
002904000028021400bc05c7fffd0473004905560006040000210556009e
0473008704ac007204ac00a102aa006b02aa001902aa002106ac006b06ac
006b06ac0021047300000639006d04730042023900b10556005c0400003f
05c700660400005005c700660400005004730046046bffe102aa01f10556
fffd0473004a0556fffd0473004a05c7009e04eb004705c7fffd055600a2
0473004b055600a20473004b0473009601c7004204730096025500880473
009a02ac008305c7009c0473008705c7009c047300870639006304730044
05c700a102aa008505c700a102aa003c0556005c0400003f04e300300239
002404e300300300002305c700a10473008305c700a10473008304e30029
0400002804e3002904000028046800a4063900600662005504a000480474
00480391006204f000440329002e05300048046bffe1040000b002eb0052
08c000330800004f040000990800004f040000990800004f040000980400
009807d5016a05c0009e04ab007204d5009d04ac007104d5022204d50105
05abffe9050001c905ab027e05abffe905ab027e05abffe905ab027e05ab
ffe905abffe905abffe905abffe905abffe905ab01c005ab027e05ab01c0
05ab01c005abffe905abffe905abffe905ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905ab027e05ab01c005ab01c005abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905ab02d6
05ab006605abffea05d5ffff04d500920800000007eb013007eb012007eb
013007eb012004d500b204d5008004d5002a082b0198086b01b807550010
060000f40600006f0440003a0540003704c0003f04150040040000250600
005505e100bf038d008904d5ffd90180008002d50086071500610296000f
04d5009202d6008302d6008304d500b202d600700556fffd0473004a05c7
00660400005005c7006604000050055600a20473004b055600a20473004b
055600a20473004b0639006d047300420639006d047300420639006d0473
004205c700a40473008705c7001f047300060239ffce0239ffce0239ffe4
0239ffe40239fff60239fff5023900a301c700660400003701c7ffa20556
009604000088040000860473009601c7fffa05c7009c0473008705c900a5
0473008b0639006304730044063900630473004405c700a102aa006b0556
005c0400003f04e300300239000c05c700a10473008305c700a104730083
05c700a10473008305c700a104730083078d001905c70006055600060400
002101c700890556fffd0473004a08000001071d00440639005304e30081
023900b9078d001905c70006078d001905c70006078d001905c700060556
00060400002101c7008a02aaffe10473001b04cd005a06ac006b06ac0022
06ac002206ac004a02aa00e202aa006b02aa00de02aaffea0557ffff0646
ffa706b4ffa80312ffa80632ffa706d8ffa70605ffa701c7ff780556fffd
055600960558fffe055600a204e3002905c700a4023900bf055600960558
000b06aa009805c7009c0533006d0639006305c700a40556009e04f20094
04e30030055600060556000906af007f05fb0061023900040556000604a0
0048039100620473008b01c7006b04600088049a008c0400001903870048
0473008b0473005c01c700890400008604000018049c00a00400001a0395
005c04730044048d008303db0056046000880433001105b4007a063f0057
01c7ffc9046000880473004804600088063f0057055700a206eb00320455
00a105c000640556005c023900bf02390004040000370875000d081500a4
06d5003104a900a10515000a05c000a00556fffd054000a7055600960455
00a1056b0000055600a20763000704d5004e05c000a105c000a104a900a1
0540001206aa009805c700a40639006305c000a00556009e05c7006604e3
00300515000a061500520556000905eb009f05550057075500a1078000a1
06550000071500a8054000a505c00055081500a405c7001a0473004a0495
005b0440008802eb008804ab00000473004b055afffb03ab003204780087
047800870380008604ab00180580008c046b008804730044045500880473
00870400005003aa0026040000210695004b0400000f0495008a042b0045
066b008d0695008d0500002805c0008b042b008404150030060000890455
001f0473004b0473000002eb00890415004b0400003f01c7008802390009
01c7ffa20740001306800083047300000380008604000021046b008803e9
00a1034a008808000041089500a00585002d02aa010102aa001e02aa0031
02aa003102aa010102aa007e02aa007e02aa008c02aa008c02aa010102aa
001002aa010102aa01210310007d02aa008c023300d202aa030b02aaff04
023900b90481006904560032033100190411002d04d1009601f9009b030f
005f04ca009b04b8008c01f9009b0413002803b0005003b4003c04ca009b
04cf005001f9009b02d2003c0498005a043c00190488006e045f007303b1
001903d4000a0466009604130028058e00640524002803f2009b03f2009b
03f2009b01e3005a0356005a0686009b01f9ffac041300280413002803b4
ff5703b4ff570448002d058e0064058e0064058e0064058e006404810069
048100690481006904560032033100190411002d04d10096024b0000034a
000004b8008c024b00000413002803b0005003b4003c04cf005002d2003c
0498005a0488006e045f007303d4000a0466009604130028058e00640524
002801f9009b0456003203b00050045f0073049b003c0000ffdc0000ff25
0000ffdc0000fe51028d00ab028d00a002da0043034d007901a8ffba019c
004601e50046019c0046019c004601ad0048019c004601b1004601510046
0435017c0435012e043500b7043500810435012c043500be043500af0435
00810435009a043500db04350085028d00c1043500b30600010006000100
02420036060001000435009e04350098043500cb06000100060001000600
0100060001000600010001b1004606000100060001000600010006000100
06000100060001000600010006000100051bffba06000100060001000600
010005b5003a05b5003a01f4ffba01f4ffba060001000600010006000100
060001000481003604350036043dffba043dffba03e9004a03e9004a067f
0014077600140327ffba041effba067f0014077600140327ffba041effba
051b003204b5002406000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000600010001cf003001b1004601b1004601b1004001b1
004606000100060001000000ffdc0000fe510000ff160000ff160000ff16
0000ff160000ff160000ff160000ff160000ff160000ff160000ffdc0000
ff160000ffdc0000ff200000ffdc0473004a080000000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
0100060001000600010006000100028d007f028d005d0600010004ee0015
034d007901a8000e01d6ffdc01a8005601d60010037500320375003201a8
002d01d60013051b003204b5002401f4ffba01f4ffba01a8009301d60013
05b5003a05b5003a01f4ffba01f4ffba024200000300fff705b5003a05b5
003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba02b3005f02b3005f02b3005f02b3005f
03e9004a03e9004a03e9004a03e9004a0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba04a7
ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba045a002a039a0036
0435ffba0327ffba045a002a039a00360435ffba0327ffba064f0027064f
00270224ffba021affba04a7004604a700460224ffba021affba04cf002d
04cf002d0327ffba0327ffba040d0047040d004701a8ffba01a8ffba02b4
002302b400230327ffba0327ffba043500450435004501f4ffba01f4ffba
024200360300fff7039affba0327ffba0375003203750032051b003204b5
0024051b003204b5002401f4ffba01f4ffba045a004004ce0049045a0026
04ce0039045a005304ce004a045a005304ce004a0600010006000100019c
0046019c00460600010006000100060001000151004601b1004606000100
0600010001ad004801e5004606000100060001000600010001b1004601b1
004601b1004601b1004601b1004001cf003006000100019c0046019c0046
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100028d00ca028d00c7028d00c6060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100060001000100ffba0800
ffba1000ffba06dc0063053f004406d500a1055b00830000fddc0000fc2f
0000fca60000fe540000fcd70000fd730000fe290000fe0d0000fd110000
fc670000fd9d0000fbf50000fc720000fed50000fed50000ff02041b00a0
06ac006b06ac00190000feb60000fd730000fe080000fca60000fe530000
fd110000fbc80000faf40000faaf0000fc720000fbaa0000fb6a0000fcf1
0000fc7d0000fbdd0000fcc10000fb980000fdea0000fe840000fdc20000
fcf10000fd5f0000fe760000febc0000fceb0000fd6c0000fd580000fc90
0000fd150000fc2c0000fc130000fc120000fb960000fb9601c700880556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd
0473004a055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b055600a20473004b055600a20473004b
055600a20473004b0239006301c7001f023900ba01c7007c063900630473
004406390063047300440639006304730044063900630473004406390063
047300440639006304730044063900630473004406dc0063053f004406dc
0063053f004406dc0063053f004406dc0063053f004406dc0063053f0044
05c700a10473008305c700a10473008306d500a1055b008306d500a1055b
008306d500a1055b008306d500a1055b008306d500a1055b008305560006
04000021055600060400002105560006040000210556fffd0473004a0239
ffe201c7ffb0063900630473004405c700a10473008305c700a104730083
05c700a10473008305c700a10473008305c700a1047300830000fefe0000
fefe0000fefe0000fefe0455fffd02eb000c07630007055afffb04a900a1
0380008604a900a10380008605c700a4046b00880473fffd040000140473
fffd04000014055600090400000f05550057042b0045055500a104730087
0605006304730055063900600473004405b5003a01f4ffba0224ffba021a
ffba04a7004601f4009e01f4001001f4001b01f4001001f4006b01f4fff9
0227ffce01a8000f01a8fff502aa00a402aa00a401a8000e01a8005601a8
00560000ffcf01a8000f01d6ffbf01a8fff501d6ffcd01a8001d01d6fff5
01a8009301d6001303750032037500320375003203750032051b003204b5
002405b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba048100360435
0036043dffba043dffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
02b3003202b3003202b3005f02b3005f02b3005f02b3005f02b3003202b3
003202b3005f02b3005f02b3005f02b3005f02b3005f02b3005f02b30038
02b3003802b3004902b3004903e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
03e9004a03e9004a03e9004a03e9004a0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba0692003e0692003e043fffba
043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5
ffba06c5ffba04a7ffba04a7ffba045a002a039a00360435ffba0327ffba
064f0027064f0027064f00270224ffba021affba064f0027064f00270224
ffba021affba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba064f0027064f00270224ffba021affba04a7004604a7
004604a7004604a70046067f0014077600140327ffba041effba067f0014
077600140327ffba041effba04cf002d04cf002d0327ffba0327ffba04cf
002d04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba
067f0014077600140327ffba041effba067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba067f0014077600140327ffba041effba040d0047040d004701a8
ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d0047
01a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba043500450435
004501f4ffba01f4ffba0435004504350045043500450435004504350045
0435004501f4ffba01f4ffba04350045043500450481003604350036043d
ffba043dffba024200360300fff7031a001a031a001a031a001a03750032
037500320375003203750032037500320375003203750032037500320375
003203750032037500320375003203750032037500320375003203750032
051bffba04b5ffba051b003204b5002401f4ffba01f4ffba037500320375
0032051b003204b5002401f4ffba01f4ffba051b003204b50024067f0045
067f0045067f0045067f004501a800280000fe290000fea20000ff300000
ff1d0000ff120000ff920000fe7e08fc003208ad00320000ffb50000ffb6
0000feed0000ff640000fe7e0000ff9f018d000002f6fffd0000fe820000
ff1004cd00320000ff580000ff580000ff640692003e0692003e043fffba
043fffba08c9003e08c9003e06c5ffba06c5ffba045a002a039a00360435
ffba0327ffba034d007902b400230242003601f4ffba0290ffba01f4002f
01f4003b01f4001201f400b101f4006d067f00140776001401f9009b0000
fed902bc000003f2009b045afff504cefff5045a005304ce004a045a0053
04ce004a045a005304ce004a045a005304ce004a045a005304ce004a045a
005304ce004a04350071043500ad045a000f04ce000f000000000000002a
0000002a0000002a0000002a0000002a0000002a0000002a0000002a0000
002a0000002a0000002a0000002a0000002a0000002a0000002a000000a2
000000a2000000de000000de0000029a0000029a0000029a0000029a0000
029a0000029a0000029a0000029a0000052e0000052e0000052e0000052e
0000052e0000052e0000052e0000052e0000052e0000052e0000052e0000
066800000668000006680000066800000668000006680000066800000668
0000089e0000089e0000089e0000089e0000089e0000089e0000089e0000
089e0000089e0000089e0000089e0000089e0000089e0000089e0000089e
000009de000009de000009de000009de000009de000009de000009de0000
0cb000000e8e00001042000011f6000013b400001508000016f80000189c
000019900000199000001c2800001d2400001f540000211a000022dc0000
24a0000024a0000025a60000294e00002a7200002c1000002e2e00002e2e
00002e2e000030860000326e0000326e0000326e0000326e0000326e0000
326e0000326e0000326e0000326e0000326e0000326e0000326e0000326e
0000326e0000326e0000326e0000326e0000326e0000326e0000326e0000
326e0000326e0000326e000032b8000032b8000032b8000032b8000032b8
000032b8000032b8000032b8000032b8000032b8000032b8000032b80000
32b8000032b8000032b8000032b8000032b8000032b8000032b8000032b8
000032b8000032b8000032b8000032b8000032b80000333a0000333a0000
333a0000333a0000333a0000333a0000333a0000333a0000333a0000333a
0000333a0000333a0000333a0000333a0000333a0000333a0000333a0000
333a0000333a0000333a0000333a0000333a0000333a0000333a0000333a
0000333a0000333a0000333a0000333a0000333a000033a2000033a20000
33a2000033a2000033a2000033a2000033a2000033a2000033a2000033a2
000033a2000033a2000033a2000033a2000033a2000033a2000033a20000
33a2000033a2000033a2000033a2000033a2000033a2000033a2000033a2
000033a2000033a2000033a2000033a2000033a2000033a2000033a20000
33a2000033a2000033a2000033a2000033a2000033a2000033a2000033a2
000033a2000033a200003424000034240000342400003424000034240000
342400003424000034240000342400003424000034900000349000003490
00003490000034c4000034c4000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800003508000035080000350800003508000035080000350800003508
000035080000350800003508000035080000350800003508000035080000
350800010000068a0100003f0076000700020010002f00560000040d0aff
000300020000000e00ae000000030000000000fe00000000000300000007
00c400fe0001000000000000007f01c20001000000000003000e02410001
000000000004000e024f0001000000000006000e025d0001000000000007
0062026b000300010409000000fe02cd0003000104090001001c03cb0003
000104090002000e03e70003000104090003001c03f50003000104090004
001c04110003000104090006001c042d000300010409000700c404490054
0079007000650066006100630065002000a900200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e00200070006c0063002e002000440061007400610020
00a900200054006800650020004d006f006e006f00740079007000650020
0043006f00720070006f0072006100740069006f006e00200070006c0063
002f005400790070006500200053006f006c007500740069006f006e0073
00200049006e0063002e00200031003900390030002d0031003900390032
002e00200041006c006c0020005200690067006800740073002000520065
0073006500720076006500640041007200690061006c00ae002000540072
006100640065006d00610072006b0020006f006600200054006800650020
004d006f006e006f007400790070006500200043006f00720070006f0072
006100740069006f006e00200070006c0063002000720065006700690073
0074006500720065006400200069006e0020007400680065002000550053
00200050006100740020002600200054004d0020004f00660066002e0020
0061006e006400200065006c0073006500770068006500720065002e5479
70656661636520a920546865204d6f6e6f7479706520436f72706f726174
696f6e20706c632e204461746120a920546865204d6f6e6f747970652043
6f72706f726174696f6e20706c632f5479706520536f6c7574696f6e7320
496e632e20313939302d313939322e20416c6c2052696768747320526573
6572766564474c4b4449452b417269616c4d54474c4b4449452b41726961
6c4d54474c4b4449452b417269616c4d54417269616ca82054726164656d
61726b206f6620546865204d6f6e6f7479706520436f72706f726174696f
6e20706c63207265676973746572656420696e2074686520555320506174
202620544d204f66662e20616e6420656c736577686572652e0054007900
7000650066006100630065002000a900200054006800650020004d006f00
6e006f007400790070006500200043006f00720070006f00720061007400
69006f006e00200070006c0063002e00200044006100740061002000a900
200054006800650020004d006f006e006f00740079007000650020004300
6f00720070006f0072006100740069006f006e00200070006c0063002f00
5400790070006500200053006f006c007500740069006f006e0073002000
49006e0063002e00200031003900390030002d0031003900390032002e00
200041006c006c0020005200690067006800740073002000520065007300
6500720076006500640047004c004b004400490045002b00410072006900
61006c004d00540052006500670075006c006100720047004c004b004400
490045002b0041007200690061006c004d00540047004c004b0044004900
45002b0041007200690061006c004d00540047004c004b00440049004500
2b0041007200690061006c004d00540041007200690061006c00ae002000
540072006100640065006d00610072006b0020006f006600200054006800
650020004d006f006e006f007400790070006500200043006f0072007000
6f0072006100740069006f006e00200070006c0063002000720065006700
6900730074006500720065006400200069006e0020007400680065002000
55005300200050006100740020002600200054004d0020004f0066006600
2e00200061006e006400200065006c007300650077006800650072006500
2e00b1540f4122031700ef031700ff03170003001f0317002f0317004f03
17005f0317008f0317009f03170006000f0317005f0317006f0317007f03
1700bf031700f00317000600400317b2923340b80317b28b3340b80317b3
6a6c3240b80317b2613340b80317b35c5d3240b80317b357593240b80317
b34d513240b80317b344493240b80317b23a3340b80317b331343240b803
17b32e423240b80317b3272c3240b80317b312253280b80317b30a0d32c0
4116031600d00316000200700316000102c4000f0101001f00a0031500b0
031500020306000f0101001f00400312b32426329fbf0304000103020301
0064001fffc00301b20d1132410a02ff02ef0012001f02ee02ed0064001f
ffc002edb30e11329f414a02e200af02e200bf02e2000302e202e202e102
e1007f02e00001001002e0003f02e0009f02e000bf02e000cf02e000ef02
e0000602e002e002df02df02de02de000f02dd002f02dd003f02dd005f02
dd009f02dd00bf02dd00ef02dd000702dd02dd001002dc0001000002dc00
01001002dc003f02dc000202dc02dc001002db000102db02db000f02da00
0102da02daffc002d3b2373932b9ffc002d3b22b2f32b9ffc002d3b21f25
32b9ffc002d3b2171b32b9ffc002d3b2121632b802d2b2f9291fb802e3b3
202b1fa0413002d400b002d40002000002d4001002d4002002d4005002d4
006002d4007002d40006006002d6007002d6008002d6009002d600a002d6
00b002d60006000002d6001002d6002002ca002002cc002002d6003002d6
004002d6005002d6000802d0b2202b1fb802cfb226421f411602ce02c700
17001f02cd02c80017001f02cc02c60017001f02cb02c50017001f02c902
c5001e001f02ca02c6b21e1f00410b02c6000002c7001002c6001002c700
2f02c5000502c1b324121fff411102bf0001001f02bf002f02bf003f02bf
004f02bf005f02bf008f02bf000602bf0222b2641f12410b02bb00ca0800
001f02b200e90800001f02a600a20800406a1f4026434932402043493240
263a3d3240203a3d329f209f26024026969932402096993240268e923240
208e92324026848c324020848c3240267a813240207a813240266c763240
206c76324026646a324020646a3240265a5f3240205a5f3240264f543240
204f5432b8029eb724271f374f6b0120410f027700300277004002770050
0277000402770277027700f90400001f029bb22a2a1fb8029a402b292a1f
80ba0180bc0180520180a201806501807e01808101803c01805e01802b01
801c01801e0180400180bb0138000100800140b40180400180bb01380001
0080013940180180ca0180ad018073018026018025018024018020013740
b80221b2493340b80221b2453340b80221b341423240b80221b33d3e320f
410f0221003f0221007f0221000300bf022100cf022100ff022100030040
0221b320223240b80221b3191e3240b80222b32a3f3240b80221b32e3a32
6f414802c3007f02c3008f02c300df02c30004002f02c3006002c300cf02
c30003000f02c3003f02c3005f02c300c002c300ef02c300ff02c3000600
df02220001008f02220001000f0222002f0222003f0222005f0222007f02
2200ef0222000600bf022100ef02210002006f0221007f022100af022100
03002f0221003f0221004f0221000302c302c30222022202210221401d10
1c102b1048038f1c010f1e014f1eff1e023700161600000012110811b801
0db6f70df8f70d00094109028e028f001d001f0290028f001d001f028fb2
f91d1fb80198b226bb1f41150197001e0401001f013900260125001f0138
00730401001f0135001c0801001f0134001c02ab001f0132b21c561fb801
0fb2262c1fba010e001e0401b61ff91ce41fe91cb80201b61fe81cbb1fd7
20b80401b21fd51cb802abb61fd41c891fc92fb80801b21fbc26b80101b2
1fba20b80201b61fb91c381fadcab80401b21f8126b8019ab21f7e26b801
9ab61f7d1c471f6b1cb80401b21f6526b8019ab21f5e73b80401400f1f52
265a1f481c891f441c621f4073b80801b61f3f1c5e1f3c26b8019ab21f35
1cb80401b61f301cbb1f2b1cb80401b61f2a1c561f291cb80101b21f231e
b80401b21f5537b80168402c07960758074f07360732072c0721071f071d
071b071408120810080e080c080a080808060804080208000814b8ffe040
2b0000010014061000000100060400000100041000000100100200000100
0200000001000002010802004a00b013034b024b5342014bb0c063004b62
20b0f65323b8010a515ab005234201b0124b004b5442b0382b4bb807ff52
b0372b4bb007505b58b101018e59b0382bb00288b801005458b801ffb101
018e851bb0124358b900010111858d1bb900010128858d5959001816763f
183f123e113946443e113946443e113946443e113946443e11394660443e
11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b182b
1db0964b5358b0aa1d59b0324b5358b0ff1d594bb09353205c58b901f201
f04544b901f101f045445958b9033e01f2455258b901f2033e4459594bb8
015653205c58b9002001f14544b9002601f145445958b9081e0020455258
b90020081e4459594bb8019a53205c58b9002501f24544b9002401f24544
5958b909090025455258b9002509094459594bb8040153205c58b1732445
44b1242445445958b917200073455258b9007317204459594bb804015320
5c58b1ca254544b1252545445958b9168000ca455258b900ca1680445959
4bb03e53205c58b11c1c4544b11e1c45445958b9011a001c455258b9001c
011a4459594bb05653205c58b11c1c4544b12f1c45445958b90189001c45
5258b9001c01894459594bb8030153205c58b11c1c4544b11c1c45445958
b90de0001c455258b9001c0de04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b
2b01b33b59635c456523456023456560234560b08b766818b080622020b1
63594565234520b003266062636820b003266165b059236544b063234420
b13b5c4565234520b003266062636820b003266165b05c236544b03b2344
b1005c455458b15c406544b23b403b4523614459b3475034374565234560
23456560234560b089766818b080622020b134504565234520b003266062
636820b003266165b050236544b034234420b147374565234520b0032660
62636820b003266165b037236544b0472344b10037455458b137406544b2
4740474523614459004b5342014b5058b108004259435c58b108004259b3
020b0a124358601b2159421610703eb0124358b93b21187e1bba040001a8
000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b2b
59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b010
2342b0112342002b74757375001845694445694445694473737373747573
74752b2b2b2b74752b2b2b2b2b7373737373737373737373737373737373
73737373737373732b2b2b45b0406144737400004bb02a534bb03f515a58
b1070745b040604459004bb03a534bb03f515a58b10b0b45b8ffc0604459
004bb02e534bb03a515a58b1030345b040604459004bb02e534bb03c515a
58b1090945b8ffc06044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b75
2b2b2b2b2b2b2b435c58b9008002bbb301401e017400735903b01e4b5402
b0124b545ab012435c5a58ba009f02220001007359002b7473012b01732b
2b2b2b2b2b2b2b737373732b002b2b2b2b2b2b0045694473456944734569
44737475456944734569444569444569447374456944456944732b2b2b2b
2b732b002b732b74752b2b2b2b2b2b2b2b2b2b2b2b2b2b7374752b0000>
[13577 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 2526 68 <0002004affe8041c043e00280037022d402c090d092a190d1a2a290d2a2a
390d3615371b3a2a492a5d0d5d2a6a0d692a60308a0d86299a169b1aa90d
1528b8ffe8b40b0b065527b8ffe840190b0b0655a619aa28b619bb28c419
cf28d215dd28084416011eb8fff440110c0c065512120c0c0655050c0c0c
065535b8ffe040550c0c06551f171f182b2c2a343904392c4904482c5608
592b6608692b760c870cc90cf90df92b1137340e0104102f243417322114
185f296f2902291c2f0e3f0e8f0e9f0eff0e059f0eaf0eef0e030e0c0f0f
02550eb8ffeab4101002550eb8fff44015101006550e0c0d0d06550e060f
0f06550e0e1c0317b802aab61895141c1c0700b8fff4401a0c0c06550045
270a321c030b2961106100060d0d025500252124b8ffecb41010025524b8
ffec400b0d0d025524040c0c025524b8ffe4b40b0b025524b8fff4b40b0b
065524b8ffdc400b1010065524060f0f065524b8fffcb40c0c065524b802
5b400e27400026102620263026af260539b8ffc0b40e0e025526b8ffd6b6
0e0e0255263139b8ffc0400d1e23343039c03902a039013917b8fff44041
10100655172518222f24bf06cf06021f063f0602060e0f0f0255060c0d0d
025506180c0c0255060c0b0b0255060c0b0b0655060e0d0d065506100c0c
065506313810f62b2b2b2b2b2b2b5d71edf4ed2b105d712bf62b2b5dedf4
2b2b2b2b2b2b2b2b3cfd2be5e5003fed3fe42b3fedfde41112392f2b2b2b
2b2b5d71ed711112391112393901111217393130005d2b2b2b2b01715d2b
2b0071250606232226353436363736373637363534272623220607273e02
333216161716151514161723260306070e02151416333236373635033c64
b96aafbc477348356bda67013345887f791db0186ed08988aa5010091722
bc1c1762c46f5c326d6968a2261d835546ab854e814e140e0d1a24250a6e
2d3d597118718b4b40614a2e78f0fb853d3801dd281c10284d2f48605b4f
3d77>PBAAAA+ArialMT AddT42Char 
1 4162 71 <00020046ffe803df05ba0011001d015540a40a02040d250d340d440d0535
14351c5702540a5214531c6702640565096314601cc01fd405d513dd19e5
13e514ef17eb19e51de01fff1f161f1f2b1a3c163c1a4b1a701f901f072e
02240d2e163a02350d4b02450d4614491c570a560d670de506e716fa01f4
0e100115030e0b100f001b1c0b0711000a151c030b1833010025110f2510
10d011011011401160118011041f400b0b02551f400d0d02551112101002
5511b8fff440110f0f025511060e0e025511180d0d025511b8fff2400b0b
0b0655110e1010065511b8ffeeb40c0c065511b8fff840420d0d06551174
1224bf07cf07df07ff07041f073f074f0703071e0b0b025507180c0c0255
071e0d0d0255070c0b0b0655070c0d0d0655071a0c0c065507191e345018
2b4e10f42b2b2b2b2b2b5d714dedfd2b2b2b2b2b2b2b2b2b2b5d713c10ed
10fd3ce4003fed3f3c3fed3f3c11391112393130005d01715d0071213506
232226263534123633321617113311011416333236353426232206033865
c47fd5756ad48360962fb3fd20ac7576a5a87b78a1869e8cfba39f01038a
5141020efa460212cccac1c6daccc400>PBAAAA+ArialMT AddT42Char 
1 7460 80 <0001008700000626043e002301c7b9000dfff4b40d0d065508b8fff4b40d
0d065509b8ffd8404d0b0d342504e404e409e117e52005d505f620021708
202309181b20090303231e1c06151c0b0b06070106231a19100ad0250190
25a025022517171a0e2590110111041010025511180f0f025511b8ffec40
0b0e0e025511140c0c025511b8ffe840170b0b025511020b0b0655110c10
10065511060f0f065511b8fffab40c0c065511b8fff8b40d0d065511b801
5d400c1825901b011b180f0f02551bb8ffec400b0e0e02551b140c0c0255
1bb8ffee40110b0b02551b040b0b06551b0a101006551bb8fffe400b0d0d
06551b0c0f0f06551bb8fffcb40c0c06551bb8015d4016000233232501d0
00019000a000021f003f004f000300b8fffe401d0e0e025500100d0d0255
00100c0c0255000c0b0b025500160b0b065500b8fffcb41010065500b8ff
f440140f0f0655000a0c0c0655000e0d0d065500192425b80178b3214750
182b2b4ef42b2b2b2b2b2b2b2b2b5d71723c4dfde410f42b2b2b2b2b2b2b
2b2b5dedf42b2b2b2b2b2b2b2b2b2b5dfd4e456544e67172003f3c3c3c3f
3f3c4d10ed10ed11173901111239123931304379400e0c141326140c111b
01120d151b01002b012b2b81015d005d2b2b2b3311331536363332161736
3332161511231134262623220615112311342623220606151187a132a66a
76971f7eca9eaab3235c3e7094b458644c813a0426954e5f6258baafb6fd
27029d6c5f3a95a4fd9702b27878509a91fdd900>PBAAAA+ArialMT AddT42Char 
1 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>PBAAAA+ArialMT AddT42Char 
PBAAAA+ArialMT /CharStrings get begin
/a 68 def
/d 71 def
/m 80 def
end
PBAAAA+ArialMT /Encoding get
dup 97 /a put
dup 100 /d put
dup 109 /m put
pop
end
%ADOEndSubsetFont
reset_gvm
/EDYAIN+ArialMT /PBAAAA+ArialMT findfont ct_VMDictPut
/EDYAIN+ArialMT*1 
[97{/.notdef}rp /a 2{/.notdef}rp /d 8{/.notdef}rp /m 146{/.notdef}rp]
EDYAIN+ArialMT nf
EDYAIN+ArialMT*1 [9 0 0 -9 0 0 ]msf
159.48 106.356 mo
(dama)
[4.98779 4.98781 7.48073 0 ]xsh
gsave
159.48 107.556 mo
191.94 107.556 li
191.94 98.2561 li
159.48 98.2561 li
cp
clp
true set_gvm
%ADOBeginSubsetFont: PBAAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+ArialMT gcheck setglobal} if
1 5384 74 <00020042fe5103ea043e001e002a016f40600b0b05142c0b25144c0b4514
06091d191d2c0b26142c23390b36144a0b46145607580b680bfa0af5150e
2e232c273e233e274c27902ca02c07362136293f2c460b46214529542154
29690763216329602c802cda27e821ee23ef271117160615b802b1b4281c
130701b802aa401020003000600070008000c000d0000700b8027d403205
1c1c0f0a45221c0c0a16153325330a251818d01701101740176017801704
2c400b0c02552c400d0d025517121010025517b8fff440110f0f02551706
0e0e025517160d0d025517b8ffea400b0b0b065517121010065517b8ffee
b40c0c065517b8fffc404a0d0d065517740f012500221f24bf0fcf0fdf0f
ff0f041f0f3f0f4f0f030f200b0b02550f1a0c0c02550f220d0d02550f1c
0b0b06550f0c0d0d06550f1a0c0c06550f192b2c74213450182b2b4ef42b
2b2b2b2b2b5d714dedf4ed10fd2b2b2b2b2b2b2b2b2b2b5d713c10fde4f6
3c003fede43fedfd5de43fede43f3c3130015d71005d7117171617163332
363736270623220235341236333217353311140606232226131416333236
35342623220666af0b3243747d88180e0176b0dbf06ed18dbc7aa665dba0
beea99a67d7ca8ad7a78a8581a512532645a37b08b013cdd9801018c9880
fc6af8cf78ab032ad1c0bfccc3c6c300>PBAAAA+ArialMT AddT42Char 
PBAAAA+ArialMT /CharStrings get begin
/g 74 def
end
PBAAAA+ArialMT /Encoding get
dup 103 /g put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/EDYAIN+ArialMT*1 
[97{/.notdef}rp /a 2{/.notdef}rp /d 2{/.notdef}rp /g 5{/.notdef}rp /m 
146{/.notdef}rp]
EDYAIN+ArialMT nf
EDYAIN+ArialMT*1 [9 0 0 -9 0 0 ]msf
181.98 106.356 mo
(g)sh
grestore
true set_gvm
%ADOBeginSubsetFont: PBAAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+ArialMT gcheck setglobal} if

1 0 3 <> PBAAAA+ArialMT AddT42Char 
1 4598 72 <0002004bffe8041e043e0015001d015340171f001c150255035d055d0955
0b65036b056f09650b0815b8ffe4b40d0d065511b8ffe440520d0d06551d
1c0d0d06552712d905fa14f61a0431123a19311c41124d1a411c51125c19
521c61126d1a611c78067815f602f618100016010f0d1717501660167016
03161c0f9010a010021010041b1c0a0700ba02aa0001ffc0b41010025501
b8ffc04010101006551001010195131c040b17400db8ffdcb40d0d02550d
b8ffeeb40d0d06550db8ffeab40c0c06550db8ffc04009272a34b00d010d
1a1fb8ffc0b32526341fb8ffc040411e2334301f011f163310240740242a
341f073f074f070307200b0b025507180c0c0255071c0d0d0255070e0b0b
0655071c0c0c065507160d0d065507191e3437182b4e10f42b2b2b2b2b2b
5d2b4dfde44e10712b2bf6712b2b2b2b4ded003fedfd5d2b2be43fed1239
2f5d3cfd713c011112393912393130015d005d2b2b2b0171720117060623
22001110003332001114072116163332360121262726232206035eba2cee
b9e9feef0114dcd5010e01fce80ab285638cfdda02510c3856897ca90156
17a3b4011f0103010c0128fedefef91020afba680195864368a6>PBAAAA+ArialMT AddT42Char 
PBAAAA+ArialMT /CharStrings get begin
/space 3 def
/e 72 def
end
PBAAAA+ArialMT /Encoding get
dup 32 /space put
dup 101 /e put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/EDYAIN+ArialMT*1 
[32{/.notdef}rp /space 64{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef 
/g 5{/.notdef}rp /m 146{/.notdef}rp]
EDYAIN+ArialMT nf
EDYAIN+ArialMT*1 [9 0 0 -9 0 0 ]msf
186.96 106.356 mo
(e )
[4.97881 0 ]xsh
269.82 106.536 mo
269.82 124.116 li
308.04 124.116 li
308.04 106.536 li
301.68 106.536 li
314.82 97.0561 li
292.14 106.536 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 0 colr
ef
269.82 106.536 mo
269.82 124.116 li
308.04 124.116 li
308.04 106.536 li
301.68 106.536 li
314.82 97.0561 li
292.14 106.536 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
true set_gvm
%ADOBeginSubsetFont: PBAAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+ArialMT gcheck setglobal} if
1 6300 76 <000200880000013c05ba0003000700cd405e09360b0b02554f099009a009
b009c009df09f0090700091f09700980099f09b009c009df09e009ff090a
1f09010001070402030906037e0100060506040a0607250500049f04a004
b004c004e00406c004f0040200042004d004e0040404b8fff8b410100255
04b8fffa40170e0e025504040c0c0255040a0b0b025504140b0b065504b8
ffeab41010065504b8fffeb40d0d065504b8fffc400a0c0c0655044e0847
50182b10f62b2b2b2b2b2b2b2b5d71723cfd3c003f3f3c3fed0111123939
111239393130015d72712b133533150311331188b4b4b404ebcfcffb1504
26fbda00>PBAAAA+ArialMT AddT42Char 
PBAAAA+ArialMT /CharStrings get begin
/i 76 def
end
PBAAAA+ArialMT /Encoding get
dup 105 /i put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/EDYAIN+ArialMT*1 
[32{/.notdef}rp /space 64{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef 
/g /.notdef /i 3{/.notdef}rp /m 146{/.notdef}rp]
EDYAIN+ArialMT nf
EDYAIN+ArialMT*1 [9 0 0 -9 0 0 ]msf
277.44 118.896 mo
(ei)
[4.97879 0 ]xsh
gsave
282.42 120.096 mo
296.94 120.096 li
296.94 110.796 li
282.42 110.796 li
cp
clp
EDYAIN+ArialMT*1 [9 0 0 -9 0 0 ]msf
284.4 118.896 mo
(g)sh
grestore
true set_gvm
%ADOBeginSubsetFont: PBAAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+ArialMT gcheck setglobal} if
1 5880 75 <00010087000003e805ba00140161b90016ffc0b315173403b8ffe0400e0d
0d0655250435034503ba0d0403b8ffe0403a1719341708110c1114030501
000f1c0507140b0a0c250940333634ff0901c0090116400b0b0255164010
10025509281010025509140e0e025509b8ffec40110d0d025509040c0c02
55091a0b0b025509b8fff6400b0b0b065509141010065509b8fff8400b0d
0d0655090a0f0f065509b8fff6b60c0c0655094e16b8ffc04017343634b0
16f016027016a016b016ff1604160214250100b8ffc04010333634f00001
00002000d000e0000400b8fffab41010025500b8fffa40170e0e02550004
0c0c025500080b0b025500040b0b065500b8fffa40160f0f065500020c0c
065500020d0d0655004e154750182b10f62b2b2b2b2b2b2b2b5d712b3cfd
3c105d712bf42b2b2b2b2b2b2b2b2b2b2b2b5d712bed003f3c3fed3f1139
113901123931304379400e060e07250e060c1b010d080f1b01002b012b2b
81002b5d2b012b33113311363332161615112311342623220606151187b4
7ec076ae4bb4756b508d3c05bafdf2925da49cfd5f02a1877b538e7dfdbb
>PBAAAA+ArialMT AddT42Char 
1 10574 87 <00010024fff2022a0599001700d8b9000affc0b323263409b8ffc0404123
263480190100010c0d0a0103001610092b0f0a06161c030b0f1022002201
0d12250c01ff070845094560077007800790070400072007a007b007c007
d0070607b8ffeeb41010025507b8fff4b40f0f025507b8fff2b40e0e0255
07b8fff8b40d0d025507b8fff8b40c0c025507b8fffab41010065507b8ff
f0400b0f0f065507060c0c065507b8ffe8b40d0d065507ba026a00180136
b166182b10f62b2b2b2b2b2b2b2b2b5d71f4e410ed3cfd3c10e4f43c003f
ed3f3cfd3c1139123911333310c93130015d2b2b25170623222626351123
353311371133152311141616333202101a4c3c626c2c8484b3b5b5132b28
1ea19f103e65a202638c01076cfe8d8cfd934d2c1a00>PBAAAA+ArialMT AddT42Char 
PBAAAA+ArialMT /CharStrings get begin
/h 75 def
/t 87 def
end
PBAAAA+ArialMT /Encoding get
dup 104 /h put
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/EDYAIN+ArialMT*1 
[32{/.notdef}rp /space 64{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef 
/g /h /i 3{/.notdef}rp /m 6{/.notdef}rp /t 139{/.notdef}rp]
EDYAIN+ArialMT nf
EDYAIN+ArialMT*1 [9 0 0 -9 0 0 ]msf
289.44 118.896 mo
(ht)
[4.97879 0 ]xsh
337.38 17.6761 mo
337.38 35.2561 li
346.26 35.2561 li
342.9 49.4761 li
359.58 35.2561 li
390.6 35.2561 li
390.6 17.6761 li
346.26 17.6761 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 0 colr
ef
337.38 17.6761 mo
337.38 35.2561 li
346.26 35.2561 li
342.9 49.4761 li
359.58 35.2561 li
390.6 35.2561 li
390.6 17.6761 li
346.26 17.6761 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
356.82 49.5361 mo
356.82 67.1761 li
376.68 67.1761 li
377.22 89.4361 li
385.14 67.1761 li
390.78 67.1761 li
390.78 49.5361 li
376.68 49.5361 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 0 colr
ef
356.82 49.5361 mo
356.82 67.1761 li
376.68 67.1761 li
377.22 89.4361 li
385.14 67.1761 li
390.78 67.1761 li
390.78 49.5361 li
376.68 49.5361 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
170.7 116.616 mo
170.7 134.136 li
263.94 134.136 li
263.94 116.616 li
248.4 116.616 li
241.92 90.2761 li
225.12 116.616 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 0 colr
ef
170.7 116.616 mo
170.7 134.136 li
263.94 134.136 li
263.94 116.616 li
248.4 116.616 li
241.92 90.2761 li
225.12 116.616 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
129 189.756 mo
404.58 189.756 li
404.58 134.676 li
129 134.676 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
0 gry
true set_gvm
%ADOBeginSubsetFont: PBAAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+ArialMT gcheck setglobal} if
1 13114 171 <000300ef0000071200cd00030007000b003c401206050201040a3c080807
070404030a0a3c09b80119b2073c05b80119b7033c00cb0cd9f5182b10f6
fdf6fdf6fd003f3c103c103c10ed17323130333533152135331521353315
efcd01decd01ddcecdcdcdcdcdcd>PBAAAA+ArialMT AddT42Char 
1 9638 86 <0001003fffe803b1043e00300317407b042214223a094a09442456226522
7c098e098424a613ab2cc2030d09171a1817304b2cd617051b0255020210
32010a185c085c095c0a5c0b5c0c5c0d6a086a096a0a6a0b6a0c6a0db426
b4270f27262427242936245a0a590b64266428742374248024930a9c0c92
28972c9530a40aa90ca327a428b326c5261628b8fff4b40d0d065522b8ff
f4b40d0d065523b8fff4b40d0d065524b8fff4b40d0d065528b8fff4b40c
0c065522b8fff4b40c0c065523b8fff4b40c0c065524b8fff4b40c0c0655
1db8ffde40121e395a0827250c0a041a202615040b2e1d1ab802aa402219
2c0b0b02551f193f194f195f19af19cf19060f191f196f19df19041f198f
190219bd02550015000002aa0001ffc040140b0b025510014001021001d0
0102000110010201b8ffc0b314163401b8ffc040100e113401012e5c1d6c
1d021d1c150704b8fff4b40b0b025504b8ffe6b41010065504b8ffe64013
0f0f0655041c2e0b1f1a011a24194013183432b8ffc0402f0f0f02551918
0f0f025519180d0d025519160c0c025519201010065519200f0f06551910
0c0c065519160d0d065519b8025bb207242ab8ffc0b51c39d02a012ab8ff
e6b40c0c02552ab8ffe8b40f0f02552ab8ffe8b40c0c06552ab8ffeab60d
0d06552a1a32b8ffc04021272a346032c032023f32803202321001010124
00180d0d025500100d0d06550020b8fff4b40d0d025520b8fff4b4101006
5520b8fff440190f0f065520240f100b0b02550f160c0c02550f200d0d02
550fb8fffa40200f0f02550f0e0c0c06550f0c0d0d06550f22df00013f00
4f00020019313437182b4e10f45d714df42b2b2b2b2b2bed2b2b2b102b2b
ed724e105d712bf62b2b2b2b712b4dedf42b2b2b2b2b2b2b2b2bed72003f
ed2b2b2b3fed7112392f2b2b5d71722be410fd5d71722be4111239111239
0111121739313043794040272d1e2305142c261110121013100306220d20
1b000928071b01052d071b011e14201b00210e231b0022230d0c08290a1b
012827090a062b041b001f101d1b01002b2b103c103c2b103c103c2b012b
2b2b2b2a2b818181002b2b2b2b2b2b2b2b2b5d71015d72715d1337161633
323635342726272e02353436373636333216161707262623220615141716
1716171e02151406062322263fb20f897b7c78352593c6994f41382a9153
7dbd5a11b00c73697c6a16162f1b84bf975669c67dcfd9013d1c6b726544
3d2318253249814e4779281f2b487b6718525c5237231c1d130a2433417c
5c5a9f57ac00>PBAAAA+ArialMT AddT42Char 
1 13348 223 <0001002804aa02a105c20006004840130506010f021f0202028700640403
023c013d03b8ffc04011090c3403640064047f063c0519079b7a182b194e
10f4184dfd19f618fdfd2b19f618ed002f3cedfd5d3c3c3c313001373303
23033301676ecce1c0d8ce0518aafee80118>PBAAAA+ArialMT AddT42Char 
1 13456 227 <ffff003fffe803b105c2022600560000010700df009400000019400c0170
3101311512482b010135b902220029002b012b713500>PBAAAA+ArialMT AddT42Char 
1 12422 93 <00010028000003d40426000e01af400d12b802c9080212013212173408b8
ffce4009121734013e1e213408b8ffc2404a1e2134290228092f10390139
0a49014602460849094f105c01540254085a0950106c01630263086a097b
0174087b098b0185088909f901f4021b1908260129082b093908a508d701
0710b8ffc0b7101534022c123909b8ffd44023123901023a090a02080a0a
25010214010102010d0e08060261052b0706060a610d000db8fff440090b
0b06550d2b0e0a02b8010fb40808070506bb025b00000007fff440160b0b
065507220da00e01000e400e600e800ef00e050eb8fff440240b0b06550e
74000a7e0101af00014f006f00ff000300180b0b065500190f1074217cc4
182b2b4ef42b5d713c4d10ed10fd2b5d713ce42b10f43c103c10fd003fed
2b3c10e53f3cfde5113911123987052e2b877dc4100ec42b3130012b2b2b
715d002b2b2b2b435c58b5290126080201b8ffce40091217340832121734
01b8ffc2b71e2134083e1e2134002b2b2b2b017159015d435c58b90008ff
deb20f3909b8ffdeb20f3909b8ffe8b71b390908161b3d09b8fff0b21739
09b8fff8400a163902141639021a16392b2b2b2b2b2b2b2b593335010623
213521150107363321152802a47358fe4f0364fdc16f796a01eb92030806
9277fd5e7b099b00>PBAAAA+ArialMT AddT42Char 
1 13348 223 <0001002804aa02a105c20006004840130506010f021f0202028700640403
023c013d03b8ffc04011090c3403640064047f063c0519079b7a182b194e
10f4184dfd19f618fdfd2b19f618ed002f3cedfd5d3c3c3c313001373303
23033301676ecce1c0d8ce0518aafee80118>PBAAAA+ArialMT AddT42Char 
1 13508 229 <ffff0028000003d405c20226005d0000010700df00b800000029b3010101
13ba02220029016485002b01b10602435458b50014110607412b1bb50014
11060e412b593500>PBAAAA+ArialMT AddT42Char 
1 42 15 <000100aafede018300cd000a004eb50a030007ab06b80150402601033c02
02010a013c000a020301033c000638073a4f005f006f007f00a0000500a0
0ba198182b10f45df4e410ed3c103c003fed3c103c10ed10fded01111239
31303335331514060727363637b6cd505732393603cdcd718b264d19615b
>PBAAAA+ArialMT AddT42Char 
1 162 17 <000100ba0000018700cd000300254018023c000a023c5f006f007f00af00
04a0000100a004a198182b10f65d5ded003fed313033353315bacdcdcd00
>PBAAAA+ArialMT AddT42Char 
1 222 19 <00020055ffe7041105c00010001d0155b10202435458400a1a1e0405141e
0d0d1709b8ffe8b40f0f025509b8ffe840190d0d02550911000c0f0f0255
00160c0c0255000c0d0d0255002f2b2b2bcd2f2b2bcd003fed3fed31301b
b10602435458400a1a1e0405141e0d0d1709b8fff4b40f0f065509b8ffe6
b40d0d065509b8ffee40190b0b0655091100100d0d065500100c0c065500
100b0b0655002f2b2b2bcd2f2b2b2bcd003fed3fed31301bb4062019101c
b8fff0b202200bbeffe00016ffe00012ffe0000fffe0406204068702880b
880fc90e0509070b180245134c154a19431b54135c155c19521b6b076b0b
63136c156b19601b79027706760b7a0f870698079610c918da02d606d60b
db0f1a1a1e0405141e0d0d17730940212334300901000910090209901f11
7300b8ffc0400e212334200040000200901ec78b182b10f65d2bed10f65d
712bed003fed3fed3130015d71005d003838383838013838385959131012
363332161612151002062322272613101633323611102623220706556bd3
a076b274426ad3a1d47991b9a97c7ca9a97e7c4a5d02d30104013dac5fb3
feffdafefefec3ad98b7019dfe97eff00168016aee698600>PBAAAA+ArialMT AddT42Char 
1 666 27 <00030053ffe7041905c00017002300300200b10202435458b40c001b1e2e
b8ffc04017131302552e2e12211e0605281e120d1e090c0c0c025509b8ff
f4b60d0d0255092b0fb8fff0b40f0f02550fb8ffe8b40b0b02550fb8ffe8
b60d0d02550f1803b8fff0b41010025503b8fff0b40f0f025503b8fff440
190d0d02550324150c0b0b0255150c0c0c0255150c0d0d0255152f2b2b2b
cd2f2b2b2bcd2f2b2b2bcd2f2b2bcd003fed3fed12392f2bed393931301b
b10602435458b71e090c0c0c065509b8fff4b60d0d0655092b0fb8ffe4b4
0f0f06550fb8ffe4b60d0d06550f1803b8fff0b40f0f065503b8fffc4022
0d0d06550324150c0c0c0655150c0d0d0655150c001b1e2e2e12211e0605
281e120d003fed3fed12392fed3939012f2b2bcd2f2b2bcd2f2b2bcd2f2b
2bcd31301b4037351601291649164926e60ce930050930017d007d017c04
7408710b720c750d7a178b008a018c048608810b840c860d8d17cc11c613
1222b8ffe0b21c201ab8ffe0b220202fb8ffe0b22d2026b8ffe0401e2920
0c001e18000c1b1e2ea02e012e12211e0605281e120d1e73bf090109b802
6740102b730f40202334300f01000f100f020fb80191b6321873b0030103
b80267b2247315b8ffc0400e2123342015401502159031c78b182b10f65d
2bedf45ded10f45d712bedf45ded003fed3fed12395d2fed393901111239
393130013838383838383838015d72710071595901262635343633321615
140607161615140023220035343613141633323635342623220603141616
333236353426232206016a706ce6bfc0ea6b6d878dfef6d9d9fef6916286
6b6885896667883a49905381a8ad827fa7031b29986aa0dadfa06697292c
c488bcff000101c08fc101546884835f638784fcff4d904fa68082aaa800
>PBAAAA+ArialMT AddT42Char 
1 1326 38 <00010066ffe7057605d3001d00d3b563026a1d0201b8ffe8b40b0b065500
b8ffe8405f0b0b06552000320d63007000741d8000841d90009a05ab03a5
0db903b40dc70dd000e41df31d110e121d111d1d032a0628112a1c201f47
0d56145715561968056b1d7b128b129a03990e9a1ca801a402a811d50e13
0014001a1014101a0402b8ffdeb2283901b8ffc0402d2839100f0001041b
131e0c031b1e040910260f4a0026200101011a1f1726200801080c0b0b06
5508191e635c182b4e10f42b5d4ded4e10f65d4dedf4ed003fed3fed1117
393130012b2b5d5d71005d2b2b0172011706042322240235341224333204
17072626232206021514121633323604b4c23dfec3e5edfed79baf0143c2
dc012c3bbf33c293a9e35c6de686a3e2020231effbc1016ed2e50155b1e0
cb2da092a2feef91bbfee98abc00>PBAAAA+ArialMT AddT42Char 
1 1640 46 <000100960000055205ba000b01fe401e0322373908093a270a3506360a47
0a57038603d70307760ad903d90a0306b8fff440180d0d025528058c048a
05aa04ea08050a04013504d6040209b8ffe04009122134032012213403b8
ffdeb30c391209b8ffe0b312213408b8ffe0b312213404b8ffe0b31d2134
04b8ffc0b312163408b8ffde403d1939080925253d080919193d06060709
0a09080a0503040420050a1405050a090808200706140707060a0a000502
040102070b0800080a03020b010004b8023a400f300501a005b005c005e0
0504054a08b8023a400b30070120078007b0070307b80286400c0b202000
0100201010025500b8fff6b40f0f025500b8fff6b40d0d025500b8fffab4
0c0c025500b8fffab40c0c065500b8fff2400a0d0d0655005d0c3ba8182b
10f42b2b2b2b2b2b5dedfd5d71edf45d71ed103c103c3c3c003f3c3c3c3f
3c3c3c12392f87052e2b0e7d10c487052e182b047d10c40708103c083c01
4bb018534bb01b515a58b90004ffd83859b10602435458b90004fff0b30c
113403b8fff040170c113406100e113408100e103409100e11340a100d10
34002b2b2b2b2b2b593130012b2b2b2b2b2b2b435c58401109221939082c
1939042c193904221b3905b8ffdeb616390422163906b8ffde400b123908
2214390440143908b8ffdeb52539044015392b2b2b2b2b2b2b2b2b2b2b59
002b2b2b0171725d2b00715d2b2b33113311012101012101071196c202d8
0107fd990282ff00fdf6f005bafd2902d7fdaefc9802e6eafe04>PBAAAA+ArialMT AddT42Char 
1 2206 61 <00010029000004b005ba000c010cb1120eb8ffc0400f0d11344801470848
09030a080b0902b10602435458400e0c000e0d010b1e0c0808051e060200
3ffd3c3ffdc401111239391b402bab04010302010104090a04080a0a261d
2134280a01f90a010a200104140101040a280b1c3401280b1c3408b8ffd8
b30b1c3404b8ffd840130b1c34010a0408051e0706020b0a1e0c00080abb
01b50001000401b5401b00073008400802084a0c3f0b010b1a0e01000506
5100190db699182b4e10f44df43c103c4e10f65d3c4df4713c10e410fc00
3f3cfd3c3f3cfd3c3c1139012b2b2b2b87052e2b5d712b877dc40e10c487
0e10c4c4017259313001715d2b435c584009022221390118213909b8ffde
b51939022219392b2b2b2b59333501363721352115010721152902ef5048
fcce041afcc95903a8b403ab644aadadfc0767ad>PBAAAA+ArialMT AddT42Char 
1 3248 69 <00020086ffe8041f05ba0010001d0180409b01050c0f240535054505053f
1fb01f021f1f221c331c421c701f901f063a133c163c1a4c164c1a5d085d
0d580f5d165e1a6a086c0d680f6e166e1ac01fd90cda17da19e213ec17ec
19e31de01fff1f1920052f0f2f1430053f0f40054c0f50056605da1df504
fa100c10150e040602001b1c0607010a151c0e0b1824d00b01100b400b60
0b800b041f400d0d02550b0c0f0f02550b180d0d02550bb8fff6b40c0c02
550bb8fff0b40b0b06550bb8fff4b40f0f06550bb8ffe0b40c0c06550bb8
fff4402f0d0d06550b7401113300040c0c025500040d0d06550033032502
02c001019001a001b001f001041f013f014f010301b8fffeb41010025501
b8fffc401d0e0e0255010c0d0d025501100c0c025501120b0b0255010c0b
0b065501b8fff8b41010065501b8fffc40160f0f065501180c0c06550114
0d0d065501191e4737182b4e10f42b2b2b2b2b2b2b2b2b2b5d71723c4d10
fdf42b2be410fd2b2b2b2b2b2b2b2b5d71ed003fed3f3fed3f1139111239
3130005d015d7172007121231133113633321e0215100023222703141716
333236353426232206012da7b472b162af7140fef2bdbc6b0234559176ac
a57576ac05bafdf58f4f8fca73feeffed69d0196bf558bcdcbd0c6cd>PBAAAA+ArialMT AddT42Char 
1 3726 70 <00010050ffe803ed043e001a015ab1020243545840340e7f0f010f0b0140
0050007000030004121c0b07181c040b010e1507080e0e0255070c0d0d02
55070c0c0c025507100b0b0255072f2b2b2b2bcdd4c6003fed3fed10c45d
3210c45d3231301b4047090c011f1c4313431753135317601360179b029b
039a0da410a41a0c080d190a6a0269036a05750c700d800da60cb509b60a
b50c0c160c860ce302030e225f0f6f0f7f0f030f01b802aa407930004000
5000600070009000a000e000f00009000f0f0b000004121c0b07181c040b
1c0f010f240e080d0d06550e221b000100240b2b1f010100010101400b0b
065501401010065501480c0c0655011a0d0d065501491c1524cf07011f07
3f0702070e0b0b0655070a1010065507120c0c065507311b34c4182b10f6
2b2b2b5d71ed10f62b2b2b2b5d724b53234b515a58b90001ffc03859ed72
f42bed72003fed3fed12392f11392f105de4105de43130005d71015d7159
011706062322001134123633321617072626232206151416333236033cb1
1defaedafef772e989addc1faf197f5a88aaa4846a8e018517b7cf011d01
0aac010281afa11b6b6cc3d3d6c28200>PBAAAA+ArialMT AddT42Char 
1 5044 73 <000100130000028005d30017010d401e1409010f192f193019401970199b
0c9c0da90d081a0d280db019c0190419b8ffc040281a1f341d080d030c0f
1c0a0115022b1413040306000a9f140114ff134004172504000302920101
00b8ffc0b331383400b8ffc0402b1c1f3490000119400f0f025519400d0e
025500141010025500280f0f025500220e0e0255002c0d0d025500b8fff2
400b0c0c025500140b0b065500b8ffeab41010065500b8ffe6b40f0f0655
00b8fffab70c0c065500a31819bc01ba002100f6010a00182b2bf62b2b2b
2b2b2b2b2b2b2b2b5d2b2b3c10f43c103ced10eded5d003f3f3c3c3cfd3c
3fed391139313043794014101106090706080602061009121b0011060f1b
012b012b2a8181012b715d00723311233533353437363633321707262322
06151533152311b29f9f131a83764c5c1b38325244cfcf039a8c716b3446
57129d0a4660628cfc66>PBAAAA+ArialMT AddT42Char 
1 6544 78 <00010088000003f805ba000b0261401b060c0d0d0655070656065a09030f
0df305f60603090c1010025506b8fff4b40c0c02550ab8fff4b40c0c0255
09b8fff4b40c0c025503b8ffe840100d0d06555503770a02120620132134
08b8fff0b312273409b8fff0b41227341205b8fff0b312213409b8fff040
84122734060404050406370947040525062d0a580a7703750ada03e30607
a60601230626072508390638093f0d4f0d59045906580759097d04790599
09c606d204d606e406e907f706f90815120a0a0503030402060607090908
0a0a050908082507061407070603040425050a1405050a0a090603040801
02000405060708080b0b000a04b8010f400905040c0c0655052208b8010f
402120073f070207100c0c0655071a900d010d0b2500022501019000013f
004f000200b8fffe40310e0e025500100d0d025500100c0c0255000a0b0b
025500120b0b065500120c0c065500080d0d065500190c0de1214766182b
2b4ef42b2b2b2b2b2b2b5d713c4d10ed10ed4e1071f62b5d4dedf42bed00
3f3c103c103c3f3c3f3c11173987052e2b047d10c487052e182b0e7d10c4
0710083c083c0310083c083cb10602435458400d4b09011f098403020918
0d1134002b5d7159313001435c58400a092c1d3909081d1d3c06b8ffdeb2
1d3906b8ffd4b2203906b8ffd4b121392b2b2b2b2b595d00715d0171002b
2b435c58b90006ffc0b2213903b8ffc0b2163903b8ffdeb2103906b8ffde
b2103903b8ffdeb20c3903b8ffdeb10b392b2b2b2b2b2b59012b2b2b435c
584012dd040108141639090814143c090814143c06b8fff6b2183906b8ff
ecb11b392b2b2b2b2b015d59005d2b2b2b2b2b015d712b33113311013301
012301071188b401aae9fe6a01bfdefea17f05bafcbc01b0fe76fd64021f
7afe5b00>PBAAAA+ArialMT AddT42Char 
1 7208 79 <000100830000013705ba000300e3b605360b0b025505b8ffc0b337383405
b8ffc0b334353405b8ffc0b330313405b8ffc0b322253405b8ffc0402515
17340f051f059f05df05044f05df05f005031f0570058005ff0504010000
0a0203250100b8ffc0b337383400b8ffc040153335349f0001c000f00002
00002000d000e0000400b8fff8b41010025500b8fffa401d0e0e02550004
0c0c0255000a0b0b025500140b0b065500081010065500b8fffeb40d0d06
5500b8ffffb40c0c065500b8fffc400a0c0c0655004e044750182b10f62b
2b2b2b2b2b2b2b2b5d71722b2b3cfd3c003f3f3130015d71722b2b2b2b2b
2b3311331183b405bafa4600>PBAAAA+ArialMT AddT42Char 
1 8020 81 <00010087000003e6043e0016017d40130503061302a810b810e303e713f0
03f6130604b8fff0403c0b0d347910019810d018e018ff18042008140e14
16121c05070106160d0a0d0e0c0e2418401010025518400b0b02550b2810
1002550b140e0e02550bb8ffec40110d0d02550b040c0c02550b220b0b02
550bb8fff4400b0b0b06550b14101006550bb8fff9400b0d0d06550b0a0f
0f06550bb8fff640120c0c06550b40333634ff0b01ff0b010b4e18b8ffc0
401a343634b018f018027018a018b018c01804180302331516250100b8ff
f6b41111025500b8fffab41010025500b8fffa40170e0e025500040c0c02
55000a0b0b025500040b0b065500b8fffa40110f0f065500020c0c065500
040d0d065500b8ffc04012333634f0000100002000d000e00004004e1710
f65d712b2b2b2b2b2b2b2b2b2b3cfd3cf43c105d712bf65d712b2b2b2b2b
2b2b2b2b2b2b2b2bed3c103c003f3c3f3fed113901123931304379401606
11090a080a070a0306102611060e1b010f0a121b01002b012b2b2a81015d
71002b5d71331133153633321616171615112311342626232206151187a2
75dd60a150100ab42a6b4873a7042697af45704d327dfd7302866e6d4192
ccfdbc00>PBAAAA+ArialMT AddT42Char 
1 8474 82 <00020044ffe80427043e000d0019016bb615180d0d065513b8ffe8b40d0d
06550fb8ffe840730d0d065519180d0d065512070a190c47064808560659
08670669080834103a123a16351845104b124b1645185c055c0952105d12
5d1652186d056d0964106d126d1664187701150906050d5b035405540a5b
0c6c036505650a6c0c0a171c0407111c0b0b14241b400d0d02551b400b0b
025507b8ffea40110f0f025507180d0d025507100b0b025507b8fff0b40b
0b065507b8fff0b40d0d065507b8fff0b40f0f065507b8fff0b40c0c0655
07b8ffc04013242534300701000710072007030731df1b011bb8ffc04049
1e2334301b011b0e24000c0e0f025500120d0d0255000c0c0c0255001c0b
0b0255000e0b0b0655000e0d0d0655000c1010065500160c0c0655004024
25341f003f000200311a3437182b10f65d2b2b2b2b2b2b2b2b2bed10712b
5df65d5d2b2b2b2b2b2b2b2b2b2bed003fed3fed313001715d0071435c58
4009530553096205620904015d59002b2b2b2b1310373633320015140606
23220013141633323635342623220644a489c5db01167beb8bdffeedb9b2
8786b2b38587b2021301278e76fee1fdcdeb82011e010dcccbccd1c5cbca
>PBAAAA+ArialMT AddT42Char 
1 8924 83 <00020087fe690421043e0012001e0162408e0c102d103d104b10043f20b0
20021f20290c231d3215321d421d70209020083a173a1b4a174a1b59085b
0c5c175c1b6a086b0c69106d176b1bc020d314dd18dd1ad31ee414e41ee0
20ff201623042b102b1535043a1046044a105a10e50beb1dfe100b110e03
161c1c06070106161c0e0b000e1924d00a01100a400a600a800a0420400b
0b025520400d0d02550ab8ffe6400b0f0f02550a180d0d02550ab8fffab4
0c0c02550ab8ffeeb40b0b06550ab8fff4b40f0f06550ab8ffe840230c0c
06550a74011333023312250000c001019001a001b001f001041f013f014f
010301b8fffc401d0e0e025501100d0d025501100c0c025501100b0b0255
010c0b0b065501b8fff6b41010065501b8fffc40160f0f0655010c0c0c06
5501120d0d065501191f473718012b4e10f42b2b2b2b2b2b2b2b2b5d7172
3c4d10fdf4e410fd2b2b2b2b2b2b2b2b5d71ed003f3fed3f3fed11391239
3130005d015d717200711311331536363332161615140206232226271103
141633323635342623220687a43a926888d06a75df7b5a8f2e11a67678ab
a77473b1fe6905bd8a51518cff98a3fefb8b4c3afdfb03a4cdc4cbd5cbca
d700>PBAAAA+ArialMT AddT42Char 
1 9376 85 <00010085000002c6043e001100c9403b2f13011004012304340443045304
66047404060911080908090d1311090d000308010b1c06070106000a0928
900801082220130113022211250100b8ffc04010333634f0000100002000
d000e0000400b8fff8b41010025500b8fff840110e0e025500040c0c0255
00060b0b025500b8fffcb41010065500b8fff440160f0f065500060c0c06
5500080d0d0655004e1247c4182b10f62b2b2b2b2b2b2b2b5d712b3cfde4
105df472e4003f3f3fed11393911393901111239390010c9870e7dc43130
005d72015d33113315363633321707262322060706151185a23e693f5b5e
3e42423b5e141e0426a171483aa727473f6072fdd400>PBAAAA+ArialMT AddT42Char 
1 9638 86 <0001003fffe803b1043e00300317407b042214223a094a09442456226522
7c098e098424a613ab2cc2030d09171a1817304b2cd617051b0255020210
32010a185c085c095c0a5c0b5c0c5c0d6a086a096a0a6a0b6a0c6a0db426
b4270f27262427242936245a0a590b64266428742374248024930a9c0c92
28972c9530a40aa90ca327a428b326c5261628b8fff4b40d0d065522b8ff
f4b40d0d065523b8fff4b40d0d065524b8fff4b40d0d065528b8fff4b40c
0c065522b8fff4b40c0c065523b8fff4b40c0c065524b8fff4b40c0c0655
1db8ffde40121e395a0827250c0a041a202615040b2e1d1ab802aa402219
2c0b0b02551f193f194f195f19af19cf19060f191f196f19df19041f198f
190219bd02550015000002aa0001ffc040140b0b025510014001021001d0
0102000110010201b8ffc0b314163401b8ffc040100e113401012e5c1d6c
1d021d1c150704b8fff4b40b0b025504b8ffe6b41010065504b8ffe64013
0f0f0655041c2e0b1f1a011a24194013183432b8ffc0402f0f0f02551918
0f0f025519180d0d025519160c0c025519201010065519200f0f06551910
0c0c065519160d0d065519b8025bb207242ab8ffc0b51c39d02a012ab8ff
e6b40c0c02552ab8ffe8b40f0f02552ab8ffe8b40c0c06552ab8ffeab60d
0d06552a1a32b8ffc04021272a346032c032023f32803202321001010124
00180d0d025500100d0d06550020b8fff4b40d0d025520b8fff4b4101006
5520b8fff440190f0f065520240f100b0b02550f160c0c02550f200d0d02
550fb8fffa40200f0f02550f0e0c0c06550f0c0d0d06550f22df00013f00
4f00020019313437182b4e10f45d714df42b2b2b2b2b2bed2b2b2b102b2b
ed724e105d712bf62b2b2b2b712b4dedf42b2b2b2b2b2b2b2b2bed72003f
ed2b2b2b3fed7112392f2b2b5d71722be410fd5d71722be4111239111239
0111121739313043794040272d1e2305142c261110121013100306220d20
1b000928071b01052d071b011e14201b00210e231b0022230d0c08290a1b
012827090a062b041b001f101d1b01002b2b103c103c2b103c103c2b012b
2b2b2b2a2b818181002b2b2b2b2b2b2b2b2b5d71015d72715d1337161633
323635342726272e02353436373636333216161707262623220615141716
1716171e02151406062322263fb20f897b7c78352593c6994f41382a9153
7dbd5a11b00c73697c6a16162f1b84bf975669c67dcfd9013d1c6b726544
3d2318253249814e4779281f2b487b6718525c5237231c1d130a2433417c
5c5a9f57ac00>PBAAAA+ArialMT AddT42Char 
1 10866 88 <00010083ffe803e004260018014fb9001affc0400915173402201316340f
b8fff040331214342b1301240813160c0113160b06000a111c030b003316
251817403336341a401010025517281010025517120e0e025517b8ffec40
0b0d0d025517040c0c025517b8fff4400b0b0b065517141010065517b8ff
f8400b0d0d0655170c0f0f065517b8fff6400d0c0c0655ff1701c0170117
4e1ab8ffc04015343634b01af01a02701aa01ab01aff1a041a0c2509b8ff
c04010333634f0090100092009d009e0090409b8fff8b41010025509b8ff
f840110e0e025509040c0c0255090a0b0b065509b8fff640160f0f065509
020c0c065509020d0d0655094e194750182b10f62b2b2b2b2b2b2b5d712b
ed105d712bf65d712b2b2b2b2b2b2b2b2b2b2b3cfde4003fed3f3f3c3939
0111123931304379401a04100e0d0f0d0206070806080508030610040c1b
000d08111b00002b012b2a2a81005d012b2b2b2135062322262627263511
3311141716163332363635113311033f7cd55ea34f100bb40b116e51518e
3bb49cb4486d4f35730292fdb38d314751538f880239fbda>PBAAAA+ArialMT AddT42Char 
1 11280 89 <0001001a000003e80426000a01eab1020243545840170508000a08060106
0a0005090805010205240f0f0255052f2bddcd10ddcd113333003f3f3f12
3931301bb7350501002211390ab8ffde400d11390916121c340816121c34
02b8ffeab3121c3401b8ffeab3121c340ab8ffd840091e213400281e2134
0ab8ffe8400922253400162225340ab8ffda407e282e340020282e340f0c
29002809260a3900350a4800470a56015602590858096601660269086909
78007701770279087809770a870187028603890788088a099d009809910a
ac00a20abd00b707b10ac900c50ada00d50aec00e30afb00f40a2c0a0005
0a1800160a2800260a370a4f00400a09054012163405400b0d34b1060243
5458400905010008060106000ab8fff4400f0d0d06550a000c0d0d065500
050908b8fff440120d0d0655080501020c0d0d06550205050c0b1112392f
dd2bcd10dd2bcd10cd2bcd2b002f3f3f11123931301b40370a0708082509
0a1409090a0003020225010014010100050a0a000a09080802020106070a
09030001052f0c010c22084040400980090209b8011bb5400580050205b8
011b400920024001220bead2182b10f6ed1a19fd5dfd5d1a18ede45d1112
3939123939003f3c103c103c3f3c113987052e2b877dc4872e182b877dc4
593130002b2b01715d2b2b2b2b2b2b2b2b2b2b2b2b005d59210133131617
363713330101aefe6cbee4251f182becb9fe6e0426fd84676f54760288fb
da00>PBAAAA+ArialMT AddT42Char 
1 11822 92 <00010021fe5103ee0426001a01f7b10202435458401d0a140f030b031c19
0f12060b061340120f200b400c200f180f0f02550f192f2b1add1a18cd1a
1910dd1a18cd003f3f3fed12173931301bb30f1c010fb8ffde406d1c3928
14560faf0a03400d400f020f202830341020283034070c0912160d181227
0b270c270d360c360d350e99110b28122813481659125913591569126913
69157906760d79117a147a15850d8a118c128c138914980aa80bbc10bb11
ba14ea0ae714f50dfd10f914ff1c1e12b106024354584016130b1c1b040f
440f840f030f190b031c190f12060b06003f3f3fed1112395d0111123939
1b40370f0f0c101112120a00031914131325120a1412120a0f0c0f110c25
0b0a140b0b0a1312120c0c0b06031c190f001c101c022f1cbf1c021cb802
3fb50f1340124014b80254400b3f124012025f12bf120212b80142b60f01
2200451b0ab8025440120f200b4040200c300c4f0c03500cff0c020cb801
42b32f0f010fb8023fb41b207c66182b1a1910fd71f45d711a18ed1a1910
ed1810f4e41910e45d71ed1a1810ed1910e45d7100183fed3f3c103c103c
87052e2b087d10c487052e182b0e7d10c400111239870e103c3c08c44bb0
0e534bb018515a58bb000cffe8000bffe80138385959313001435c58b900
14ffdeb637390a2237390eb8ffe8b51539112215392b2b2b2b595d712b2b
00715d2b015d591327163332363736373637013313161736371333010607
060623227f143b2c3c48171126050bfe6dc2dd2b221f2be3b4fe6c412430
7c5634fe67a91028241b6b0f1d0428fd9975817c76026bfbc8af42595300
>PBAAAA+ArialMT AddT42Char 
1 13218 213 <000100c60000017a04260003006ab5020106000a05b8ffe440100f0f0255
05a302032501000020000200b8ffe4b41010025500b8ffecb40d0f025500
b8fff0b40c0c025500b8fffab40b0b025500b8fffc40100c0c0655001d0b
0b065500a304ead2182b10f62b2b2b2b2b2b5d3cfd3ce62b003f3f3c3130
33113311c6b40426fbda>PBAAAA+ArialMT AddT42Char 
1 12984 141 <000100de04aa024f05c200030065b90001ffc8b317193402b8ffc0b31719
3403b8ffc040261719347f018002df01036f037f007f03036f006f01024f
015002020000031003020387010401b80260b2028603b80253b5001904d9
a7182b4e10f44dfdf4fd003ffd5d3c3130015d5d5d5d2b2b2b13133303de
85ecdc04aa0118fee800>PBAAAA+ArialMT AddT42Char 
1 12910 116 <ffff00bd0000022e05c2022600d500000106008ddf000032b70107400b0b
065507b8ffc0b317193407b8ffc0400e2225342f070107015a482b010107
b902220029002b012b5d2b2b2b35>PBAAAA+ArialMT AddT42Char 
PBAAAA+ArialMT /CharStrings get begin
/ellipsis 171 def
/scaron 227 def
/zcaron 229 def
/comma 15 def
/period 17 def
/zero 19 def
/eight 27 def
/C 38 def
/K 46 def
/Z 61 def
/b 69 def
/c 70 def
/f 73 def
/k 78 def
/l 79 def
/n 81 def
/o 82 def
/p 83 def
/r 85 def
/s 86 def
/u 88 def
/v 89 def
/y 92 def
/iacute 116 def
end
PBAAAA+ArialMT /Encoding get
dup 33 /ellipsis put
dup 34 /scaron put
dup 35 /zcaron put
dup 44 /comma put
dup 46 /period put
dup 48 /zero put
dup 56 /eight put
dup 67 /C put
dup 75 /K put
dup 90 /Z put
dup 98 /b put
dup 99 /c put
dup 102 /f put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 117 /u put
dup 118 /v put
dup 121 /y put
dup 237 /iacute put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/EDYAIN+ArialMT*1 
[32{/.notdef}rp /space /ellipsis /scaron /zcaron 8{/.notdef}rp /comma /.notdef 
/period /.notdef /zero 7{/.notdef}rp /eight 10{/.notdef}rp /C 7{/.notdef}rp 
/K 14{/.notdef}rp /Z 6{/.notdef}rp /a /b /c /d 
/e /f /g /h /i /.notdef /k /l 
/m /n /o /p /.notdef /r /s /t 
/u /v 2{/.notdef}rp /y 115{/.notdef}rp /iacute 18{/.notdef}rp]
EDYAIN+ArialMT nf
EDYAIN+ArialMT*1 [9 0 0 -9 0 0 ]msf
136.2 146.616 mo
(!, "kodu vy"et)
[8.9928 2.4948 2.5218 4.4928 4.4928 4.9968 4.9968 4.99681 2.52179 4.5558 4.37579 4.5558 
5.04179 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: HIBBAA+ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /HIBBAA+ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f320cdf326b000000cc000000566376
7420962ad27600000124000006306670676dcc79599a000007540000066e
676c7966288797a300005350000005a468656164ce98269200000dc40000
003668686561123312ff00000dfc00000024686d74780e34584000000e20
00001a286c6f636100229ae60000284800001a2c6d6178700b470ca80000
4274000000206e616d65eff0310e00004294000005bb7072657052fec4e9
0000485000000aff67646972000000000000000000000000000103880190
00050000059a05330000011b059a0533000003d1006602120805020b0604
02020202020400007a878000000000000008000000004d6f6e6f00400020
fffc05d3fe510133073e01b2400001ffffff0000000005ba001905ba001a
05a70019042600180000ffe70000ffe80000ffe7fe69ffe805ba0019fe69
ffe802ea000000b8000000b80000000000a800ad016900ad00bf00c201f0
001800af00b900b400c800170044009c007c009400870006005a00c80089
005200520005004400940119ffb4002f00a1000300a100cd00170057007e
00ba00160118ffe9007f008503d300870085000d002200410050006f008d
014cff75005c00df04830037004c006e00700180ff58ff8eff92ffa400a5
00b903c8fffd000b001a0063006300cdffee05d8ffdc002d005c00950099
00df019209b500400057008000b9039d0072009a035d0401ff67fffa0003
0021007700cd0004004d00cd01c0022b004c006500e70118017c034305d8
ffa3ffb0ffc40003001c005d0068009a00ba013501470221055cff4dffcd
0016002d00780080009900b200b600b600b800bd00da010c05f0ffa4fff0
0019002c0049007f00b400ce01c003fefd81fe3f00000005001800290039
0049006f00be00c700d0012301c1026f050c05320540057affd400140031
0055005700a700b400e601f7027e027e027f03c60446ff42000e00850091
00bf00c200c500e1011a012f014f01560229026f029e03720008002c0031
0031006400690089009800c700de012b01b6020c02cf03a304ab04fb061d
fee0ff0e00060026009b009d00c1010d011801200173018201d601e30243
025f029b02e2039404a904d20761001c005e006d008d00ab00f701120138
0151015b0168017c01870191019901cd01d001e802410254026b02ef0368
037103bd044204420453047304830586058b06e8fe58fec4fed1fef7ff32
ff860051007c008100910095009e00b400b900cf00d900d900df00e20105
010b010e010e012001210155017b017b017e018d01a201a801a901b401d0
01d001e201e901f201f501fb020002000206021b02210222022202230272
02770294029c02cf02cf02d002ec02f903170322032b0335033c0359036f
037103870390039003b503e1041a04cf04ff053205320596059f05a805ab
05c205f0060c0782080008ccfca3fd2afddefe00fe88fe96feb2feb4ffe1
00150019001a001c001f003c005100610061006a0078009600a500af00d3
010c0118011a012a013e014c0151015f016a0171017801820184019a01a5
01a801a901ae01bc01cd01d701ef0200020d021c02210222022e02350242
024f024f025e026502710290029202b402d602fa0307030b030f0315032a
0347035d036503740379039603b003cc03dd03e203f603fc03fc03ff040a
041f04220426042b0447045f0475049e04e704e7055c05cb05e5060a066d
068606b806f10736073e07500751075d078f07b607d4086000b600c300b5
00b700000000000000000000000001e00381034503b5008e0233041902ce
02ce002d005f0064034d023f000002a80188027d01b402240578063b023b
014e00f00426029402c6029f02f6023b034d014b0153006a023100000000
0000061404aa0000003c04c300ed04bc026502ce03b50078060c017e02ef
060c00b201000239000001c50330042b03cb00da03df010704a100db040a
011701ed02a70350010b01bd043e05580021039c00ae0371017d00b50245
00000afb088c012b014e01aa00870054013201f803ff0003024e00b40037
03e30083006b02d800ed00770088009701640467008e0033017c00e700a6
029e0329056e062a061501c90269048a021301b4000204a9000002390124
010305140084015d039a06ef02d9007500cf040a00de03ac04bc02cf02ae
034d04f005520168006d007d00860071ff810079055804d2016700030156
002504e00094007c033204210094007f0072005c002f00b6001800ba00b8
0041034d00720018001f004c016a01550099009a009a009800b200040078
006900140057006e00ce00b4065402b80067050e016500e7000004cbfe52
005affa60099ff67006eff92002dffd40087ff7c00b800a800e5008f00a8
0185fe7b0070001e00d900de014c054602cf0546ff2d028a02d902530296
00b700000000000000000000000000000125011800ea00ea00ae0000003e
05bb008a04d70053003fff8cffd500150028002200990062004a00e4006d
00ee00e5004803c00033fe4e02b1ff460370007905df0051ffa7ff1f010a
0068ff6c004f00bc00a507050061072b4043555441403f3e3d3c3b3a3938
373534333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19
1817161514131211100f0e0d0c0b0a090807060504030201002c45234660
20b02660b004262348482d2c452346236120b02661b004262348482d2c45
234660b0206120b04660b004262348482d2c4523462361b0206020b02661
b02061b004262348482d2c45234660b0406120b06660b004262348482d2c
4523462361b0406020b02661b04061b004262348482d2c0110203c003c2d
2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320b0
4d44235920b09051582320b00d44235921212d2c20204518684420b00160
2045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b432343
0b2d2c00b0172370b101173e01b0172370b10217453ab10200080d2d2c45
b01a234445b01923442d2c2045b00325456164b050515845441b2121592d
2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b0
0743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364
615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb017
23442d2cb01243588745b0112bb0172344b0177ae41b038a45186920b017
23448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae4595918
2d2c2d2cb0022546608a46b040618c482d2c4b53205c58b002855958b001
85592d2c20b0032545b019234445b01a23444565234520b00325606a20b0
09234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a
54582321b03f1b235961441cb114008a5279b31940201945208a54582321
b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d
4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1101143
2343650b2d2c4b525845441b2121592d2c0120b003252349b04060b02063
20b000525823b002253823b002256538008a63381b212121212159012d2c
4bb06451584569b00943608a103a1b212121592d2c01b005251023208af5
00b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b006
2510f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c
2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76
b8022323701020b802234520b0005058b00161593a2f182d2c21210c6423
648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b0
02602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c
0c6423648bb84000626023212d2cb4000100000015b00826b00826b00826
b008260f10161345683ab001162d2cb4000100000015b00826b00826b008
26b008260f1016134568653ab001162d2c4b53234b515a5820458a60441b
2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121
592d2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b03
592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425
060c6423646164b807085158b00425b00425012046b01060482046b01060
48590a21211b2121592d2cb012435c580cb00425b00425060c6423646164
b807085158b00425b00425012046b8fff060482046b8fff06048590a2121
1b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b0
3b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a03
4b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c4b5258b004
25b0042549b00425b00425496120b0005458212043b0005558b00325b003
25b8ffc038b8ffc038591bb04054582043b0005458b00225b8ffc038591b
2043b0005458b00325b00325b8ffc038b8ffc0381bb00325b8ffc0385959
5959212121212d2c462346608a8a462320468a608a61b8ff806223201023
8ab902c202c28a70456020b0005058b00161b8ffba8b1bb0468c59b01060
68013a2d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b94000020063b804
00885458b202400243604259595959592d2cb0024354584b53234b515a58
381b2121591b21212121592d000000010000000300009d51e2a55f0f3cf5
081b080000000000a2e3272a00000000b9d5b4f6faaffd671000080c0000
0009000100010000000000010000073efe4e00431000faaffe2610000001
0000000000000000000000000000068a0600010000000000023900000239
0000023900b002d7005e0473001504730049071d0077055600580187005a
02aa007c02aa007c031d004004ac0072023900aa02aa0041023900ba0239
000004730055047300df0473003c047300560473001a047300550473004d
047300610473005304730055023900b9023900aa04ac007004ac007204ac
00700473005a081f006f0556fffd0556009605c7006605c7009e055600a2
04e300a80639006d05c700a4023900bf04000037055600960473009606aa
009805c7009c063900630556009e0639005805c700a10556005c04e30030
05c700a105560009078d0019055600090556000604e300290239008b0239
00000239002703c100360473ffe102aa00590473004a0473008604000050
047300460473004b02390013047300420473008701c7008801c7ffa20400
008801c7008306aa00870473008704730044047300870473004802aa0085
0400003f02390024047300830400001a05c700060400000f040000210400
002802ac0039021400bc02ac002f04ac00570556fffd0556fffd05c70068
055600a205c7009c0639006305c700a10473004a0473004a0473004a0473
004a0473004a0473004a040000500473004b0473004b0473004b0473004b
023900bd023900230239ffe5023900090473008704730044047300440473
004404730044047300440473008304730083047300830473008304730049
033300800473006b0473001b0473005102cd006d044c000104e3009905e5
000305e50003080000e102aa00de02aa003d0464004e0800000106390053
05b4009a0464004e0464004d0464004d0473fffd049c00a003f4003805b4
007a069600a1046400000231000002f6002f02ec002d0625007f071d0044
04e3008104e3009e02aa00e804ac0072046400540473002e0464003304e5
001a047300860473008c080000ef0556fffd0556fffd0639006308000081
078d00520473fffc0800000002aa005302aa004701c7008001c7006c0464
004e03f4002f04000021055600060156fe390473ffe402aa005c02aa005c
040000170400001704730049023900b901c7006c02aa0047080000250556
fffd055600a20556fffd055600a2055600a20239008d0239ffe002390004
0239001506390063063900630639006305c700a105c700a105c700a10239
00c602aa001902aa000602aa001d02aa002e02aa00e502aa00a202aa006b
02aa003a02aa00b702aa00280473000001c700030556005c0400003f04e3
002904000028021400bc05c7fffd0473004905560006040000210556009e
0473008704ac007204ac00a102aa006b02aa001902aa002106ac006b06ac
006b06ac0021047300000639006d04730042023900b10556005c0400003f
05c700660400005005c700660400005004730046046bffe102aa01f10556
fffd0473004a0556fffd0473004a05c7009e04eb004705c7fffd055600a2
0473004b055600a20473004b0473009601c7004204730096025500880473
009a02ac008305c7009c0473008705c7009c047300870639006304730044
05c700a102aa008505c700a102aa003c0556005c0400003f04e300300239
002404e300300300002305c700a10473008305c700a10473008304e30029
0400002804e3002904000028046800a4063900600662005504a000480474
00480391006204f000440329002e05300048046bffe1040000b002eb0052
08c000330800004f040000990800004f040000990800004f040000980400
009807d5016a05c0009e04ab007204d5009d04ac007104d5022204d50105
05abffe9050001c905ab027e05abffe905ab027e05abffe905ab027e05ab
ffe905abffe905abffe905abffe905abffe905ab01c005ab027e05ab01c0
05ab01c005abffe905abffe905abffe905ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905ab027e05ab01c005ab01c005abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905ab02d6
05ab006605abffea05d5ffff04d500920800000007eb013007eb012007eb
013007eb012004d500b204d5008004d5002a082b0198086b01b807550010
060000f40600006f0440003a0540003704c0003f04150040040000250600
005505e100bf038d008904d5ffd90180008002d50086071500610296000f
04d5009202d6008302d6008304d500b202d600700556fffd0473004a05c7
00660400005005c7006604000050055600a20473004b055600a20473004b
055600a20473004b0639006d047300420639006d047300420639006d0473
004205c700a40473008705c7001f047300060239ffce0239ffce0239ffe4
0239ffe40239fff60239fff5023900a301c700660400003701c7ffa20556
009604000088040000860473009601c7fffa05c7009c0473008705c900a5
0473008b0639006304730044063900630473004405c700a102aa006b0556
005c0400003f04e300300239000c05c700a10473008305c700a104730083
05c700a10473008305c700a104730083078d001905c70006055600060400
002101c700890556fffd0473004a08000001071d00440639005304e30081
023900b9078d001905c70006078d001905c70006078d001905c700060556
00060400002101c7008a02aaffe10473001b04cd005a06ac006b06ac0022
06ac002206ac004a02aa00e202aa006b02aa00de02aaffea0557ffff0646
ffa706b4ffa80312ffa80632ffa706d8ffa70605ffa701c7ff780556fffd
055600960558fffe055600a204e3002905c700a4023900bf055600960558
000b06aa009805c7009c0533006d0639006305c700a40556009e04f20094
04e30030055600060556000906af007f05fb0061023900040556000604a0
0048039100620473008b01c7006b04600088049a008c0400001903870048
0473008b0473005c01c700890400008604000018049c00a00400001a0395
005c04730044048d008303db0056046000880433001105b4007a063f0057
01c7ffc9046000880473004804600088063f0057055700a206eb00320455
00a105c000640556005c023900bf02390004040000370875000d081500a4
06d5003104a900a10515000a05c000a00556fffd054000a7055600960455
00a1056b0000055600a20763000704d5004e05c000a105c000a104a900a1
0540001206aa009805c700a40639006305c000a00556009e05c7006604e3
00300515000a061500520556000905eb009f05550057075500a1078000a1
06550000071500a8054000a505c00055081500a405c7001a0473004a0495
005b0440008802eb008804ab00000473004b055afffb03ab003204780087
047800870380008604ab00180580008c046b008804730044045500880473
00870400005003aa0026040000210695004b0400000f0495008a042b0045
066b008d0695008d0500002805c0008b042b008404150030060000890455
001f0473004b0473000002eb00890415004b0400003f01c7008802390009
01c7ffa20740001306800083047300000380008604000021046b008803e9
00a1034a008808000041089500a00585002d02aa010102aa001e02aa0031
02aa003102aa010102aa007e02aa007e02aa008c02aa008c02aa010102aa
001002aa010102aa01210310007d02aa008c023300d202aa030b02aaff04
023900b90481006904560032033100190411002d04d1009601f9009b030f
005f04ca009b04b8008c01f9009b0413002803b0005003b4003c04ca009b
04cf005001f9009b02d2003c0498005a043c00190488006e045f007303b1
001903d4000a0466009604130028058e00640524002803f2009b03f2009b
03f2009b01e3005a0356005a0686009b01f9ffac041300280413002803b4
ff5703b4ff570448002d058e0064058e0064058e0064058e006404810069
048100690481006904560032033100190411002d04d10096024b0000034a
000004b8008c024b00000413002803b0005003b4003c04cf005002d2003c
0498005a0488006e045f007303d4000a0466009604130028058e00640524
002801f9009b0456003203b00050045f0073049b003c0000ffdc0000ff25
0000ffdc0000fe51028d00ab028d00a002da0043034d007901a8ffba019c
004601e50046019c0046019c004601ad0048019c004601b1004601510046
0435017c0435012e043500b7043500810435012c043500be043500af0435
00810435009a043500db04350085028d00c1043500b30600010006000100
02420036060001000435009e04350098043500cb06000100060001000600
0100060001000600010001b1004606000100060001000600010006000100
06000100060001000600010006000100051bffba06000100060001000600
010005b5003a05b5003a01f4ffba01f4ffba060001000600010006000100
060001000481003604350036043dffba043dffba03e9004a03e9004a067f
0014077600140327ffba041effba067f0014077600140327ffba041effba
051b003204b5002406000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000600010001cf003001b1004601b1004601b1004001b1
004606000100060001000000ffdc0000fe510000ff160000ff160000ff16
0000ff160000ff160000ff160000ff160000ff160000ff160000ffdc0000
ff160000ffdc0000ff200000ffdc0473004a080000000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
0100060001000600010006000100028d007f028d005d0600010004ee0015
034d007901a8000e01d6ffdc01a8005601d60010037500320375003201a8
002d01d60013051b003204b5002401f4ffba01f4ffba01a8009301d60013
05b5003a05b5003a01f4ffba01f4ffba024200000300fff705b5003a05b5
003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba02b3005f02b3005f02b3005f02b3005f
03e9004a03e9004a03e9004a03e9004a0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba04a7
ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba045a002a039a0036
0435ffba0327ffba045a002a039a00360435ffba0327ffba064f0027064f
00270224ffba021affba04a7004604a700460224ffba021affba04cf002d
04cf002d0327ffba0327ffba040d0047040d004701a8ffba01a8ffba02b4
002302b400230327ffba0327ffba043500450435004501f4ffba01f4ffba
024200360300fff7039affba0327ffba0375003203750032051b003204b5
0024051b003204b5002401f4ffba01f4ffba045a004004ce0049045a0026
04ce0039045a005304ce004a045a005304ce004a0600010006000100019c
0046019c00460600010006000100060001000151004601b1004606000100
0600010001ad004801e5004606000100060001000600010001b1004601b1
004601b1004601b1004601b1004001cf003006000100019c0046019c0046
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100028d00ca028d00c7028d00c6060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100060001000100ffba0800
ffba1000ffba06dc0063053f004406d500a1055b00830000fddc0000fc2f
0000fca60000fe540000fcd70000fd730000fe290000fe0d0000fd110000
fc670000fd9d0000fbf50000fc720000fed50000fed50000ff02041b00a0
06ac006b06ac00190000feb60000fd730000fe080000fca60000fe530000
fd110000fbc80000faf40000faaf0000fc720000fbaa0000fb6a0000fcf1
0000fc7d0000fbdd0000fcc10000fb980000fdea0000fe840000fdc20000
fcf10000fd5f0000fe760000febc0000fceb0000fd6c0000fd580000fc90
0000fd150000fc2c0000fc130000fc120000fb960000fb9601c700880556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd
0473004a055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b055600a20473004b055600a20473004b
055600a20473004b0239006301c7001f023900ba01c7007c063900630473
004406390063047300440639006304730044063900630473004406390063
047300440639006304730044063900630473004406dc0063053f004406dc
0063053f004406dc0063053f004406dc0063053f004406dc0063053f0044
05c700a10473008305c700a10473008306d500a1055b008306d500a1055b
008306d500a1055b008306d500a1055b008306d500a1055b008305560006
04000021055600060400002105560006040000210556fffd0473004a0239
ffe201c7ffb0063900630473004405c700a10473008305c700a104730083
05c700a10473008305c700a10473008305c700a1047300830000fefe0000
fefe0000fefe0000fefe0455fffd02eb000c07630007055afffb04a900a1
0380008604a900a10380008605c700a4046b00880473fffd040000140473
fffd04000014055600090400000f05550057042b0045055500a104730087
0605006304730055063900600473004405b5003a01f4ffba0224ffba021a
ffba04a7004601f4009e01f4001001f4001b01f4001001f4006b01f4fff9
0227ffce01a8000f01a8fff502aa00a402aa00a401a8000e01a8005601a8
00560000ffcf01a8000f01d6ffbf01a8fff501d6ffcd01a8001d01d6fff5
01a8009301d6001303750032037500320375003203750032051b003204b5
002405b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba048100360435
0036043dffba043dffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
02b3003202b3003202b3005f02b3005f02b3005f02b3005f02b3003202b3
003202b3005f02b3005f02b3005f02b3005f02b3005f02b3005f02b30038
02b3003802b3004902b3004903e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
03e9004a03e9004a03e9004a03e9004a0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba0692003e0692003e043fffba
043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5
ffba06c5ffba04a7ffba04a7ffba045a002a039a00360435ffba0327ffba
064f0027064f0027064f00270224ffba021affba064f0027064f00270224
ffba021affba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba064f0027064f00270224ffba021affba04a7004604a7
004604a7004604a70046067f0014077600140327ffba041effba067f0014
077600140327ffba041effba04cf002d04cf002d0327ffba0327ffba04cf
002d04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba
067f0014077600140327ffba041effba067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba067f0014077600140327ffba041effba040d0047040d004701a8
ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d0047
01a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba043500450435
004501f4ffba01f4ffba0435004504350045043500450435004504350045
0435004501f4ffba01f4ffba04350045043500450481003604350036043d
ffba043dffba024200360300fff7031a001a031a001a031a001a03750032
037500320375003203750032037500320375003203750032037500320375
003203750032037500320375003203750032037500320375003203750032
051bffba04b5ffba051b003204b5002401f4ffba01f4ffba037500320375
0032051b003204b5002401f4ffba01f4ffba051b003204b50024067f0045
067f0045067f0045067f004501a800280000fe290000fea20000ff300000
ff1d0000ff120000ff920000fe7e08fc003208ad00320000ffb50000ffb6
0000feed0000ff640000fe7e0000ff9f018d000002f6fffd0000fe820000
ff1004cd00320000ff580000ff580000ff640692003e0692003e043fffba
043fffba08c9003e08c9003e06c5ffba06c5ffba045a002a039a00360435
ffba0327ffba034d007902b400230242003601f4ffba0290ffba01f4002f
01f4003b01f4001201f400b101f4006d067f00140776001401f9009b0000
fed902bc000003f2009b045afff504cefff5045a005304ce004a045a0053
04ce004a045a005304ce004a045a005304ce004a045a005304ce004a045a
005304ce004a04350071043500ad045a000f04ce000f000000000000002a
0000002a0000002a0000002a0000002a0000002a0000002a0000002a0000
002a0000002a0000002a0000002a0000002a0000002a0000002a0000002a
0000002a0000002a0000002a0000002a0000002a0000002a0000002a0000
002a0000002a0000002a0000002a0000002a0000002a0000002a0000002a
0000002a0000002a0000002a0000002a0000002a0000002a0000002a0000
002a0000002a0000002a0000002a0000002a0000002a0000002a0000002a
0000002a0000002a0000002a0000002a0000002a0000002a0000002a0000
002a0000002a0000002a0000002a0000002a0000002a0000002a0000002a
0000002a0000002a0000002a0000002a0000002a0000002a0000002a0000
002a0000002a000001de000001de0000039c0000039c0000039c0000039c
0000039c0000039c0000039c0000039c0000039c0000039c0000039c0000
039c0000039c000004a2000004a2000004a2000004a2000004a2000004a2
000004a2000004a2000004a2000004a2000004a2000004a2000004a20000
04a2000004a2000004a2000004a2000004a2000004a2000004a2000004a2
000004a2000004a2000004a2000004a2000004a2000004a2000004a20000
04a2000004a2000004a2000004a2000004a2000004a2000004a2000004a2
000004a2000004a2000004a2000004a2000004a2000004a2000004a20000
04a2000004a2000004a2000004a2000004a2000004a2000004a2000004a2
000004a2000004a2000004a2000004a2000004a2000004a2000004a20000
04a2000004a2000004a2000004a2000004a2000004a2000004a2000004a2
000004a2000004a2000004a2000004a2000004a2000004a2000004a20000
04a2000004a2000004a2000004a2000004a2000004a2000004a2000004a2
000004a2000004a2000004a2000004a2000004a2000004a2000004a20000
04a2000004a2000004a2000004a2000004a2000004a2000004a2000004a2
000004a2000004a2000004a2000004a2000004a2000004a2000004a20000
04a2000004a2000004a2000004a2000004a2000004a2000004a2000004a2
000004a2000004a2000004a2000004a2000004a2000004a2000004a20000
04a2000004a2000004a2000004a2000004a2000004a2000004a2000004a2
000004a2000004a2000004a2000004a2000004a2000004a2000004a20000
04a2000004a2000004a2000004a2000004a20000050e0000050e0000050e
0000050e0000050e0000050e0000050e0000050e0000050e0000050e0000
050e0000050e0000050e0000050e0000050e0000050e0000050e0000050e
0000050e0000050e0000050e0000050e0000050e0000050e0000050e0000
050e0000050e0000050e0000050e0000050e0000050e0000053e0000053e
0000053e0000053e0000053e0000053e0000053e0000053e0000053e0000
053e0000053e0000053e0000053e0000053e0000056e0000056e0000056e
0000056e0000056e0000056e0000056e0000056e0000056e0000056e0000
056e0000056e0000056e0000056e0000056e0000056e000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a4000005a4000005a4000005a4000005a4000005a4000005a4000005a4
000005a4000005a4000005a4000005a4000005a4000005a4000005a40000
05a400010000068a0100003f0076000700020010002f00560000040d0aff
000300020000000e00ae000000030000000000fe00000000000300000007
00c400fe0001000000000000007f01c20001000000000003000e02410001
000000000004000e024f0001000000000006000e025d0001000000000007
0062026b0003000004090001001c02cd0003000004090002000e02e90003
000004090003001c02f70003000004090004001c03130003000004090006
001c032f000300010409000000fe034b000300010409000700c404490054
0079007000650066006100630065002000a900200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e00200070006c0063002e002000440061007400610020
00a900200054006800650020004d006f006e006f00740079007000650020
0043006f00720070006f0072006100740069006f006e00200070006c0063
002f005400790070006500200053006f006c007500740069006f006e0073
00200049006e0063002e00200031003900390030002d0031003900390032
002e00200041006c006c0020005200690067006800740073002000520065
0073006500720076006500640041007200690061006c00ae002000540072
006100640065006d00610072006b0020006f006600200054006800650020
004d006f006e006f007400790070006500200043006f00720070006f0072
006100740069006f006e00200070006c0063002000720065006700690073
0074006500720065006400200069006e0020007400680065002000550053
00200050006100740020002600200054004d0020004f00660066002e0020
0061006e006400200065006c0073006500770068006500720065002e5479
70656661636520a920546865204d6f6e6f7479706520436f72706f726174
696f6e20706c632e204461746120a920546865204d6f6e6f747970652043
6f72706f726174696f6e20706c632f5479706520536f6c7574696f6e7320
496e632e20313939302d313939322e20416c6c2052696768747320526573
6572766564474c4b4448452b417269616c4d54474c4b4448452b41726961
6c4d54474c4b4448452b417269616c4d54417269616ca82054726164656d
61726b206f6620546865204d6f6e6f7479706520436f72706f726174696f
6e20706c63207265676973746572656420696e2074686520555320506174
202620544d204f66662e20616e6420656c736577686572652e0047004c00
4b004400480045002b0041007200690061006c004d005400520065006700
75006c006100720047004c004b004400480045002b004100720069006100
6c004d00540047004c004b004400480045002b0041007200690061006c00
4d00540047004c004b004400480045002b0041007200690061006c004d00
5400540079007000650066006100630065002000a9002000540068006500
20004d006f006e006f007400790070006500200043006f00720070006f00
72006100740069006f006e00200070006c0063002e002000440061007400
61002000a900200054006800650020004d006f006e006f00740079007000
6500200043006f00720070006f0072006100740069006f006e0020007000
6c0063002f005400790070006500200053006f006c007500740069006f00
6e007300200049006e0063002e00200031003900390030002d0031003900
390032002e00200041006c006c0020005200690067006800740073002000
5200650073006500720076006500640041007200690061006c00ae002000
540072006100640065006d00610072006b0020006f006600200054006800
650020004d006f006e006f007400790070006500200043006f0072007000
6f0072006100740069006f006e00200070006c0063002000720065006700
6900730074006500720065006400200069006e0020007400680065002000
55005300200050006100740020002600200054004d0020004f0066006600
2e00200061006e006400200065006c007300650077006800650072006500
2e00b1540f4122031700ef031700ff03170003001f0317002f0317004f03
17005f0317008f0317009f03170006000f0317005f0317006f0317007f03
1700bf031700f00317000600400317b2923340b80317b28b3340b80317b3
6a6c3240b80317b2613340b80317b35c5d3240b80317b357593240b80317
b34d513240b80317b344493240b80317b23a3340b80317b331343240b803
17b32e423240b80317b3272c3240b80317b312253280b80317b30a0d32c0
4116031600d00316000200700316000102c4000f0101001f00a0031500b0
031500020306000f0101001f00400312b32426329fbf0304000103020301
0064001fffc00301b20d1132410a02ff02ef0012001f02ee02ed0064001f
ffc002edb30e11329f414a02e200af02e200bf02e2000302e202e202e102
e1007f02e00001001002e0003f02e0009f02e000bf02e000cf02e000ef02
e0000602e002e002df02df02de02de000f02dd002f02dd003f02dd005f02
dd009f02dd00bf02dd00ef02dd000702dd02dd001002dc0001000002dc00
01001002dc003f02dc000202dc02dc001002db000102db02db000f02da00
0102da02daffc002d3b2373932b9ffc002d3b22b2f32b9ffc002d3b21f25
32b9ffc002d3b2171b32b9ffc002d3b2121632b802d2b2f9291fb802e3b3
202b1fa0413002d400b002d40002000002d4001002d4002002d4005002d4
006002d4007002d40006006002d6007002d6008002d6009002d600a002d6
00b002d60006000002d6001002d6002002ca002002cc002002d6003002d6
004002d6005002d6000802d0b2202b1fb802cfb226421f411602ce02c700
17001f02cd02c80017001f02cc02c60017001f02cb02c50017001f02c902
c5001e001f02ca02c6b21e1f00410b02c6000002c7001002c6001002c700
2f02c5000502c1b324121fff411102bf0001001f02bf002f02bf003f02bf
004f02bf005f02bf008f02bf000602bf0222b2641f12410b02bb00ca0800
001f02b200e90800001f02a600a20800406a1f4026434932402043493240
263a3d3240203a3d329f209f26024026969932402096993240268e923240
208e92324026848c324020848c3240267a813240207a813240266c763240
206c76324026646a324020646a3240265a5f3240205a5f3240264f543240
204f5432b8029eb724271f374f6b0120410f027700300277004002770050
0277000402770277027700f90400001f029bb22a2a1fb8029a402b292a1f
80ba0180bc0180520180a201806501807e01808101803c01805e01802b01
801c01801e0180400180bb0138000100800140b40180400180bb01380001
0080013940180180ca0180ad018073018026018025018024018020013740
b80221b2493340b80221b2453340b80221b341423240b80221b33d3e320f
410f0221003f0221007f0221000300bf022100cf022100ff022100030040
0221b320223240b80221b3191e3240b80222b32a3f3240b80221b32e3a32
6f414802c3007f02c3008f02c300df02c30004002f02c3006002c300cf02
c30003000f02c3003f02c3005f02c300c002c300ef02c300ff02c3000600
df02220001008f02220001000f0222002f0222003f0222005f0222007f02
2200ef0222000600bf022100ef02210002006f0221007f022100af022100
03002f0221003f0221004f0221000302c302c30222022202210221401d10
1c102b1048038f1c010f1e014f1eff1e023700161600000012110811b801
0db6f70df8f70d00094109028e028f001d001f0290028f001d001f028fb2
f91d1fb80198b226bb1f41150197001e0401001f013900260125001f0138
00730401001f0135001c0801001f0134001c02ab001f0132b21c561fb801
0fb2262c1fba010e001e0401b61ff91ce41fe91cb80201b61fe81cbb1fd7
20b80401b21fd51cb802abb61fd41c891fc92fb80801b21fbc26b80101b2
1fba20b80201b61fb91c381fadcab80401b21f8126b8019ab21f7e26b801
9ab61f7d1c471f6b1cb80401b21f6526b8019ab21f5e73b80401400f1f52
265a1f481c891f441c621f4073b80801b61f3f1c5e1f3c26b8019ab21f35
1cb80401b61f301cbb1f2b1cb80401b61f2a1c561f291cb80101b21f231e
b80401b21f5537b80168402c07960758074f07360732072c0721071f071d
071b071408120810080e080c080a080808060804080208000814b8ffe040
2b0000010014061000000100060400000100041000000100100200000100
0200000001000002010802004a00b013034b024b5342014bb0c063004b62
20b0f65323b8010a515ab005234201b0124b004b5442b0382b4bb807ff52
b0372b4bb007505b58b101018e59b0382bb00288b801005458b801ffb101
018e851bb0124358b900010111858d1bb900010128858d5959001816763f
183f123e113946443e113946443e113946443e113946443e11394660443e
11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b182b
1db0964b5358b0aa1d59b0324b5358b0ff1d594bb09353205c58b901f201
f04544b901f101f045445958b9033e01f2455258b901f2033e4459594bb8
015653205c58b9002001f14544b9002601f145445958b9081e0020455258
b90020081e4459594bb8019a53205c58b9002501f24544b9002401f24544
5958b909090025455258b9002509094459594bb8040153205c58b1732445
44b1242445445958b917200073455258b9007317204459594bb804015320
5c58b1ca254544b1252545445958b9168000ca455258b900ca1680445959
4bb03e53205c58b11c1c4544b11e1c45445958b9011a001c455258b9001c
011a4459594bb05653205c58b11c1c4544b12f1c45445958b90189001c45
5258b9001c01894459594bb8030153205c58b11c1c4544b11c1c45445958
b90de0001c455258b9001c0de04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b
2b01b33b59635c456523456023456560234560b08b766818b080622020b1
63594565234520b003266062636820b003266165b059236544b063234420
b13b5c4565234520b003266062636820b003266165b05c236544b03b2344
b1005c455458b15c406544b23b403b4523614459b3475034374565234560
23456560234560b089766818b080622020b134504565234520b003266062
636820b003266165b050236544b034234420b147374565234520b0032660
62636820b003266165b037236544b0472344b10037455458b137406544b2
4740474523614459004b5342014b5058b108004259435c58b108004259b3
020b0a124358601b2159421610703eb0124358b93b21187e1bba040001a8
000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b2b
59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b010
2342b0112342002b74757375001845694445694445694473737373747573
74752b2b2b2b74752b2b2b2b2b7373737373737373737373737373737373
73737373737373732b2b2b45b0406144737400004bb02a534bb03f515a58
b1070745b040604459004bb03a534bb03f515a58b10b0b45b8ffc0604459
004bb02e534bb03a515a58b1030345b040604459004bb02e534bb03c515a
58b1090945b8ffc06044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b75
2b2b2b2b2b2b2b435c58b9008002bbb301401e017400735903b01e4b5402
b0124b545ab012435c5a58ba009f02220001007359002b7473012b01732b
2b2b2b2b2b2b2b737373732b002b2b2b2b2b2b0045694473456944734569
44737475456944734569444569444569447374456944456944732b2b2b2b
2b732b002b732b74752b2b2b2b2b2b2b2b2b2b2b2b2b2b7374752b0000>
[1445 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 924 85 <00010085000002c6043e001100c9403b2f13011004012304340443045304
66047404060911080908090d1311090d000308010b1c06070106000a0928
900801082220130113022211250100b8ffc04010333634f0000100002000
d000e0000400b8fff8b41010025500b8fff840110e0e025500040c0c0255
00060b0b025500b8fffcb41010065500b8fff440160f0f065500060c0c06
5500080d0d0655004e1247c4182b10f62b2b2b2b2b2b2b2b5d712b3cfde4
105df472e4003f3f3fed11393911393901111239390010c9870e7dc43130
005d72015d33113315363633321707262322060706151185a23e693f5b5e
3e42423b5e141e0426a171483aa727473f6072fdd400>HIBBAA+ArialMT AddT42Char 
1 1186 223 <0001002804aa02a105c20006004840130506010f021f0202028700640403
023c013d03b8ffc04011090c3403640064047f063c0519079b7a182b194e
10f4184dfd19f618fdfd2b19f618ed002f3cedfd5d3c3c3c313001373303
23033301676ecce1c0d8ce0518aafee80118>HIBBAA+ArialMT AddT42Char 
1 1390 284 <ffff003c000002c605c2022600550000010600df1400001db7013f124f12
021206b8ff96b4482b010115b902220029002b012b5d3500>HIBBAA+ArialMT AddT42Char 
1 478 72 <0002004bffe8041e043e0015001d015340171f001c150255035d055d0955
0b65036b056f09650b0815b8ffe4b40d0d065511b8ffe440520d0d06551d
1c0d0d06552712d905fa14f61a0431123a19311c41124d1a411c51125c19
521c61126d1a611c78067815f602f618100016010f0d1717501660167016
03161c0f9010a010021010041b1c0a0700ba02aa0001ffc0b41010025501
b8ffc04010101006551001010195131c040b17400db8ffdcb40d0d02550d
b8ffeeb40d0d06550db8ffeab40c0c06550db8ffc04009272a34b00d010d
1a1fb8ffc0b32526341fb8ffc040411e2334301f011f163310240740242a
341f073f074f070307200b0b025507180c0c0255071c0d0d0255070e0b0b
0655071c0c0c065507160d0d065507191e3437182b4e10f42b2b2b2b2b2b
5d2b4dfde44e10712b2bf6712b2b2b2b4ded003fedfd5d2b2be43fed1239
2f5d3cfd713c011112393912393130015d005d2b2b2b0171720117060623
22001110003332001114072116163332360121262726232206035eba2cee
b9e9feef0114dcd5010e01fce80ab285638cfdda02510c3856897ca90156
17a3b4011f0103010c0128fedefef91020afba680195864368a6>HIBBAA+ArialMT AddT42Char 
1 1186 223 <0001002804aa02a105c20006004840130506010f021f0202028700640403
023c013d03b8ffc04011090c3403640064047f063c0519079b7a182b194e
10f4184dfd19f618fdfd2b19f618ed002f3cedfd5d3c3c3c313001373303
23033301676ecce1c0d8ce0518aafee80118>HIBBAA+ArialMT AddT42Char 
1 1342 268 <ffff004bffe8041e05c2022600480000010700df00e000000015400a0201
1e0a004827020121b902220029002b012b00>HIBBAA+ArialMT AddT42Char 
1 42 70 <00010050ffe803ed043e001a015ab1020243545840340e7f0f010f0b0140
0050007000030004121c0b07181c040b010e1507080e0e0255070c0d0d02
55070c0c0c025507100b0b0255072f2b2b2b2bcdd4c6003fed3fed10c45d
3210c45d3231301b4047090c011f1c4313431753135317601360179b029b
039a0da410a41a0c080d190a6a0269036a05750c700d800da60cb509b60a
b50c0c160c860ce302030e225f0f6f0f7f0f030f01b802aa407930004000
5000600070009000a000e000f00009000f0f0b000004121c0b07181c040b
1c0f010f240e080d0d06550e221b000100240b2b1f010100010101400b0b
065501401010065501480c0c0655011a0d0d065501491c1524cf07011f07
3f0702070e0b0b0655070a1010065507120c0c065507311b34c4182b10f6
2b2b2b5d71ed10f62b2b2b2b5d724b53234b515a58b90001ffc03859ed72
f42bed72003fed3fed12392f11392f105de4105de43130005d71015d7159
011706062322001134123633321617072626232206151416333236033cb1
1defaedafef772e989addc1faf197f5a88aaa4846a8e018517b7cf011d01
0aac010281afa11b6b6cc3d3d6c28200>HIBBAA+ArialMT AddT42Char 
1 1186 223 <0001002804aa02a105c20006004840130506010f021f0202028700640403
023c013d03b8ffc04011090c3403640064047f063c0519079b7a182b194e
10f4184dfd19f618fdfd2b19f618ed002f3cedfd5d3c3c3c313001373303
23033301676ecce1c0d8ce0518aafee80118>HIBBAA+ArialMT AddT42Char 
1 1294 254 <ffff0050ffe803ed05c2022600460000010700df00ca00000016400a0100
201d070e4101011fb902220029002b012b35>HIBBAA+ArialMT AddT42Char 
1 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>HIBBAA+ArialMT AddT42Char 
HIBBAA+ArialMT /CharStrings get begin
/g284 284 def
/g268 268 def
/g254 254 def
end
HIBBAA+ArialMT /Encoding get
dup 32 /g284 put
dup 33 /g268 put
dup 34 /g254 put
pop
end
%ADOEndSubsetFont
reset_gvm
/EDYAIO+ArialMT /HIBBAA+ArialMT findfont ct_VMDictPut
/EDYAIO+ArialMT*1 
[32{/.notdef}rp /g284 /g268 /g254 221{/.notdef}rp]
EDYAIO+ArialMT nf
EDYAIO+ArialMT*1 [9 0 0 -9 0 0 ]msf
197.76 146.616 mo
( )sh
EDYAIN+ArialMT*1 [9 0 0 -9 0 0 ]msf
200.757 146.616 mo
(ovatel p)
[4.9959 4.4919 4.99591 2.4939 4.9959 1.9899 2.5218 0 ]xsh
EDYAIO+ArialMT*1 [9 0 0 -9 0 0 ]msf
232.203 146.616 mo
( )sh
EDYAIN+ArialMT*1 [9 0 0 -9 0 0 ]msf
235.2 146.616 mo
(edb)
[5.03819 4.9752 0 ]xsh
EDYAIO+ArialMT*1 [9 0 0 -9 0 0 ]msf
250.252 146.616 mo
(!)sh
EDYAIN+ArialMT*1 [9 0 0 -9 0 0 ]msf
255.306 146.616 mo
(#n)
[4.49998 0 ]xsh
EDYAIO+ArialMT*1 [9 0 0 -9 0 0 ]msf
264.783 146.616 mo
(!)sh
EDYAIN+ArialMT*1 [9 0 0 -9 0 0 ]msf
269.76 146.616 mo
( vy)
[2.52179 4.54681 0 ]xsh
EDYAIO+ArialMT*1 [9 0 0 -9 0 0 ]msf
281.28 146.616 mo
(")sh
EDYAIN+ArialMT*1 [9 0 0 -9 0 0 ]msf
285.78 146.616 mo
(\355slil na osm tis\355c korun. )
[2.4975 4.49551 1.9935 1.9935 1.9935 2.52179 5.03549 4.98151 2.52179 4.99951 4.49548 7.49243 
2.52182 2.4975 1.9935 4.49548 2.4975 4.49551 2.52179 4.49548 4.99951 2.99243 4.99951 5.03549 
2.52451 0 ]xsh
136.2 159.936 mo
(!, investigating officer prelimi)
[8.9919 2.4939 2.5218 1.9899 4.9959 4.4919 4.9959 4.49191 2.4939 1.9899 4.99591 4.9959 
2.4939 2.0349 5.04089 4.99591 2.52179 4.99591 2.4939 2.4939 1.9899 4.49188 4.99591 2.98883 
2.52179 4.9959 2.98883 4.9959 2.03491 1.9899 7.48883 0 ]xsh
256.26 159.936 mo
(narily reckoned the damage to be )
[4.98779 4.98779 2.98074 1.98181 2.0358 4.4838 2.52179 2.98074 4.98779 4.4838 4.55579 4.98782 
5.04178 4.98779 5.04181 2.52179 2.48581 4.98779 4.98782 2.52179 4.98779 4.98779 7.48074 4.98782 
5.04178 4.98779 2.52182 2.48578 5.04181 2.52179 4.98779 4.98782 0 ]xsh
136.2 170.313 mo
(8 000 CZK. )
[4.98689 2.5209 4.98689 4.98691 4.98689 2.5209 6.4809 5.51784 5.98596 2.48489 0 ]xsh
178.32 128.976 mo
(investi)
[1.9899 4.9959 4.4919 4.99591 4.4919 2.4939 0 ]xsh
gsave
178.32 130.176 mo
255.48 130.176 li
255.48 120.876 li
178.32 120.876 li
cp
clp
EDYAIN+ArialMT*1 [9 0 0 -9 0 0 ]msf
203.82 128.976 mo
(g)sh
grestore
EDYAIN+ArialMT*1 [9 0 0 -9 0 0 ]msf
208.8 128.976 mo
(atin)
[4.99229 2.4903 1.98631 0 ]xsh
gsave
178.32 130.176 mo
255.48 130.176 li
255.48 120.876 li
178.32 120.876 li
cp
clp
EDYAIN+ArialMT*1 [9 0 0 -9 0 0 ]msf
223.32 128.976 mo
(g)sh
grestore
EDYAIN+ArialMT*1 [9 0 0 -9 0 0 ]msf
228.3 128.976 mo
( office)
[2.5218 4.9995 2.57849 2.4975 1.9935 4.4955 0 ]xsh
gsave
178.32 130.176 mo
255.48 130.176 li
255.48 120.876 li
178.32 120.876 li
cp
clp
EDYAIN+ArialMT*1 [9 0 0 -9 0 0 ]msf
252.36 128.976 mo
(r)sh
grestore
EDYAIN+ArialMT*1 [9 0 0 -9 0 0 ]msf
364.44 61.8958 mo
(CZK)
[6.49979 5.50073 0 ]xsh
205.32 7.71606 mo
205.32 25.2961 li
251.58 25.2961 li
251.58 15.0361 li
294.06 14.436 li
251.58 10.6561 li
251.58 7.71606 li
232.32 7.71606 li
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 .8 0 colr
ef
205.32 7.71606 mo
205.32 25.2961 li
251.58 25.2961 li
251.58 15.0361 li
294.06 14.4361 li
251.58 10.6561 li
251.58 7.71606 li
232.32 7.71606 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
0 gry
EDYAIN+ArialMT*1 [9 0 0 -9 0 0 ]msf
212.88 20.0758 mo
(reckon )
[2.98253 4.98961 4.4856 4.4856 4.98959 4.98961 0 ]xsh
345 29.9758 mo
(thousand)
[2.49121 4.99319 4.99319 4.99319 4.4892 5.03821 4.97519 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
] del_res
true set_gvm
/EDYAIO+ArialMT*1 uf
/EDYAIO+ArialMT uf
/HIBBAA+ArialMT uf
/EDYAIN+ArialMT*1 uf
/EDYAIN+ArialMT uf
/PBAAAA+ArialMT uf
/EDYAIM+CourierNewPSMT*1 uf
/EDYAIM+CourierNewPSMT uf
/CourierNewPSMT uf
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
